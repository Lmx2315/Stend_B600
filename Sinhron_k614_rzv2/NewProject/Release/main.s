	.file "..\BFcom\main.c";
//  Compilation time: Tue Nov 06 15:34:46 2018
//  Compiler options: -c -file-attr ProjectName=NewProject -O -Ov0 -g -always-inline -save-temps -path-output .\Release -ED -no-auto-attrs -structs-do-not-overlap -const-strings -no-multiline -D__PROCESSOR_SPEED__=400000000 -double-size-64 -decls-strong -warn-protos -flags-compiler --diag_warning,call_not_inlined -si-revision 0.6 -proc ADSP-BF533 -o .\Release\main.doj -MM
//  Architecture: ADSP-BF533
//  Silicon revision: 0.6
//  Anomalies summary:
//   Never on: w_05000046
//   Disabled: w_05000048, w_05000054, w_05000071, w_05000103, w_05000104, w_05000120, w_05000127, w_05000157, w_05000164, w_05000165, w_05000195, w_05000198, w_05000202, w_05000209, w_05000227, w_05000244, w_05000246, w_05000248, w_05000257, w_05000262, w_05000264, w_05000283, w_F3_F_021, w_F3_F_008_F3_F_013, w_05000312, w_05000371, w_05000428, w_05000412, w_05000010
//   Enabled: w_05000189, w_05000245, w_05000426, w_05000443, w_05000477
//   Always on: w_05000074, w_05000122, w_05000311

	.section/DOUBLE64 program;

.epctext:
	.align 2;
_IND_DFK:
.LN_IND_DFK:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  No scratch registers used.
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":8694
	LINK 0;
.LN0:
// line 8695
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._IND_DFK.end:
._IND_DFK.end:
	.global _IND_DFK;
	.type _IND_DFK,STT_FUNC;

	.align 2;
_UDP_TIMEOUT_TST:
.LN_UDP_TIMEOUT_TST:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  Scratch registers used: {R0-R1,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
.LN1:
// line "..\BFcom\main.c":8145
	R1 = 2000;
	CC = R1 < R0 (IU);
.LN2:
// line 8143
	LINK 0;
	P1.L = _Mem_K615+7;
	P1.H = _Mem_K615+7;
.LN3:
// line 8145
	if !CC jump .P180L2 ;

.P180L4:
	R0 = B[P1 + -1] (Z);
	R1 = 1;
	R0 = R0 & R1;
	CC = R0 == 1;
	if !CC jump .P180L2 ;

.P180L1:
.LN4:
// line 8149
	R1 = B[P1 + 0] (Z);
	R0 = 1538;
	BITSET(R0, 16);
	R0 = DEPOSIT(R1, R0);
	jump.s .P180L3;

.P180L2:
.LN5:
// line 8155
	R0 = B[P1 + 0] (Z);
	R1 = 1538;
	R0 = DEPOSIT(R0, R1);

.P180L3:
.LN6:
// line 8149
	B[P1 + 0] = R0;
.LN7:
// line 8157
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._UDP_TIMEOUT_TST.end:
._UDP_TIMEOUT_TST.end:
	.global _UDP_TIMEOUT_TST;
	.type _UDP_TIMEOUT_TST,STT_FUNC;

	.align 2;
_Event_Synhron_func:
.LN_Event_Synhron_func:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  Scratch registers used: {R0-R2,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":7928
	LINK 0;
	P1.L = _flag_PPI_sz2;
	P1.H = _flag_PPI_sz2;
.LN8:
// line 7931
	R0 = B[P1] (Z);
	CC = R0 == 0;
	P1.L = _flag_PPI_sz1;
	P1.H = _flag_PPI_sz1;
	R0 = CC;
.LN9:
// line 7932
	R2 = B[P1] (Z);
	R1 = R0;
	CC = R2 == 0;
	R0 += 1;
	P1.L = _flag_PPI_sinc;
	P1.H = _flag_PPI_sinc;
	IF CC R1 = R0;
.LN10:
// line 7933
	R2 = B[P1] (Z);
	R0 = R1;
	CC = R2 == 0;
	R1 += 1;
	P1.L = _flag_1HZ_sync;
	P1.H = _flag_1HZ_sync;
	IF !CC R0 = R1;
.LN11:
// line 7934
	R1 = B[P1] (Z);
	CC = R1 == 1;
	if CC jump .P181L10 ;

.P181L13:
	NOP;                                    // Inserted 2 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	P1.L = _flag_event_sinhron;
	P1.H = _flag_event_sinhron;
	R1 = B[P1] (X);
	CC = R1 == 1;
	if !CC jump .P181L12 ;

.P181L10:
.LN12:
	R0 += 1;

.P181L12:
.LN13:
// line 7936
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._Event_Synhron_func.end:
._Event_Synhron_func.end:
	.global _Event_Synhron_func;
	.type _Event_Synhron_func,STT_FUNC;

	.align 2;
_INF_K607:
.LN_INF_K607:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  Scratch registers used: {R1,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":7870
	LINK 0;
	P1.L = _FLAG_INF_K607.0;
	P1.H = _FLAG_INF_K607.0;
.LN14:
// line 7873
	R1 = [P1];
	CC = R0 == R1;
	if CC jump .P182L3 ;

.P182L1:
.LN15:
// line 7879
	[P1] = R0;

.P182L3:
.LN16:
// line 7882
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._INF_K607.end:
._INF_K607.end:
	.global _INF_K607;
	.type _INF_K607,STT_FUNC;

	.align 2;
_Info_back_Ethernet:
.LN_Info_back_Ethernet:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 48 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {R4-R7,P3-P5,FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":7107
	LINK 12;
	[--SP] = (R7:4, P5:3);
	P1.L = _Mem_K615+6;
	P1.H = _Mem_K615+6;
.LN17:
// line 7115
	R5 = B[P1 + 1] (X);
	R3 = 1538;
.LN18:
// line 7193
	R7 = EXTRACT(R5, R3.L) (Z);
.LN19:
// line 7117
	R4 = B[P1] (X);
	R0 = 1026;
.LN20:
// line 7193
	R7 = ~ R7;
.LN21:
// line 7117
	R1 = EXTRACT(R4, R0.L) (Z);
.LN22:
// line 7193
	[SP + 48] = R7;
.LN23:
// line 7118
	CC = R1 == 1;
	R7 = 2;
	R0 = R1;
	IF CC R1 = R7;
.LN24:
// line 7121
	R2 = EXTRACT(R4, R3.L) (Z);
.LN25:
// line 7119
	CC = R0 == 2;
	R3 = 1;
	IF CC R1 = R3;
.LN26:
// line 7122
	CC = R2 == 1;
	R0 = R2;
	IF CC R2 = R7;
.LN27:
// line 7123
	CC = R0 == 2;
.LN28:
// line 7127
	R0 = 3;
	R4 = R4 & R0;
	R6 = 514;
	IF CC R2 = R3;
.LN29:
// line 7131
	R0 = R5 & R0;
.LN30:
// line 7128
	CC = R4 == 1;
.LN31:
// line 7115
	R6 = EXTRACT(R5, R6.L) (Z);
	R5 = R4;
	P0.L = _FT_reg_log2;
	P0.H = _FT_reg_log2;
	P1 = 660;
	IF CC R4 = R7;
.LN32:
// line 7129
	CC = R5 == 2;
	P1 = P0 + P1;
	IF CC R4 = R3;
.LN33:
// line 7132
	CC = R0 == 1;
	B[P1++] = R1;
	R5 = R0;
	IF CC R0 = R7;
	B[P1++] = R2;
.LN34:
// line 7133
	CC = R5 == 2;
.LN35:
// line 7115
	B[P0 + 657] = R6;
	B[P1++] = R4;
	IF CC R0 = R3;
.LN36:
// line 7135
	R6 = 0;
	B[P1 + -4] = R0;
	B[P1 + -5] = R6;
.LN37:
// line 7136
	B[P1 + -7] = R6;
.LN38:
// line 7137
	B[P1++] = R3;
.LN39:
// line 7154
	R1 = [P1 + -664];
	R2 = 15;
.LN40:
// line 7155
	R0 = 240;
.LN41:
// line 7138
	B[P1] = R6;
.LN42:
// line 7154
	R2 = R1 & R2;
	P1 += 1;
.LN43:
// line 7155
	R0 = R1 & R0;
.LN44:
// line 7154
	B[P1++] = R2;
.LN45:
// line 7155
	R0 >>>= 4;
.LN46:
// line 7157
	R2 = B[P1 + -671] (X);
.LN47:
// line 7155
	B[P1 + 8] = R0;
.LN48:
// line 7157
	B[P1++] = R2;
.LN49:
// line 7160
	B[P1++] = R6;
.LN50:
// line 7162
	B[P1++] = R6;
.LN51:
// line 7163
	B[P1++] = R3;
.LN52:
// line 7164
	B[P1] = R6;
	P1 += 32;
.LN53:
// line 7167
	B[P1 + -27] = R6;
.LN54:
// line 7168
	B[P1 + -25] = R6;
.LN55:
// line 7169
	B[P1 + -23] = R6;
.LN56:
// line 7170
	B[P1 + -21] = R6;
.LN57:
// line 7171
	B[P1 + -19] = R6;
.LN58:
// line 7173
	B[P1 + -18] = R6;
.LN59:
// line 7174
	B[P1 + -17] = R6;
.LN60:
// line 7175
	B[P1 + -16] = R6;
.LN61:
// line 7177
	B[P1--] = R6;
.LN62:
// line 7178
	B[P1--] = R6;
.LN63:
// line 7179
	B[P1--] = R6;
.LN64:
// line 7180
	B[P1--] = R6;
.LN65:
// line 7181
	B[P1--] = R6;
.LN66:
// line 7182
	B[P1--] = R6;
.LN67:
// line 7191
	R1 = [P1 + -788];
	CC = R1;
.LN68:
// line 7193
	R2 = [SP + 48];
	R1 = CC;
	CC = BITTST(R2, 0);
	R2 = ROT R1 BY 1;
.LN69:
// line 7183
	B[P1] = R6;
.LN70:
// line 7215
	R7 = B[P1 + -61] (Z);
.LN71:
// line 7194
	R0 = -1;
.LN72:
// line 7215
	CC = R7 == 0;
.LN73:
// line 7185
	B[P1 + 7] = R3;
.LN74:
// line 7186
	B[P1 + 8] = R3;
.LN75:
// line 7187
	B[P1 + 10] = R3;
.LN76:
// line 7188
	B[P1 + 9] = R3;
.LN77:
// line 7212
	B[P1 + -48] = R6;
.LN78:
// line 7213
	B[P1 + -49] = R6;
.LN79:
// line 7191
	B[P1 + 337] = R1;
.LN80:
// line 7193
	B[P1 + -5] = R2;
.LN81:
// line 7194
	W[P1 + -2] = R0;
.LN82:
// line 7215
	if !CC jump .P183L29 ;

.P183L36:
	R0 = B[P0 + 636] (Z);
	CC = R0 == 0;
	if !CC jump .P183L29 ;

.P183L35:
	R0 = B[P0 + 637] (Z);
	CC = R0 == 0;
	if !CC jump .P183L29 ;

.P183L34:
	R0 = B[P0 + 638] (Z);
	CC = R0 == 0;
	if !CC jump .P183L29 ;

.P183L33:
	R0 = B[P0 + 639] (Z);
	CC = R0 == 0;
	if !CC jump .P183L29 ;

.P183L32:
	R0 = B[P0 + 640] (Z);
	CC = R0 == 0;
	if !CC jump .P183L29 ;

.P183L31:
	R0 = B[P0 + 641] (Z);
	CC = R0 == 0;
	if !CC jump .P183L29 ;

.P183L28:
.LN83:
// line 7221
	B[P0 + 634] = R6;
	jump.s .P183L30;

.P183L29:
.LN84:
	B[P0 + 634] = R3;

.P183L30:
	P1 = 635;
	P1 = P0 + P1;
.LN85:
// line 7225
	P0 = 1;
	R1 = B[P1++] (X);
	R0 = [P1 ++ P0];
	R0 <<= 1;
	R1 = R1 | R0;
	R0 = B[P1++] (Z);
	R0 <<= 2;
	R1 = R1 | R0;
	R0 = B[P1++] (Z);
	R0 <<= 3;
	R2 = R1 | R0;
	R0 = B[P1++] (Z);
	R1 = [P1 ++ P0];
	R0 <<= 4;
	R0 = R2 | R0;
	R1 <<= 5;
	R1 = R0 | R1;
	R0 = B[P1++] (Z);
	R0 <<= 6;
	R1 = R1 | R0;
	R0 = B[P1 + -8] (Z);
	R0 <<= 7;
	R0 = R1 | R0;
	R0 = ~ R0;
	B[P1 + 350] = R0;
.LN86:
// line 7234
	R0 <<= 27;
	CC = AZ;
	if CC jump .P183L39 ;

.P183L37:
	P0.L = _AVARIYA_flag;
	P0.H = _AVARIYA_flag;
.LN87:
// line 7236
	R0 = 127;
	[P0] = R0;

.P183L39:
.LN88:
// line 7240
	B[P1 + 4] = R6;
.LN89:
// line 7242
	R5 = B[P1++] (X);
	R4 = B[P1 + 6] (X);
	R0 = B[P1++] (Z);
	R1 = [P1--];
	R4 = R5 & R4;
	R0 <<= 1;
	R4 = R4 | R0;
	R7 = B[P1 + 5] (Z);
	R1 <<= 2;
	R4 = R4 | R1;
	R5 = B[P1 + 7] (Z);
	R7 <<= 3;
	R7 = R4 | R7;
	R0 = [P1 + 8];
	R5 <<= 4;
	R5 = R7 | R5;
	R1 = B[P1 + 359] (Z);
	R0 <<= 5;
	R5 = R5 | R0;
	R1 <<= 7;
	R5 = R5 | R1;
.LN90:
// line 7255
	P5 = 16;
.LN91:
// line 7242
	B[P1 + 353] = R5;
.LN92:
// line 7252
	B[P1 + 354] = R6;
.LN93:
// line 7255
	R7 = [P1 ++ P5];
	R0 = 1;
.LN94:
// line 7258
	R4 = [P1 + -396];
	CC = R4 == 0;
.LN95:
// line 7260
	R1 = B[P1 + -667] (Z);
	IF CC R0 = R4;
	R1 <<= 1;
	R0 = R0 | R1;
	B[P1 + 339] = R0;
.LN96:
// line 7256
	B[P1 + 341] = R3;
.LN97:
// line 7255
	B[P1 + 340] = R7;
.LN98:
// line 7263
	R4 = [P1++];
.LN99:
// line 7265
	R2.H = R7.L << 13;
.LN100:
// line 7263
	R5 = B[P1 + 30] (X);
	R3 = B[P1 + 31] (X);
	R1 = B[P1 + -1] (Z);
	R0.H = R5.L << 11;
	R7 = B[P1++] (Z);
	R3.H = R4.L << 12;
	R5 = B[P1++] (Z);
	R0.H = R3.H + R0.H (NS);
	R4.H = R3.L << 8;
	R3 = B[P1++] (Z);
	R0.H = R0.H + R4.H (NS);
	R1.H = R1.L << 6;
	R0.H = R0.H + R1.H (NS);
.LN101:
// line 7265
	R1 = B[P1++] (X);
.LN102:
// line 7263
	R7.H = R7.L << 4;
.LN103:
// line 7265
	R4 = W[P1] (X);
.LN104:
// line 7263
	R0.H = R0.H + R7.H (NS);
	R5.H = R5.L << 2;
	R0.H = R0.H + R5.H (NS);
.LN105:
// line 7265
	R5.H = R4.L << 14;
	R1.L = R1.L << 15;
	R1.L = R1.L + R5.H (NS);
	R1.L = R1.L + R2.H (NS);
	R7 = B[P1 + 10] (X);
	R2 = 4096;
.LN106:
// line 7263
	R0.H = R0.H + R3.L (NS);
.LN107:
// line 7265
	R3 = B[P1 + 1] (Z);
	R2.H = R1.L + R2.L (NS);
	R7.H = R7.L << 8;
	R7.H = R2.H + R7.H (NS);
	R3.L = R3.L << 4;
	R1 = B[P1 + 2] (Z);
	R5.H = R7.H + R3.L (NS);
.LN108:
// line 7267
	R2 = [P1 + 328];
	P2.L = _Mem_sys;
	P2.H = _Mem_sys;
.LN109:
// line 7263
	P4 = 4;
	W[P2 ++ P4] = R0.H;
.LN110:
// line 7265
	R1.L = R5.H + R1.L (NS);
.LN111:
// line 7267
	R7 = B[P1 + 329] (Z);
	R2.L = R2.L << 8;
.LN112:
// line 7265
	W[P2++] = R1;
.LN113:
// line 7269
	R3 = [P1 + -568];
	R2 = R2 + R7;
	R0.L = R0.L << 8;
.LN114:
// line 7267
	W[P2++] = R2;
	R0 = R0 + R3;
	P3.L = _Alfa;
	P3.H = _Alfa;
.LN115:
// line 7269
	W[P2++] = R0;
.LN116:
// line 7271
	R0 = [P3];
	P4 = -10;
	W[P2 ++ P4] = R0.H;
.LN117:
// line 7273
	R1 = [P3];
	[SP + 48] = R1;
.LN118:
// line 7323
	R2 = R1 >> 8;
.LN119:
// line 7303
	R4 = W[P2] (X);
.LN120:
// line 7323
	[SP + 36] = R2;
	P0.L = _Inf_A2;
	P0.H = _Inf_A2;
	R0 = [SP + 48];
.LN121:
// line 7273
	W[P2 + 12] = R0;
.LN122:
// line 7275
	W[P2 + 14] = R6;
.LN123:
// line 7277
	W[P2 + 16] = R6;
.LN124:
// line 7307
	R5 = W[P2 + 4] (X);
	R0 = R5;
.LN125:
// line 7319
	R1 = W[P2 + 10] (X);
.LN126:
// line 7307
	R0 >>= 8;
	[SP + 56] = R0;
	R0 = R1;
.LN127:
// line 7311
	R7 = W[P2 + 6] (X);
.LN128:
// line 7319
	R0 >>= 8;
	R2 = R7;
	[SP + 28] = R0;
.LN129:
// line 7311
	R2 >>= 8;
	R0 = R4;
	[SP + 32] = R2;
.LN130:
// line 7303
	R0 >>= 8;
.LN131:
// line 7339
	R3 = [P1 + 396];
	P1 = P0;
.LN132:
// line 7303
	B[P0++] = R0;
.LN133:
// line 7305
	B[P0++] = R4;
.LN134:
// line 7307
	R0 = [SP + 56];
	B[P0++] = R0;
.LN135:
// line 7339
	[SP + 52] = R3;
.LN136:
// line 7309
	B[P0++] = R5;
.LN137:
// line 7315
	R3 = W[P2 + 8] (X);
.LN138:
// line 7311
	R4 = [SP + 32];
	R2 = R3;
	B[P0++] = R4;
.LN139:
// line 7313
	B[P0++] = R7;
.LN140:
// line 7315
	R2 >>= 8;
	B[P0++] = R2;
.LN141:
// line 7317
	B[P0++] = R3;
.LN142:
// line 7319
	R5 = [SP + 28];
	B[P0++] = R5;
.LN143:
// line 7321
	B[P0++] = R1;
.LN144:
// line 7323
	R7 = [SP + 36];
.LN145:
// line 7339
	R1 = [SP + 52];
.LN146:
// line 7323
	B[P0++] = R7;
.LN147:
// line 7339
	R1 >>>= 24;
.LN148:
// line 7325
	R2 = [SP + 48];
	P2.L = _TX_BUF;
	P2.H = _TX_BUF;
	B[P0++] = R2;
.LN149:
// line 7339
	B[P2++] = R1;
	R0 = W[FP + 14] (Z);
.LN150:
// line 7341
	R2 = [SP + 52];
.LN151:
// line 7340
	B[P2++] = R0;
.LN152:
// line 7341
	R2 >>= 8;
	B[P2++] = R2;
.LN153:
// line 7342
	R1 = [SP + 52];
	B[P2++] = R1;
.LN154:
// line 7327
	B[P0++] = R6;
.LN155:
// line 7343
	B[P2++] = R6;
.LN156:
// line 7329
	B[P0++] = R6;
.LN157:
// line 7344
	B[P2++] = R6;
.LN158:
// line 7331
	B[P0++] = R6;
.LN159:
// line 7345
	B[P2++] = R6;
.LN160:
// line 7333
	B[P0] = R6;
.LN161:
// line 7346
	B[P2] = R6;
	P3.L = _index_rd;
	P3.H = _index_rd;
.LN162:
// line 7348
	R0 = [P3];
	R5 = 120;
	CC = R0 < R5 (IU);
	P4.L = _Pkt;
	P4.H = _Pkt;
	if !CC jump .P183L45 ;

.P183L43:
.LN163:
// line 7351
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	P0 = [P3];
	// -- 3 stalls --
	P0 = P0 + (P0<<1);
	P0 = P0 + (P0<<2);
	P0 = (P0 + P0) << 2;
	P0 = P4 + P0;
	R0 = B[P0 + 104] (X);
	B[P2 + 4] = R0;
.LN164:
// line 7352
	P0 = [P3];
	// -- 3 stalls --
	P0 = P0 + (P0<<1);
	P0 = P0 + (P0<<2);
	P0 = (P0 + P0) << 2;
	P0 = P4 + P0;
	R0 = [P0 + 104];
	R0 >>= 8;
	B[P2 + 3] = R0;
.LN165:
// line 7353
	P0 = [P3];
	// -- 3 stalls --
	P0 = P0 + (P0<<1);
	P0 = P0 + (P0<<2);
	P0 = (P0 + P0) << 2;
	P0 = P4 + P0;
	R0 = [P0 + 104];
	R0 = PACK(R0.H, R0.H);
	B[P2 + 2] = R0;
.LN166:
// line 7354
	P0 = [P3];
	// -- 3 stalls --
	P0 = P0 + (P0<<1);
	P0 = P0 + (P0<<2);
	P0 = (P0 + P0) << 2;
	P0 = P4 + P0;
	R0 = [P0 + 104];
	R0 >>>= 24;
	B[P2 + 1] = R0;
.LN167:
// line 7356
	P0 = [P3];
	// -- 3 stalls --
	P0 = P0 + (P0<<1);
	P0 = P0 + (P0<<2);
	P0 = (P0 + P0) << 2;
	P0 = P4 + P0;
	R0 = B[P0 + 108] (X);
	B[P2 + 8] = R0;
.LN168:
// line 7357
	P0 = [P3];
	// -- 3 stalls --
	P0 = P0 + (P0<<1);
	P0 = P0 + (P0<<2);
	P0 = (P0 + P0) << 2;
	P0 = P4 + P0;
	R0 = [P0 + 108];
	R0 >>= 8;
	B[P2 + 7] = R0;
.LN169:
// line 7358
	P0 = [P3];
	// -- 3 stalls --
	P0 = P0 + (P0<<1);
	P0 = P0 + (P0<<2);
	P0 = (P0 + P0) << 2;
	P0 = P4 + P0;
	R0 = [P0 + 108];
	R0 = PACK(R0.H, R0.H);
	B[P2 + 6] = R0;
.LN170:
// line 7359
	P0 = [P3];
	// -- 3 stalls --
	P0 = P0 + (P0<<1);
	P0 = P0 + (P0<<2);
	P0 = (P0 + P0) << 2;
	P0 = P4 + P0;
	R0 = [P0 + 108];
	R0 >>>= 24;
	B[P2 + 5] = R0;

.P183L45:
	R7 = 0;
	R3 = 0;
	P0 = P2;
	R2 = 0;
	P2 += 6;
	R0 = 0;
	LOOP .P183L47L LC0 = P5;

.P183L47:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 7372 col 3
//-------------------------------------------------------------------
//   Trip Count  = 16
//-------------------------------------------------------------------
	LOOP_BEGIN .P183L47L;
.LN171:
// line 7376
	CC = R0 == 0;
	if !CC jump .P183L51 ;

.P183L49:
.LN172:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R6 = B[P1] (X);

.P183L51:
.LN173:
// line 7377
	CC = R0 == 1;
	if !CC jump .P183L54 ;

.P183L52:
.LN174:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R7 = B[P1] (X);

.P183L54:
.LN175:
// line 7378
	CC = R0 == 2;
	if !CC jump .P183L57 ;

.P183L55:
.LN176:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R3 = B[P1] (X);

.P183L57:
.LN177:
// line 7379
	CC = R0 == 3;
	if !CC jump .P183L60 ;

.P183L58:
.LN178:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R2 = B[P1] (X);

.P183L60:
.LN179:
// line 7381
	if !CC jump .P183L63 ;

.P183L61:
.LN180:
// line 7383
	B[P2++] = R6;
.LN181:
// line 7384
	B[P2--] = R7;
.LN182:
// line 7385
	B[P2 + 2] = R3;
.LN183:
// line 7386
	B[P2 + 3] = R2;

.P183L63:
	R0 += 1;
	P1 += 1;
	R1 = 0;
	IF !CC R1 = R0;
	R0 = R1;
	P2 += 1;
.LN184:
// line 7372
	LOOP_END .P183L47L;
//-------------------------------------------------------------------
//   End Loop L47
//-------------------------------------------------------------------

.P183L97:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	P0 += 22;
	P5 = 104;
	P1 = 0;
.LN185:
// line 7404
	P2 = 78;
	R1 = 0;
	LOOP .P183L68L LC0 = P5;

.P183L68:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 7397 col 3
//-------------------------------------------------------------------
//   Trip Count  = 104
//-------------------------------------------------------------------
	LOOP_BEGIN .P183L68L;
.LN186:
// line 7399
	R0 = [P3];                              // Use of volatile in loops precludes optimizations. 
	CC = R0 < R5 (IU);
	if !CC jump .P183L72 ;

.P183L70:
.LN187:
// line 7401
	CC = R1 == 0;
	if !CC jump .P183L75 ;

.P183L73:
.LN188:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	P5 = [P3];                              // Use of volatile in loops precludes optimizations. 
	// -- 3 stalls --
	P5 = P5 + (P5<<1);
	P5 = P5 + (P5<<2);
	P5 = (P5 + P5) << 2;
	P5 = P4 + P5;
	P5 = P5 + P1;
	R6 = B[P5] (X);

.P183L75:
.LN189:
// line 7402
	CC = R1 == 1;
	if !CC jump .P183L78 ;

.P183L76:
.LN190:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	P5 = [P3];                              // Use of volatile in loops precludes optimizations. 
	// -- 3 stalls --
	P5 = P5 + (P5<<1);
	P5 = P5 + (P5<<2);
	P5 = (P5 + P5) << 2;
	P5 = P4 + P5;
	P5 += 26;
	P5 = P5 + P1;
	R7 = B[P5] (X);

.P183L78:
.LN191:
// line 7403
	CC = R1 == 2;
	if !CC jump .P183L81 ;

.P183L79:
.LN192:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	P5 = [P3];                              // Use of volatile in loops precludes optimizations. 
	// -- 3 stalls --
	P5 = P5 + (P5<<1);
	P5 = P5 + (P5<<2);
	P5 = (P5 + P5) << 2;
	P5 = P4 + P5;
	P5 += 52;
	P5 = P5 + P1;
	R3 = B[P5] (X);

.P183L81:
.LN193:
// line 7404
	CC = R1 == 3;
	if !CC jump .P183L72 ;

.P183L82:
.LN194:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	P5 = [P3];                              // Use of volatile in loops precludes optimizations. 
	// -- 3 stalls --
	P5 = P5 + (P5<<1);
	P5 = P5 + (P5<<2);
	P5 = (P5 + P5) << 2;
	P5 = P4 + P5;
	P5 = P5 + P2;
	P5 = P5 + P1;
	R2 = B[P5] (X);

.P183L72:
.LN195:
// line 7407
	CC = R1 == 3;
	if !CC jump .P183L87 ;

.P183L85:
.LN196:
// line 7409
	B[P0++] = R3;
.LN197:
// line 7410
	B[P0--] = R2;
.LN198:
// line 7411
	B[P0 + 2] = R6;
.LN199:
// line 7412
	B[P0 + 3] = R7;
.LN200:
// line 7414
	P1 += 1;

.P183L87:
	R0 = R1;
	R0 += 1;
	R1 = 0;
	IF !CC R1 = R0;
	P0 += 1;
.LN201:
// line 7397
	LOOP_END .P183L68L;
//-------------------------------------------------------------------
//   End Loop L68
//-------------------------------------------------------------------

.P183L98:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN202:
// line 7419
	(R7:4, P5:3) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._Info_back_Ethernet.end:
._Info_back_Ethernet.end:
	.global _Info_back_Ethernet;
	.type _Info_back_Ethernet,STT_FUNC;

	.align 2;
_CEV_rcv:
.LN_CEV_rcv:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  Scratch registers used: {R0-R1,P1,ASTAT0-ASTAT1}
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
	P1 = R0;
// line "..\BFcom\main.c":7000
	LINK 0;
	// -- 3 stalls --
.LN203:
// line 7006
	R0 = B[P1++] (Z);
	R1 = B[P1++] (Z);
	R0 <<= 24;
	R1 <<= 16;
	R1 = R0 + R1;
	R0 = B[P1++] (Z);
	R0 <<= 8;
	R0 = R1 + R0;
	R1 = B[P1] (Z);
.LN204:
// line 7008
	UNLINK;
.LN205:
// line 7006
	R0 = R0 + R1;
	// -- 3 stalls --
.LN206:
// line 7008
	RTS;
.LN._CEV_rcv.end:
._CEV_rcv.end:
	.global _CEV_rcv;
	.type _CEV_rcv,STT_FUNC;

	.align 2;
_TNC_rcv:
.LN_TNC_rcv:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0-R2,P0-P2,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {P3-P5,FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":6944
	LINK 0;
.LN207:
// line 6950
	CC = R1 == 0;
.LN208:
// line 6944
	[--SP] = (P5:3);
	P1 = R0;
	P4.L = _packet;
	P4.H = _packet;
.LN209:
// line 6950
	if CC jump .P185L3 ;

.P185L13:
.LN210:
// line 6944
	P0 = R1;
	P2 = 0;
	P5 = 0;
	LOOP .P185L2L LC0 = P0;

.P185L2:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 6950 col 2
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in an estimated 18 
//   cycles (includes 1 stall).
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used  17 out of   18 ( 94.4%)
//     16-bit Instruction  used  32 out of   36 ( 88.9%)
//     32-bit Instruction  used  15 out of   18 ( 83.3%)
//     Store               used   1 out of   18 (  5.6%)
//-------------------------------------------------------------------
//  This loop was not modulo scheduled because it was optimized for space.
//-------------------------------------------------------------------
	LOOP_BEGIN .P185L2L;
	P3 = 3;
	// -- stall --
.LN211:
// line 6952
	P3 -= P2;
.LN212:
// line 6954
	P2 += 1;
.LN213:
// line 6955
	P0 = 4;
.LN214:
	CC = P2 == P0;
	P0 = P3;
.LN215:
// line 6953
	P3 = (P3 + P3) << 2;
	P0 = (P0 + P3) << 2;
	P3 = P5;
	P0 = P4 + P0;
	P3 += 1;
	P0 = P0 + P5;
	IF CC P5 = P3;
	P3 = 0;
	IF CC P2 = P3;
	R0 = B[P1++] (X);
	B[P0] = R0;
.LN216:
// line 6950
	LOOP_END .P185L2L;
//-------------------------------------------------------------------
//   End Loop L2
//-------------------------------------------------------------------

.P185L16:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------

.P185L3:
	P0 = 30;
	P1 = P4;
	LOOP .P185L8L LC0 = P0;

.P185L8:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 6958 col 3
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in estimated 8 cycles.
//-------------------------------------------------------------------
//   Trip Count  = 30
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   8 out of    8 (100.0%)
//     16-bit Instruction  used  14 out of   16 ( 87.5%)
//     32-bit Instruction  used   6 out of    8 ( 75.0%)
//     Store               used   4 out of    8 ( 50.0%)
//-------------------------------------------------------------------
//  This loop was not modulo scheduled because it was optimized for space.
//-------------------------------------------------------------------
	LOOP_BEGIN .P185L8L;
.LN217:
// line 6960
	R0 = B[P1] (X);
.LN218:
// line 6963
	R1 = B[P1 + 36] (X);
.LN219:
// line 6961
	R2 = B[P1 + 72] (X);
.LN220:
// line 6963
	B[P1++] = R1;
.LN221:
// line 6966
	B[P1 + 35] = R0;
.LN222:
// line 6964
	R0 = B[P1 + 107] (X);
	B[P1 + 71] = R0;
.LN223:
// line 6967
	B[P1 + 107] = R2;
.LN224:
// line 6958
	LOOP_END .P185L8L;
//-------------------------------------------------------------------
//   End Loop L8
//-------------------------------------------------------------------

.P185L17:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN225:
// line 6973
	R0 = B[P4 + 3] (Z);
	R1 = B[P4 + 75] (Z);
	R2 = B[P4 + 39] (Z);
	R0 <<= 8;
	R0 = R0 + R2;
	R1 <<= 16;
	R1 = R0 + R1;
	R0 = B[P4 + 111] (Z);
.LN226:
// line 6975
	(P5:3) = [SP++];
	UNLINK;
.LN227:
// line 6973
	R0 <<= 24;
	R0 = R1 + R0;
	// -- 2 stalls --
.LN228:
// line 6975
	RTS;
.LN._TNC_rcv.end:
._TNC_rcv.end:
	.global _TNC_rcv;
	.type _TNC_rcv,STT_FUNC;

	.align 2;
_TIME_coder:
.LN_TIME_coder:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  No scratch registers used.
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":6937
	LINK 0;
.LN229:
// line 6939
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._TIME_coder.end:
._TIME_coder.end:
	.global _TIME_coder;
	.type _TIME_coder,STT_FUNC;

	.align 2;
_Wait_PPI:
.LN_Wait_PPI:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  Scratch registers used: {R0}
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":5636
	LINK 0;
.LN230:
// line 5640
	UNLINK;
	R0 = 0;
	// -- 3 stalls --
	RTS;
.LN._Wait_PPI.end:
._Wait_PPI.end:
	.global _Wait_PPI;
	.type _Wait_PPI,STT_FUNC;

	.align 2;
_Str_print:
.LN_Str_print:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  No scratch registers used.
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":5600
	LINK 0;
.LN231:
// line 5633
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._Str_print.end:
._Str_print.end:
	.global _Str_print;
	.type _Str_print,STT_FUNC;

	.align 2;
_packet_UPR:
.LN_packet_UPR:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 28 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {R4-R7,P5,FP,SP,RETS}
//-------------------------------------------------------------------
.LN232:
// line "..\BFcom\main.c":5201
	R0.H = 120;
	R0 = R0.L * R0.H (FU);
	R0 = R1 + R0;
	P1 = R0;
.LN233:
// line 5192
	LINK 0;
	[--SP] = (R7:4, P5:5);
	P2.L = _packet;
	P2.H = _packet;
	P5 = 2;
	P0 = P2;
	LOOP .P189L2L LC0 = P5;

.P189L2:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 5199 col 1
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in estimated 8 cycles.
//-------------------------------------------------------------------
//   Trip Count  = 2
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   8 out of    8 (100.0%)
//     16-bit Instruction  used  14 out of   16 ( 87.5%)
//     32-bit Instruction  used   6 out of    8 ( 75.0%)
//     Store               used   4 out of    8 ( 50.0%)
//-------------------------------------------------------------------
//  This loop was not modulo scheduled because it was optimized for space.
//-------------------------------------------------------------------
	LOOP_BEGIN .P189L2L;
.LN234:
// line 5201
	R0 = B[P1++] (X);
	B[P0++] = R0;
.LN235:
// line 5202
	R0 = B[P1 + 25] (X);
	B[P0 + 35] = R0;
.LN236:
// line 5203
	R0 = B[P1 + 51] (X);
	B[P0 + 71] = R0;
.LN237:
// line 5204
	R0 = B[P1 + 77] (X);
	B[P0 + 107] = R0;
.LN238:
// line 5199
	LOOP_END .P189L2L;
//-------------------------------------------------------------------
//   End Loop L2
//-------------------------------------------------------------------

.P189L15:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN239:
// line 5210
	R1 = [P2];
.LN240:
// line 5211
	R2 = 15;
.LN241:
// line 5210
	R0 = R1 >> 4;
.LN242:
// line 5211
	R1 = R1 & R2;
	P1.L = _Mem1;
	P1.H = _Mem1;
.LN243:
// line 5210
	R2 = 4;
	R3 = B[P1] (Z);
	R0 = PACK(R0.L, R2.L);
.LN244:
// line 5212
	R7 = 5;
.LN245:
// line 5210
	R2 = DEPOSIT(R3, R0);
.LN246:
// line 5212
	CC = R1 == R7;
.LN247:
// line 5210
	B[P1] = R2;
.LN248:
// line 5212
	if CC jump .P189L4 ;

.P189L7:
	R2 = 12;
	CC = R1 == R2;
	if !CC jump .P189L6 ;

.P189L4:
.LN249:
	R1 = PACK(R1.L, R1.L);
	R1.L = 1028;
	R2 = B[P1 + 30] (Z);
	R1 = DEPOSIT(R2, R1);
	B[P1 + 30] = R1;

.P189L6:
.LN250:
// line 5214
	R5 = [P2 + 36];
.LN251:
// line 5215
	R3 = R5 >> 2;
	R2.H = R3.L << 0;
.LN252:
// line 5216
	R3 = 3;
	R3 = R5 & R3;
.LN253:
// line 5217
	R4 = B[P2 + 72] (Z);
.LN254:
// line 5216
	R0.H = R3.L << 0;
.LN255:
// line 5217
	R6 = R4 >>> 4;
.LN256:
// line 5214
	R1 = R5 >> 6;
	R3 = 2;
.LN257:
// line 5218
	CC = R6 == R7;
.LN258:
// line 5214
	R7 = B[P1 + 1] (Z);
	R1 = PACK(R1.L, R3.L);
	R1 = DEPOSIT(R7, R1);
	R1 = R1.b (Z);
.LN259:
// line 5215
	R2.L = 516;
	R1 = DEPOSIT(R1, R2);
	B[P1 + 1] = R1;
.LN260:
// line 5216
	R1 = B[P1 + 2] (Z);
	R1 = DEPOSIT(R1, R0);
	B[P1 + 2] = R1;
.LN261:
// line 5218
	if CC jump .P189L8 ;

.P189L11:
	R1 = 12;
	CC = R6 == R1;
	if !CC jump .P189L10 ;

.P189L8:
.LN262:
	R0 = PACK(R6.L, R0.L);
	R1 = B[P1 + 28] (Z);
	R1 = DEPOSIT(R1, R0);
	B[P1 + 28] = R1;

.P189L10:
.LN263:
// line 5221
	R3 = [P2 + 108];
.LN264:
// line 5222
	R2.H = R3.L << 0;
.LN265:
// line 5221
	R3 >>= 4;
	R0.H = R3.L << 0;
.LN266:
// line 5220
	R1.H = R4.L << 0;
	R3 = B[P1 + 28] (Z);
	R1.L = 1028;
	R1 = DEPOSIT(R3, R1);
	B[P1 + 28] = R1;
.LN267:
// line 5221
	R1 = B[P1 + 29] (Z);
	R0 = DEPOSIT(R1, R0);
	R0 = R0.b (Z);
.LN268:
// line 5220
	R2.L = 1028;
.LN269:
// line 5222
	R0 = DEPOSIT(R0, R2);
	B[P1 + 29] = R0;
.LN270:
// line 5224
	(R7:4, P5:5) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._packet_UPR.end:
._packet_UPR.end:
	.global _packet_UPR;
	.type _packet_UPR,STT_FUNC;

	.align 2;
_DEV_comp_tst:
.LN_DEV_comp_tst:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 28 
//  Scratch registers used: {R0-R3,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R4-R7,P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,M0-M2,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0,LT0,LB0,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":5029
	LINK 0;
	[--SP] = (R7:4, P5:5);
	R7 = R0;
.LN271:
// line 5034
	R0 = 100;
	R0 *= R2;
.LN272:
// line 5029
	SP += -16;
	R6 = R1;
.LN273:
// line 5034
	CALL.X (___unsigned_int32_to_float64);  // integral to floating-point conversion is implemented as a library call. 
	R5 = R0;
	R4 = R1;
.LN274:
// line 5036
	R0 = R6;
	R1 = R7;
	CALL.X (___udiv32);                     // division is implemented as a library call. 
	CALL.X (___unsigned_int32_to_float64);  // integral to floating-point conversion is implemented as a library call. 
	P1.L = .static0;
	P1.H = .static0;
	R2 = [P1++];
	R3 = [P1];
	[SP + 12] = R3;
	CALL.X (___float64_div);                // floating-point division is implemented as a library call. 
	[SP + 12] = R1;
	R2 = R0;
	R1 = R4;
	R0 = R5;
	CALL.X (___float64_mul);                // floating-point multiplication is implemented as a library call. 
.LN275:
// line 5038
	CALL.X (___float64_to_unsigned_int32_round_to_zero);// floating-point to integral conversion is implemented as a library call. 
	P5.L = _DEVmax_tst;
	P5.H = _DEVmax_tst;
.LN276:
// line 5040
	R1 = [P5];
	CC = R1 < R0 (IU);
	if !CC jump .P190L3 ;

.P190L1:
.LN277:
	[P5] = R0;

.P190L3:
.LN278:
// line 5042
	SP += 16;
	(R7:4, P5:5) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._DEV_comp_tst.end:
._DEV_comp_tst.end:
	.global _DEV_comp_tst;
	.type _DEV_comp_tst,STT_FUNC;

	.align 2;
_F_comp_tst:
.LN_F_comp_tst:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 16 
//  Scratch registers used: {R0-R3,P0,ASTAT0-ASTAT1,CC,AQ}
//  Call preserved registers used: {R7,P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,A1,ASTAT0-ASTAT1,CC,AQ,LC0,LT0,LB0,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":5015
	LINK 0;
	[--SP] = (R7:7, P5:5);
	P0.L = .static1;
	P0.H = .static1;
	SP += -16;
.LN279:
// line 5020
	R1 = [P0 + 4];
	[SP + 12] = R1;
	R2 = [P0];
	R1 = 0;
	CALL.X (___mulli3);                     // integral multiplication of this size is implemented as a library call. 
	R2 = [P0 + 8];
	R3 = [P0 + 12];
	CALL.X (___divrem_u64);                 // division is implemented as a library call. 
	R1 = -31744;
	R7 = R1;
	R7.H = 6103;
	P5.L = _Fmax_tst;
	P5.H = _Fmax_tst;
	R0 = R0 + R7;
.LN280:
// line 5023
	R1 = [P5];
	CC = R1 < R0 (IU);
	R1 = [P5 + 4];
.LN281:
// line 5015
	R2 = 0;
.LN282:
// line 5023
	AQ = CC;
	CC = R1 == R2;
	AQ &= CC;
	CC = R1 < R2 (IU);
	CC |= AQ;
	if !CC jump .P196L3 ;

.P196L1:
.LN283:
	[P5 + 4] = R2;
	[P5] = R0;

.P196L3:
.LN284:
// line 5025
	SP += 16;
	(R7:7, P5:5) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._F_comp_tst.end:
._F_comp_tst.end:
	.global _F_comp_tst;
	.type _F_comp_tst,STT_FUNC;

	.align 2;
_Time_SEV_INF:
.LN_Time_SEV_INF:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  Scratch registers used: {R0-R3,P0-P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
	P1 = R0;
// line "..\BFcom\main.c":4832
	LINK 0;
	P0.L = _FLAG_TEST_SEV;
	P0.H = _FLAG_TEST_SEV;
.LN285:
// line 4844
	R2 = 1;
	B[P0--] = R2;
.LN286:
// line 4839
	R0 = B[P1++] (Z);
	R1 = B[P1++] (Z);
	R0 <<= 24;
	R1 <<= 16;
	R1 = R0 + R1;
	R0 = B[P1++] (Z);
	R0 <<= 8;
	R0 = R1 + R0;
	R1 = B[P1] (Z);
	R3 = R0 + R1;
.LN287:
// line 4849
	R1 = B[P0 + 95] (Z);
	R0 = [P0 + 640];
	R0 *= R1;
	R0 = R3 - R0;
.LN288:
// line 4851
	R1 = [P0 + 784];
	CC = R0 == R1;
	if CC jump .P199L3 ;

.P199L1:
.LN289:
// line 4853
	[P0 + 784] = R0;
.LN290:
// line 4854
	B[P0 + 94] = R2;

.P199L3:
.LN291:
// line 4859
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._Time_SEV_INF.end:
._Time_SEV_INF.end:
	.global _Time_SEV_INF;
	.type _Time_SEV_INF,STT_FUNC;

	.align 2;
_ZUTransf:
.LN_ZUTransf:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 24 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {R6-R7,P4-P5,FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4806
	LINK 0;
.LN292:
// line 4810
	CC = R1 <= 0;
.LN293:
// line 4806
	[--SP] = (R7:6, P5:4);
	P1 = R0;
.LN294:
// line 4810
	if CC jump .P200L3 ;

.P200L12:
.LN295:
// line 4813
	R2 = 0;
.LN296:
	R7 = 4096;
	P4.L = _tx_counter0;
	P4.H = _tx_counter0;
	P5.L = _tx_buffer_overflow0;
	P5.H = _tx_buffer_overflow0;
.LN297:
// line 4817
	R3 = 1;
.LN298:
// line 4806
	P0 = R1;
	P2.L = _tx_wr_index0;
	P2.H = _tx_wr_index0;
	R1.L = _tx_buffer0;
	R1.H = _tx_buffer0;
	LOOP .P200L2L LC0 = P0;

.P200L2:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 4810 col 11
//-------------------------------------------------------------------
	LOOP_BEGIN .P200L2L;
.LN299:
// line 4812
	R6 = B[P1++] (X);
	R0 = W[P2] (Z);                         // Use of volatile in loops precludes optimizations. 
	R0 = R1 + R0;
	P0 = R0;
	// -- 4 stalls --
	B[P0] = R6;                             // Use of volatile in loops precludes optimizations. 
.LN300:
// line 4813
	R0.L = W[P2];                           // Use of volatile in loops precludes optimizations. 
	R0 += 1;
	R0 = R0.L (Z);
	CC = R0 == R7;
	W[P2] = R0.L;                           // Use of volatile in loops precludes optimizations. 
	if !CC jump .P200L6 ;

.P200L4:
.LN301:
	W[P2] = R2.L;                           // Use of volatile in loops precludes optimizations. 

.P200L6:
.LN302:
// line 4814
	NOP;                                    // Inserted 2 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	R0.L = W[P4];                           // Use of volatile in loops precludes optimizations. 
	R0 += 1;
	R0 = R0.L (Z);
	CC = R0 == R7;
	W[P4] = R0.L;                           // Use of volatile in loops precludes optimizations. 
	if !CC jump .P200L9 ;

.P200L7:
.LN303:
// line 4816
	W[P4] = R2.L;                           // Use of volatile in loops precludes optimizations. 
.LN304:
// line 4817
	B[P5] = R3;                             // Use of volatile in loops precludes optimizations. 

.P200L9:
	NOP;
.LN305:
// line 4810
	LOOP_END .P200L2L;
//-------------------------------------------------------------------
//   End Loop L2
//-------------------------------------------------------------------

.P200L13:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------

.P200L3:
.LN306:
// line 4821
	(R7:6, P5:4) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._ZUTransf.end:
._ZUTransf.end:
	.global _ZUTransf;
	.type _ZUTransf,STT_FUNC;

	.align 2;
_ZTransf:
.LN_ZTransf:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 24 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {R6-R7,P4-P5,FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4787
	LINK 0;
.LN307:
// line 4792
	CC = R1 <= 0;
.LN308:
// line 4787
	[--SP] = (R7:6, P5:4);
	P1 = R0;
.LN309:
// line 4792
	if CC jump .P201L3 ;

.P201L12:
.LN310:
// line 4795
	R2 = 0;
.LN311:
	R7 = 4096;
	P4.L = _tx_counter0;
	P4.H = _tx_counter0;
	P5.L = _tx_buffer_overflow0;
	P5.H = _tx_buffer_overflow0;
.LN312:
// line 4799
	R3 = 1;
.LN313:
// line 4787
	P0 = R1;
	P2.L = _tx_wr_index0;
	P2.H = _tx_wr_index0;
	R1.L = _tx_buffer0;
	R1.H = _tx_buffer0;
	LOOP .P201L2L LC0 = P0;

.P201L2:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 4792 col 2
//-------------------------------------------------------------------
	LOOP_BEGIN .P201L2L;
.LN314:
// line 4794
	R6 = B[P1++] (X);
	R0 = W[P2] (Z);                         // Use of volatile in loops precludes optimizations. 
	R0 = R1 + R0;
	P0 = R0;
	// -- 4 stalls --
	B[P0] = R6;                             // Use of volatile in loops precludes optimizations. 
.LN315:
// line 4795
	R0.L = W[P2];                           // Use of volatile in loops precludes optimizations. 
	R0 += 1;
	R0 = R0.L (Z);
	CC = R0 == R7;
	W[P2] = R0.L;                           // Use of volatile in loops precludes optimizations. 
	if !CC jump .P201L6 ;

.P201L4:
.LN316:
	W[P2] = R2.L;                           // Use of volatile in loops precludes optimizations. 

.P201L6:
.LN317:
// line 4796
	NOP;                                    // Inserted 2 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	R0.L = W[P4];                           // Use of volatile in loops precludes optimizations. 
	R0 += 1;
	R0 = R0.L (Z);
	CC = R0 == R7;
	W[P4] = R0.L;                           // Use of volatile in loops precludes optimizations. 
	if !CC jump .P201L9 ;

.P201L7:
.LN318:
// line 4798
	W[P4] = R2.L;                           // Use of volatile in loops precludes optimizations. 
.LN319:
// line 4799
	B[P5] = R3;                             // Use of volatile in loops precludes optimizations. 

.P201L9:
	NOP;
.LN320:
// line 4792
	LOOP_END .P201L2L;
//-------------------------------------------------------------------
//   End Loop L2
//-------------------------------------------------------------------

.P201L13:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------

.P201L3:
.LN321:
// line 4803
	(R7:6, P5:4) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._ZTransf.end:
._ZTransf.end:
	.global _ZTransf;
	.type _ZTransf,STT_FUNC;

	.align 2;
_leng:
.LN_leng:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  Scratch registers used: {R0-R1,P0-P1,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
	P1 = R0;
	P0 = 512;
// line "..\BFcom\main.c":4631
	LINK 0;
	R1 = 0;
	LOOP .P202L1L LC0 = P0;

.P202L1:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 4634 col 6
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in estimated 5 cycles.
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   5 out of    5 (100.0%)
//     16-bit Instruction  used   9 out of   10 ( 90.0%)
//     32-bit Instruction  used   4 out of    5 ( 80.0%)
//-------------------------------------------------------------------
//  Jumps out of this loop prevent efficient hardware loop generation.
//-------------------------------------------------------------------
	LOOP_BEGIN .P202L1L;
.LN322:
// line 4634
	R0 = B[P1++] (X);
	CC = R0 == 0;
	R0 = R1;
.LN323:
	R1 += 1;
.LN324:
	if CC jump .P202L7 ;

.P202L4:
	LOOP_END .P202L1L;
//-------------------------------------------------------------------
//   End Loop L1
//-------------------------------------------------------------------

.P202L12:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	R0 = B[P1] (X);
	CC = R0 == 0;
	R0 = R1;
	if !CC jump .P202L2 ;

.P202L7:

.P202L2:
.LN325:
// line 4636
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._leng.end:
._leng.end:
	.global _leng;
	.type _leng,STT_FUNC;

	.align 2;
_zputs:
.LN_zputs:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 12 
//  Scratch registers used: {R0,P0-P2,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {P5,FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4615
	LINK 0;
.LN326:
// line 4617
	CC = R1 == 0;
.LN327:
// line 4615
	[--SP] = P5;
	P1 = R0;
.LN328:
// line 4617
	if CC jump .P203L3 ;

.P203L9:
.LN329:
// line 4615
	P0 = R1;
.LN330:
// line 4618
	P2 = 1024 /* -4193280 */;
	P2.H = -64 /* -4193280 */;
.LN331:
// line 4619
	P5 = 1044 /* -4193260 */;
	P5.H = -64 /* -4193260 */;
	// -- 2 stalls --
	LOOP .P203L2L LC0 = P0;

.P203L2:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 4617 col 7
//-------------------------------------------------------------------
	LOOP_BEGIN .P203L2L;
.LN332:
// line 4618
	R0 = B[P1++] (X);
	W[P2] = R0.L;                           // Use of volatile in loops precludes optimizations. 

.P203L4:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 4619 col 9
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in an estimated 8 
//   cycles (includes 4 stalls).
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     16-bit Instruction  used   8 out of   16 ( 50.0%)
//     Group 1             used   4 out of    8 ( 50.0%)
//     32-bit Instruction  used   3 out of    8 ( 37.5%)
//-------------------------------------------------------------------
	// -- 4 stalls --
.LN333:
// line 4619
	NOP;                                    // Inserted to fix anomaly w_05000245_with_boundaries. 
	R0 = W[P5] (Z);                         // Use of volatile in loops precludes optimizations. 
	CC = BITTST(R0, 6);
	if !CC jump .P203L4 (bp);
//-------------------------------------------------------------------
//   End Loop L4
//-------------------------------------------------------------------

.P203L5:
//-------------------------------------------------------------------
//   Part of Loop 2, depth 1
//-------------------------------------------------------------------
	NOP;
.LN334:
// line 4617
	LOOP_END .P203L2L;
//-------------------------------------------------------------------
//   End Loop L2
//-------------------------------------------------------------------

.P203L11:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------

.P203L3:
.LN335:
// line 4625
	P5 = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._zputs.end:
._zputs.end:
	.global _zputs;
	.type _zputs,STT_FUNC;

	.align 2;
_getchar0:
.LN_getchar0:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  Scratch registers used: {R0-R2,P0-P2,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4556
	LINK 0;
	P1.L = _rx_rd_index0;
	P1.H = _rx_rd_index0;
.LN336:
// line 4559
	P0 = [P1];
	P2.L = _rx_buffer0;
	P2.H = _rx_buffer0;
.LN337:
// line 4560
	R2 = 256;
	// -- stall --
.LN338:
// line 4559
	P0 = P2 + P0;
	R0 = B[P0] (X);
.LN339:
// line 4560
	R1 = [P1];
	R1 += 1;
	CC = R1 == R2;
	[P1] = R1;
	if !CC jump .P204L3 ;

.P204L1:
.LN340:
	R1 = 0;
	[P1] = R1;

.P204L3:
	P1.L = _rx_counter0;
	P1.H = _rx_counter0;
.LN341:
// line 4561
	R1 = [P1];
	R1 += -1;
	[P1] = R1;
.LN342:
// line 4562
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._getchar0.end:
._getchar0.end:
	.global _getchar0;
	.type _getchar0,STT_FUNC;

	.align 2;
_txchar2:
.LN_txchar2:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  Scratch registers used: {R0-R1,P0-P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4545
	LINK 0;
	P0.L = _tx_rd_index2;
	P0.H = _tx_rd_index2;
.LN343:
// line 4548
	R0 = W[P0] (Z);
	R1.L = _tx_buffer2;
	R1.H = _tx_buffer2;
	R0 = R1 + R0;
	P1 = R0;
	// -- 4 stalls --
	R0 = B[P1] (X);
.LN344:
// line 4549
	R1.L = W[P0];
	R1 += 1;
	R1 = R1.L (Z);
	W[P0] = R1.L;
	BITTGL(R1, 6);
	CC = R1 == 0;
	if !CC jump .P205L3 ;

.P205L1:
.LN345:
	W[P0] = R1.L;

.P205L3:
.LN346:
// line 4550
	NOP;                                    // Inserted to fix anomaly w_05000245_with_boundaries. 
	P1.L = _tx_counter2;
	P1.H = _tx_counter2;
	R1.L = W[P1];
	R1 += -1;
	W[P1] = R1.L;
.LN347:
// line 4551
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._txchar2.end:
._txchar2.end:
	.global _txchar2;
	.type _txchar2,STT_FUNC;

	.align 2;
_txchar0:
.LN_txchar0:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  Scratch registers used: {R0-R1,P0-P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4535
	LINK 0;
	P0.L = _tx_rd_index0;
	P0.H = _tx_rd_index0;
.LN348:
// line 4538
	R0 = W[P0] (Z);
	R1.L = _tx_buffer0;
	R1.H = _tx_buffer0;
	R0 = R1 + R0;
	P1 = R0;
	// -- 4 stalls --
	R0 = B[P1] (X);
.LN349:
// line 4539
	R1.L = W[P0];
	R1 += 1;
	R1 = R1.L (Z);
	W[P0] = R1.L;
	BITTGL(R1, 12);
	CC = R1 == 0;
	if !CC jump .P206L3 ;

.P206L1:
.LN350:
	W[P0] = R1.L;

.P206L3:
.LN351:
// line 4540
	NOP;                                    // Inserted to fix anomaly w_05000245_with_boundaries. 
	P1.L = _tx_counter0;
	P1.H = _tx_counter0;
	R1.L = W[P1];
	R1 += -1;
	W[P1] = R1.L;
.LN352:
// line 4541
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._txchar0.end:
._txchar0.end:
	.global _txchar0;
	.type _txchar0,STT_FUNC;

	.align 2;
_func_event_RZV:
.LN_func_event_RZV:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  No scratch registers used.
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4524
	LINK 0;
.LN353:
// line 4531
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._func_event_RZV.end:
._func_event_RZV.end:
	.global _func_event_RZV;
	.type _func_event_RZV,STT_FUNC;

	.align 2;
_func_event_k615:
.LN_func_event_k615:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  Scratch registers used: {R0-R2,P0-P2,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4509
	LINK 0;
	P1.L = _flag_STOP_ALL_WORK;
	P1.H = _flag_STOP_ALL_WORK;
.LN354:
// line 4510
	R0 = 0;
	B[P1] = R0;
.LN355:
// line 4512
	P0 = 1792 /* -4192512 */;
	P0.H = -64 /* -4192512 */;
	R1 = W[P0] (Z);
	R2 = 128;
	R1 = R1 & R2;
	CC = R1 <= 0;
	P2.L = _flag_event_K615_run;
	P2.H = _flag_event_K615_run;
	if CC jump .P208L2 ;

.P208L4:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R1 = B[P2] (Z);
	CC = R1 == 0;
	if !CC jump .P208L2 ;

.P208L1:
.LN356:
// line 4514
	R0 = 1;
	B[P2] = R0;
	P0.L = _flag_K615_event;
	P0.H = _flag_K615_event;
.LN357:
// line 4515
	B[P0] = R0;
.LN358:
// line 4516
	B[P1 + -406] = R0;
.LN359:
// line 4517
	B[P1 + -331] = R0;

.P208L3:
.LN360:
// line 4521
	UNLINK;
	// -- 4 stalls --
	RTS;

.P208L2:
.LN361:
// line 4520
	R1 = W[P0] (Z);
	CC = !BITTST(R1, 7);
	if !CC jump .P208L3 ;

.P208L8:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R1 = B[P2] (Z);
	CC = R1 == 1;
	if !CC jump .P208L3 ;

.P208L5:
.LN362:
	B[P2] = R0;
	jump.s .P208L3;
.LN._func_event_k615.end:
._func_event_k615.end:
	.global _func_event_k615;
	.type _func_event_k615,STT_FUNC;

	.align 2;
_SDRAM_work:
.LN_SDRAM_work:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  No scratch registers used.
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4050
	LINK 0;
.LN363:
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._SDRAM_work.end:
._SDRAM_work.end:
	.global _SDRAM_work;
	.type _SDRAM_work,STT_FUNC;

	.align 2;
_Time_real:
.LN_Time_real:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  Scratch registers used: {R0-R1,P1,ASTAT0-ASTAT1}
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":3827
	LINK 0;
.LN364:
// line 3830
	P1 = 1572 /* -4192732 */;
	P1.H = -64 /* -4192732 */;
	R1 = [P1];
.LN365:
// line 3833
	UNLINK;
.LN366:
// line 3830
	R0 = R0 + R1;
	// -- 3 stalls --
.LN367:
// line 3833
	RTS;
.LN._Time_real.end:
._Time_real.end:
	.global _Time_real;
	.type _Time_real,STT_FUNC;

	.align 2;
_Timer_INT2:
.LN_Timer_INT2:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  Scratch registers used: {R0-R2,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
.LN368:
// line "..\BFcom\main.c":3810
	R1 = 99;
.LN369:
// line 3805
	LINK 0;
.LN370:
// line 3808
	P1 = 1572 /* -4192732 */;
	P1.H = -64 /* -4192732 */;
.LN371:
// line 3810
	CC = R0 == R1;
.LN372:
// line 3808
	R0 = [P1];
.LN373:
// line 3810
	if !CC jump .P211L3 ;

.P211L1:
.LN374:
// line 3812
	R1 = 4;
	P1 = 1604 /* -4192700 */;
	P1.H = -64 /* -4192700 */;
	W[P1] = R1.L;
.LN375:
// line 3814
	P1 = 1568 /* -4192736 */;
	P1.H = -64 /* -4192736 */;
	R2 = 7;
	W[P1] = R2.L;
.LN376:
// line 3815
	P1 = 1576 /* -4192728 */;
	P1.H = -64 /* -4192728 */;
	R2 = -1;
	[P1] = R2;
.LN377:
// line 3816
	R2 = 0;
	P1 = 1580 /* -4192724 */;
	P1.H = -64 /* -4192724 */;
	[P1] = R2;
.LN378:
// line 3818
	P1 = 1600 /* -4192704 */;
	P1.H = -64 /* -4192704 */;
	W[P1] = R1.L;
	P1.L = _TIME_PPI_END;
	P1.H = _TIME_PPI_END;
.LN379:
// line 3820
	[P1] = R2;

.P211L3:
.LN380:
// line 3822
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._Timer_INT2.end:
._Timer_INT2.end:
	.global _Timer_INT2;
	.type _Timer_INT2,STT_FUNC;

	.align 2;
_tst_SPI_BUF:
.LN_tst_SPI_BUF:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  No scratch registers used.
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":3799
	LINK 0;
.LN381:
// line 3801
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._tst_SPI_BUF.end:
._tst_SPI_BUF.end:
	.global _tst_SPI_BUF;
	.type _tst_SPI_BUF,STT_FUNC;

	.align 2;
_MENU:
.LN_MENU:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  No scratch registers used.
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2847
	LINK 0;
.LN382:
// line 2874
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._MENU.end:
._MENU.end:
	.global _MENU;
	.type _MENU,STT_FUNC;

	.align 2;
_FT_control:
.LN_FT_control:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 28 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R4-R7,FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2492
	LINK 4;
	[--SP] = (R7:4);
	P2.L = _Mem_K615+1;
	P2.H = _Mem_K615+1;
.LN383:
// line 2494
	R0 = B[P2++] (Z);
.LN384:
// line 2497
	R3 = B[P2++] (Z);
.LN385:
// line 2494
	R1 = R0 >>> 7;
.LN386:
// line 2508
	R6 = B[P2] (Z);
.LN387:
// line 2500
	R4 = R3 >>> 1;
.LN388:
// line 2510
	CC = BITTST(R6, 5);
	R2 = CC;
.LN389:
// line 2511
	CC = BITTST(R6, 6);
	R7 = CC;
	[SP + 32] = R7;
	P0.L = _NORM_PIT_2FT;
	P0.H = _NORM_PIT_2FT;
.LN390:
// line 2495
	R0 >>>= 6;
	R7 = 1;
	P1 = P0;
	R0 = R0 & R7;
.LN391:
// line 2494
	B[P0++] = R1;
.LN392:
// line 2510
	[SP + 36] = R2;
.LN393:
// line 2515
	R1 <<= 1;
.LN394:
// line 2497
	R2 = R3 & R7;
.LN395:
// line 2498
	R5 = B[P2 + 2] (X);
.LN396:
// line 2495
	B[P0++] = R0;
.LN397:
// line 2515
	R1 = R0 | R1;
.LN398:
// line 2498
	R0 = R5 & R7;
.LN399:
// line 2497
	B[P0++] = R2;
.LN400:
// line 2505
	R5 = R3 >>> 5;
.LN401:
// line 2515
	R2 <<= 2;
.LN402:
// line 2498
	B[P0++] = R0;
.LN403:
// line 2515
	R1 = R1 | R2;
	R0 <<= 3;
	R1 = R1 | R0;
.LN404:
// line 2500
	R4 = R4 & R7;
.LN405:
// line 2515
	[SP + 28] = R1;
.LN406:
// line 2503
	R2 = R3 >>> 4;
.LN407:
// line 2513
	CC = BITTST(R6, 2);
.LN408:
// line 2500
	[SP + 16] = R4;
.LN409:
// line 2502
	R0 = R3 >>> 3;
.LN410:
// line 2500
	B[P0++] = R4;
.LN411:
// line 2506
	R1 = R3 >>> 6;
.LN412:
// line 2508
	R6 >>= 1;
.LN413:
// line 2501
	R4 = R3 >>> 2;
.LN414:
// line 2505
	R5 = R5 & R7;
.LN415:
// line 2503
	R2 = R2 & R7;
.LN416:
// line 2502
	R0 = R0 & R7;
.LN417:
// line 2506
	R1 = R1 & R7;
.LN418:
// line 2508
	R6 = R6 & R7;
.LN419:
// line 2501
	R7 = R4 & R7;
	B[P0++] = R7;
.LN420:
// line 2502
	B[P0++] = R0;
.LN421:
// line 2503
	B[P0++] = R2;
.LN422:
// line 2505
	B[P0++] = R5;
.LN423:
// line 2520
	R7 <<= 1;
	R4 = [SP + 16];
.LN424:
// line 2506
	B[P0++] = R1;
.LN425:
// line 2507
	R3 >>>= 7;
.LN426:
// line 2520
	R7 = R4 | R7;
	R0 <<= 2;
.LN427:
// line 2507
	B[P0++] = R3;
.LN428:
// line 2520
	R0 = R7 | R0;
	R2 <<= 3;
.LN429:
// line 2508
	B[P0++] = R6;
.LN430:
// line 2510
	R4 = [SP + 36];
.LN431:
// line 2520
	R0 = R0 | R2;
	R5 <<= 4;
.LN432:
// line 2510
	B[P0++] = R4;
.LN433:
// line 2520
	R0 = R0 | R5;
	R1 <<= 5;
.LN434:
// line 2511
	R4 = [SP + 32];
.LN435:
// line 2520
	R0 = R0 | R1;
	R3 <<= 6;
.LN436:
// line 2511
	B[P0] = R4;
.LN437:
// line 2515
	R4 = [SP + 28];
.LN438:
// line 2520
	R0 = R0 | R3;
	R6 <<= 7;
.LN439:
// line 2531
	R2 = B[P0 + -939] (Z);
.LN440:
// line 2515
	R1 = R4.b (Z);
.LN441:
// line 2520
	R0 = R0 | R6;
.LN442:
// line 2513
	R7 = CC;
.LN443:
// line 2531
	CC = R1 == R2;
.LN444:
// line 2515
	B[P0 + -940] = R4;
.LN445:
// line 2520
	B[P0 + -935] = R0;
.LN446:
// line 2513
	B[P0 + -509] = R7;
.LN447:
// line 2531
	if CC jump .P214L2 ;

.P214L1:
.LN448:
	R0 = B[P0 + -940] (X);
	B[P0 + -939] = R0;
.LN449:
	R0 = 0;
	W[P1 + -924] = R0;
	jump.s .P214L3;

.P214L2:
.LN450:
	R0 = [P1 + -924];
	R0 += 1;
	W[P1 + -924] = R0;

.P214L3:
.LN451:
// line 2532
	R0 = W[P1 + -924] (Z);
	R1 = 10;
	CC = R1 < R0;
	if !CC jump .P214L6 ;

.P214L4:
.LN452:
	R0 = B[P0 + -939] (X);
	B[P0 + -938] = R0;

.P214L6:
.LN453:
// line 2534
	R0 = B[P0 + -935] (Z);
	R2 = B[P0 + -934] (Z);
	CC = R0 == R2;
	if CC jump .P214L8 ;

.P214L7:
.LN454:
	R0 = B[P0 + -935] (X);
	B[P0 + -934] = R0;
.LN455:
	R0 = 0;
	W[P1 + -918] = R0;
	jump.s .P214L9;

.P214L8:
.LN456:
	R0 = W[P1 + -918] (X);
	R0 += 1;
	W[P1 + -918] = R0;

.P214L9:
.LN457:
// line 2535
	R0 = W[P1 + -918] (Z);
	CC = R1 < R0;
	if !CC jump .P214L12 ;

.P214L10:
.LN458:
	R0 = B[P0 + -934] (X);
	B[P0 + -933] = R0;

.P214L12:
.LN459:
// line 2540
	(R7:4) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._FT_control.end:
._FT_control.end:
	.global _FT_control;
	.type _FT_control,STT_FUNC;

	.align 2;
_BUF_clear:
.LN_BUF_clear:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0-R1,P0-P2,ASTAT0-ASTAT1,CC,LC0-LC1,LT0-LT1,LB0-LB1}
//  Call preserved registers used: {P3-P5,FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2407
	LINK 0;
	[--SP] = (P5:3);
	P0.L = _Pkt;
	P0.H = _Pkt;
.LN460:
// line 2414
	R1 = 0;
	R0 = 120;
	P5 = 120;
	P4 = 32;
	P3 = 4;

.P215L2:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 2412 col 3
//-------------------------------------------------------------------
//   Trip Count  = 120
//-------------------------------------------------------------------
	[P0 + 112] = R1;
.LN461:
// line 2415
	[P0 + 104] = R1;
.LN462:
// line 2416
	[P0 + 108] = R1;
.LN463:
// line 2417
	B[P0 + 116] = R1;
	P1 = P0;
	LOOP .P215L5L LC1 = P3;

.P215L5:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 2419 col 8
//-------------------------------------------------------------------
//   Trip Count  = 4
//-------------------------------------------------------------------
	LOOP_BEGIN .P215L5L;
	P2 = P1;
	LOOP .P215L8L LC0 = P4;

.P215L8:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 2420 col 9
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in estimated 1 cycle.
//-------------------------------------------------------------------
//   Trip Count  = 32
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   1 out of    1 (100.0%)
//     Store               used   1 out of    1 (100.0%)
//     16-bit Instruction  used   1 out of    2 ( 50.0%)
//-------------------------------------------------------------------
//  This loop was not modulo scheduled because it was optimized for space.
//-------------------------------------------------------------------
	LOOP_BEGIN .P215L8L;
.LN464:
// line 2421
	B[P2++] = R1;
.LN465:
// line 2420
	LOOP_END .P215L8L;
//-------------------------------------------------------------------
//   End Loop L8
//-------------------------------------------------------------------

.P215L19:
//-------------------------------------------------------------------
//   Part of Loop 5, depth 2
//-------------------------------------------------------------------
.LN466:
// line 2421
	P1 += 26;
.LN467:
// line 2419
	LOOP_END .P215L5L;
//-------------------------------------------------------------------
//   End Loop L5
//-------------------------------------------------------------------

.P215L20:
//-------------------------------------------------------------------
//   Part of Loop 2, depth 1
//-------------------------------------------------------------------
	R0 += -1;
	CC = R0 == 0;
	P0 = P0 + P5;
	if !CC jump .P215L2 (bp);
//-------------------------------------------------------------------
//   End Loop L2
//-------------------------------------------------------------------

.P215L21:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN468:
// line 2423
	(P5:3) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._BUF_clear.end:
._BUF_clear.end:
	.global _BUF_clear;
	.type _BUF_clear,STT_FUNC;

	.align 2;
_spi_cs:
.LN_spi_cs:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  Scratch registers used: {R0,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
.LN469:
// line "..\BFcom\main.c":1973
	CC = R0 == 0;
.LN470:
// line 1971
	LINK 0;
.LN471:
// line 1973
	if CC jump .P216L2 ;

.P216L5:
	CC = R0 == 1;
	if !CC jump .P216L1 ;

.P216L3:
.LN472:
// line 1976
	NOP;                                    // Inserted 2 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	P1 = 1792 /* -4192512 */;
	P1.H = -64 /* -4192512 */;
	R0 = W[P1] (X);
	BITSET(R0, 3);
	W[P1] = R0.L;

.P216L1:
.LN473:
// line 1982
	UNLINK;
	// -- 4 stalls --
	RTS;

.P216L2:
.LN474:
// line 1975
	P1 = 1792 /* -4192512 */;
	P1.H = -64 /* -4192512 */;
	R0 = W[P1] (X);
	BITCLR(R0, 3);
	W[P1] = R0.L;
	jump.s .P216L1;
.LN._spi_cs.end:
._spi_cs.end:
	.global _spi_cs;
	.type _spi_cs,STT_FUNC;

	.align 2;
_spi_cs_SPI:
.LN_spi_cs_SPI:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  Scratch registers used: {R0,P0-P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
.LN475:
// line "..\BFcom\main.c":1953
	R0 += -1;
	CC = R0 < 7 (IU);
.LN476:
// line 1951
	LINK 0;
.LN477:
// line 1953
	if !CC jump .P218L1 ;

.P218L10:
	P1 = R0;
	P0.L = .SWITCH.1;
	P0.H = .SWITCH.1;
	// -- 3 stalls --
	P1 = P0 + (P1<<2);
	P1 = [P1];
	// -- 3 stalls --
	JUMP (P1);

.P218L2:
.LN478:
// line 1955
	P1 = 1284 /* -4193020 */;
	P1.H = -64 /* -4193020 */;
	R0 = 2;
	W[P1] = R0.L;

.P218L1:
.LN479:
// line 1966
	UNLINK;
	// -- 4 stalls --
	RTS;

.P218L3:
.LN480:
// line 1956
	P1 = 1284 /* -4193020 */;
	P1.H = -64 /* -4193020 */;
	R0 = 4;
	W[P1] = R0.L;
	jump.s .P218L1;

.P218L4:
.LN481:
// line 1957
	P1 = 1284 /* -4193020 */;
	P1.H = -64 /* -4193020 */;
	R0 = 8;
	W[P1] = R0.L;
	jump.s .P218L1;

.P218L5:
.LN482:
// line 1958
	P1 = 1284 /* -4193020 */;
	P1.H = -64 /* -4193020 */;
	R0 = 16;
	W[P1] = R0.L;
	jump.s .P218L1;

.P218L6:
.LN483:
// line 1960
	P1 = 1284 /* -4193020 */;
	P1.H = -64 /* -4193020 */;
	R0 = 32;
	W[P1] = R0.L;
	jump.s .P218L1;

.P218L7:
	R0 = 64;
.LN484:
// line 1961
	P1 = 1284 /* -4193020 */;
	P1.H = -64 /* -4193020 */;
	W[P1] = R0.L;
	jump.s .P218L1;

.P218L8:
	R0 = 128;
.LN485:
// line 1962
	P1 = 1284 /* -4193020 */;
	P1.H = -64 /* -4193020 */;
	W[P1] = R0.L;
	jump.s .P218L1;
.LN._spi_cs_SPI.end:
._spi_cs_SPI.end:
	.global _spi_cs_SPI;
	.type _spi_cs_SPI,STT_FUNC;

	.align 2;
_SPIRxReady:
.LN_SPIRxReady:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  Scratch registers used: {R0-R1,P1,ASTAT0-ASTAT1}
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":1912
	LINK 0;
.LN486:
// line 1913
	P1 = 1288 /* -4193016 */;
	P1.H = -64 /* -4193016 */;
	R0 = W[P1] (X);
	UNLINK;
	R1 = 32;
	R0 = R0 & R1;
	R0 = R0.L (Z);
	// -- stall --
	RTS;
.LN._SPIRxReady.end:
._SPIRxReady.end:
	.global _SPIRxReady;
	.type _SPIRxReady,STT_FUNC;

	.align 2;
_SPITxFull:
.LN_SPITxFull:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  Scratch registers used: {R0-R1,P1,ASTAT0-ASTAT1}
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":1908
	LINK 0;
.LN487:
// line 1909
	P1 = 1288 /* -4193016 */;
	P1.H = -64 /* -4193016 */;
	R0 = W[P1] (X);
	UNLINK;
	R1 = 8;
	R0 = R0 & R1;
	R0 = R0.L (Z);
	// -- stall --
	RTS;
.LN._SPITxFull.end:
._SPITxFull.end:
	.global _SPITxFull;
	.type _SPITxFull,STT_FUNC;

	.align 2;
_SPITxInProgress:
.LN_SPITxInProgress:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  Scratch registers used: {R0-R1,P1,ASTAT0-ASTAT1}
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":1904
	LINK 0;
.LN488:
// line 1905
	P1 = 1288 /* -4193016 */;
	P1.H = -64 /* -4193016 */;
	R0 = W[P1] (X);
	UNLINK;
	R1 = 1;
	R0 = R0 & R1;
	R0 = R0.L (Z);
	// -- stall --
	RTS;
.LN._SPITxInProgress.end:
._SPITxInProgress.end:
	.global _SPITxInProgress;
	.type _SPITxInProgress,STT_FUNC;

	.align 2;
_ssync:
.LN_ssync:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  No scratch registers used.
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\builtins.h":2668
	LINK 0;
.LN489:
// line 2669
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN490:
// line 2670
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._ssync.end:
._ssync.end:
	.type _ssync,STT_FUNC;

	.align 2;
_SPIPut:
.LN_SPIPut:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  Scratch registers used: {R1,P1,CC}
//  Call preserved registers used: {FP,SP,RETS}
//Inlined in _SPIPut:
//  ..\BFcom\main.c:1919:8'_ssync
//-------------------------------------------------------------------
// line "..\BFcom\main.c":1917
	LINK 0;
.LN491:
// line 1918
	P1 = 1288 /* -4193016 */;
	P1.H = -64 /* -4193016 */;

.P223L1:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 1918 col 3
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in an estimated 8 
//   cycles (includes 4 stalls).
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     16-bit Instruction  used   8 out of   16 ( 50.0%)
//     Group 1             used   4 out of    8 ( 50.0%)
//     32-bit Instruction  used   3 out of    8 ( 37.5%)
//-------------------------------------------------------------------
	// -- 4 stalls --
	NOP;                                    // Inserted to fix anomaly w_05000245_with_boundaries. 
	R1 = W[P1] (Z);                         // Use of volatile in loops precludes optimizations. 
	CC = BITTST(R1, 0);
	if !CC jump .P223L1 (bp);
//-------------------------------------------------------------------
//   End Loop L1
//-------------------------------------------------------------------

.P223L4:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN492:
// line 1919
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN493:
// line 1920
	P1 = 1292 /* -4193012 */;
	P1.H = -64 /* -4193012 */;
	W[P1] = R0.L;
.LN494:
// line 1921
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._SPIPut.end:
._SPIPut.end:
	.global _SPIPut;
	.type _SPIPut,STT_FUNC;

	.align 2;
_SPIGet:
.LN_SPIGet:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  Scratch registers used: {R0,P1,CC}
//  Call preserved registers used: {FP,SP,RETS}
//Inlined in _SPIGet:
//  ..\BFcom\main.c:1926:7'_ssync
//-------------------------------------------------------------------
// line "..\BFcom\main.c":1924
	LINK 0;
.LN495:
// line 1925
	P1 = 1288 /* -4193016 */;
	P1.H = -64 /* -4193016 */;

.P224L1:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 1925 col 2
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in an estimated 8 
//   cycles (includes 4 stalls).
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     16-bit Instruction  used   8 out of   16 ( 50.0%)
//     Group 1             used   4 out of    8 ( 50.0%)
//     32-bit Instruction  used   3 out of    8 ( 37.5%)
//-------------------------------------------------------------------
	// -- 4 stalls --
	NOP;                                    // Inserted to fix anomaly w_05000245_with_boundaries. 
	R0 = W[P1] (Z);                         // Use of volatile in loops precludes optimizations. 
	CC = BITTST(R0, 5);
	if !CC jump .P224L1 (bp);
//-------------------------------------------------------------------
//   End Loop L1
//-------------------------------------------------------------------

.P224L4:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN496:
// line 1926
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN497:
// line 1927
	P1 = 1296 /* -4193008 */;
	P1.H = -64 /* -4193008 */;
	// -- stall --
	R0 = W[P1] (Z);
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._SPIGet.end:
._SPIGet.end:
	.global _SPIGet;
	.type _SPIGet,STT_FUNC;

	.align 2;
_SPI:
.LN_SPI:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  Scratch registers used: {R0,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {FP,SP,RETS}
//Inlined in _SPI:
//  ..\BFcom\main.c:1942:6'_ssync
//-------------------------------------------------------------------
// line "..\BFcom\main.c":1940
	LINK 0;
.LN498:
// line 1941
	P1 = 1292 /* -4193012 */;
	P1.H = -64 /* -4193012 */;
	W[P1] = R0.L;
.LN499:
// line 1942
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN500:
// line 1944
	P1 = 1288 /* -4193016 */;
	P1.H = -64 /* -4193016 */;

.P225L1:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 1944 col 1
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in an estimated 8 
//   cycles (includes 4 stalls).
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     16-bit Instruction  used   8 out of   16 ( 50.0%)
//     Group 1             used   4 out of    8 ( 50.0%)
//     32-bit Instruction  used   3 out of    8 ( 37.5%)
//-------------------------------------------------------------------
	// -- 4 stalls --
	NOP;                                    // Inserted to fix anomaly w_05000245_with_boundaries. 
	R0 = W[P1] (Z);                         // Use of volatile in loops precludes optimizations. 
	CC = BITTST(R0, 3);
	if CC jump .P225L1 (bp);
//-------------------------------------------------------------------
//   End Loop L1
//-------------------------------------------------------------------

.P225L11:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------

.P225L4:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 1945 col 1
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in an estimated 8 
//   cycles (includes 4 stalls).
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     16-bit Instruction  used   8 out of   16 ( 50.0%)
//     Group 1             used   4 out of    8 ( 50.0%)
//     32-bit Instruction  used   3 out of    8 ( 37.5%)
//-------------------------------------------------------------------
	// -- 4 stalls --
.LN501:
// line 1945
	NOP;                                    // Inserted to fix anomaly w_05000245_with_boundaries. 
	R0 = W[P1] (Z);                         // Use of volatile in loops precludes optimizations. 
	CC = BITTST(R0, 5);
	if !CC jump .P225L4 (bp);
//-------------------------------------------------------------------
//   End Loop L4
//-------------------------------------------------------------------

.P225L5:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN502:
// line 1946
	P1 = 1296 /* -4193008 */;
	P1.H = -64 /* -4193008 */;
	R0 = W[P1] (X);
	UNLINK;
	R0 = R0.b (Z);
	// -- 3 stalls --
	RTS;
.LN._SPI.end:
._SPI.end:
	.global _SPI;
	.type _SPI,STT_FUNC;

	.align 2;
_spi_transf:
.LN_spi_transf:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0,P0-P1,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0,P1,ASTAT0-ASTAT1,CC,RETS}
//-------------------------------------------------------------------
.LN503:
// line "..\BFcom\main.c":1992
	CC = R1 == 0;
.LN504:
// line 1987
	LINK 12;
	P0 = R0;
.LN505:
// line 1992
	if CC jump .P226L3 ;
.LN506:
// line 1995
	NOP;                                    // Inserted to fix anomaly w_05000245_with_boundaries. 

.P226L6:
.LN507:
// line 1987
	P1 = R1;
	// -- 4 stalls --
	LOOP .P226L2L LC0 = P1;

.P226L2:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 1992 col 7
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in an estimated 3 
//   cycles (excludes the cost of function calls).
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   3 out of    3 (100.0%)
//     16-bit Instruction  used   5 out of    6 ( 83.3%)
//     32-bit Instruction  used   2 out of    3 ( 66.7%)
//-------------------------------------------------------------------
	LOOP_BEGIN .P226L2L;
.LN508:
// line 1995
	R0 = B[P0++] (Z);
.LN509:
	CALL.X (_SPI);
	NOP;
.LN510:
// line 1992
	LOOP_END .P226L2L;
//-------------------------------------------------------------------
//   End Loop L2
//-------------------------------------------------------------------

.P226L7:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------

.P226L3:
.LN511:
// line 1998
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._spi_transf.end:
._spi_transf.end:
	.global _spi_transf;
	.type _spi_transf,STT_FUNC;

	.align 2;
_SPORT0_enable:
.LN_SPORT0_enable:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  Scratch registers used: {R0,P1,ASTAT0-ASTAT1}
//  Call preserved registers used: {FP,SP,RETS}
//Inlined in _SPORT0_enable:
//  ..\BFcom\main.c:2006:9'_ssync
//  ..\BFcom\main.c:2004:9'_ssync
//  ..\BFcom\main.c:2002:9'_ssync
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2001
	LINK 0;
.LN512:
// line 2002
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN513:
// line 2003
	P1 = 2048 /* -4192256 */;
	P1.H = -64 /* -4192256 */;
	R0 = W[P1] (X);
	BITSET(R0, 0);
	W[P1] = R0.L;
.LN514:
// line 2004
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN515:
// line 2005
	P1 = 2080 /* -4192224 */;
	P1.H = -64 /* -4192224 */;
	R0 = W[P1] (X);
	BITSET(R0, 0);
	W[P1] = R0.L;
.LN516:
// line 2006
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN517:
// line 2007
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._SPORT0_enable.end:
._SPORT0_enable.end:
	.global _SPORT0_enable;
	.type _SPORT0_enable,STT_FUNC;

	.align 2;
_SPORT0_disable:
.LN_SPORT0_disable:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  Scratch registers used: {R0,P1,ASTAT0-ASTAT1}
//  Call preserved registers used: {FP,SP,RETS}
//Inlined in _SPORT0_disable:
//  ..\BFcom\main.c:2015:9'_ssync
//  ..\BFcom\main.c:2013:9'_ssync
//  ..\BFcom\main.c:2011:9'_ssync
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2010
	LINK 0;
.LN518:
// line 2011
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN519:
// line 2012
	P1 = 2048 /* -4192256 */;
	P1.H = -64 /* -4192256 */;
	R0 = W[P1] (X);
	BITCLR(R0, 0);
	W[P1] = R0.L;
.LN520:
// line 2013
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN521:
// line 2014
	P1 = 2080 /* -4192224 */;
	P1.H = -64 /* -4192224 */;
	R0 = W[P1] (X);
	BITCLR(R0, 0);
	W[P1] = R0.L;
.LN522:
// line 2015
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN523:
// line 2016
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._SPORT0_disable.end:
._SPORT0_disable.end:
	.global _SPORT0_disable;
	.type _SPORT0_disable,STT_FUNC;

	.align 2;
_SPORT1_enable:
.LN_SPORT1_enable:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  Scratch registers used: {R0,P1,ASTAT0-ASTAT1}
//  Call preserved registers used: {FP,SP,RETS}
//Inlined in _SPORT1_enable:
//  ..\BFcom\main.c:2025:9'_ssync
//  ..\BFcom\main.c:2023:9'_ssync
//  ..\BFcom\main.c:2021:9'_ssync
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2019
	LINK 0;
.LN524:
// line 2020
	P1 = 268 /* -4194036 */;
	P1.H = -64 /* -4194036 */;
	R0 = [P1];
	BITSET(R0, 12);
	[P1] = R0;
.LN525:
// line 2021
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN526:
// line 2022
	P1 = 2304 /* -4192000 */;
	P1.H = -64 /* -4192000 */;
	R0 = W[P1] (X);
	BITSET(R0, 0);
	W[P1] = R0.L;
.LN527:
// line 2023
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN528:
// line 2024
	P1 = 2336 /* -4191968 */;
	P1.H = -64 /* -4191968 */;
	R0 = W[P1] (X);
	BITSET(R0, 0);
	W[P1] = R0.L;
.LN529:
// line 2025
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN530:
// line 2026
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._SPORT1_enable.end:
._SPORT1_enable.end:
	.global _SPORT1_enable;
	.type _SPORT1_enable,STT_FUNC;

	.align 2;
_SPORT1_disable:
.LN_SPORT1_disable:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  Scratch registers used: {R0,P1,ASTAT0-ASTAT1}
//  Call preserved registers used: {FP,SP,RETS}
//Inlined in _SPORT1_disable:
//  ..\BFcom\main.c:2034:9'_ssync
//  ..\BFcom\main.c:2032:9'_ssync
//  ..\BFcom\main.c:2030:9'_ssync
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2029
	LINK 0;
.LN531:
// line 2030
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN532:
// line 2031
	P1 = 2304 /* -4192000 */;
	P1.H = -64 /* -4192000 */;
	R0 = W[P1] (X);
	BITCLR(R0, 0);
	W[P1] = R0.L;
.LN533:
// line 2032
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN534:
// line 2033
	P1 = 2336 /* -4191968 */;
	P1.H = -64 /* -4191968 */;
	R0 = W[P1] (X);
	BITCLR(R0, 0);
	W[P1] = R0.L;
.LN535:
// line 2034
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN536:
// line 2035
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._SPORT1_disable.end:
._SPORT1_disable.end:
	.global _SPORT1_disable;
	.type _SPORT1_disable,STT_FUNC;

	.align 2;
_SPORT0_write_read:
.LN_SPORT0_write_read:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0-R1,P0-P1,CC}
//  Call preserved registers used: {FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0,P1,ASTAT0-ASTAT1,RETS}
//Inlined in _SPORT0_write_read:
//  ..\BFcom\main.c:2056:11'_ssync
//  ..\BFcom\main.c:2054:9'_sti
//  ..\BFcom\main.c:2052:22'_cli
//  ..\BFcom\main.c:2048:9'_ssync
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2039
	LINK 12;
	R1 = R0;
.LN537:
// line 2043
	CALL.X (_SPORT0_enable);
.LN538:
// line 2045
	P1 = 2096 /* -4192208 */;
	P1.H = -64 /* -4192208 */;

.P231L1:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 2045 col 3
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in an estimated 8 
//   cycles (includes 4 stalls).
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     16-bit Instruction  used   8 out of   16 ( 50.0%)
//     Group 1             used   4 out of    8 ( 50.0%)
//     32-bit Instruction  used   3 out of    8 ( 37.5%)
//-------------------------------------------------------------------
	// -- 4 stalls --
	NOP;                                    // Inserted to fix anomaly w_05000245_with_boundaries. 
	R0 = W[P1] (Z);                         // Use of volatile in loops precludes optimizations. 
	CC = BITTST(R0, 6);
	if !CC jump .P231L1 (bp);
//-------------------------------------------------------------------
//   End Loop L1
//-------------------------------------------------------------------

.P231L7:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN539:
// line 2046
	P0 = 2064 /* -4192240 */;
	P0.H = -64 /* -4192240 */;
	[P0] = R1;
.LN540:
// line 2048
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;

.P231L4:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 2050 col 3
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in an estimated 8 
//   cycles (includes 4 stalls).
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     16-bit Instruction  used   8 out of   16 ( 50.0%)
//     Group 1             used   4 out of    8 ( 50.0%)
//     32-bit Instruction  used   3 out of    8 ( 37.5%)
//-------------------------------------------------------------------
	// -- 4 stalls --
.LN541:
// line 2050
	NOP;                                    // Inserted to fix anomaly w_05000245_with_boundaries. 
	R0 = W[P1] (Z);                         // Use of volatile in loops precludes optimizations. 
	CC = BITTST(R0, 0);
	if !CC jump .P231L4 (bp);
//-------------------------------------------------------------------
//   End Loop L4
//-------------------------------------------------------------------

.P231L9:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN542:
// line 2052
	.MESSAGE/SUPPRESS 5515;
	CLI R0;
.LN543:
// line 2053
	P1 = 2072 /* -4192232 */;
	P1.H = -64 /* -4192232 */;
	// -- stall --
	R1 = [P1];
	[SP + 20] = R1;
.LN544:
// line 2054
	.MESSAGE/RESTORE 5515;
	STI R0;
.LN545:
// line 2056
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN546:
// line 2058
	CALL.X (_SPORT0_disable);
.LN547:
// line 2060
	R0 = [SP + 20];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._SPORT0_write_read.end:
._SPORT0_write_read.end:
	.global _SPORT0_write_read;
	.type _SPORT0_write_read,STT_FUNC;

	.align 2;
_SPORT1_write:
.LN_SPORT1_write:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0-R1,P1,ASTAT0-ASTAT1}
//  Call preserved registers used: {FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0,P1,ASTAT0-ASTAT1,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2066
	LINK 12;
	R1 = R0 << 2;
.LN548:
// line 2073
	CALL.X (_SPORT1_enable);
.LN549:
// line 2072
	R0 = 1025;
	R0 = R1 | R0;
.LN550:
// line 2077
	P1 = 2320 /* -4191984 */;
	P1.H = -64 /* -4191984 */;
	W[P1] = R0.L;
.LN551:
// line 2079
	R0 = [SP + 24];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._SPORT1_write.end:
._SPORT1_write.end:
	.global _SPORT1_write;
	.type _SPORT1_write,STT_FUNC;

	.align 2;
_put_char1:
.LN_put_char1:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 16 
//  Scratch registers used: {R0-R1,P0-P2,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {P4-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R1,P1,ASTAT0-ASTAT1,RETS}
//Inlined in _put_char1:
//  ..\BFcom\main.c:2099:15'_ssync
//  ..\BFcom\main.c:2097:9'_ssync
//  ..\BFcom\main.c:2090:10'_ssync
//  ..\BFcom\main.c:2088:10'_ssync
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2085
	LINK 0;
	[--SP] = (P5:4);
	SP += -12;
.LN552:
// line 2087
	P0 = 268 /* -4194036 */;
	P0.H = -64 /* -4194036 */;
	R1 = [P0];
	BITCLR(R1, 12);
	[P0] = R1;
.LN553:
// line 2089
	R1 = 8;
	CC = R0 == R1;
.LN554:
// line 2088
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN555:
// line 2089
	P1 = 1792 /* -4192512 */;
	P1.H = -64 /* -4192512 */;
.LN556:
	if !CC jump .P233L2 ;

.P233L1:
.LN557:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R1 = W[P1] (X);
	BITSET(R1, 6);
	W[P1] = R1.L;
	jump.s .P233L13;

.P233L2:
.LN558:
	R1 = W[P1] (X);
	BITCLR(R1, 6);
	W[P1] = R1.L;

.P233L13:
.LN559:
// line 2090
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
	P2.L = _tx_counter1;
	P2.H = _tx_counter1;
.LN560:
// line 2092
	R1 = [P2];
	CC = R1 == 0;
	if !CC jump .P233L4 ;

.P233L7:
	NOP;                                    // Inserted 2 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	P1 = 2352 /* -4191952 */;
	P1.H = -64 /* -4191952 */;
	R1 = W[P1] (Z);
	CC = BITTST(R1, 3);
	if !CC jump .P233L5 ;
.LN561:
// line 2094
	NOP;                                    // Inserted 2 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;

.P233L4:
	P4.L = _tx_wr_index1;
	P4.H = _tx_wr_index1;
	P1 = [P4];
	P5.L = _tx_buffer1;
	P5.H = _tx_buffer1;
	// -- 2 stalls --
	P5 = P5 + P1;
	B[P5] = R0;
	P1 += 1;
	[P4] = P1;
.LN562:
// line 2095
	R0 = [P4];
	BITTGL(R0, 6);
	CC = R0 == 0;
	if !CC jump .P233L15 ;

.P233L8:
.LN563:
	[P4] = R0;

.P233L15:
.LN564:
// line 2096
	NOP;                                    // Inserted 2 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	R0 = [P2];
	R0 += 1;
	[P2] = R0;
.LN565:
// line 2097
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN566:
// line 2098
	R0 = [P0];
	BITSET(R0, 12);
	[P0] = R0;
.LN567:
// line 2099
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;

.P233L6:
.LN568:
// line 2106
	SP += 12;
	(P5:4) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;

.P233L5:
.LN569:
// line 2085
	R0 = R0.L (Z);
.LN570:
// line 2103
	CALL.X (_SPORT1_write);
	jump.s .P233L6;
.LN._put_char1.end:
._put_char1.end:
	.global _put_char1;
	.type _put_char1,STT_FUNC;

	.align 2;
_Zput_str1:
.LN_Zput_str1:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 24 
//  Scratch registers used: {R0,P1,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R1,P0-P2,ASTAT0-ASTAT1,CC,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2109
	LINK 16;
.LN571:
// line 2111
	CC = R1 <= 0;
.LN572:
// line 2109
	[SP + 12] = P5;
	P5 = R0;
.LN573:
// line 2111
	if CC jump .P234L3 ;
.LN574:
	NOP;                                    // Inserted to fix anomaly w_05000245_with_boundaries. 

.P234L6:
.LN575:
// line 2109
	P1 = R1;
	// -- 4 stalls --
	LOOP .P234L2L LC0 = P1;

.P234L2:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 2111 col 6
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in an estimated 3 
//   cycles (excludes the cost of function calls).
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   3 out of    3 (100.0%)
//     16-bit Instruction  used   5 out of    6 ( 83.3%)
//     32-bit Instruction  used   2 out of    3 ( 66.7%)
//-------------------------------------------------------------------
	LOOP_BEGIN .P234L2L;
.LN576:
// line 2111
	R0 = B[P5++] (X);
.LN577:
	CALL.X (_put_char1);
	NOP;
.LN578:
	LOOP_END .P234L2L;
//-------------------------------------------------------------------
//   End Loop L2
//-------------------------------------------------------------------

.P234L7:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------

.P234L3:
.LN579:
// line 2112
	P5 = [SP + 12];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._Zput_str1.end:
._Zput_str1.end:
	.global _Zput_str1;
	.type _Zput_str1,STT_FUNC;

	.align 2;
_read_str1:
.LN_read_str1:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0,P1,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R1,P0-P2,ASTAT0-ASTAT1,CC,RETS}
//-------------------------------------------------------------------
.LN580:
// line "..\BFcom\main.c":2124
	CC = R0 <= 0;
.LN581:
// line 2122
	LINK 12;
.LN582:
// line 2124
	if CC jump .P235L3 ;

.P235L6:
.LN583:
// line 2122
	P1 = R0;
	// -- 4 stalls --
	LOOP .P235L2L LC0 = P1;

.P235L2:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 2124 col 7
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in an estimated 3 
//   cycles (excludes the cost of function calls).
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     16-bit Instruction  used   6 out of    6 (100.0%)
//     32-bit Instruction  used   3 out of    3 (100.0%)
//     Group 1             used   3 out of    3 (100.0%)
//-------------------------------------------------------------------
	LOOP_BEGIN .P235L2L;
.LN584:
// line 2125
	R0 = 8;
	CALL.X (_put_char1);
	NOP;
.LN585:
// line 2124
	LOOP_END .P235L2L;
//-------------------------------------------------------------------
//   End Loop L2
//-------------------------------------------------------------------

.P235L7:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------

.P235L3:
.LN586:
// line 2126
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._read_str1.end:
._read_str1.end:
	.global _read_str1;
	.type _read_str1,STT_FUNC;

	.align 2;
_reverse:
.LN_reverse:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 24 
//  Scratch registers used: {R0-R1,P0-P2,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {R7,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2132
	LINK 16;
	[SP + 12] = R7;
	R7 = R0;
.LN587:
// line 2136
	CALL.X (_strlen);
	R1 = R0;
.LN588:
	R0 += -1;
	CC = R0 <= 0;
.LN589:
// line 2132
	P1 = R7;
.LN590:
// line 2136
	if CC jump .P236L3 ;

.P236L6:
	R1 += -2;
	R1 >>= 1;
	R1 += 1;
	P0 = R1;
	R0 = R7 + R0;
	P2 = R0;
	// -- 2 stalls --
	LOOP .P236L2L LC0 = P0;

.P236L2:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 2136 col 6
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in estimated 4 cycles.
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   4 out of    4 (100.0%)
//     16-bit Instruction  used   4 out of    8 ( 50.0%)
//     Store               used   2 out of    4 ( 50.0%)
//-------------------------------------------------------------------
//  This loop was not modulo scheduled because it was optimized for space.
//-------------------------------------------------------------------
	LOOP_BEGIN .P236L2L;
.LN591:
// line 2137
	R0 = B[P1] (X);
.LN592:
// line 2138
	R1 = B[P2] (X);
	B[P1++] = R1;
.LN593:
// line 2139
	B[P2--] = R0;
.LN594:
// line 2136
	LOOP_END .P236L2L;
//-------------------------------------------------------------------
//   End Loop L2
//-------------------------------------------------------------------

.P236L7:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------

.P236L3:
.LN595:
// line 2141
	R7 = [SP + 12];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._reverse.end:
._reverse.end:
	.global _reverse;
	.type _reverse,STT_FUNC;

	.align 2;
_itoa:
.LN_itoa:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0-R1,P0-P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R5-R7,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2145
	LINK 0;
	[--SP] = (R7:5);
	R7 = R0;
	R6 = R1;
	R0 = - R7;
	R0 = MAX(R0, R7);
	SP += -12;
	P0 = R6;
	R5 = 1;

.P238L4:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 2151 col 6
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in an estimated 12 
//   cycles (includes 4 stalls but excludes the cost of function calls).
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   8 out of   12 ( 66.7%)
//     16-bit Instruction  used  15 out of   24 ( 62.5%)
//     32-bit Instruction  used   7 out of   12 ( 58.3%)
//     Store               used   1 out of   12 (  8.3%)
//-------------------------------------------------------------------
	// -- 4 stalls --
.LN596:
// line 2152
	R1 = 10;
	CALL.X (___divrem_s32);                 // division is implemented as a library call. 
	R1 += 48;
.LN597:
// line 2153
	CC = R0 <= 0;
.LN598:
// line 2152
	B[P0++] = R1;
	R1 = R5;
	R5 += 1;
.LN599:
// line 2153
	if !CC jump .P238L4 (bp);
//-------------------------------------------------------------------
//   End Loop L4
//-------------------------------------------------------------------

.P238L5:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN600:
// line 2154
	CC = R7 < 0;
	if !CC jump .P238L8 ;

.P238L6:
.LN601:
// line 2155
	R0 = R6 + R1;
	P1 = R0;
	R0 = 45;
	R1 += 1;
	// -- 2 stalls --
	B[P1] = R0;

.P238L8:
.LN602:
// line 2156
	R0 = R6 + R1;
	P1 = R0;
	R1 = 0;
.LN603:
// line 2157
	R0 = R6;
	// -- 2 stalls --
.LN604:
// line 2156
	B[P1] = R1;
.LN605:
// line 2157
	CALL.X (_reverse);
.LN606:
// line 2158
	SP += 12;
	(R7:5) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._itoa.end:
._itoa.end:
	.global _itoa;
	.type _itoa,STT_FUNC;

	.align 2;
_u_itoa:
.LN_u_itoa:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 24 
//  Scratch registers used: {R0-R3,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R5-R7,P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2162
	LINK 0;
	[--SP] = (R7:5, P5:5);
	R7 = R2;
	SP += -16;
	P5 = R7;
	R5 = 0;
	R6 = 0;

.P240L1:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 2166 col 6
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in an estimated 13 
//   cycles (includes 4 stalls but excludes the cost of function calls).
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   9 out of   13 ( 69.2%)
//     16-bit Instruction  used  17 out of   26 ( 65.4%)
//     32-bit Instruction  used   8 out of   13 ( 61.5%)
//     Store               used   1 out of   13 (  7.7%)
//-------------------------------------------------------------------
	// -- 4 stalls --
.LN607:
// line 2167
	R5 += 1;
	R2 = 10;
	R3 = 0;
	CALL.X (___divrem_u64);                 // division is implemented as a library call. 
.LN608:
// line 2168
	R3 = R0 | R1;
	CC = R3 == 0;
.LN609:
// line 2167
	R2 += 48;
	B[P5++] = R2;
.LN610:
// line 2168
	if !CC jump .P240L1 (bp);
//-------------------------------------------------------------------
//   End Loop L1
//-------------------------------------------------------------------

.P240L2:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN611:
// line 2170
	R0 = R7 + R5;
	P1 = R0;
.LN612:
// line 2171
	R0 = R7;
	// -- 3 stalls --
.LN613:
// line 2170
	B[P1] = R6;
.LN614:
// line 2171
	CALL.X (_reverse);
.LN615:
// line 2172
	SP += 16;
	(R7:5, P5:5) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._u_itoa.end:
._u_itoa.end:
	.global _u_itoa;
	.type _u_itoa,STT_FUNC;

	.align 2;
_Event_SPORT_RUN:
.LN_Event_SPORT_RUN:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0,R2}
//  Call preserved registers used: {FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R1,P0-P1,ASTAT0-ASTAT1,CC,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2426
	LINK 12;
	R2 = R0;
.LN616:
// line 2427
	CALL.X (_SPORT0_write_read);
.LN617:
// line 2428
	R0 = R2;
	CALL.X (_SPORT0_write_read);
.LN618:
// line 2429
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._Event_SPORT_RUN.end:
._Event_SPORT_RUN.end:
	.global _Event_SPORT_RUN;
	.type _Event_SPORT_RUN,STT_FUNC;

	.align 2;
_Time_control:
.LN_Time_control:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0}
//  Call preserved registers used: {FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R1,P1,ASTAT0-ASTAT1,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":3839
	LINK 12;
.LN619:
// line 3842
	R0 = 500;
	CALL.X (_Time_real);
.LN620:
// line 3843
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._Time_control.end:
._Time_control.end:
	.global _Time_control;
	.type _Time_control,STT_FUNC;

	.align 2;
_UART_control:
.LN_UART_control:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 32 
//  Scratch registers used: {R0-R1,R3,P0-P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R4-R7,P4-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4568
	LINK 0;
	[--SP] = (R7:4, P5:4);
	SP += -12;
	P1.L = _rx_counter0;
	P1.H = _rx_counter0;
.LN621:
// line 4573
	R0 = [P1];
	CC = R0 == 0;
	if CC jump .P243L3 ;

.P243L1:
.LN622:
// line 4575
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R1 = [P1];
	R0 = 200;
	CC = R1 < R0 (IU);
	if !CC jump .P243L6 ;

.P243L4:
.LN623:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R0 = [P1];

.P243L6:
.LN624:
// line 4579
	R4 = R0.L (Z);
	R5.L = _srt;
	R5.H = _srt;
	P4.L = _lenght;
	P4.H = _lenght;
	R3 = 0;
.LN625:
// line 4583
	R6 = 59;

.P243L7:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 4579 col 5
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in an estimated 16 
//   cycles (includes 4 stalls but excludes the cost of function calls).
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used  12 out of   16 ( 75.0%)
//     16-bit Instruction  used  22 out of   32 ( 68.8%)
//     32-bit Instruction  used  10 out of   16 ( 62.5%)
//     Store               used   2 out of   16 ( 12.5%)
//-------------------------------------------------------------------
//  Jumps out of this loop prevent efficient hardware loop generation.
//-------------------------------------------------------------------
	// -- 4 stalls --
.LN626:
// line 4579
	R7 = R3.L (Z);
	CC = R7 < R4;
.LN627:
	R3 += 1;
.LN628:
	if !CC jump .P243L13 ;

.P243L8:
.LN629:
// line 4581
	R0 = R5 + R7;
	P5 = R0;
.LN630:
	CALL.X (_getchar0);
.LN631:
// line 4582
	R7 += 1;
	[P4] = R7;
.LN632:
// line 4583
	CC = R0 == R6;
.LN633:
// line 4581
	B[P5] = R0;
.LN634:
// line 4583
	if !CC jump .P243L7 (bp);
//-------------------------------------------------------------------
//   End Loop L7
//-------------------------------------------------------------------

.P243L10:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------

.P243L13:
	P1 = R5;
.LN635:
// line 4585
	P0 = [P4];
.LN636:
// line 4586
	R0 = R5;
.LN637:
// line 4585
	R1 = 0;
	// -- 2 stalls --
.LN638:
	P1 = P1 + P0;
	B[P1] = R1;
.LN639:
// line 4586
	CALL.X (_IO);

.P243L3:
.LN640:
// line 4588
	SP += 12;
	(R7:4, P5:4) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._UART_control.end:
._UART_control.end:
	.global _UART_control;
	.type _UART_control,STT_FUNC;

	.align 2;
_UDP_test:
.LN_UDP_test:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0-R2,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4592
	LINK 12;
	P1.L = _UDP_TCP_flag;
	P1.H = _UDP_TCP_flag;
.LN641:
// line 4595
	R0 = B[P1] (Z);
	CC = R0 == 1;
	if !CC jump .P245L3 (bp);

.P245L1:
.LN642:
// line 4598
	R2 = 1;
	R1 = 3001;
	R0 = 0;
	CALL.X (_loopback_udp);

.P245L3:
.LN643:
// line 4610
	UNLINK;
	R0 = 1;
	// -- 3 stalls --
	RTS;
.LN._UDP_test.end:
._UDP_test.end:
	.global _UDP_test;
	.type _UDP_test,STT_FUNC;

	.align 2;
_sendT:
.LN_sendT:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0-R2}
//  Call preserved registers used: {FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R1,P0-P2,ASTAT0-ASTAT1,CC,LC0,LT0,LB0,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4643
	LINK 12;
	R2 = R0;
.LN644:
// line 4644
	CALL.X (_leng);
	R1 = R0;
.LN645:
	R0 = R2;
	CALL.X (_zputs);
.LN646:
// line 4645
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._sendT.end:
._sendT.end:
	.global _sendT;
	.type _sendT,STT_FUNC;

	.align 2;
_UART_DMA_TX:
.LN_UART_DMA_TX:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 24 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {R6-R7,P4-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//Inlined in _UART_DMA_TX:
//  ..\BFcom\main.c:4688:12'_ssync
//  ..\BFcom\main.c:4686:12'_ssync
//  ..\BFcom\main.c:4684:12'_ssync
//  ..\BFcom\main.c:4672:14'_ssync
//  ..\BFcom\main.c:4671:14'_ssync
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4651
	LINK 0;
	[--SP] = (R7:6, P5:4);
	SP += -12;
	P5.L = _flag_pachka_TXT;
	P5.H = _flag_pachka_TXT;
.LN647:
// line 4657
	R0 = B[P5] (Z);
	CC = R0 == 0;
	if !CC jump .P248L3 ;

.P248L4:
.LN648:
// line 4661
	NOP;                                    // Inserted 2 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	P4.L = _tx_counter0;
	P4.H = _tx_counter0;
	R0 = W[P4] (Z);
	CC = R0 == 0;
	R6 = 0;
	R3.L = _buf_DMA_uart;
	R3.H = _buf_DMA_uart;
	R2 = 0;
	R7 = 0;
	if CC jump .P248L5 ;

.P248L22:
.LN649:
// line 4664
	R7 = 1;

.P248L6:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 4661 col 1
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in an estimated 15 
//   cycles (includes 6 stalls but excludes the cost of function calls).
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   9 out of   15 ( 60.0%)
//     16-bit Instruction  used  17 out of   30 ( 56.7%)
//     32-bit Instruction  used   7 out of   15 ( 46.7%)
//     Store               used   1 out of   15 (  6.7%)
//-------------------------------------------------------------------
	// -- 4 stalls --
.LN650:
// line 4663
	R0 = R2.L (Z);
	R0 = R3 + R0;
	P2 = R0;
.LN651:
	CALL.X (_txchar0);
.LN652:
// line 4664
	R2 += 1;
	// -- 2 stalls --
.LN653:
// line 4663
	B[P2] = R0;
.LN654:
// line 4661
	R0 = W[P4] (Z);                         // Use of volatile in loops precludes optimizations. 
	CC = R0 == 0;
	if !CC jump .P248L6 (bp);
//-------------------------------------------------------------------
//   End Loop L6
//-------------------------------------------------------------------

.P248L23:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------

.P248L5:
.LN655:
// line 4668
	CC = R7 == 1;
	if !CC jump .P248L3 ;

.P248L27:
.LN656:
// line 4674
	R0 = R2.L (Z);
	R0 = R3 + R0;
.LN657:
// line 4670
	P0 = 1792 /* -4192512 */;
	P0.H = -64 /* -4192512 */;
.LN658:
// line 4674
	P1 = R0;
.LN659:
// line 4670
	R0 = W[P0] (X);
	BITSET(R0, 10);
	W[P0] = R0.L;
.LN660:
// line 4671
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN661:
// line 4672
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN662:
// line 4674
	B[P1] = R6;
	P1 = 4;
	LOOP .P248L28L LC0 = P1;

.P248L28:
//-------------------------------------------------------------------
//   Part of Loop 28, depth 1
//-------------------------------------------------------------------
	LOOP_BEGIN .P248L28L;
.LN663:
// line 4675
	R2 += 1;
	R0 = R2.L (Z);
.LN664:
// line 4676
	R0 = R3 + R0;
	P1 = R0;
	// -- 4 stalls --
	B[P1] = R6;
	LOOP_END .P248L28L;

.P248L10:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN665:
// line 4684
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN666:
// line 4685
	R0 = R3;
.LN667:
// line 4675
	R1 = R2.L (Z);
.LN668:
// line 4685
	CALL.X (_Init_TxUART_DMA);
.LN669:
// line 4686
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN670:
// line 4687
	CALL.X (_TxUART_en);
.LN671:
// line 4688
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN672:
// line 4690
	B[P5] = R7;

.P248L3:
.LN673:
// line 4695
	SP += 12;
	(R7:6, P5:4) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._UART_DMA_TX.end:
._UART_DMA_TX.end:
	.global _UART_DMA_TX;
	.type _UART_DMA_TX,STT_FUNC;

	.align 2;
_UART_DMA_TX2:
.LN_UART_DMA_TX2:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 24 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {R6-R7,P4-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//Inlined in _UART_DMA_TX2:
//  ..\BFcom\main.c:4735:12'_ssync
//  ..\BFcom\main.c:4733:12'_ssync
//  ..\BFcom\main.c:4731:12'_ssync
//  ..\BFcom\main.c:4720:13'_ssync
//  ..\BFcom\main.c:4719:13'_ssync
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4699
	LINK 0;
	[--SP] = (R7:6, P5:4);
	SP += -12;
	P5.L = _flag_pachka_TXT;
	P5.H = _flag_pachka_TXT;
.LN674:
// line 4705
	R0 = B[P5] (Z);
	CC = R0 == 0;
	if !CC jump .P251L3 ;

.P251L4:
.LN675:
// line 4709
	NOP;                                    // Inserted 2 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	P4.L = _tx_counter2;
	P4.H = _tx_counter2;
	R0 = W[P4] (Z);
	CC = R0 == 0;
	R6 = 0;
	R3.L = _buf_DMA_uart;
	R3.H = _buf_DMA_uart;
	R2 = 0;
	R7 = 0;
	if CC jump .P251L5 ;

.P251L22:
.LN676:
// line 4712
	R7 = 1;

.P251L6:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 4709 col 1
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in an estimated 15 
//   cycles (includes 6 stalls but excludes the cost of function calls).
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   9 out of   15 ( 60.0%)
//     16-bit Instruction  used  17 out of   30 ( 56.7%)
//     32-bit Instruction  used   7 out of   15 ( 46.7%)
//     Store               used   1 out of   15 (  6.7%)
//-------------------------------------------------------------------
	// -- 4 stalls --
.LN677:
// line 4711
	R0 = R2.L (Z);
	R0 = R3 + R0;
	P2 = R0;
.LN678:
	CALL.X (_txchar2);
.LN679:
// line 4712
	R2 += 1;
	// -- 2 stalls --
.LN680:
// line 4711
	B[P2] = R0;
.LN681:
// line 4709
	R0 = W[P4] (Z);                         // Use of volatile in loops precludes optimizations. 
	CC = R0 == 0;
	if !CC jump .P251L6 (bp);
//-------------------------------------------------------------------
//   End Loop L6
//-------------------------------------------------------------------

.P251L23:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------

.P251L5:
.LN682:
// line 4716
	CC = R7 == 1;
	if !CC jump .P251L3 ;

.P251L27:
.LN683:
// line 4721
	R0 = R2.L (Z);
	R0 = R3 + R0;
.LN684:
// line 4718
	P0 = 1792 /* -4192512 */;
	P0.H = -64 /* -4192512 */;
.LN685:
// line 4721
	P1 = R0;
.LN686:
// line 4718
	R0 = W[P0] (X);
	BITCLR(R0, 10);
	W[P0] = R0.L;
.LN687:
// line 4719
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN688:
// line 4720
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN689:
// line 4721
	B[P1] = R6;
	P1 = 4;
	LOOP .P251L28L LC0 = P1;

.P251L28:
//-------------------------------------------------------------------
//   Part of Loop 28, depth 1
//-------------------------------------------------------------------
	LOOP_BEGIN .P251L28L;
.LN690:
// line 4722
	R2 += 1;
	R0 = R2.L (Z);
.LN691:
// line 4723
	R0 = R3 + R0;
	P1 = R0;
	// -- 4 stalls --
	B[P1] = R6;
	LOOP_END .P251L28L;

.P251L10:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN692:
// line 4731
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN693:
// line 4732
	R0 = R3;
.LN694:
// line 4722
	R1 = R2.L (Z);
.LN695:
// line 4732
	CALL.X (_Init_TxUART_DMA);
.LN696:
// line 4733
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN697:
// line 4734
	CALL.X (_TxUART_en);
.LN698:
// line 4735
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN699:
// line 4737
	B[P5] = R7;

.P251L3:
.LN700:
// line 4742
	SP += 12;
	(R7:6, P5:4) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._UART_DMA_TX2.end:
._UART_DMA_TX2.end:
	.global _UART_DMA_TX2;
	.type _UART_DMA_TX2,STT_FUNC;

	.align 2;
_Transf2:
.LN_Transf2:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 24 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {R6-R7,P4-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4745
	LINK 0;
	[--SP] = (R7:6, P5:4);
	SP += -12;
	P5 = R0;
.LN701:
// line 4749
	CALL.X (_strlen);
.LN702:
// line 4751
	CC = R0 <= 0;
	if CC jump .P252L3 ;

.P252L12:
.LN703:
// line 4755
	R2 = 0;
.LN704:
	R7 = 64;
	P4.L = _tx_counter2;
	P4.H = _tx_counter2;
	P2.L = _tx_buffer_overflow2;
	P2.H = _tx_buffer_overflow2;
.LN705:
// line 4759
	R3 = 1;
.LN706:
// line 4749
	P1 = R0;
	P0.L = _tx_wr_index2;
	P0.H = _tx_wr_index2;
	R1.L = _tx_buffer2;
	R1.H = _tx_buffer2;
	LOOP .P252L2L LC0 = P1;

.P252L2:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 4751 col 3
//-------------------------------------------------------------------
	LOOP_BEGIN .P252L2L;
.LN707:
// line 4753
	R6 = B[P5++] (X);
	R0 = W[P0] (Z);                         // Use of volatile in loops precludes optimizations. 
	R0 = R1 + R0;
	P1 = R0;
	// -- 4 stalls --
	B[P1] = R6;                             // Use of volatile in loops precludes optimizations. 
.LN708:
// line 4755
	R0.L = W[P0];                           // Use of volatile in loops precludes optimizations. 
	R0 += 1;
	R0 = R0.L (Z);
	CC = R0 == R7;
	W[P0] = R0.L;                           // Use of volatile in loops precludes optimizations. 
	if !CC jump .P252L6 ;

.P252L4:
.LN709:
	W[P0] = R2.L;                           // Use of volatile in loops precludes optimizations. 

.P252L6:
.LN710:
// line 4756
	NOP;                                    // Inserted 2 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	R0.L = W[P4];                           // Use of volatile in loops precludes optimizations. 
	R0 += 1;
	R0 = R0.L (Z);
	CC = R0 == R7;
	W[P4] = R0.L;                           // Use of volatile in loops precludes optimizations. 
	if !CC jump .P252L9 ;

.P252L7:
.LN711:
// line 4758
	W[P4] = R2.L;                           // Use of volatile in loops precludes optimizations. 
.LN712:
// line 4759
	B[P2] = R3;                             // Use of volatile in loops precludes optimizations. 

.P252L9:
	NOP;
.LN713:
// line 4751
	LOOP_END .P252L2L;
//-------------------------------------------------------------------
//   End Loop L2
//-------------------------------------------------------------------

.P252L13:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------

.P252L3:
.LN714:
// line 4762
	SP += 12;
	(R7:6, P5:4) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._Transf2.end:
._Transf2.end:
	.global _Transf2;
	.type _Transf2,STT_FUNC;

	.align 2;
_control_B610:
.LN_control_B610:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 24 
//  Scratch registers used: {R0,ASTAT0-ASTAT1}
//  Call preserved registers used: {R7,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2273
	LINK 16;
	[SP + 12] = R7;
	R7.L = .s.6;
	R7.H = .s.6;
.LN715:
// line 2274
	R0 = R7;
	CALL.X (_Transf2);
	R0 = 4;
	R0 = R7 + R0;
.LN716:
// line 2275
	CALL.X (_Transf2);
.LN717:
// line 2276
	R0 = R7;
	CALL.X (_Transf2);
.LN718:
// line 2277
	R7 = [SP + 12];
	UNLINK;
	R0 = 1;
	// -- 3 stalls --
	RTS;
.LN._control_B610.end:
._control_B610.end:
	.global _control_B610;
	.type _control_B610,STT_FUNC;

	.align 2;
_COMMAND_ON:
.LN_COMMAND_ON:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0}
//  Call preserved registers used: {FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4397
	LINK 12;
	R0.L = .s0B610.8;
	R0.H = .s0B610.8;
.LN719:
// line 4398
	CALL.X (_Transf2);
	R0.L = .s0WORKS.9;
	R0.H = .s0WORKS.9;
.LN720:
// line 4399
	CALL.X (_Transf2);
.LN721:
// line 4400
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._COMMAND_ON.end:
._COMMAND_ON.end:
	.global _COMMAND_ON;
	.type _COMMAND_ON,STT_FUNC;

	.align 2;
_OFF_section:
.LN_OFF_section:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0-R2,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R6-R7,P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4403
	LINK 0;
	[--SP] = (R7:6, P5:5);
	SP += -12;
	P1.L = _Mem1+30;
	P1.H = _Mem1+30;
.LN722:
// line 4405
	R2 = B[P1] (X);
	R1 = 1028;
	R1 = EXTRACT(R2, R1.L) (Z);
	R2 = 12;
	CC = R1 == R2;
	P5.L = _TIMER_AVARIYA;
	P5.H = _TIMER_AVARIYA;
	if !CC jump .P257L3 ;

.P257L1:
.LN723:
	R1 = -1;
	B[P5 + -165] = R1;

.P257L3:
.LN724:
// line 4407
	CC = R0 == 1;
	if CC jump .P257L4 ;

.P257L5:
.LN725:
// line 4426
	CC = R0 == 0;
	if !CC jump .P257L6 (bp);

.P257L7:
.LN726:
// line 4428
	[P5 + 0] = R0;
.LN727:
// line 4430
	CALL.X (_COMMAND_ON);
	R0.L = .s1POWER.11;
	R0.H = .s1POWER.11;
.LN728:
// line 4432
	CALL.X (_IO);

.P257L6:
.LN729:
// line 4437
	SP += 12;
	(R7:6, P5:5) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;

.P257L4:
.LN730:
// line 4409
	R0 = -257 /* 2147483391 */;
	R0.H = 32767 /* 2147483391 */;
	[P5 + 68] = R0;
.LN731:
// line 4410
	CALL.X (_Event_SPORT_RUN);
.LN732:
// line 4411
	R6 = 0;
	[P5] = R6;
	R7.L = .s0B610.10;
	R7.H = .s0B610.10;
.LN733:
// line 4412
	R0 = R7;
	CALL.X (_Transf2);
.LN734:
// line 4413
	R0 = R7;
	CALL.X (_Transf2);
.LN735:
// line 4422
	B[P5 + -156] = R6;
	jump.s .P257L6;
.LN._OFF_section.end:
._OFF_section.end:
	.global _OFF_section;
	.type _OFF_section,STT_FUNC;

	.align 2;
_Transf:
.LN_Transf:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 24 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {R6-R7,P4-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4766
	LINK 0;
	[--SP] = (R7:6, P5:4);
	SP += -12;
	P5 = R0;
.LN736:
// line 4770
	CALL.X (_strlen);
.LN737:
// line 4772
	CC = R0 <= 0;
	if CC jump .P258L3 ;

.P258L12:
.LN738:
// line 4776
	R2 = 0;
.LN739:
	R7 = 4096;
	P4.L = _tx_counter0;
	P4.H = _tx_counter0;
	P2.L = _tx_buffer_overflow0;
	P2.H = _tx_buffer_overflow0;
.LN740:
// line 4780
	R3 = 1;
.LN741:
// line 4770
	P1 = R0;
	P0.L = _tx_wr_index0;
	P0.H = _tx_wr_index0;
	R1.L = _tx_buffer0;
	R1.H = _tx_buffer0;
	LOOP .P258L2L LC0 = P1;

.P258L2:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 4772 col 3
//-------------------------------------------------------------------
	LOOP_BEGIN .P258L2L;
.LN742:
// line 4774
	R6 = B[P5++] (X);
	R0 = W[P0] (Z);                         // Use of volatile in loops precludes optimizations. 
	R0 = R1 + R0;
	P1 = R0;
	// -- 4 stalls --
	B[P1] = R6;                             // Use of volatile in loops precludes optimizations. 
.LN743:
// line 4776
	R0.L = W[P0];                           // Use of volatile in loops precludes optimizations. 
	R0 += 1;
	R0 = R0.L (Z);
	CC = R0 == R7;
	W[P0] = R0.L;                           // Use of volatile in loops precludes optimizations. 
	if !CC jump .P258L6 ;

.P258L4:
.LN744:
	W[P0] = R2.L;                           // Use of volatile in loops precludes optimizations. 

.P258L6:
.LN745:
// line 4777
	NOP;                                    // Inserted 2 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	R0.L = W[P4];                           // Use of volatile in loops precludes optimizations. 
	R0 += 1;
	R0 = R0.L (Z);
	CC = R0 == R7;
	W[P4] = R0.L;                           // Use of volatile in loops precludes optimizations. 
	if !CC jump .P258L9 ;

.P258L7:
.LN746:
// line 4779
	W[P4] = R2.L;                           // Use of volatile in loops precludes optimizations. 
.LN747:
// line 4780
	B[P2] = R3;                             // Use of volatile in loops precludes optimizations. 

.P258L9:
	NOP;
.LN748:
// line 4772
	LOOP_END .P258L2L;
//-------------------------------------------------------------------
//   End Loop L2
//-------------------------------------------------------------------

.P258L13:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------

.P258L3:
.LN749:
// line 4783
	SP += 12;
	(R7:6, P5:4) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._Transf.end:
._Transf.end:
	.global _Transf;
	.type _Transf,STT_FUNC;

	.align 2;
_put_str1:
.LN_put_str1:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  No scratch registers used.
//  Call preserved registers used: {FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2115
	LINK 12;
.LN750:
// line 2118
	CALL.X (_Transf);
.LN751:
// line 2119
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._put_str1.end:
._put_str1.end:
	.global _put_str1;
	.type _put_str1,STT_FUNC;

	.align 2;
_u_out:
.LN_u_out:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 24 
//  Scratch registers used: {R0-R2}
//  Call preserved registers used: {R7,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2175
	LINK 16;
	[SP + 12] = R7;
	R7 = R1;
.LN752:
// line 2176
	CALL.X (_put_str1);
.LN753:
// line 2177
	R0 = R7;
	R7.L = _strng;
	R7.H = _strng;
	R2 = R7;
	R1 = 0;
	CALL.X (_u_itoa);
.LN754:
// line 2178
	R0 = R7;
	CALL.X (_put_str1);
	R0.L = .s.6;
	R0.H = .s.6;
.LN755:
// line 2179
	CALL.X (_put_str1);
.LN756:
// line 2180
	R7 = [SP + 12];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._u_out.end:
._u_out.end:
	.global _u_out;
	.type _u_out,STT_FUNC;

	.align 2;
_SDRAM_test:
.LN_SDRAM_test:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0-R1,P0-P1,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {R7,P4-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4029
	LINK 0;
	[--SP] = (R7:7, P5:4);
	SP += -12;
	P4.L = _buf_sdram1;
	P4.H = _buf_sdram1;
	P1 = [P4];
	P5 = 2000;
	P0 = 100;
	R0 = 1000;
	P1 = P1 + P5;
	LOOP .P261L2L LC0 = P0;

.P261L2:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 4033 col 3
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in estimated 3 cycles.
//-------------------------------------------------------------------
//   Trip Count  = 100
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   3 out of    3 (100.0%)
//     16-bit Instruction  used   5 out of    6 ( 83.3%)
//     32-bit Instruction  used   2 out of    3 ( 66.7%)
//     Store               used   1 out of    3 ( 33.3%)
//-------------------------------------------------------------------
//  This loop was not modulo scheduled because it was optimized for space.
//-------------------------------------------------------------------
	LOOP_BEGIN .P261L2L;
	R1 = R0;
.LN757:
// line 4035
	W[P1++] = R1;
	R0 += 1;
.LN758:
// line 4033
	LOOP_END .P261L2L;
//-------------------------------------------------------------------
//   End Loop L2
//-------------------------------------------------------------------

.P261L13:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	R7 = 100;

.P261L5:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 4038 col 4
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in an estimated 14 
//   cycles (includes 4 stalls but excludes the cost of function calls).
//-------------------------------------------------------------------
//   Trip Count  = 100
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   9 out of   14 ( 64.3%)
//     16-bit Instruction  used  16 out of   28 ( 57.1%)
//     32-bit Instruction  used   7 out of   14 ( 50.0%)
//-------------------------------------------------------------------
	// -- 4 stalls --
.LN759:
// line 4041
	P1 = [P4];
.LN760:
	R0.L = .s.12;
	R0.H = .s.12;
	R7 += -1;
.LN761:
	P1 = P1 + P5;
	R1 = W[P1] (Z);
.LN762:
	CALL.X (_u_out);
	CC = R7 == 0;
.LN763:
	P5 += 2;
	if !CC jump .P261L5 (bp);
//-------------------------------------------------------------------
//   End Loop L5
//-------------------------------------------------------------------

.P261L14:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN764:
// line 4045
	SP += 12;
	(R7:7, P5:4) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._SDRAM_test.end:
._SDRAM_test.end:
	.global _SDRAM_test;
	.type _SDRAM_test,STT_FUNC;

	.align 2;
_x_out:
.LN_x_out:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 16 
//  Scratch registers used: {R0-R2,ASTAT0-ASTAT1}
//  Call preserved registers used: {R6-R7,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2183
	LINK 0;
	[--SP] = (R7:6);
	SP += -12;
	R7 = R1;
.LN765:
// line 2184
	CALL.X (_put_str1);
.LN766:
// line 2185
	R2 = R7;
	R6.L = .s.6;
	R6.H = .s.6;
	R0 = 48;
	R7.L = _strng;
	R7.H = _strng;
	R1 = R6 + R0;
	R0 = R7;
	CALL.X (__sprintf64);
.LN767:
// line 2186
	R0 = R7;
	CALL.X (_put_str1);
.LN768:
// line 2187
	R0 = R6;
	CALL.X (_put_str1);
.LN769:
// line 2188
	SP += 12;
	(R7:6) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._x_out.end:
._x_out.end:
	.global _x_out;
	.type _x_out,STT_FUNC;

	.align 2;
_xn_out:
.LN_xn_out:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 24 
//  Scratch registers used: {R0-R2}
//  Call preserved registers used: {R7,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2191
	LINK 16;
	[SP + 12] = R7;
	R7 = R1;
.LN770:
// line 2192
	CALL.X (_put_str1);
.LN771:
// line 2193
	R2 = R7;
	R7.L = _strng;
	R7.H = _strng;
	R0 = R7;
	R1.L = .sX.13;
	R1.H = .sX.13;
	CALL.X (__sprintf64);
.LN772:
// line 2194
	R0 = R7;
	CALL.X (_put_str1);
.LN773:
// line 2196
	R7 = [SP + 12];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._xn_out.end:
._xn_out.end:
	.global _xn_out;
	.type _xn_out,STT_FUNC;

	.align 2;
_d_out:
.LN_d_out:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0}
//  Call preserved registers used: {FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2199
	LINK 12;
.LN774:
// line 2200
	CALL.X (_put_str1);
	R0.L = _strng;
	R0.H = _strng;
.LN775:
// line 2202
	CALL.X (_put_str1);
	R0.L = .s.6;
	R0.H = .s.6;
.LN776:
// line 2203
	CALL.X (_put_str1);
.LN777:
// line 2204
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._d_out.end:
._d_out.end:
	.global _d_out;
	.type _d_out,STT_FUNC;

	.align 2;
_func_STATUS_B610:
.LN_func_STATUS_B610:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R5-R7,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2281
	LINK 0;
	[--SP] = (R7:5);
	SP += -12;
	P1.L = _FLAG_REGIM;
	P1.H = _FLAG_REGIM;
.LN778:
// line 2292
	R0 = B[P1] (Z);
	CC = R0 == 2;
	if CC jump .P267L3 ;

.P267L1:
.LN779:
// line 2300
	NOP;                                    // Inserted 2 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	P0.L = _Mem_K615+6;
	P0.H = _Mem_K615+6;
	R0 = B[P0] (Z);
	R0 <<= 26;
	CC = BITTST(R0, 30);
	R3 = 1;
.LN780:
// line 2295
	R2 = 1026;
	BITSET(R2, 16);
	R7 = R1 & R3;
	IF !CC R3 = R7;
	R6 = 1;
	R7 = 1;
.LN781:
// line 2294
	R0 = B[P0 + 2] (Z);
	R5 = 2;
	R0 = DEPOSIT(R0, R5);
	R0 = R0.b (Z);
.LN782:
// line 2295
	R0 = DEPOSIT(R0, R2);
	B[P0 + 2] = R0;
.LN783:
// line 2301
	if CC jump .P267L9 ;

.P267L8:
.LN784:
	CC = BITTST(R1, 1);
	R7 = CC;

.P267L9:
.LN785:
// line 2311
	CC = BITTST(R1, 6);
	R0 = CC;
.LN786:
// line 2304
	CC = BITTST(R1, 3);
.LN787:
// line 2312
	R2 = R1 >>> 7;
.LN788:
// line 2314
	R0 = R0 & R2;
	R2 = 0;
	IF !CC R0 = R2;
.LN789:
// line 2303
	CC = BITTST(R1, 2);
.LN790:
// line 2314
	IF !CC R0 = R2;
	R0 = R7 & R0;
	R0 = R3 & R0;
	R0 = R0.b (Z);
.LN791:
// line 2324
	CC = R0 == 0;
	if CC jump .P267L13 ;

.P267L14:
.LN792:
// line 2333
	B[P1 + 258] = R6;

.P267L3:
.LN793:
// line 2336
	SP += 12;
	(R7:5) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;

.P267L13:
.LN794:
// line 2326
	R0 = 2;
	R7 = B[P0 + 2] (Z);
	BITSET(R0, 16);
	P2 = 222;
.LN795:
// line 2327
	R3 = -257;
.LN796:
// line 2326
	R0 = DEPOSIT(R7, R0);
	P2 = P1 + P2;
	R1 = R3;
.LN797:
// line 2327
	R1.H = 32767;
.LN798:
// line 2326
	B[P0 + 2] = R0;
.LN799:
// line 2327
	[P2] = R1;
.LN800:
// line 2328
	R0 = 700;
	P0.L = _AVARIYA_flag;
	P0.H = _AVARIYA_flag;
	[P0] = R0;
.LN801:
// line 2329
	B[P1 + 258] = R2;
	R0.L = .s610.14;
	R0.H = .s610.14;
.LN802:
// line 2330
	CALL.X (_put_str1);
	jump.s .P267L3;
.LN._func_STATUS_B610.end:
._func_STATUS_B610.end:
	.global _func_STATUS_B610;
	.type _func_STATUS_B610,STT_FUNC;

	.align 2;
_GBR_zad:
.LN_GBR_zad:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1}
//  Call preserved registers used: {R6-R7,P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2432
	LINK 0;
	[--SP] = (R7:6, P5:5);
	SP += -12;
	P0.L = _Mem_K615+6;
	P0.H = _Mem_K615+6;
.LN803:
// line 2433
	R1 = 1026;
	R7 = B[P0] (Z);
	R0 = R1;
	R0.H = 3;
	R0 = DEPOSIT(R7, R0);
	R7 = R0.b (Z);
	P1.L = _Mem1+28;
	P1.H = _Mem1+28;
.LN804:
// line 2434
	R0 = 1028;
	R1 = B[P1] (Z);
	R2 = R0;
	R2.H = 5;
	R0 = DEPOSIT(R1, R2);
	B[P1++] = R0;
.LN805:
// line 2435
	R0 = 1538;
	R1 = DEPOSIT(R7, R0);
.LN806:
// line 2436
	R2 = B[P1] (Z);
	R3 = 4;
.LN807:
// line 2435
	B[P0++] = R1;
.LN808:
// line 2436
	R3.H = 12;
	R0 = DEPOSIT(R2, R3);
	B[P1] = R0;
.LN809:
// line 2437
	R0 = B[P0] (Z);
	R1 = 2;
	R0 = DEPOSIT(R0, R1);
	P2.L = _FLAG_MASTER_BR_OK;
	P2.H = _FLAG_MASTER_BR_OK;
	P1 = 163;
	B[P0] = R0;
	P5 = P2 + P1;
.LN810:
// line 2439
	R6 = 0;
.LN811:
// line 2438
	R7 = 1;
.LN812:
// line 2443
	R0 = -257 /* 2147483391 */;
	R0.H = 32767 /* 2147483391 */;
.LN813:
// line 2442
	R1 = 50;
.LN814:
// line 2439
	B[P2 + 584] = R6;
.LN815:
// line 2440
	B[P2 + 871] = R6;
.LN816:
// line 2438
	B[P2 + 583] = R7;
.LN817:
// line 2442
	[P5 + 284] = R1;
.LN818:
// line 2443
	[P5 + 48] = R0;
.LN819:
// line 2444
	CALL.X (_Event_SPORT_RUN);
.LN820:
// line 2448
	[P5++] = R6;
.LN821:
// line 2454
	R0 = 119;
	B[P5 + 49] = R0;
.LN822:
// line 2446
	B[P2 + 575] = R6;
.LN823:
// line 2447
	B[P2 + 0] = R6;
.LN824:
// line 2449
	[P5 + -24] = R6;
.LN825:
// line 2451
	B[P5] = R6;
.LN826:
// line 2452
	B[P5 + 52] = R6;
.LN827:
// line 2455
	R0 = 0;
	CALL.X (_OFF_section);
	R0.L = .s.15;
	R0.H = .s.15;
.LN828:
// line 2456
	CALL.X (_put_str1);
.LN829:
// line 2459
	B[P5 + 450] = R7;
.LN830:
// line 2457
	B[P5 + 105] = R6;
.LN831:
// line 2458
	B[P5 + 884] = R6;
.LN832:
// line 2460
	SP += 12;
	(R7:6, P5:5) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._GBR_zad.end:
._GBR_zad.end:
	.global _GBR_zad;
	.type _GBR_zad,STT_FUNC;

	.align 2;
_BR_zad:
.LN_BR_zad:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1}
//  Call preserved registers used: {R6-R7,P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2463
	LINK 0;
	[--SP] = (R7:6, P5:5);
	SP += -12;
	P1.L = _Mem_K615+6;
	P1.H = _Mem_K615+6;
.LN833:
// line 2464
	R0 = 1538;
	R3 = B[P1] (Z);
	BITSET(R0, 17);
	R0 = DEPOSIT(R3, R0);
	R3 = R0.b (Z);
	P0.L = _Mem1+28;
	P0.H = _Mem1+28;
.LN834:
// line 2471
	R0 = 1028;
	R7 = B[P0] (Z);
	R1 = R0;
	R1.H = 12;
	R0 = DEPOSIT(R7, R1);
	B[P0] = R0;
.LN835:
// line 2465
	R1 = B[P0 + 1] (Z);
	R2 = 4;
	R2.H = 5;
	R0 = DEPOSIT(R1, R2);
	B[P0 + 1] = R0;
.LN836:
// line 2466
	R0 = 1026;
	R0 = DEPOSIT(R3, R0);
	B[P1++] = R0;
.LN837:
// line 2467
	R0 = B[P1] (Z);
	R1 = 2;
	R0 = DEPOSIT(R0, R1);
	P5.L = _FLAG_MASTER_BR_OK;
	P5.H = _FLAG_MASTER_BR_OK;
	P0 = 103;
	B[P1] = R0;
	P2 = P5 + P0;
.LN838:
// line 2469
	R6 = 0;
.LN839:
// line 2468
	R7 = 1;
.LN840:
// line 2473
	R0 = -257 /* 2147483391 */;
	R0.H = 32767 /* 2147483391 */;
.LN841:
// line 2472
	R1 = 50;
.LN842:
// line 2473
	[P2 + 108] = R0;
.LN843:
// line 2472
	[P2 + 344] = R1;
.LN844:
// line 2469
	B[P5 + 584] = R6;
.LN845:
// line 2470
	B[P5 + 871] = R6;
.LN846:
// line 2468
	B[P5 + 583] = R7;
.LN847:
// line 2474
	CALL.X (_Event_SPORT_RUN);
.LN848:
// line 2480
	R0 = 119;
	B[P5 + 216] = R0;
.LN849:
// line 2477
	[P2 + 60] = R6;
.LN850:
// line 2478
	[P2 + 40] = R6;
.LN851:
// line 2476
	B[P5 + 0] = R6;
.LN852:
// line 2481
	R0 = 0;
	CALL.X (_OFF_section);
	R0.L = .s.16;
	R0.H = .s.16;
.LN853:
// line 2482
	CALL.X (_put_str1);
.LN854:
// line 2486
	B[P5 + 617] = R7;
.LN855:
// line 2483
	B[P5 + 272] = R6;
.LN856:
// line 2484
	B[P5 + 575] = R6;
.LN857:
// line 2485
	B[P5 + 1051] = R6;
.LN858:
// line 2488
	SP += 12;
	(R7:6, P5:5) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._BR_zad.end:
._BR_zad.end:
	.global _BR_zad;
	.type _BR_zad,STT_FUNC;

	.align 2;
_SIG_FT_IN:
.LN_SIG_FT_IN:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 16 
//  Scratch registers used: {R0-R1,ASTAT0-ASTAT1}
//  Call preserved registers used: {R7,P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2757
	LINK 0;
	[--SP] = (R7:7, P5:5);
	R7.L = .s.6;
	R7.H = .s.6;
	SP += -12;
.LN859:
// line 2758
	R0 = R7;
	CALL.X (_put_str1);
	P5.L = _NORM_PIT_2FT;
	P5.H = _NORM_PIT_2FT;
	R0 = 52;
	R0 = R7 + R0;
.LN860:
// line 2759
	R1 = B[P5++] (Z);
.LN861:
	CALL.X (_u_out);
	R0 = 68;
	R0 = R7 + R0;
.LN862:
// line 2760
	R1 = B[P5++] (Z);
.LN863:
	CALL.X (_u_out);
.LN864:
// line 2761
	R1 = B[P5++] (Z);
	R0.L = .sAVARIY.19;
	R0.H = .sAVARIY.19;
.LN865:
	CALL.X (_u_out);
.LN866:
// line 2762
	R1 = B[P5++] (Z);
	R0.L = .sAVARIY.20;
	R0.H = .sAVARIY.20;
.LN867:
	CALL.X (_u_out);
	R0 = 84;
	R0 = R7 + R0;
.LN868:
// line 2763
	R1 = B[P5++] (Z);
.LN869:
	CALL.X (_u_out);
	R0 = 100;
	R0 = R7 + R0;
.LN870:
// line 2764
	R1 = B[P5++] (Z);
.LN871:
	CALL.X (_u_out);
	R0 = 116;
	R0 = R7 + R0;
.LN872:
// line 2765
	R1 = B[P5++] (Z);
.LN873:
	CALL.X (_u_out);
	R0 = 132;
	R0 = R7 + R0;
.LN874:
// line 2766
	R1 = B[P5++] (Z);
.LN875:
	CALL.X (_u_out);
.LN876:
// line 2768
	R1 = B[P5++] (Z);
	R0.L = .sAVARIY.25;
	R0.H = .sAVARIY.25;
.LN877:
	CALL.X (_u_out);
.LN878:
// line 2769
	R1 = B[P5++] (Z);
	R0.L = .sAVARIY.26;
	R0.H = .sAVARIY.26;
.LN879:
	CALL.X (_u_out);
.LN880:
// line 2770
	R1 = B[P5++] (Z);
	R0.L = .sAVARIY.27;
	R0.H = .sAVARIY.27;
.LN881:
	CALL.X (_u_out);
.LN882:
// line 2771
	R1 = B[P5++] (Z);
	R0.L = .sAVARIY.28;
	R0.H = .sAVARIY.28;
.LN883:
	CALL.X (_u_out);
.LN884:
// line 2773
	R1 = B[P5++] (Z);
	R0.L = .sNORMAT.29;
	R0.H = .sNORMAT.29;
.LN885:
	CALL.X (_u_out);
	R0 = 148;
	R0 = R7 + R0;
.LN886:
// line 2774
	R1 = B[P5] (Z);
.LN887:
	CALL.X (_u_out);
	R0 = 160;
	R0 = R7 + R0;
.LN888:
// line 2775
	R1 = B[P5 + -509] (Z);
.LN889:
	CALL.X (_u_out);
.LN890:
// line 2776
	R1 = B[P5 + -268] (Z);
	R0.L = .sNormaa.32;
	R0.H = .sNormaa.32;
.LN891:
	CALL.X (_x_out);
.LN892:
// line 2777
	R1 = B[P5 + -267] (Z);
	R0.L = .sNormap.33;
	R0.H = .sNormap.33;
.LN893:
	CALL.X (_x_out);
.LN894:
// line 2778
	R1 = B[P5 + -259] (Z);
	R0.L = .sNomerr.34;
	R0.H = .sNomerr.34;
.LN895:
	CALL.X (_x_out);
	P5.L = _Mem_sys+4;
	P5.H = _Mem_sys+4;
.LN896:
// line 2779
	R1 = W[P5] (Z);
	R0.L = .sMemsys.35;
	R0.H = .sMemsys.35;
.LN897:
	CALL.X (_x_out);
.LN898:
// line 2780
	R1 = W[P5 + 2] (Z);
	R0.L = .sMemsys.36;
	R0.H = .sMemsys.36;
.LN899:
	CALL.X (_x_out);
.LN900:
// line 2781
	R0 = R7;
	CALL.X (_put_str1);
.LN901:
// line 2782
	SP += 12;
	(R7:7, P5:5) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._SIG_FT_IN.end:
._SIG_FT_IN.end:
	.global _SIG_FT_IN;
	.type _SIG_FT_IN,STT_FUNC;

	.align 2;
_control_TNC_TNO:
.LN_control_TNC_TNO:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 36 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R4-R7,P3-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":3848
	LINK 0;
	[--SP] = (R7:4, P5:3);
	SP += -12;
	P4.L = _FLAG_DSP_text_CIKL;
	P4.H = _FLAG_DSP_text_CIKL;
.LN902:
// line 3852
	R0 = B[P4] (Z);
	CC = R0 == 1;
	if CC jump .P301L1 ;

.P301L3:
.LN903:
// line 3941
	SP += 12;
	(R7:4, P5:3) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;

.P301L1:
	R7.L = .s.37;
	R7.H = .s.37;
	P1.L = _NUMBER_BLOK;
	P1.H = _NUMBER_BLOK;
.LN904:
// line 3854
	R0 = R7;
.LN905:
	R1 = B[P1] (Z);
.LN906:
	CALL.X (_u_out);
	R0 = R7;
	R0 += 12;
.LN907:
// line 3855
	CALL.X (_put_str1);
	P5 = P4;
	P4 += 35;
	R0 = R7;
.LN908:
// line 3857
	R1 = B[P4 + -479] (Z);
	R6 = R0;
	CC = R1 == 1;
	R7 += 24;
	R0 += 32;
	IF CC R0 = R7;
.LN909:
	CALL.X (_put_str1);
	R0 = R6;
.LN910:
// line 3858
	R1 = [P4 + 548];
	R0 += 40;
.LN911:
	CALL.X (_u_out);
	R0 = R6;
	P1.L = _time_TNC;
	P1.H = _time_TNC;
.LN912:
// line 3859
	R1 = [P1];
	R0 += 52;
.LN913:
	CALL.X (_u_out);
	P3.L = _time_TNC_max;
	P3.H = _time_TNC_max;
	R3 = 64;
	R0 = R6 + R3;
.LN914:
// line 3860
	R1 = [P3];
.LN915:
	CALL.X (_u_out);
	R2.L = _time_TNC_min;
	R2.H = _time_TNC_min;
	[SP + 48] = R2;
.LN916:
// line 3861
	P0 = [SP + 48];
	R7 = 76;
	R0 = R6 + R7;
	R5 = 112;
	R1 = [P0];
.LN917:
	CALL.X (_u_out);
	R3 = 88;
	P1.L = _time_TNO;
	P1.H = _time_TNO;
	R0 = R6 + R3;
.LN918:
// line 3862
	R1 = [P1];
.LN919:
	CALL.X (_u_out);
	R2 = 100;
	R0 = R6 + R2;
.LN920:
// line 3863
	R1 = [P4 + 528];
.LN921:
	CALL.X (_u_out);
	R3 = -176;
	R7 = R6 + R3;
.LN922:
// line 3866
	R0 = R7;
	CALL.X (_put_str1);
	R0 = R6 + R5;
.LN923:
// line 3867
	R1 = [P4 + 140];
.LN924:
	CALL.X (_u_out);
.LN925:
// line 3869
	R1 = B[P4 + -523] (Z);
	CC = R1 <= 0;
	if CC jump .P301L9 (bp);

.P301L7:
	R0 = 124;
	R0 = R6 + R0;
.LN926:
	CALL.X (_u_out);

.P301L9:
.LN927:
// line 3871
	R1 = [P4 + 500];
	CC = R1 == 0;
.LN928:
// line 3870
	R5 = 0;
	B[P4 + -523] = R5;
.LN929:
// line 3871
	if CC jump .P301L12 (bp);

.P301L10:
	R0 = 136;
	R0 = R6 + R0;
.LN930:
	CALL.X (_u_out);

.P301L12:
	P1 = 507;
	P4 = P5 + P1;
	R0 = 148;
	R0 = R6 + R0;
.LN931:
// line 3875
	R1 = [P4 + -724];
.LN932:
	CALL.X (_u_out);
	R0 = 160;
	R0 = R6 + R0;
.LN933:
// line 3876
	R1 = [P4 + -888];
.LN934:
	CALL.X (_u_out);
	R0 = 172;
	R0 = R6 + R0;
.LN935:
// line 3878
	R1 = [P4 + -1076];
.LN936:
	CALL.X (_u_out);
	R0 = 184;
	R0 = R6 + R0;
.LN937:
// line 3881
	R1 = [P4 + -968];
.LN938:
	CALL.X (_u_out);
.LN939:
// line 3883
	R1 = [P4 + 60];
	R0 = 120;
	CC = R1 == R0;
	if CC jump .P301L15 (bp);

.P301L13:
	R0.L = .sMAXUDP.54;
	R0.H = .sMAXUDP.54;
.LN940:
	CALL.X (_u_out);

.P301L15:
.LN941:
// line 3884
	R1 = B[P5 + 155] (Z);
	R0 = 255;
	CC = R1 == R0;
	if CC jump .P301L18 (bp);

.P301L16:
	R0 = 196;
	R0 = R6 + R0;
.LN942:
	CALL.X (_x_out);

.P301L18:
.LN943:
// line 3885
	R1 = B[P5 + -477] (Z);
	R4 = 15;
	CC = R1 == R4;
	if CC jump .P301L21 (bp);

.P301L19:
	R0 = 204;
	R0 = R6 + R0;
.LN944:
	CALL.X (_x_out);

.P301L21:
.LN945:
// line 3886
	R1 = B[P5 + -482] (Z);
	CC = R1 == R4;
	if CC jump .P301L24 (bp);

.P301L22:
	R0 = 212;
	R0 = R6 + R0;
.LN946:
	CALL.X (_x_out);

.P301L24:
.LN947:
// line 3888
	R0 = B[P5 + -53] (Z);
	CC = R0 == 1;
	if !CC jump .P301L27 (bp);

.P301L25:
.LN948:
	R1 = 1;
	R0.L = .sERRORT.58;
	R0.H = .sERRORT.58;
	CALL.X (_u_out);

.P301L27:
	P1 = 75;
	P1 = P5 + P1;
.LN949:
// line 3898
	R1 = 16960;
	R2 = [P1];
	R0 = R1;
	R0.H = 15;
	CC = R0 < R2 (IU);
	if !CC jump .P301L30 (bp);

.P301L28:
	R0.L = .sWARNIN.59;
	R0.H = .sWARNIN.59;
.LN950:
	CALL.X (_put_str1);

.P301L30:
	P1 = 95;
	P1 = P5 + P1;
	// -- stall --
.LN951:
// line 3899
	R1 = [P1];
	CC = R1 == 0;
	if CC jump .P301L33 (bp);

.P301L31:
	R0 = 220;
	R0 = R6 + R0;
.LN952:
	CALL.X (_u_out);

.P301L33:
	P1 = -257;
	P1 = P5 + P1;
.LN953:
// line 3900
	[P1 + 352] = R5;
.LN954:
// line 3901
	R1 = [P1];
	CC = R1 == 0;
	if CC jump .P301L36 (bp);

.P301L34:
	R0.L = .s.61;
	R0.H = .s.61;
.LN955:
	CALL.X (_u_out);

.P301L36:
	P1 = -289;
	P1 = P5 + P1;
.LN956:
// line 3902
	[P1 + 32] = R5;
.LN957:
// line 3904
	R1 = [P1];
	CC = R1 == 0;
	if CC jump .P301L39 (bp);

.P301L37:
	R0.L = .sERRORC.62;
	R0.H = .sERRORC.62;
.LN958:
	CALL.X (_u_out);

.P301L39:
	P4 = P5;
	P5 += 27;
.LN959:
// line 3905
	[P5 + -316] = R5;
.LN960:
// line 3909
	[P5 + 48] = R5;
.LN961:
// line 3910
	[P5 + 32] = R5;
	[P5 + 36] = R5;
.LN962:
// line 3914
	R0 = [P5 + 128];
	CC = !BITTST(R0, 0);
.LN963:
// line 3911
	R0 = 9999;
	[P5 + 56] = R0;
.LN964:
// line 3912
	[P5 + 60] = R0;
.LN965:
// line 3914
	if !CC jump .P301L42 (bp);

.P301L40:
	R0.L = .s601.63;
	R0.H = .s601.63;
.LN966:
	CALL.X (_put_str1);

.P301L42:
	P1 = 155;
	P5 = P4 + P1;
	// -- stall --
.LN967:
// line 3915
	R0 = [P5];
	CC = !BITTST(R0, 1);
	if !CC jump .P301L45 (bp);

.P301L43:
	R0.L = .s602.64;
	R0.H = .s602.64;
.LN968:
	CALL.X (_put_str1);

.P301L45:
.LN969:
// line 3916
	R0 = [P5];
	CC = !BITTST(R0, 2);
	if !CC jump .P301L48 (bp);

.P301L46:
	R0.L = .s603F16.65;
	R0.H = .s603F16.65;
.LN970:
	CALL.X (_put_str1);

.P301L48:
.LN971:
// line 3917
	R0 = [P5];
	CC = !BITTST(R0, 3);
	if !CC jump .P301L51 (bp);

.P301L49:
	R0.L = .s604F64.66;
	R0.H = .s604F64.66;
.LN972:
	CALL.X (_put_str1);

.P301L51:
.LN973:
// line 3918
	R0 = [P5];
	CC = !BITTST(R0, 4);
	if !CC jump .P301L54 (bp);

.P301L52:
	R0.L = .s605.67;
	R0.H = .s605.67;
.LN974:
	CALL.X (_put_str1);

.P301L54:
.LN975:
// line 3919
	R0 = [P5];
	CC = !BITTST(R0, 5);
	if !CC jump .P301L57 (bp);

.P301L55:
	R0.L = .s607.68;
	R0.H = .s607.68;
.LN976:
	CALL.X (_put_str1);

.P301L57:
.LN977:
// line 3920
	R0 = [P5];
	CC = !BITTST(R0, 6);
	if !CC jump .P301L60 (bp);

.P301L58:
	R0.L = .s608.69;
	R0.H = .s608.69;
.LN978:
	CALL.X (_put_str1);

.P301L60:
.LN979:
// line 3923
	R0 = B[P4 + 166] (Z);
	CC = R0 == 1;
	if !CC jump .P301L63 (bp);

.P301L61:
	R0.L = .s612.70;
	R0.H = .s612.70;
.LN980:
	CALL.X (_put_str1);

.P301L63:
.LN981:
// line 3924
	R0 = B[P4 + 167] (Z);
	CC = R0 == 1;
	if !CC jump .P301L66 (bp);

.P301L64:
	R0.L = .s613.71;
	R0.H = .s613.71;
.LN982:
	CALL.X (_put_str1);

.P301L66:
.LN983:
// line 3925
	R0 = B[P4 + 165] (Z);
	CC = R0 == 1;
	if !CC jump .P301L69 (bp);

.P301L67:
	R0.L = .s611.72;
	R0.H = .s611.72;
.LN984:
	CALL.X (_put_str1);

.P301L69:
.LN985:
// line 3926
	R0 = B[P4 + 172] (Z);
	CC = R0 == 1;
	if !CC jump .P301L72 (bp);

.P301L70:
	R0.L = .s.73;
	R0.H = .s.73;
.LN986:
	CALL.X (_put_str1);

.P301L72:
.LN987:
// line 3927
	R0 = R7;
	CALL.X (_put_str1);
	P1 = 166;
	P1 = P4 + P1;
.LN988:
// line 3930
	B[P1++] = R5;
.LN989:
// line 3931
	B[P1] = R5;
.LN990:
// line 3932
	B[P1 + -2] = R5;
.LN991:
// line 3934
	[P3] = R5;
.LN992:
// line 3935
	P0 = [SP + 48];
	R1 = -7937;
	R0 = R1;
	R0.H = 1525;
	[P0] = R0;
	P2.L = _time_TNO_max;
	P2.H = _time_TNO_max;
.LN993:
// line 3937
	[P2] = R5;
	P5.L = _time_TNO_min;
	P5.H = _time_TNO_min;
.LN994:
// line 3938
	[P5] = R0;
.LN995:
// line 3939
	[P1 + 400] = R5;
	jump.s .P301L3;
.LN._control_TNC_TNO.end:
._control_TNC_TNO.end:
	.global _control_TNC_TNO;
	.type _control_TNC_TNO,STT_FUNC;

	.align 2;
_pachka_monitor:
.LN_pachka_monitor:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 96 
//  Scratch registers used: {R0-R3,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R4-R7,P3-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4054
	LINK 60;
	[--SP] = (R7:4, P5:3);
	R5.L = .sF.74;
	R5.H = .sF.74;
	R3 = -408;
	R0 = R5;
	R7 = R5 + R3;
	SP += -16;
	R0 += 48;
.LN996:
// line 4077
	R1 = 10752;
.LN997:
// line 4083
	R2 = -31744;
	R3 = 188;
	P5 = R5;
.LN998:
// line 4077
	[FP + 8] = R1;
	R6 = R5;
.LN999:
// line 4083
	[FP + 16] = R2;
	[FP + -40] = R0;
	R3 = R5 + R3;
	R1 = 96;
	R2 = 176;
	R0 = 80;
	[SP + 56] = R3;
	R1 = R5 + R1;
	R2 = R5 + R2;
	R0 = R5 + R0;
	R3.L = .s.96;
	R3.H = .s.96;
	[FP + -36] = R1;
	[SP + 60] = R2;
	[FP + -32] = R0;
	[FP + -28] = R3;
	R3.L = .s.102;
	R3.H = .s.102;
	R1 = 224;
	R2 = 260;
	R0 = 200;
	[FP + -4] = R3;
	R1 = R5 + R1;
	R2 = R5 + R2;
	R0 = R5 + R0;
	R3.L = .sF.105;
	R3.H = .sF.105;
	[FP + -24] = R1;
	[SP + 52] = R2;
	[SP + 48] = R0;
	[FP + -20] = R3;
	R1.L = .s.100;
	R1.H = .s.100;
	R2.L = .sF.103;
	R2.H = .sF.103;
	R0.L = .s.98;
	R0.H = .s.98;
.LN1000:
// line 4077
	R3 = [P5 + 368];
	P4.L = _Mem1+28;
	P4.H = _Mem1+28;
	[FP + -8] = R1;
	[FP + -16] = R2;
	[FP + -12] = R0;
	[SP + 12] = R3;
	R0 = [P4 + 136];
	R2 = [P5 + 364];
	R1 = 0;
	CALL.X (___mulli3);                     // integral multiplication of this size is implemented as a library call. 
	R2 = [P5 + 372];
	R3 = [P5 + 376];
	CALL.X (___divrem_u64);                 // division is implemented as a library call. 
	R2 = 10752;
	W[FP + 8] = R2;
	R3 = 5493;
	W[FP + 10] = R3;
.LN1001:
// line 4091
	P3 = 96;
	R4 = 2056;
	// -- 5 stalls --
.LN1002:
// line 4077
	R1 = [FP + 8];
	R1 = R0 + R1;
.LN1003:
// line 4078
	R0 = R5;
	CALL.X (_u_out);
.LN1004:
// line 4079
	R3 = [P5 + 384];
	[SP + 12] = R3;
	R0 = [P4 + 132];
	R2 = [P5 + 380];
	R1 = 0;
	CALL.X (___mulli3);                     // integral multiplication of this size is implemented as a library call. 
	R2 = [P5 + 388];
	R3 = [P5 + 392];
	CALL.X (___divrem_u64);                 // division is implemented as a library call. 
	R1 = [FP + 8];
	R1 = R0 + R1;
	R0 = R5;
	R0 += 4;
.LN1005:
// line 4080
	CALL.X (_u_out);
.LN1006:
// line 4081
	R3 = [P5 + 400];
	[SP + 12] = R3;
	R0 = [P4 + 120];
	R2 = [P5 + 396];
	R1 = 0;
	CALL.X (___mulli3);                     // integral multiplication of this size is implemented as a library call. 
	R2 = [P5 + 404];
	R3 = [P5 + 408];
	CALL.X (___divrem_u64);                 // division is implemented as a library call. 
	R1 = [FP + 8];
	R1 = R0 + R1;
	R0 = R5;
	R0 += 8;
.LN1007:
// line 4082
	CALL.X (_u_out);
.LN1008:
// line 4083
	R3 = [P5 + 416];
	[SP + 12] = R3;
	R0 = [P4 + 108];
	R2 = [P5 + 412];
	R1 = 0;
	CALL.X (___mulli3);                     // integral multiplication of this size is implemented as a library call. 
	R2 = [P5 + 420];
	R3 = [P5 + 424];
	CALL.X (___divrem_u64);                 // division is implemented as a library call. 
	R1 = -31744;
	R1.H = 6103;
	R1 = R0 + R1;
	R0 = R5;
	R0 += 12;
.LN1009:
// line 4084
	CALL.X (_u_out);
.LN1010:
// line 4085
	R0 = R7;
	CALL.X (_put_str1);
	R0 = R5;
.LN1011:
// line 4087
	R1 = [P4 + 4];
	R0 += 16;
.LN1012:
	CALL.X (_x_out);
	R5 += 32;
.LN1013:
// line 4088
	R1 = [P4 + 8];
.LN1014:
	R0 = R5;
	CALL.X (_x_out);
.LN1015:
// line 4089
	R1 = [P4 + 12];
.LN1016:
	R0 = [FP + -40];
	CALL.X (_x_out);
.LN1017:
// line 4090
	R0 = R7;
	CALL.X (_put_str1);
	P5 = P4;
.LN1018:
// line 4091
	R1 = [P4 ++ P3];
	R2 = 64;
	R0 = R6 + R2;
	R1 >>= 24;
.LN1019:
	CALL.X (_x_out);
.LN1020:
// line 4092
	R1 = [P4 + -80];
	R1 = EXTRACT(R1, R4.L) (Z);
.LN1021:
	R0 = [FP + -32];
	CALL.X (_x_out);
.LN1022:
// line 4093
	R1 = B[P4 + -80] (Z);
.LN1023:
	R0 = [FP + -36];
	CALL.X (_x_out);
.LN1024:
// line 4094
	R0 = R7;
	CALL.X (_put_str1);
	R2 = 112;
	R0 = R6 + R2;
.LN1025:
// line 4095
	R1 = [P4 + 40];
.LN1026:
	CALL.X (_x_out);
	R3 = 128;
	R0 = R6 + R3;
.LN1027:
// line 4096
	R1 = [P4 + 36];
.LN1028:
	CALL.X (_x_out);
	R2 = 144;
	R0 = R6 + R2;
.LN1029:
// line 4097
	R1 = [P4 + 24];
.LN1030:
	CALL.X (_x_out);
	R3 = 160;
	R0 = R6 + R3;
.LN1031:
// line 4098
	R1 = [P4 + 12];
.LN1032:
	CALL.X (_x_out);
.LN1033:
// line 4100
	R0 = R7;
	CALL.X (_put_str1);
.LN1034:
// line 4101
	R1 = [P4 + -48];
.LN1035:
	R0 = [SP + 60];
	CALL.X (_u_out);
.LN1036:
// line 4103
	R1 = W[P4 + -36] (Z);
.LN1037:
	R0 = [SP + 56];
	CALL.X (_u_out);
.LN1038:
// line 4105
	R1 = W[P4 + -30] (Z);
.LN1039:
	R0 = [SP + 48];
	CALL.X (_u_out);
	R2 = 212;
	R0 = R6 + R2;
.LN1040:
// line 4107
	R1 = W[P4 + -18] (Z);
.LN1041:
	CALL.X (_u_out);
.LN1042:
// line 4109
	R1 = [P4 + -16];
.LN1043:
	R0 = [FP + -24];
	CALL.X (_u_out);
	R3 = 236;
	R0 = R6 + R3;
.LN1044:
// line 4111
	R1 = B[P4 + -2] (Z);
.LN1045:
	CALL.X (_u_out);
	R2 = 248;
	R0 = R6 + R2;
.LN1046:
// line 4112
	R1 = W[P4++] (Z);
.LN1047:
	CALL.X (_u_out);
.LN1048:
// line 4116
	R1 = B[P4] (Z);
.LN1049:
	R0 = [SP + 52];
	CALL.X (_x_out);
.LN1050:
// line 4118
	R1 = B[P4] (Z);
.LN1051:
	R2 = 1;
	R3 = 272;
.LN1052:
	R1 = R1 & R2;
	R0 = R6 + R3;
	CC = R1 == 1;
	R3 = [FP + -28];
	IF CC R0 = R3;
.LN1053:
	CALL.X (_put_str1);
.LN1054:
// line 4119
	R1 = B[P4] (Z);
.LN1055:
	R3 = 2;
	R2 = 284;
.LN1056:
	R1 = R1 & R3;
	R0 = R6 + R2;
	CC = R1 == 2;
	R2 = [FP + -12];
	[FP + 12] = R0;
	IF CC R0 = R2;
.LN1057:
	CALL.X (_put_str1);
.LN1058:
// line 4120
	R1 = B[P4] (Z);
.LN1059:
	R2 = 4;
.LN1060:
	R1 = R1 & R2;
.LN1061:
	R3 = 4;
.LN1062:
	CC = R1 == R3;
	R0.L = .s.101;
	R0.H = .s.101;
	R1 = [FP + -8];
	[FP + 16] = R0;
	IF CC R0 = R1;
.LN1063:
	CALL.X (_put_str1);
.LN1064:
// line 4121
	R1 = B[P4] (Z);
.LN1065:
	R2 = 8;
.LN1066:
	R1 = R1 & R2;
.LN1067:
	R3 = 8;
.LN1068:
	CC = R1 == R3;
	R0 = [FP + 12];
	R1 = [FP + -4];
	IF CC R0 = R1;
.LN1069:
	CALL.X (_put_str1);
.LN1070:
// line 4122
	R1 = B[P4] (Z);
.LN1071:
	R2 = 16;
.LN1072:
	R1 = R1 & R2;
.LN1073:
	R3 = 16;
.LN1074:
	CC = R1 == R3;
	R0.L = .sF.104;
	R0.H = .sF.104;
	R1 = [FP + -16];
	[SP + 44] = R0;
	IF CC R0 = R1;
.LN1075:
	CALL.X (_put_str1);
.LN1076:
// line 4123
	R1 = B[P4++] (Z);
.LN1077:
	R2 = 32;
.LN1078:
	R1 = R1 & R2;
.LN1079:
	R3 = 32;
	R0.L = .sF.106;
	R0.H = .sF.106;
.LN1080:
	CC = R1 == R3;
	R2 = [FP + -20];
	[FP + 8] = R0;
	IF CC R0 = R2;
.LN1081:
	CALL.X (_put_str1);
.LN1082:
// line 4124
	R0 = R7;
	CALL.X (_put_str1);
.LN1083:
// line 4125
	R0 = R7;
	CALL.X (_put_str1);
.LN1084:
// line 4127
	R1 = B[P4 + -5] (Z);
	CC = R1 == 0;
	if CC jump .P317L21 (bp);

.P317L19:
	R0.L = .s2.107;
	R0.H = .s2.107;
.LN1085:
// line 4130
	CALL.X (_put_str1);
.LN1086:
// line 4133
	R0 = R5;
.LN1087:
	R1 = [P5 + 20];
.LN1088:
	CALL.X (_x_out);
.LN1089:
// line 4136
	R1 = [P5 + 24];
.LN1090:
	R0 = [FP + -40];
	CALL.X (_x_out);
.LN1091:
// line 4139
	R1 = B[P4 + -71] (Z);
.LN1092:
	R0 = [FP + -36];
	CALL.X (_x_out);
.LN1093:
// line 4142
	R1 = [P5 + 28];
	R1 = EXTRACT(R1, R4.L) (Z);
.LN1094:
	R0 = [FP + -32];
	CALL.X (_x_out);
.LN1095:
// line 4144
	R0 = R7;
	CALL.X (_put_str1);
	R2 = 292;
	R0 = R6 + R2;
.LN1096:
// line 4146
	R1 = [P5 + 52];
.LN1097:
	CALL.X (_u_out);
	R3 = 304;
	R0 = R6 + R3;
.LN1098:
// line 4147
	R1 = W[P5 + 62] (Z);
.LN1099:
	CALL.X (_u_out);
	R2 = 316;
	R0 = R6 + R2;
.LN1100:
// line 4148
	R1 = W[P5 + 68] (Z);
.LN1101:
	CALL.X (_u_out);
.LN1102:
// line 4151
	R1 = B[P4] (Z);
.LN1103:
	R0 = [SP + 52];
	CALL.X (_x_out);
.LN1104:
// line 4153
	R1 = B[P4] (Z);
.LN1105:
	R3 = 1;
.LN1106:
	R1 = R1 & R3;
	CC = R1 == 1;
	R0 = [FP + 12];
	R2 = [FP + -28];
	IF CC R0 = R2;
.LN1107:
	CALL.X (_put_str1);
.LN1108:
// line 4154
	R1 = B[P4] (Z);
.LN1109:
	R2 = 2;
.LN1110:
	R1 = R1 & R2;
	CC = R1 == 2;
	R0 = [FP + 12];
	R3 = [FP + -12];
	IF CC R0 = R3;
.LN1111:
	CALL.X (_put_str1);
.LN1112:
// line 4155
	R1 = B[P4] (Z);
.LN1113:
	R3 = 4;
.LN1114:
	R1 = R1 & R3;
.LN1115:
	R2 = 4;
.LN1116:
	CC = R1 == R2;
	R0 = [FP + 16];
	R3 = [FP + -8];
	IF CC R0 = R3;
.LN1117:
	CALL.X (_put_str1);
.LN1118:
// line 4156
	R1 = B[P4] (Z);
.LN1119:
	R2 = 8;
.LN1120:
	R1 = R1 & R2;
.LN1121:
	R3 = 8;
.LN1122:
	CC = R1 == R3;
	R0 = [FP + 12];
	R2 = [FP + -4];
	IF CC R0 = R2;
.LN1123:
	CALL.X (_put_str1);
.LN1124:
// line 4157
	R1 = B[P4] (Z);
.LN1125:
	R3 = 16;
.LN1126:
	R1 = R1 & R3;
.LN1127:
	R2 = 16;
.LN1128:
	CC = R1 == R2;
	R0 = [SP + 44];
	R3 = [FP + -16];
	IF CC R0 = R3;
.LN1129:
	CALL.X (_put_str1);
	P3 = P4;
.LN1130:
// line 4158
	R1 = B[P3++] (Z);
.LN1131:
	R3 = 32;
.LN1132:
	R1 = R1 & R3;
.LN1133:
	R2 = 32;
.LN1134:
	CC = R1 == R2;
	R0 = [FP + 8];
	R3 = [FP + -20];
	IF CC R0 = R3;
.LN1135:
	CALL.X (_put_str1);
.LN1136:
// line 4161
	R1 = [P3 + -16];
.LN1137:
	R0 = [FP + -24];
	CALL.X (_u_out);
	R2 = 328;
	R0 = R6 + R2;
.LN1138:
// line 4162
	R1 = [P3 + 12];
.LN1139:
	CALL.X (_x_out);
	R3 = 340;
	R0 = R6 + R3;
.LN1140:
// line 4163
	R1 = [P3 + 24];
.LN1141:
	CALL.X (_x_out);

.P317L21:
.LN1142:
// line 4167
	R0 = B[P4 + -5] (Z);
	CC = R0 <= 1 (IU);
	if CC jump .P317L42 (bp);

.P317L40:
	R0.L = .s3.113;
	R0.H = .s3.113;
.LN1143:
// line 4170
	CALL.X (_put_str1);
.LN1144:
// line 4173
	R0 = R5;
.LN1145:
	R1 = [P5 + 32];
.LN1146:
	CALL.X (_x_out);
.LN1147:
// line 4174
	R1 = [P5 + 36];
.LN1148:
	R0 = [FP + -40];
	CALL.X (_x_out);
.LN1149:
// line 4175
	R1 = B[P4 + -59] (Z);
.LN1150:
	R0 = [FP + -36];
	CALL.X (_x_out);
.LN1151:
// line 4176
	R1 = [P5 + 40];
	R1 = EXTRACT(R1, R4.L) (Z);
.LN1152:
	R0 = [FP + -32];
	CALL.X (_x_out);
.LN1153:
// line 4178
	R1 = [P5 + 56];
.LN1154:
	R0 = [SP + 60];
	CALL.X (_u_out);
	P4 += -31;
.LN1155:
// line 4179
	R1 = W[P4 + -4] (Z);
.LN1156:
	R0 = [SP + 56];
	CALL.X (_u_out);
.LN1157:
// line 4180
	R1 = W[P4 + 2] (Z);
.LN1158:
	R0 = [SP + 48];
	CALL.X (_u_out);
	R2 = 352;
	R0 = R6 + R2;
.LN1159:
// line 4183
	R1 = B[P4 + 32] (Z);
.LN1160:
	CALL.X (_x_out);
.LN1161:
// line 4185
	R1 = [P4 + 32];
.LN1162:
	R3 = 1;
.LN1163:
	R1 = R1 & R3;
	CC = R1 == 1;
	R4 = [FP + -28];
	R0 = [FP + 12];
	IF CC R0 = R4;
.LN1164:
	CALL.X (_put_str1);
.LN1165:
// line 4186
	R1 = [P4 + 32];
.LN1166:
	R2 = 2;
.LN1167:
	R1 = R1 & R2;
	CC = R1 == 2;
	R5 = [FP + -12];
	R0 = [FP + 12];
	IF CC R0 = R5;
.LN1168:
	CALL.X (_put_str1);
.LN1169:
// line 4187
	R1 = [P4 + 32];
.LN1170:
	R3 = 4;
.LN1171:
	R1 = R1 & R3;
.LN1172:
	R2 = 4;
.LN1173:
	CC = R1 == R2;
	R4 = [FP + -8];
	R0 = [FP + 16];
	IF CC R0 = R4;
.LN1174:
	CALL.X (_put_str1);
.LN1175:
// line 4188
	R1 = [P4 + 32];
.LN1176:
	R5 = 8;
.LN1177:
	R1 = R1 & R5;
.LN1178:
	R3 = 8;
.LN1179:
	CC = R1 == R3;
	R0 = [FP + 12];
	R2 = [FP + -4];
	IF CC R0 = R2;
.LN1180:
	CALL.X (_put_str1);
.LN1181:
// line 4189
	R1 = [P4 + 32];
.LN1182:
	R4 = 16;
.LN1183:
	R1 = R1 & R4;
.LN1184:
	R2 = 16;
.LN1185:
	CC = R1 == R2;
	R0 = [SP + 44];
	R3 = [FP + -16];
	IF CC R0 = R3;
.LN1186:
	CALL.X (_put_str1);
.LN1187:
// line 4190
	R1 = [P4 + 32];
.LN1188:
	R5 = 32;
.LN1189:
	R1 = R1 & R5;
.LN1190:
	R3 = 32;
.LN1191:
	CC = R1 == R3;
	R4 = [FP + -20];
	R0 = [FP + 8];
	IF CC R0 = R4;
.LN1192:
	CALL.X (_put_str1);
.LN1193:
// line 4193
	R1 = [P4 + 20];
.LN1194:
	R0 = [FP + -24];
	CALL.X (_u_out);
	R2 = 328;
	R0 = R6 + R2;
.LN1195:
// line 4194
	R1 = [P4 + 48];
.LN1196:
	CALL.X (_x_out);
	R3 = 340;
	R0 = R6 + R3;
.LN1197:
// line 4195
	R1 = [P4 + 60];
.LN1198:
	CALL.X (_x_out);
.LN1199:
// line 4197
	R0 = R7;
	CALL.X (_put_str1);
.LN1200:
// line 4198
	R0 = R7;
	CALL.X (_put_str1);

.P317L42:
.LN1201:
// line 4203
	R0 = R7;
	CALL.X (_put_str1);
.LN1202:
// line 4204
	R0 = R7;
	CALL.X (_put_str1);
.LN1203:
// line 4205
	R0 = [P5];
	R7 = 15;
	R1 = R0 & R7;
	R0.L = .s.115;
	R0.H = .s.115;
.LN1204:
	CALL.X (_u_out);
.LN1205:
// line 4206
	P1 = 1;
	R0 = [P5 ++ P1];
	R6 = 1028;
	R1 = EXTRACT(R0, R6.L) (Z);
	R0.L = .s.116;
	R0.H = .s.116;
.LN1206:
	CALL.X (_u_out);
.LN1207:
// line 4207
	R0 = B[P5] (Z);
	R1 = R0 & R7;
	R0.L = .s.117;
	R0.H = .s.117;
.LN1208:
	CALL.X (_u_out);
.LN1209:
// line 4208
	R0 = B[P5] (X);
	R1 = EXTRACT(R0, R6.L) (Z);
	R0.L = .s.118;
	R0.H = .s.118;
.LN1210:
	CALL.X (_u_out);
.LN1211:
// line 4209
	SP += 16;
	(R7:4, P5:3) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._pachka_monitor.end:
._pachka_monitor.end:
	.global _pachka_monitor;
	.type _pachka_monitor,STT_FUNC;

	.align 2;
_help:
.LN_help:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 36 
//  Scratch registers used: {R0-R3,P0-P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R4-R7,P3-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4264
	LINK 0;
	[--SP] = (R7:4, P5:3);
	SP += -12;
	P4.L = _FLAG_PF10;
	P4.H = _FLAG_PF10;
.LN1212:
// line 4268
	R1 = B[P4 + 719] (Z);
	R0.L = .s610.119;
	R0.H = .s610.119;
.LN1213:
	CALL.X (_x_out);
	P5.L = _Mem1+28;
	P5.H = _Mem1+28;
.LN1214:
// line 4270
	R1 = B[P5 + 2] (X);
	R6 = 1028;
	R1 = EXTRACT(R1, R6.L) (Z);
	R0.L = .sMem1Za.120;
	R0.H = .sMem1Za.120;
.LN1215:
	CALL.X (_x_out);
.LN1216:
// line 4272
	R1 = [P5];
	R7 = 15;
	R1 = R1 & R7;
	R0.L = .sMem1Za.121;
	R0.H = .sMem1Za.121;
.LN1217:
	CALL.X (_x_out);
.LN1218:
// line 4273
	R1 = B[P5 + 1] (Z);
	R1 = R1 & R7;
	R0.L = .sMem1Za.122;
	R0.H = .sMem1Za.122;
.LN1219:
	CALL.X (_x_out);
.LN1220:
// line 4274
	R1 = [P5];
	R1 = EXTRACT(R1, R6.L) (Z);
	R0.L = .sMem1Za.123;
	R0.H = .sMem1Za.123;
.LN1221:
	CALL.X (_x_out);
.LN1222:
// line 4275
	R1 = B[P5 + 1] (X);
	R1 = EXTRACT(R1, R6.L) (Z);
	R0.L = .sMem1Za.124;
	R0.H = .sMem1Za.124;
.LN1223:
	CALL.X (_x_out);
	R7.L = .s.6;
	R7.H = .s.6;
.LN1224:
// line 4287
	R0 = R7;
	CALL.X (_put_str1);
.LN1225:
// line 4289
	R1 = B[P4 + 457] (Z);
	R0.L = .sFLAGSY.125;
	R0.H = .sFLAGSY.125;
.LN1226:
	CALL.X (_u_out);
	P1.L = _flag_RX_UDP;
	P1.H = _flag_RX_UDP;
.LN1227:
// line 4290
	R1 = B[P1] (Z);
	R0.L = .sflagRX.126;
	R0.H = .sflagRX.126;
.LN1228:
	CALL.X (_u_out);
	P0.L = _FLAG_UDP_EVENT;
	P0.H = _FLAG_UDP_EVENT;
.LN1229:
// line 4291
	R1 = W[P0] (Z);
	R0.L = .sFLAGUD.127;
	R0.H = .sFLAGUD.127;
.LN1230:
	CALL.X (_u_out);
	P1.L = _FLAG_UDP_INSTALL;
	P1.H = _FLAG_UDP_INSTALL;
.LN1231:
// line 4292
	R1 = B[P1] (Z);
	R0.L = .sFLAGUD.128;
	R0.H = .sFLAGUD.128;
.LN1232:
	CALL.X (_u_out);
.LN1233:
// line 4293
	R1 = B[P4 + 1163] (Z);
	R0.L = .sFLAGEX.129;
	R0.H = .sFLAGEX.129;
.LN1234:
	CALL.X (_u_out);
	P1 = 259;
.LN1235:
// line 4294
	R1 = B[P4 + 1171] (X);
	R0.L = .sflagsy.130;
	R0.H = .sflagsy.130;
	P5 = P4 + P1;
.LN1236:
	CALL.X (_u_out);
.LN1237:
// line 4301
	R1 = [P5 + 36];
	R0.L = .sFLAGSC.131;
	R0.H = .sFLAGSC.131;
.LN1238:
	CALL.X (_u_out);
.LN1239:
// line 4306
	R4 = 0;
	R6.L = .s.132;
	R6.H = .s.132;
	[P5 + 452] = R4;
.LN1240:
// line 4307
	[P5 + 456] = R4;
.LN1241:
// line 4317
	R0 = R6;
	CALL.X (_put_str1);
.LN1242:
// line 4318
	R1 = [P5 + 8];
	R0.L = .sUDP.133;
	R0.H = .sUDP.133;
.LN1243:
	CALL.X (_u_out);
	P3.L = _FLAG_SPORT1_TX;
	P3.H = _FLAG_SPORT1_TX;
.LN1244:
// line 4319
	R1 = B[P3 + 16] (X);
	R5 = 1538;
	R1 = EXTRACT(R1, R5.L) (Z);
	R0.L = .sMemK61.134;
	R0.H = .sMemK61.134;
.LN1245:
	CALL.X (_u_out);
.LN1246:
// line 4320
	R1 = B[P3 + 15] (Z);
	R2 = 3;
	R1 = R1 & R2;
	R0.L = .sMemK61.135;
	R0.H = .sMemK61.135;
.LN1247:
	CALL.X (_u_out);
.LN1248:
// line 4321
	R1 = B[P3 + 15] (X);
	R3 = 514;
	R1 = EXTRACT(R1, R3.L) (Z);
	R0.L = .sMemK61.136;
	R0.H = .sMemK61.136;
.LN1249:
	CALL.X (_u_out);
.LN1250:
// line 4322
	R1 = B[P3 + 15] (X);
	R2 = 1026;
	R1 = EXTRACT(R1, R2.L) (Z);
	R0.L = .sMemK61.137;
	R0.H = .sMemK61.137;
.LN1251:
	CALL.X (_u_out);
.LN1252:
// line 4323
	R1 = B[P3 + 15] (X);
	R1 = EXTRACT(R1, R5.L) (Z);
	R0.L = .sMemK61.138;
	R0.H = .sMemK61.138;
.LN1253:
	CALL.X (_u_out);
.LN1254:
// line 4324
	R0 = R6;
	CALL.X (_put_str1);
	P1.L = _AVARIYA_flag;
	P1.H = _AVARIYA_flag;
	R2 = 836;
	R0 = R7 + R2;
.LN1255:
// line 4327
	R1 = [P1];
.LN1256:
	CALL.X (_u_out);
.LN1257:
// line 4332
	R0 = R7;
	CALL.X (_put_str1);
.LN1258:
// line 4344
	R0 = R6;
	CALL.X (_put_str1);
.LN1259:
// line 4348
	B[P4 + 0] = R4;
.LN1260:
// line 4350
	R1 = [P5 + 56];
	R0.L = .sflagFA.140;
	R0.H = .sflagFA.140;
.LN1261:
	CALL.X (_u_out);
.LN1262:
// line 4351
	R1 = [P5 + 16];
	R0.L = .sschERR.141;
	R0.H = .sschERR.141;
.LN1263:
	CALL.X (_u_out);
.LN1264:
// line 4352
	R1 = [P5 + -112];
	R0.L = .s.142;
	R0.H = .s.142;
.LN1265:
	CALL.X (_u_out);
.LN1266:
// line 4355
	R1 = [P5 + 4];
	R0.L = .s.143;
	R0.H = .s.143;
.LN1267:
	CALL.X (_u_out);
	R2 = 852;
	R0 = R7 + R2;
.LN1268:
// line 4356
	R1 = [P5 + 888];
.LN1269:
	CALL.X (_u_out);
	R3 = 868;
	R0 = R7 + R3;
.LN1270:
// line 4357
	R1 = [P5 + 880];
.LN1271:
	CALL.X (_u_out);
.LN1272:
// line 4358
	R1 = W[P5 + 764] (Z);
	R0.L = .s.146;
	R0.H = .s.146;
.LN1273:
	CALL.X (_u_out);
.LN1274:
// line 4359
	R0 = R7;
	CALL.X (_put_str1);
.LN1275:
// line 4362
	R1 = [P5 + 44];
	R2 = [P5 + 40];
	R1 = R1 - R2;
	P1 = 168;
.LN1276:
// line 4360
	[P5 + -112] = R4;
.LN1277:
// line 4362
	[P5 ++ P1] = R1;
.LN1278:
// line 4361
	B[P3] = R4;
	R0.L = .stimede.147;
	R0.H = .stimede.147;
.LN1279:
// line 4363
	CALL.X (_u_out);
.LN1280:
// line 4365
	R0 = [P5 + 4];
	R1 = [P5];
	CC = R0 < R1 (IU);
	if !CC jump .P349L3 ;

.P349L1:
.LN1281:
	[P5 + 4] = R1;

.P349L3:
.LN1282:
// line 4366
	R0 = [P5 + -272];
	P1.L = _sch_event_sinhron;
	P1.H = _sch_event_sinhron;
	R1 = [P1];
	CC = R0 < R1;
	if !CC jump .P349L6 ;

.P349L4:
.LN1283:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R0 = [P1];
	[P5 + -272] = R0;

.P349L6:
.LN1284:
// line 4368
	[P5++] = R4;
.LN1285:
// line 4371
	R0 = 34463 (Z);
.LN1286:
// line 4369
	[P1] = R4;
.LN1287:
// line 4371
	BITSET(R0, 16);
.LN1288:
// line 4374
	R2 = 16959;
.LN1289:
// line 4370
	[P5 + -276] = R4;
.LN1290:
// line 4371
	[P5 + -272] = R0;
.LN1291:
// line 4373
	[P5++] = R4;
	R1 = R2;
.LN1292:
// line 4374
	R1.H = 15;
	P1 = -232;
	[P5 ++ P1] = R1;
.LN1293:
// line 4376
	R1 = [P5 + 4];
	R2 = [P5];
	R1 = R1 - R2;
	[P5 + 56] = R1;
	R0.L = .stimede.148;
	R0.H = .stimede.148;
.LN1294:
// line 4378
	CALL.X (_u_out);
.LN1295:
// line 4380
	R1 = [P5 + 12];
	R2 = [P5 + 8];
	R1 = R1 - R2;
	[P5 + 56] = R1;
	R0.L = .stimede.149;
	R0.H = .stimede.149;
.LN1296:
// line 4381
	CALL.X (_u_out);
.LN1297:
// line 4382
	R1 = [P5 + 20];
	R2 = [P5 + 16];
	R1 = R1 - R2;
	[P5 + 56] = R1;
	R0.L = .stimede.150;
	R0.H = .stimede.150;
.LN1298:
// line 4383
	CALL.X (_u_out);
.LN1299:
// line 4384
	R1 = [P5 + 28];
	R2 = [P5 + 24];
	R1 = R1 - R2;
	[P5 + 56] = R1;
	R0.L = .stimede.151;
	R0.H = .stimede.151;
.LN1300:
// line 4385
	CALL.X (_u_out);
	R0.L = .s.152;
	R0.H = .s.152;
.LN1301:
// line 4386
	CALL.X (_put_str1);
	P1.L = _rx_buffer_overflow0;
	P1.H = _rx_buffer_overflow0;
.LN1302:
// line 4389
	[P5 + 184] = R4;
.LN1303:
// line 4391
	B[P5 + -28] = R4;
.LN1304:
// line 4392
	B[P1] = R4;
.LN1305:
// line 4394
	SP += 12;
	(R7:4, P5:3) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._help.end:
._help.end:
	.global _help;
	.type _help,STT_FUNC;

	.align 2;
_tabl_view:
.LN_tabl_view:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 72 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R4-R7,P3-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4440
	LINK 36;
	[--SP] = (R7:4, P5:3);
	R6.L = .s.6;
	R6.H = .s.6;
	R3 = 892;
	R3 = R6 + R3;
	SP += -12;
	[FP + -12] = R3;
	R3.L = .s144.153;
	R3.H = .s144.153;
.LN1306:
// line 4442
	CC = R1 == 2;
.LN1307:
// line 4440
	[SP + 48] = R1;
	R2 = 904;
	R1 = 916;
	[SP + 44] = R3;
	R2 = R6 + R2;
	R1 = R6 + R1;
	R7 = R0;
	R5 = 884;
	R0 = 888;
	[SP + 56] = R2;
	[SP + 60] = R1;
	R0 = R6 + R0;
	R1 = R6 + R5;
	R2.L = _strng;
	R2.H = _strng;
	[FP + -8] = R6;
	[FP + 8] = R0;
	[FP + -4] = R1;
	[FP + 16] = R2;
	R6 += 48;
.LN1308:
// line 4442
	if !CC jump .P351L3 ;

.P351L1:
.LN1309:
// line 4444
	R0 = [SP + 44];
	P4.L = _Pkt_0;
	P4.H = _Pkt_0;
	CALL.X (_put_str1);
	P5 = P4;
	R5 = 32;

.P351L5:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 4446 col 6
//-------------------------------------------------------------------
//   Trip Count  = 32
//-------------------------------------------------------------------
	P3 = P5;
	R4 = 0;

.P351L8:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 4448 col 8
//-------------------------------------------------------------------
//   Trip Count  = 4
//-------------------------------------------------------------------
.LN1310:
// line 4450
	NOP;                                    // Inserted to fix anomaly w_05000245_with_boundaries. 
	R2 = B[P3] (Z);
.LN1311:
	R1 = R6;
	R0 = [FP + 16];
	CALL.X (__sprintf64);
.LN1312:
// line 4451
	R0 = [FP + 16];
	CALL.X (_put_str1);
.LN1313:
// line 4453
	R1 = B[P3] (Z);
.LN1314:
	R3 = 15;
.LN1315:
	CC = R3 < R1 (IU);
	R0 = [FP + 8];
	R2 = [FP + -4];
	IF CC R0 = R2;
.LN1316:
	CALL.X (_put_str1);
.LN1317:
// line 4455
	CC = R4 == 3;
	if !CC jump .P351L15 (bp);

.P351L13:
.LN1318:
	R0 = [FP + -8];
	CALL.X (_put_str1);

.P351L15:
.LN1319:
// line 4448
	R4 += 1;
.LN1320:
	CC = R4 < 4 (IU);
	P3 += 26;
	if CC jump .P351L8 (bp);
//-------------------------------------------------------------------
//   End Loop L8
//-------------------------------------------------------------------

.P351L52:
//-------------------------------------------------------------------
//   Part of Loop 5, depth 1
//-------------------------------------------------------------------
	R5 += -1;
	CC = R5 == 0;
	P5 += 1;
	if !CC jump .P351L5 (bp);
//-------------------------------------------------------------------
//   End Loop L5
//-------------------------------------------------------------------

.P351L53:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN1321:
// line 4461
	R1 = [P4 + 104];
.LN1322:
	R0 = [FP + -12];
	CALL.X (_u_out);
.LN1323:
// line 4462
	R1 = [P4 + 108];
.LN1324:
	R0 = [SP + 56];
	CALL.X (_u_out);
.LN1325:
// line 4463
	R1 = [P4 + 112];
.LN1326:
	R0 = [SP + 60];
	CALL.X (_u_out);

.P351L3:
	R0 = 928;
	R1 = [FP + -8];
.LN1327:
// line 4467
	R2 = [SP + 48];
	R0 = R1 + R0;
	P1.L = _Pkt;
	P1.H = _Pkt;
	CC = R2 == 0;
	[SP + 52] = R0;
	[SP + 40] = P1;
	if !CC jump .P351L18 ;

.P351L16:
.LN1328:
// line 4440
	P5 = R7;
.LN1329:
// line 4469
	R0 = [SP + 44];
	CALL.X (_put_str1);
.LN1330:
// line 4475
	P0 = [SP + 40];
	R5 = 32;
	P1 = P5 + (P5<<1);
	P1 = P1 + (P1<<2);
	P1 = (P1 + P1) << 2;
	P4 = P0 + P1;
	P5 = P4;

.P351L20:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 4471 col 6
//-------------------------------------------------------------------
//   Trip Count  = 32
//-------------------------------------------------------------------
	P3 = P5;
	R4 = 0;

.P351L23:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 4473 col 8
//-------------------------------------------------------------------
//   Trip Count  = 4
//-------------------------------------------------------------------
	NOP;                                    // Inserted to fix anomaly w_05000245_with_boundaries. 
	R2 = B[P3] (Z);
.LN1331:
	R1 = R6;
	R0 = [FP + 16];
	CALL.X (__sprintf64);
.LN1332:
// line 4476
	R0 = [FP + 16];
	CALL.X (_put_str1);
.LN1333:
// line 4478
	R1 = B[P3] (Z);
.LN1334:
	R3 = 15;
.LN1335:
	CC = R3 < R1 (IU);
	R0 = [FP + 8];
	R2 = [FP + -4];
	IF CC R0 = R2;
.LN1336:
	CALL.X (_put_str1);
.LN1337:
// line 4480
	CC = R4 == 3;
	if !CC jump .P351L30 (bp);

.P351L28:
.LN1338:
	R0 = [FP + -8];
	CALL.X (_put_str1);

.P351L30:
.LN1339:
// line 4473
	R4 += 1;
.LN1340:
	CC = R4 < 4 (IU);
	P3 += 26;
	if CC jump .P351L23 (bp);
//-------------------------------------------------------------------
//   End Loop L23
//-------------------------------------------------------------------

.P351L54:
//-------------------------------------------------------------------
//   Part of Loop 20, depth 1
//-------------------------------------------------------------------
	R5 += -1;
	CC = R5 == 0;
	P5 += 1;
	if !CC jump .P351L20 (bp);
//-------------------------------------------------------------------
//   End Loop L20
//-------------------------------------------------------------------

.P351L55:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN1341:
// line 4486
	R1 = [P4 + 104];
.LN1342:
	R0 = [FP + -12];
	CALL.X (_u_out);
.LN1343:
// line 4487
	R1 = [P4 + 108];
.LN1344:
	R0 = [SP + 56];
	CALL.X (_u_out);
.LN1345:
// line 4488
	R1 = [P4 + 112];
.LN1346:
	R0 = [SP + 60];
	CALL.X (_u_out);
.LN1347:
// line 4489
	R0 = [SP + 52];
	P1.L = _index_rd;
	P1.H = _index_rd;
.LN1348:
	R1 = [P1];
.LN1349:
	CALL.X (_u_out);

.P351L18:
.LN1350:
// line 4494
	R0 = [SP + 48];
	CC = R0 == 3;
	if !CC jump .P351L33 ;

.P351L31:
.LN1351:
// line 4496
	R5 = 120;
	CC = R7 < R5 (IU);
	if !CC jump .P351L33 ;

.P351L51:
.LN1352:
// line 4440
	P1 = R7;
	P2 = [SP + 40];
	P0 = 104;
	R0 = 940;
	R1 = [FP + -8];
	P1 = P1 + (P1<<1);
	P1 = P1 + (P1<<2);
	P0 = P2 + P0;
	P1 = (P1 + P1) << 2;
	R6 = R1 + R0;
	P5 = P0 + P1;
.LN1353:
// line 4503
	P4 = 112;

.P351L35:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 4496 col 3
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in an estimated 21 
//   cycles (includes 4 stalls but excludes the cost of function calls).
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used  17 out of   21 ( 81.0%)
//     16-bit Instruction  used  27 out of   42 ( 64.3%)
//     32-bit Instruction  used  10 out of   21 ( 47.6%)
//-------------------------------------------------------------------
	// -- 4 stalls --
.LN1354:
// line 4498
	R0 = R6;
	CALL.X (_put_str1);
.LN1355:
// line 4500
	R1 = R7;
	R0 = [SP + 52];
	CALL.X (_u_out);
.LN1356:
// line 4501
	R1 = [P5++];
.LN1357:
	R0 = [FP + -12];
	CALL.X (_u_out);
.LN1358:
// line 4502
	R1 = [P5++];
.LN1359:
	R0 = [SP + 56];
	CALL.X (_u_out);
.LN1360:
// line 4503
	R1 = [P5 ++ P4];
.LN1361:
	R0 = [SP + 60];
	CALL.X (_u_out);
.LN1362:
// line 4496
	R7 += 1;
.LN1363:
	CC = R7 < R5 (IU);
	if CC jump .P351L35 (bp);
//-------------------------------------------------------------------
//   End Loop L35
//-------------------------------------------------------------------

.P351L56:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------

.P351L33:
.LN1364:
// line 4506
	SP += 12;
	(R7:4, P5:3) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._tabl_view.end:
._tabl_view.end:
	.global _tabl_view;
	.type _tabl_view,STT_FUNC;

	.align 2;
_init_K611:
.LN_init_K611:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 24 
//  Scratch registers used: {R0,ASTAT0-ASTAT1}
//  Call preserved registers used: {R7,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2209
	LINK 16;
	[SP + 12] = R7;
	R7.L = .s.6;
	R7.H = .s.6;
.LN1365:
// line 2210
	R0 = R7;
	CALL.X (_Transf);
	R0 = 956;
	R0 = R7 + R0;
.LN1366:
// line 2211
	CALL.X (_Transf);
.LN1367:
// line 2212
	R0 = R7;
	CALL.X (_Transf);
.LN1368:
// line 2215
	R7 = [SP + 12];
	UNLINK;
	R0 = 1;
	// -- 3 stalls --
	RTS;
.LN._init_K611.end:
._init_K611.end:
	.global _init_K611;
	.type _init_K611,STT_FUNC;

	.align 2;
_control_K611:
.LN_control_K611:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 24 
//  Scratch registers used: {R0}
//  Call preserved registers used: {R7,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2220
	LINK 16;
	[SP + 12] = R7;
	R7.L = .s.6;
	R7.H = .s.6;
.LN1369:
// line 2221
	R0 = R7;
	CALL.X (_Transf);
	R0.L = .s6contr.162;
	R0.H = .s6contr.162;
.LN1370:
// line 2222
	CALL.X (_Transf);
.LN1371:
// line 2223
	R0 = R7;
	CALL.X (_Transf);
.LN1372:
// line 2226
	R7 = [SP + 12];
	UNLINK;
	R0 = 1;
	// -- 3 stalls --
	RTS;
.LN._control_K611.end:
._control_K611.end:
	.global _control_K611;
	.type _control_K611,STT_FUNC;

	.align 2;
_init_K612:
.LN_init_K612:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 24 
//  Scratch registers used: {R0,ASTAT0-ASTAT1}
//  Call preserved registers used: {R7,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2232
	LINK 16;
	[SP + 12] = R7;
	R7.L = .s.6;
	R7.H = .s.6;
.LN1373:
// line 2233
	R0 = R7;
	CALL.X (_Transf);
	R0 = 972;
	R0 = R7 + R0;
.LN1374:
// line 2234
	CALL.X (_Transf);
.LN1375:
// line 2235
	R0 = R7;
	CALL.X (_Transf);
.LN1376:
// line 2237
	R7 = [SP + 12];
	UNLINK;
	R0 = 1;
	// -- 3 stalls --
	RTS;
.LN._init_K612.end:
._init_K612.end:
	.global _init_K612;
	.type _init_K612,STT_FUNC;

	.align 2;
_control_K612:
.LN_control_K612:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 24 
//  Scratch registers used: {R0,ASTAT0-ASTAT1}
//  Call preserved registers used: {R7,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2243
	LINK 16;
	[SP + 12] = R7;
	R7.L = .s.6;
	R7.H = .s.6;
.LN1377:
// line 2244
	R0 = R7;
	CALL.X (_Transf);
	R0 = 988;
	R0 = R7 + R0;
.LN1378:
// line 2245
	CALL.X (_Transf);
.LN1379:
// line 2246
	R0 = R7;
	CALL.X (_Transf);
.LN1380:
// line 2248
	R7 = [SP + 12];
	UNLINK;
	R0 = 1;
	// -- 3 stalls --
	RTS;
.LN._control_K612.end:
._control_K612.end:
	.global _control_K612;
	.type _control_K612,STT_FUNC;

	.align 2;
_init_K613:
.LN_init_K613:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 24 
//  Scratch registers used: {R0,ASTAT0-ASTAT1}
//  Call preserved registers used: {R7,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2253
	LINK 16;
	[SP + 12] = R7;
	R7.L = .s.6;
	R7.H = .s.6;
.LN1381:
// line 2254
	R0 = R7;
	CALL.X (_Transf);
	R0 = 1004;
	R0 = R7 + R0;
.LN1382:
// line 2255
	CALL.X (_Transf);
.LN1383:
// line 2256
	R0 = R7;
	CALL.X (_Transf);
.LN1384:
// line 2258
	R7 = [SP + 12];
	UNLINK;
	R0 = 1;
	// -- 3 stalls --
	RTS;
.LN._init_K613.end:
._init_K613.end:
	.global _init_K613;
	.type _init_K613,STT_FUNC;

	.align 2;
_control_K613:
.LN_control_K613:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 24 
//  Scratch registers used: {R0,ASTAT0-ASTAT1}
//  Call preserved registers used: {R7,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2263
	LINK 16;
	[SP + 12] = R7;
	R7.L = .s.6;
	R7.H = .s.6;
.LN1385:
// line 2264
	R0 = R7;
	CALL.X (_Transf);
	R0 = 1020;
	R0 = R7 + R0;
.LN1386:
// line 2265
	CALL.X (_Transf);
.LN1387:
// line 2266
	R0 = R7;
	CALL.X (_Transf);
.LN1388:
// line 2268
	R7 = [SP + 12];
	UNLINK;
	R0 = 1;
	// -- 3 stalls --
	RTS;
.LN._control_K613.end:
._control_K613.end:
	.global _control_K613;
	.type _control_K613,STT_FUNC;

	.align 2;
_control_K615:
.LN_control_K615:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 24 
//  Scratch registers used: {R0,P1,ASTAT0-ASTAT1}
//  Call preserved registers used: {R7,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2394
	LINK 16;
	[SP + 12] = R7;
.LN1389:
// line 2395
	P1 = 1792 /* -4192512 */;
	P1.H = -64 /* -4192512 */;
	R0 = W[P1] (X);
	BITSET(R0, 10);
	R7.L = .s.6;
	R7.H = .s.6;
	W[P1] = R0.L;
.LN1390:
// line 2396
	R0 = R7;
	CALL.X (_Transf);
	R0 = 1036;
	R0 = R7 + R0;
.LN1391:
// line 2397
	CALL.X (_Transf);
	R0 = 1048;
	R0 = R7 + R0;
.LN1392:
// line 2399
	CALL.X (_Transf);
.LN1393:
// line 2400
	R0 = R7;
	CALL.X (_Transf);
	R0 = 1052;
	R0 = R7 + R0;
.LN1394:
// line 2401
	CALL.X (_Transf);
.LN1395:
// line 2403
	R7 = [SP + 12];
	UNLINK;
	R0 = 1;
	// -- 3 stalls --
	RTS;
.LN._control_K615.end:
._control_K615.end:
	.global _control_K615;
	.type _control_K615,STT_FUNC;

	.align 2;
_K615_out:
.LN_K615_out:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 16 
//  Scratch registers used: {R0-R1,P1,ASTAT0-ASTAT1}
//  Call preserved registers used: {R6-R7,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2546
	LINK 0;
	[--SP] = (R7:6);
	SP += -12;
	P1.L = _FLAG_EVENT_K615_RZRV;
	P1.H = _FLAG_EVENT_K615_RZRV;
.LN1396:
// line 2551
	R0 = 0;
	R7.L = .s.6;
	R7.H = .s.6;
	B[P1] = R0;
.LN1397:
// line 2553
	R0 = R7;
	CALL.X (_Transf);
	R0 = 1056;
	R0 = R7 + R0;
.LN1398:
// line 2554
	CALL.X (_Transf);
	R6.L = _crc_outport;
	R6.H = _crc_outport;
	R0 = 4;
	R0 = R6 + R0;
.LN1399:
// line 2555
	R1 = 6;
	CALL.X (_ZTransf);
	R0 = 1068;
	R0 = R7 + R0;
.LN1400:
// line 2556
	CALL.X (_Transf);
.LN1401:
// line 2557
	R0 = R6;
	R1 = 1;
	CALL.X (_ZTransf);
	R0 = 1048;
	R0 = R7 + R0;
.LN1402:
// line 2558
	CALL.X (_Transf);
.LN1403:
// line 2559
	R0 = R7;
	CALL.X (_Transf);
.LN1404:
// line 2560
	R0 = R7;
	CALL.X (_Transf);
.LN1405:
// line 2571
	SP += 12;
	(R7:6) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._K615_out.end:
._K615_out.end:
	.global _K615_out;
	.type _K615_out,STT_FUNC;

	.align 2;
_K615_test_indi:
.LN_K615_test_indi:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 32 
//  Scratch registers used: {R0-R3,P0-P1,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {R7,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//Inlined in _K615_test_indi:
//  ..\BFcom\main.c:2368:8'_ssync
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2340
	LINK 24;
.LN1406:
// line 2352
	R1 = 9;
.LN1407:
// line 2340
	[SP + 12] = R7;
.LN1408:
// line 2345
	R3 = -1;
.LN1409:
// line 2352
	CC = R0 < R1;
.LN1410:
// line 2345
	B[SP + 16] = R3;
.LN1411:
// line 2346
	B[SP + 17] = R3;
.LN1412:
// line 2349
	B[SP + 20] = R3;
.LN1413:
// line 2350
	B[SP + 21] = R3;
.LN1414:
// line 2352
	if !CC jump .P361L2 ;

.P361L1:
.LN1415:
	R1 = 1;
	R1 <<= R0;
.LN1416:
	R1 = ~ R1;
	B[SP + 18] = R1;
	jump.s .P361L3;

.P361L2:
.LN1417:
	B[SP + 18] = R3;

.P361L3:
.LN1418:
// line 2353
	R1 = 8;
	CC = R1 < R0;
	if !CC jump .P361L5 ;

.P361L4:
	R1 = R0;
.LN1419:
	R1 += -9;
	R2 = 1;
	R2 <<= R1;
.LN1420:
	R1 = ~ R2;
	B[SP + 19] = R1;
	jump.s .P361L6;

.P361L5:
.LN1421:
	B[SP + 19] = R3;

.P361L6:
.LN1422:
// line 2354
	CC = R0 == 0;
	if !CC jump .P361L9 ;

.P361L7:
.LN1423:
	B[SP + 19] = R3;
.LN1424:
	R0 = -2;
	B[SP + 18] = R0;

.P361L9:
	P1 = FP;
	P1 += -8;
	P0 = 6;
.LN1425:
// line 2362
	R1 = 126;
	R2 = 59;
	LOOP .P361L11L LC0 = P0;

.P361L11:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 2360 col 1
//-------------------------------------------------------------------
//   Trip Count  = 6
//-------------------------------------------------------------------
	LOOP_BEGIN .P361L11L;
	R0 = B[P1++] (X);
	CC = R0 == R1;
	if CC jump .P361L13 ;

.P361L16:
	CC = R0 == R2;
	if !CC jump .P361L15 ;

.P361L13:
.LN1426:
	BITSET(R0, 7);
	B[P1 + -1] = R0;

.P361L15:
	NOP;
.LN1427:
// line 2360
	LOOP_END .P361L11L;
//-------------------------------------------------------------------
//   End Loop L11
//-------------------------------------------------------------------

.P361L23:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	R0 = [SP + 16];
	R1 = R0 >>> 8;
.LN1428:
// line 2365
	R1 = R0 ^ R1;
	R0.L = R0.H << 0;
	R1 = R1 ^ R0;
	R0.L = R0.H >>> 8;
	R0 = R0 ^ R1;
	R1 = W[SP + 20] (X);
	R0 = R0 ^ R1;
	R1 >>>= 8;
	R0 = R1 ^ R0;
	B[SP + 36] = R0;
	R7.L = .s.6;
	R7.H = .s.6;
.LN1429:
// line 2369
	R0 = R7;
.LN1430:
// line 2368
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN1431:
// line 2369
	CALL.X (_Transf);
	R0 = 1056;
	R0 = R7 + R0;
.LN1432:
// line 2370
	CALL.X (_Transf);
.LN1433:
// line 2340
	R0 = FP;
.LN1434:
// line 2371
	R0 += -8;
	R1 = 6;
	CALL.X (_ZTransf);
	R0 = 1068;
	R0 = R7 + R0;
.LN1435:
// line 2372
	CALL.X (_Transf);
.LN1436:
// line 2340
	R0 = FP;
.LN1437:
// line 2373
	R0 += 12;
	R1 = 1;
	CALL.X (_ZTransf);
	R0 = 1048;
	R0 = R7 + R0;
.LN1438:
// line 2374
	CALL.X (_Transf);
.LN1439:
// line 2375
	R0 = R7;
	CALL.X (_Transf);
.LN1440:
// line 2376
	R0 = R7;
	CALL.X (_Transf);
.LN1441:
// line 2389
	CALL.X (_UART_DMA_TX);
.LN1442:
// line 2390
	R7 = [SP + 12];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._K615_test_indi.end:
._K615_test_indi.end:
	.global _K615_test_indi;
	.type _K615_test_indi,STT_FUNC;

	.align 2;
_tst_out:
.LN_tst_out:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 28 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {R5-R7,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2785
	LINK 8;
	P1 = FP;
	[--SP] = (R7:5);
	P1 += -8;
	P2 = 6;
	SP += -12;
	P0 = P1;
.LN1443:
// line 2801
	R2 = -1;
	LOOP .P362L2L LC0 = P2;

.P362L2:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 2801 col 4
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in estimated 1 cycle.
//-------------------------------------------------------------------
//   Trip Count  = 6
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   1 out of    1 (100.0%)
//     Store               used   1 out of    1 (100.0%)
//     16-bit Instruction  used   1 out of    2 ( 50.0%)
//-------------------------------------------------------------------
//  This loop was not modulo scheduled because it was optimized for space.
//-------------------------------------------------------------------
	LOOP_BEGIN .P362L2L;
	B[P0++] = R2;
.LN1444:
	LOOP_END .P362L2L;
//-------------------------------------------------------------------
//   End Loop L2
//-------------------------------------------------------------------

.P362L53:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN1445:
// line 2808
	CC = R0 == 1;
	R1 = -9;
	if CC jump .P362L6 ;

.P362L5:
.LN1446:
	CC = R0 == 2;
	R1 = -17;
	if CC jump .P362L6 ;

.P362L8:
.LN1447:
	CC = R0 == 3;
	R1 = -1;
	R3 = -25;
	IF CC R1 = R3;

.P362L6:
.LN1448:
// line 2809
	R3 = 4;
	CC = R0 == R3;
	R7 = -33;
	R3 = -33;
	if CC jump .P362L15 ;

.P362L14:
	R3 = -65;
.LN1449:
	R6 = 5;
	CC = R0 == R6;
	if CC jump .P362L15 ;

.P362L17:
	R3 = -1;
	R6 = -97;
.LN1450:
	R5 = 6;
	CC = R0 == R5;
	IF CC R3 = R6;

.P362L15:
.LN1451:
// line 2810
	R6 = 7;
	CC = R0 == R6;
	if CC jump .P362L24 ;

.P362L23:
	R7 = -2;
.LN1452:
	R6 = 8;
	CC = R0 == R6;
	if CC jump .P362L24 ;

.P362L26:
	R7 = -1;
.LN1453:
	R2 = 9;
	CC = R0 == R2;
	R2 = -34;
	IF CC R7 = R2;

.P362L24:
	R2 = -3;
.LN1454:
// line 2811
	R6 = 10;
	CC = R0 == R6;
	if CC jump .P362L33 ;

.P362L32:
	R2 = -5;
.LN1455:
	R6 = 11;
	CC = R0 == R6;
	if CC jump .P362L33 ;

.P362L35:
	R2 = R7;
	R7 = 127;
.LN1456:
	R6 = 12;
	CC = R0 == R6;
	IF CC R2 = R7;

.P362L33:
.LN1457:
// line 2813
	R0 = R1 & R3;
	B[SP + 26] = R0;
.LN1458:
// line 2814
	B[SP + 27] = R2;
.LN1459:
// line 2818
	R1 = 126;
	R2 = 59;
	LOOP .P362L41L LC0 = P2;

.P362L41:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 2816 col 11
//-------------------------------------------------------------------
//   Trip Count  = 6
//-------------------------------------------------------------------
	LOOP_BEGIN .P362L41L;
	R0 = B[P1++] (X);
	CC = R0 == R1;
	if CC jump .P362L43 ;

.P362L46:
	CC = R0 == R2;
	if !CC jump .P362L45 ;

.P362L43:
.LN1460:
	BITSET(R0, 7);
	B[P1 + -1] = R0;

.P362L45:
	NOP;
.LN1461:
// line 2816
	LOOP_END .P362L41L;
//-------------------------------------------------------------------
//   End Loop L41
//-------------------------------------------------------------------

.P362L55:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	R0 = [SP + 24];
	R1 = R0 >>> 8;
.LN1462:
// line 2822
	R1 = R0 ^ R1;
	R0.L = R0.H << 0;
	R1 = R1 ^ R0;
	R0.L = R0.H >>> 8;
	R0 = R0 ^ R1;
	R1 = W[SP + 28] (X);
	R0 = R0 ^ R1;
	R1 >>>= 8;
	R0 = R1 ^ R0;
	B[SP + 40] = R0;
.LN1463:
// line 2824
	P1 = 1792 /* -4192512 */;
	P1.H = -64 /* -4192512 */;
	R0 = W[P1] (X);
	BITSET(R0, 10);
	R7.L = .s.6;
	R7.H = .s.6;
	W[P1] = R0.L;
.LN1464:
// line 2825
	R0 = R7;
	CALL.X (_Transf);
	R0 = 1056;
	R0 = R7 + R0;
.LN1465:
// line 2826
	CALL.X (_Transf);
.LN1466:
// line 2785
	R0 = FP;
.LN1467:
// line 2827
	R0 += -8;
	R1 = 6;
	CALL.X (_ZTransf);
	R0 = 1068;
	R0 = R7 + R0;
.LN1468:
// line 2828
	CALL.X (_Transf);
.LN1469:
// line 2785
	R0 = FP;
.LN1470:
// line 2829
	R0 += 8;
	R1 = 1;
	CALL.X (_ZTransf);
	R0 = 1048;
	R0 = R7 + R0;
.LN1471:
// line 2830
	CALL.X (_Transf);
.LN1472:
// line 2831
	R0 = R7;
	CALL.X (_Transf);
	R0 = 1052;
	R0 = R7 + R0;
.LN1473:
// line 2832
	CALL.X (_Transf);
.LN1474:
// line 2843
	CALL.X (_UART_DMA_TX);
.LN1475:
// line 2844
	SP += 12;
	(R7:5) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._tst_out.end:
._tst_out.end:
	.global _tst_out;
	.type _tst_out,STT_FUNC;

	.align 2;
_UDP_TCP_setup:
.LN_UDP_TCP_setup:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0,P1}
//  Call preserved registers used: {FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4824
	LINK 12;
.LN1476:
// line 4826
	CALL.X (_Set_network);
	P1.L = _UDP_TCP_flag;
	P1.H = _UDP_TCP_flag;
.LN1477:
// line 4827
	R0 = 1;
	B[P1] = R0;
.LN1478:
// line 4829
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._UDP_TCP_setup.end:
._UDP_TCP_setup.end:
	.global _UDP_TCP_setup;
	.type _UDP_TCP_setup,STT_FUNC;

	.align 2;
_n_out:
.LN_n_out:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 24 
//  Scratch registers used: {R0-R1}
//  Call preserved registers used: {R7,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4862
	LINK 16;
	[SP + 12] = R7;
	R7 = R1;
.LN1479:
// line 4863
	CALL.X (_put_str1);
.LN1480:
// line 4864
	R0 = R7;
	R7.L = _strng;
	R7.H = _strng;
	R1 = R7;
	CALL.X (_itoa);
.LN1481:
// line 4865
	R0 = R7;
	CALL.X (_put_str1);
	R0.L = .s.12;
	R0.H = .s.12;
.LN1482:
// line 4866
	CALL.X (_put_str1);
.LN1483:
// line 4867
	R7 = [SP + 12];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._n_out.end:
._n_out.end:
	.global _n_out;
	.type _n_out,STT_FUNC;

	.align 2;
_packet_TRSL:
.LN_packet_TRSL:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 92 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {R4-R7,P3-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
.LN1484:
// line "..\BFcom\main.c":5058
	R0.H = 120;
	R0 = R0.L * R0.H (FU);
	R0 = R1 + R0;
	P2 = R0;
.LN1485:
// line 5047
	LINK 56;
	[--SP] = (R7:4, P5:3);
	SP += -12;
.LN1486:
// line 5054
	P4 = 1572 /* -4192732 */;
	P4.H = -64 /* -4192732 */;
	R0 = [P4];
	P0.L = _packet;
	P0.H = _packet;
	P5.L = _tst_time6;
	P5.H = _tst_time6;
	P3 = 26;
	[P5] = R0;
	P1 = P0;
	LOOP .P369L2L LC0 = P3;

.P369L2:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 5056 col 1
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in estimated 8 cycles.
//-------------------------------------------------------------------
//   Trip Count  = 26
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   8 out of    8 (100.0%)
//     16-bit Instruction  used  14 out of   16 ( 87.5%)
//     32-bit Instruction  used   6 out of    8 ( 75.0%)
//     Store               used   4 out of    8 ( 50.0%)
//-------------------------------------------------------------------
//  This loop was not modulo scheduled because it was optimized for space.
//-------------------------------------------------------------------
	LOOP_BEGIN .P369L2L;
.LN1487:
// line 5058
	R0 = B[P2++] (X);
	B[P1++] = R0;
.LN1488:
// line 5059
	R0 = B[P2 + 25] (X);
	B[P1 + 35] = R0;
.LN1489:
// line 5060
	R0 = B[P2 + 51] (X);
	B[P1 + 71] = R0;
.LN1490:
// line 5061
	R0 = B[P2 + 77] (X);
	B[P1 + 107] = R0;
.LN1491:
// line 5056
	LOOP_END .P369L2L;
//-------------------------------------------------------------------
//   End Loop L2
//-------------------------------------------------------------------

.P369L99:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN1492:
// line 5069
	R5 = 4;
	[FP + 16] = R5;
	R6 = [P0];
	R1 = R6 >> 4;
	P2.L = _Mem1;
	P2.H = _Mem1;
.LN1493:
// line 5070
	R3 = 15;
	R2 = 4;
	R3 = R6 & R3;
.LN1494:
// line 5069
	R7 = B[P2] (Z);
	R0 = PACK(R1.L, R2.L);
.LN1495:
// line 5072
	R6 = 5;
.LN1496:
// line 5069
	R0 = DEPOSIT(R7, R0);
.LN1497:
// line 5072
	CC = R3 == R6;
.LN1498:
// line 5069
	B[P2] = R0;
.LN1499:
// line 5072
	if CC jump .P369L4 ;

.P369L7:
	R0 = 12;
	CC = R3 == R0;
	if !CC jump .P369L6 ;

.P369L4:
.LN1500:
	R0 = PACK(R3.L, R0.L);
	R0.L = 1028;
	R1 = B[P2 + 30] (Z);
	R0 = DEPOSIT(R1, R0);
	B[P2 + 30] = R0;

.P369L6:
.LN1501:
// line 5074
	R4 = 2;
	[FP + -4] = R4;
	R7 = [P0 + 36];
	R1 = R7 >> 6;
	R3.H = R1.L << 0;
	R1 = 2;
	R3.L = R1.L << 0;
.LN1502:
// line 5075
	R1 = R7 >> 2;
	R0.H = R1.L << 0;
.LN1503:
// line 5078
	R1 = B[P0 + 72] (Z);
	R5 = R1 >>> 4;
.LN1504:
// line 5079
	CC = R5 == R6;
.LN1505:
// line 5074
	R6 = B[P2 + 1] (Z);
	R3 = DEPOSIT(R6, R3);
	R3 = R3.b (Z);
.LN1506:
// line 5075
	R0.L = 516;
.LN1507:
// line 5076
	R4 = 3;
.LN1508:
// line 5075
	R0 = DEPOSIT(R3, R0);
.LN1509:
// line 5076
	R7 = R7 & R4;
.LN1510:
// line 5075
	B[P2 + 1] = R0;
.LN1511:
// line 5076
	R0 = B[P2 + 2] (Z);
	R2.H = R7.L << 0;
	R0 = DEPOSIT(R0, R2);
	B[P2 + 2] = R0;
.LN1512:
// line 5079
	if CC jump .P369L8 ;

.P369L11:
	R0 = 12;
	CC = R5 == R0;
	if !CC jump .P369L10 ;

.P369L8:
.LN1513:
	R0 = B[P2 + 28] (Z);
	R2.H = R5.L << 0;
	R0 = DEPOSIT(R0, R2);
	B[P2 + 28] = R0;

.P369L10:
.LN1514:
// line 5082
	R4 = [P0 + 108];
.LN1515:
// line 5084
	R6 = PACK(R4.L, R6.L);
.LN1516:
// line 5082
	R0 = R4 >> 4;
.LN1517:
// line 5109
	R4 = 8;
	P1 = P0;
	P0 += 1;
	[FP + 12] = R4;
.LN1518:
// line 5082
	R2.H = R0.L << 0;
.LN1519:
// line 5086
	R4 = B[P0++] (Z);
	R7 = PACK(R4.L, R7.L);
.LN1520:
// line 5109
	R0 = [P2 + 44];
.LN1521:
// line 5087
	R4 = B[P0 + 35] (X);
	B[P2 + 122] = R4;
.LN1522:
// line 5089
	R4 = B[P0 + 107] (Z);
	W[P2 + 106] = R4;
.LN1523:
// line 5082
	R4 = B[P2 + 29] (Z);
	R2 = DEPOSIT(R4, R2);
.LN1524:
// line 5109
	[FP + 8] = R0;
.LN1525:
// line 5082
	R2 = R2.b (Z);
.LN1526:
// line 5081
	R6.L = 1028;
.LN1527:
// line 5084
	R2 = DEPOSIT(R2, R6);
	R5 = 8;
.LN1528:
// line 5081
	R4 = B[P2 + 28] (Z);
	R6 = PACK(R1.L, R6.L);
.LN1529:
// line 5084
	B[P2 + 29] = R2;
.LN1530:
// line 5081
	R4 = DEPOSIT(R4, R6);
.LN1531:
// line 5093
	R2 = B[P0 + 72] (Z);
.LN1532:
// line 5081
	B[P2 + 28] = R4;
.LN1533:
// line 5093
	R0 = B[P0 + 36] (Z);
.LN1534:
// line 5088
	R1 = B[P0 + 71] (Z);
.LN1535:
// line 5093
	R4 = B[P0 + 108] (Z);
	R2 <<= 8;
	R2 = R4 + R2;
.LN1536:
// line 5088
	R1 += 1;
.LN1537:
// line 5093
	R0 <<= 16;
	R6 = B[P0++] (Z);
	R2 = R2 + R0;
	R6 <<= 24;
.LN1538:
// line 5091
	[P5 + 792] = R1;
.LN1539:
// line 5088
	W[P2 + 124] = R1;
.LN1540:
// line 5094
	R1 = B[P0 + 72] (Z);
.LN1541:
// line 5093
	R2 = R2 + R6;
.LN1542:
// line 5094
	R4 = B[P0 + 36] (Z);
	R6 = B[P0 + 108] (Z);
	R1 <<= 8;
	R1 = R6 + R1;
	R4 <<= 16;
	R0 = B[P0++] (Z);
	R4 = R1 + R4;
	R0 <<= 24;
.LN1543:
// line 5093
	[P2 + 164] = R2;
.LN1544:
// line 5095
	R2 = B[P0 + 72] (Z);
.LN1545:
// line 5094
	R0 = R4 + R0;
.LN1546:
// line 5095
	R6 = B[P0 + 36] (Z);
	R4 = B[P0 + 108] (Z);
	R2 <<= 8;
	P3 = 1;
	R2 = R4 + R2;
	R1 = [P0 ++ P3];
	R6 <<= 16;
.LN1547:
// line 5094
	[P2 + 160] = R0;
.LN1548:
// line 5095
	R2 = R2 + R6;
	R1 <<= 24;
.LN1549:
// line 5097
	R0 = B[P0++] (Z);
.LN1550:
// line 5095
	R2 = R2 + R1;
.LN1551:
// line 5098
	R4 = B[P0 + 71] (Z);
.LN1552:
// line 5097
	R6 = B[P0 + 35] (Z);
.LN1553:
// line 5098
	R1 = B[P0 + 107] (Z);
	R4 <<= 8;
.LN1554:
// line 5095
	[P2 + 32] = R2;
.LN1555:
// line 5099
	R2 = B[P0++] (Z);
.LN1556:
// line 5098
	R1 = R4 + R1;
.LN1557:
// line 5099
	R4 = B[P0 + 35] (Z);
	R2 <<= 8;
.LN1558:
// line 5097
	R0 <<= 8;
.LN1559:
// line 5099
	R4 = R2 + R4;
.LN1560:
// line 5097
	R0 = R0 + R6;
.LN1561:
// line 5099
	[P2 + 108] = R4;
.LN1562:
// line 5100
	R6 = B[P0 + 71] (X);
.LN1563:
// line 5086
	R4 = [P2 + 28];
.LN1564:
// line 5100
	R3.H = R6.L << 8;
.LN1565:
// line 5086
	R7.L = 6152;
.LN1566:
// line 5097
	[P2 + 76] = R0;
.LN1567:
// line 5103
	R0 = B[P0 + 72] (Z);
.LN1568:
// line 5086
	R7 = DEPOSIT(R4, R7);
.LN1569:
// line 5100
	R6 = B[P0 + 107] (Z);
.LN1570:
// line 5103
	R2 = B[P0 + 36] (Z);
	R4 = B[P0 + 108] (Z);
	R0 <<= 8;
.LN1571:
// line 5086
	[P2 + 28] = R7;
.LN1572:
// line 5100
	R6.L = R3.H + R6.L (NS);
.LN1573:
// line 5103
	R0 = R4 + R0;
	R2 <<= 16;
	R7 = B[P0++] (Z);
	R0 = R0 + R2;
	R7 <<= 24;
.LN1574:
// line 5100
	W[P2 + 94] = R6;
.LN1575:
// line 5104
	R6 = B[P0 + 72] (Z);
.LN1576:
// line 5103
	R2 = R0 + R7;
.LN1577:
// line 5104
	R4 = B[P0 + 36] (Z);
	R7 = B[P0 + 108] (Z);
	R6 <<= 8;
	R6 = R7 + R6;
	R0 = [P0];
	R4 <<= 16;
	P0 += 37;
	R4 = R6 + R4;
	R0 <<= 24;
.LN1578:
// line 5103
	[P2 + 136] = R2;
.LN1579:
// line 5105
	R2 = B[P0 + 36] (Z);
.LN1580:
// line 5104
	R0 = R4 + R0;
.LN1581:
// line 5105
	R4 = B[P0 + 72] (Z);
	R2 <<= 8;
	R7 = B[P0++] (Z);
	R2 = R4 + R2;
	R6 = B[P0 + -37] (Z);
	R7 <<= 16;
	R4 = R2 + R7;
	R6 <<= 24;
	R6 = R4 + R6;
.LN1582:
// line 5104
	[P2 + 36] = R0;
.LN1583:
// line 5106
	R4 = B[P0 + 72] (Z);
	R0 = B[P0 + 36] (Z);
	R2 = B[P0++] (Z);
	R0 <<= 8;
.LN1584:
// line 5109
	R7 = B[P0 + 36] (Z);
.LN1585:
// line 5106
	R0 = R4 + R0;
	R2 <<= 16;
.LN1586:
// line 5109
	R5 = PACK(R7.L, R5.L);
	R4 = [FP + 8];
.LN1587:
// line 5106
	R2 = R0 + R2;
.LN1588:
// line 5109
	R7 = DEPOSIT(R4, R5);
.LN1589:
// line 5107
	R4 = B[P0] (X);
.LN1590:
// line 5105
	[P2 + 148] = R6;
.LN1591:
// line 5106
	R0 = B[P0 + -37] (Z);
.LN1592:
// line 5110
	R6 = B[P0 + 72] (Z);
.LN1593:
// line 5106
	R0 <<= 24;
.LN1594:
// line 5110
	R3.H = R6.L << 0;
	R3.L = 2056;
.LN1595:
// line 5107
	B[P2 + 126] = R4;
.LN1596:
// line 5114
	R4 = [P5 + 436];
.LN1597:
// line 5106
	R0 = R2 + R0;
.LN1598:
// line 5110
	R7 = DEPOSIT(R7, R3);
.LN1599:
// line 5106
	[P2 + 40] = R0;
.LN1600:
// line 5114
	CC = R1 < R4 (IU);
.LN1601:
// line 5110
	[P2 + 44] = R7;
.LN1602:
// line 5098
	W[P2 + 88] = R1;
.LN1603:
// line 5114
	if !CC jump .P369L14 ;

.P369L12:
.LN1604:
	[P5 + 436] = R1;

.P369L14:
.LN1605:
// line 5115
	R0 = W[P2 + 94] (Z);
	R1 = [P5 + 440];
	CC = R0 < R1 (IU);
	if !CC jump .P369L17 ;

.P369L15:
.LN1606:
	[P5 + 440] = R0;

.P369L17:
.LN1607:
// line 5121
	R4 = B[P1 + 13] (Z);
	R4 <<= 8;
.LN1608:
// line 5123
	R0 = B[P1 + 86] (Z);
.LN1609:
// line 5121
	[FP + -16] = R4;
.LN1610:
// line 5131
	R4 = B[P1 + 126] (Z);
.LN1611:
// line 5123
	R0 <<= 8;
.LN1612:
// line 5125
	R6 = B[P1 + 52] (Z);
.LN1613:
// line 5131
	[FP + 8] = R4;
.LN1614:
// line 5123
	[FP + -24] = R0;
	R0 = B[P1 + 50] (Z);
.LN1615:
// line 5125
	R6 <<= 16;
.LN1616:
// line 5123
	R0 <<= 16;
.LN1617:
// line 5124
	R1 = B[P1 + 87] (Z);
.LN1618:
// line 5125
	[SP + 56] = R6;
.LN1619:
// line 5119
	R6 = B[P1 + 12] (Z);
.LN1620:
// line 5126
	R7 = B[P1 + 89] (Z);
.LN1621:
// line 5123
	[SP + 48] = R0;
.LN1622:
// line 5124
	R1 <<= 8;
.LN1623:
// line 5119
	R6 <<= 8;
.LN1624:
// line 5126
	R7 <<= 8;
.LN1625:
// line 5124
	[FP + -28] = R1;
	R1 = B[P1 + 51] (Z);
.LN1626:
// line 5119
	[FP + -12] = R6;
.LN1627:
// line 5126
	[SP + 60] = R7;
.LN1628:
// line 5128
	R4 = B[P1 + 54] (X);
	R6 = [FP + 8];
.LN1629:
// line 5126
	R7 = B[P1 + 53] (Z);
.LN1630:
// line 5124
	R1 <<= 16;
.LN1631:
// line 5131
	R3.H = R6.L << 0;
.LN1632:
// line 5123
	R6 = [FP + -24];
.LN1633:
// line 5128
	B[P2 + 127] = R4;
.LN1634:
// line 5126
	R7 <<= 16;
.LN1635:
// line 5123
	R4 = B[P1 + 122] (Z);
.LN1636:
// line 5124
	[SP + 44] = R1;
.LN1637:
// line 5126
	[SP + 52] = R7;
.LN1638:
// line 5123
	R4 = R4 + R6;
	R7 = B[P1 + 14] (Z);
	R6 = [SP + 48];
.LN1639:
// line 5125
	R2 = B[P1 + 88] (Z);
.LN1640:
// line 5120
	R1 = B[P1 + 84] (Z);
.LN1641:
// line 5123
	R6 = R4 + R6;
	R7 <<= 24;
.LN1642:
// line 5125
	R2 <<= 8;
.LN1643:
// line 5120
	R1 <<= 8;
.LN1644:
// line 5123
	R6 = R6 + R7;
	[FP + 8] = R4;
.LN1645:
// line 5124
	R7 = B[P1 + 123] (Z);
	R4 = [FP + -28];
.LN1646:
// line 5125
	[FP + -32] = R2;
.LN1647:
// line 5120
	[FP + -20] = R1;
.LN1648:
// line 5123
	[P2 + 140] = R6;
.LN1649:
// line 5124
	R7 = R7 + R4;
	R1 = B[P1 + 15] (Z);
	R6 = [SP + 44];
	R7 = R7 + R6;
	R1 <<= 24;
.LN1650:
// line 5130
	R0 = B[P1 + 90] (Z);
.LN1651:
// line 5124
	R1 = R7 + R1;
.LN1652:
// line 5130
	R5 = PACK(R0.L, R5.L);
.LN1653:
// line 5124
	[P2 + 48] = R1;
.LN1654:
// line 5122
	R0 = B[P1 + 85] (X);
.LN1655:
// line 5125
	R4 = B[P1 + 124] (Z);
	R1 = [FP + -32];
	R0 <<= 8;
	R4 = R4 + R1;
	R6 = [SP + 56];
.LN1656:
// line 5122
	W[SP + 88] = R0;
.LN1657:
// line 5125
	R4 = R4 + R6;
.LN1658:
// line 5126
	R6 = B[P1 + 125] (Z);
	R7 = [SP + 60];
	R7 = R6 + R7;
	R0 = B[P1 + 17] (Z);
	R1 = [SP + 52];
	R7 = R7 + R1;
	R0 <<= 24;
	R0 = R7 + R0;
.LN1659:
// line 5125
	R2 = [P1 + 16];
	R2 <<= 24;
.LN1660:
// line 5126
	[P2 + 52] = R0;
.LN1661:
// line 5130
	R0 = [P2 + 56];
.LN1662:
// line 5125
	R2 = R4 + R2;
.LN1663:
// line 5130
	R0 = DEPOSIT(R0, R5);
.LN1664:
// line 5119
	R4 = [FP + -12];
	R7 = B[P1 + 48] (Z);
.LN1665:
// line 5125
	[P2 + 152] = R2;
.LN1666:
// line 5131
	R0 = DEPOSIT(R0, R3);
.LN1667:
// line 5120
	R2 = [FP + -20];
	R1 = B[P1 + 120] (Z);
.LN1668:
// line 5119
	R7 = R4 + R7;
.LN1669:
// line 5120
	R1 = R2 + R1;
.LN1670:
// line 5131
	[P2 + 56] = R0;
.LN1671:
// line 5121
	R6 = B[P1 + 49] (Z);
.LN1672:
// line 5122
	R0 = B[P1 + 121] (Z);
.LN1673:
// line 5121
	R4 = [FP + -16];
.LN1674:
// line 5122
	R2 = [FP + -8];
.LN1675:
// line 5119
	[P2 + 80] = R7;
.LN1676:
// line 5135
	R7 = [P5 + 436];
.LN1677:
// line 5121
	R6 = R4 + R6;
.LN1678:
// line 5122
	R0.L = R2.L + R0.L (NS);
.LN1679:
// line 5135
	CC = R1 < R7 (IU);
.LN1680:
// line 5121
	[P2 + 112] = R6;
.LN1681:
// line 5120
	W[P2 + 90] = R1;
.LN1682:
// line 5122
	W[P2 + 96] = R0;
.LN1683:
// line 5135
	if !CC jump .P369L20 ;

.P369L18:
.LN1684:
	[P5 + 436] = R1;

.P369L20:
.LN1685:
// line 5136
	R0 = W[P2 + 96] (Z);
	R1 = [P5 + 440];
	CC = R0 < R1 (IU);
	if !CC jump .P369L23 ;

.P369L21:
.LN1686:
	[P5 + 440] = R0;

.P369L23:
.LN1687:
// line 5143
	R0 = B[P1 + 93] (Z);
	R4 = B[P1 + 129] (Z);
	R6 = B[P1 + 57] (Z);
	R0 <<= 8;
	R0 = R4 + R0;
	R6 <<= 16;
	R0 = R0 + R6;
.LN1688:
// line 5144
	R1 = B[P1 + 94] (Z);
.LN1689:
// line 5143
	[FP + -8] = R0;
.LN1690:
// line 5144
	R4 = B[P1 + 58] (Z);
	R1 <<= 8;
	R0 = B[P1 + 130] (Z);
	R1 = R0 + R1;
.LN1691:
// line 5145
	R2 = B[P1 + 95] (Z);
.LN1692:
// line 5144
	R4 <<= 16;
	R1 = R1 + R4;
.LN1693:
// line 5145
	R6 = B[P1 + 59] (Z);
	R0 = B[P1 + 131] (Z);
	R2 <<= 8;
.LN1694:
// line 5146
	R7 = B[P1 + 96] (Z);
.LN1695:
// line 5144
	[FP + 8] = R1;
.LN1696:
// line 5145
	R2 = R0 + R2;
	R6 <<= 16;
.LN1697:
// line 5146
	R4 = B[P1 + 60] (Z);
	R7 <<= 8;
	R1 = B[P1 + 132] (Z);
.LN1698:
// line 5145
	R2 = R2 + R6;
.LN1699:
// line 5146
	R7 = R1 + R7;
	R4 <<= 16;
	R6 = [P1 + 24];
	R4 = R7 + R4;
.LN1700:
// line 5150
	R0 = B[P1 + 97] (Z);
.LN1701:
// line 5146
	R6 <<= 24;
	R4 = R4 + R6;
.LN1702:
// line 5150
	R5 = PACK(R0.L, R5.L);
.LN1703:
// line 5145
	[SP + 48] = R2;
.LN1704:
// line 5143
	R0 = B[P1 + 21] (Z);
.LN1705:
// line 5146
	[P2 + 64] = R4;
.LN1706:
// line 5143
	R0 <<= 24;
	R4 = [FP + -8];
	R0 = R4 + R0;
.LN1707:
// line 5144
	R4 = B[P1 + 22] (Z);
.LN1708:
// line 5143
	[P2 + 144] = R0;
.LN1709:
// line 5144
	R4 <<= 24;
	R0 = [FP + 8];
	R4 = R0 + R4;
.LN1710:
// line 5145
	R0 = B[P1 + 23] (Z);
.LN1711:
// line 5144
	[P2 + 60] = R4;
.LN1712:
// line 5145
	R0 <<= 24;
	R4 = [SP + 48];
	R0 = R4 + R0;
.LN1713:
// line 5140
	R2 = B[P1 + 91] (Z);
.LN1714:
// line 5145
	[P2 + 156] = R0;
.LN1715:
// line 5140
	R2 <<= 8;
	R0 = B[P1 + 127] (Z);
.LN1716:
// line 5139
	R1 = B[P1 + 19] (Z);
.LN1717:
// line 5140
	R2 = R2 + R0;
.LN1718:
// line 5139
	R1 <<= 8;
	R0 = B[P1 + 55] (Z);
.LN1719:
// line 5141
	R7 = B[P1 + 20] (Z);
.LN1720:
// line 5139
	R1 = R1 + R0;
.LN1721:
// line 5141
	R7 <<= 8;
	R0 = B[P1 + 56] (Z);
	R7 = R7 + R0;
.LN1722:
// line 5151
	R4 = B[P1 + 133] (Z);
.LN1723:
// line 5150
	R0 = [P2 + 68];
.LN1724:
// line 5142
	R6 = [P1 + 92];
.LN1725:
// line 5151
	R3.H = R4.L << 0;
.LN1726:
// line 5150
	R0 = DEPOSIT(R0, R5);
.LN1727:
// line 5142
	R6.H = R6.L << 8;
	R4 = B[P1 + 128] (Z);
.LN1728:
// line 5141
	[P2 + 116] = R7;
.LN1729:
// line 5155
	R7 = [P5 + 436];
.LN1730:
// line 5139
	[P2 + 84] = R1;
.LN1731:
// line 5151
	R0 = DEPOSIT(R0, R3);
.LN1732:
// line 5142
	R6.L = R6.H + R4.L (NS);
.LN1733:
// line 5148
	R1 = B[P1 + 61] (X);
.LN1734:
// line 5155
	CC = R2 < R7 (IU);
.LN1735:
// line 5151
	[P2 + 68] = R0;
.LN1736:
// line 5148
	B[P2 + 128] = R1;
.LN1737:
// line 5140
	W[P2 + 92] = R2;
.LN1738:
// line 5142
	W[P2 + 98] = R6;
.LN1739:
// line 5155
	if !CC jump .P369L26 ;

.P369L24:
.LN1740:
	[P5 + 436] = R2;

.P369L26:
.LN1741:
// line 5156
	R0 = W[P2 + 98] (Z);
	R2 = [P5 + 440];
	CC = R0 < R2 (IU);
	if !CC jump .P369L29 ;

.P369L27:
.LN1742:
	[P5 + 440] = R0;

.P369L29:
.LN1743:
// line 5158
	R6 = B[P2 + 126] (Z);
	R3 = 1;
	R0 = R6 & R3;
.LN1744:
// line 5159
	R2 = 2;
.LN1745:
// line 5158
	CC = R0 == 1;
.LN1746:
// line 5159
	R2 = R6 & R2;
	R0 = CC;
	CC = R2 == 2;
.LN1747:
// line 5158
	B[P5 + 583] = R0;
	R2 = CC;
.LN1748:
// line 5160
	R0 = 4;
.LN1749:
// line 5159
	B[P5 + 590] = R2;
.LN1750:
// line 5160
	R0 = R6 & R0;
	R2 = 4;
	CC = R0 == R2;
	CC = ! CC;
	R0 = CC;
.LN1751:
// line 5161
	R2 = 8;
	[SP + 40] = R0;
.LN1752:
// line 5160
	B[P5 + 444] = R0;
.LN1753:
// line 5161
	R2 = R6 & R2;
	R0 = 8;
	CC = R2 == R0;
	CC = ! CC;
	R0 = CC;
.LN1754:
	B[P5 + 592] = R0;
.LN1755:
// line 5173
	R0 = 2;
	R0 = R1 & R0;
	[FP + -8] = R0;
.LN1756:
// line 5174
	R0 = 4;
	R0 = R1 & R0;
.LN1757:
// line 5162
	R4 = 16;
.LN1758:
// line 5161
	[SP + 48] = R2;
.LN1759:
// line 5172
	R2 = R1 & R3;
.LN1760:
// line 5174
	[FP + -16] = R0;
.LN1761:
// line 5162
	R0 = R6 & R4;
.LN1762:
// line 5172
	[FP + 8] = R2;
.LN1763:
// line 5166
	R2 = 2;
.LN1764:
// line 5165
	R7 = B[P2 + 127] (Z);
.LN1765:
// line 5162
	CC = R0 == R4;
.LN1766:
// line 5163
	R5 = 32;
.LN1767:
// line 5166
	R2 = R7 & R2;
	CC = ! CC;
.LN1768:
// line 5163
	R6 = R6 & R5;
.LN1769:
// line 5166
	[FP + -4] = R2;
.LN1770:
// line 5175
	R2 = 8;
	R0 = CC;
.LN1771:
// line 5163
	CC = R6 == R5;
.LN1772:
// line 5175
	R2 = R1 & R2;
	CC = ! CC;
	[FP + -12] = R2;
	R2 = CC;
.LN1773:
// line 5163
	B[P5 + 587] = R2;
.LN1774:
// line 5176
	R6 = R1 & R4;
.LN1775:
// line 5165
	R2 = R7 & R3;
.LN1776:
// line 5176
	[FP + -20] = R6;
.LN1777:
// line 5165
	CC = R2 == 1;
.LN1778:
// line 5166
	R6 = [FP + -4];
	R2 = CC;
.LN1779:
// line 5177
	R1 = R1 & R5;
.LN1780:
// line 5166
	CC = R6 == 2;
.LN1781:
// line 5177
	[SP + 48] = R1;
	R6 = CC;
.LN1782:
// line 5167
	R1 = 4;
.LN1783:
// line 5166
	B[P5 + 595] = R6;
.LN1784:
// line 5167
	R1 = R7 & R1;
	R6 = 4;
	CC = R1 == R6;
.LN1785:
// line 5165
	B[P5 + 594] = R2;
.LN1786:
// line 5168
	R2 = 8;
	CC = ! CC;
	R2 = R7 & R2;
	R6 = 8;
	R1 = CC;
	CC = R2 == R6;
	CC = ! CC;
.LN1787:
// line 5169
	R6 = R7 & R4;
	R2 = CC;
	CC = R6 == R4;
	CC = ! CC;
.LN1788:
// line 5167
	B[P5 + 445] = R1;
.LN1789:
// line 5170
	R1 = R7 & R5;
	R6 = CC;
	CC = R1 == R5;
	CC = ! CC;
.LN1790:
// line 5168
	B[P5 + 597] = R2;
.LN1791:
// line 5172
	R2 = [FP + 8];
	R1 = CC;
	CC = R2 == 1;
.LN1792:
// line 5173
	R7 = [FP + -8];
	R2 = CC;
	CC = R7 == 2;
.LN1793:
// line 5169
	B[P5 + 585] = R6;
.LN1794:
// line 5170
	B[P5 + 588] = R1;
.LN1795:
// line 5174
	R6 = [FP + -16];
	R1 = 4;
	R7 = CC;
	CC = R6 == R1;
	CC = ! CC;
.LN1796:
// line 5172
	B[P5 + 599] = R2;
.LN1797:
// line 5175
	R6 = 8;
	R2 = [FP + -12];
	R1 = CC;
	CC = R2 == R6;
	CC = ! CC;
.LN1798:
// line 5173
	B[P5 + 600] = R7;
.LN1799:
// line 5176
	R7 = [FP + -20];
	R2 = CC;
	CC = R7 == R4;
	CC = ! CC;
.LN1800:
// line 5177
	R6 = [SP + 48];
	R7 = CC;
	CC = R6 == R5;
	CC = ! CC;
.LN1801:
// line 5181
	R4 = [SP + 40];
.LN1802:
// line 5174
	B[P5 + 446] = R1;
	R1 = CC;
.LN1803:
// line 5181
	CC = R4 == 1;
.LN1804:
// line 5162
	B[P5 + 584] = R0;
.LN1805:
// line 5175
	B[P5 + 602] = R2;
.LN1806:
// line 5176
	B[P5 + 586] = R7;
.LN1807:
// line 5177
	B[P5 + 589] = R1;
.LN1808:
// line 5181
	if !CC jump .P369L86 ;

.P369L84:
.LN1809:
	[P5 + 448] = R3;

.P369L86:
.LN1810:
// line 5183
	CC = R0 == 0;
	if !CC jump .P369L89 (bp);

.P369L87:
	R0.L = .sLCHMIt.172;
	R0.H = .sLCHMIt.172;
.LN1811:
	CALL.X (_put_str1);

.P369L89:
.LN1812:
// line 5184
	R0 = B[P5 + 585] (Z);
	CC = R0 == 0;
	if !CC jump .P369L92 (bp);

.P369L90:
	R0.L = .sLCHMIt.173;
	R0.H = .sLCHMIt.173;
.LN1813:
	CALL.X (_put_str1);

.P369L92:
.LN1814:
// line 5185
	R0 = B[P5 + 585] (Z);
	CC = R0 == 0;
	if !CC jump .P369L95 (bp);

.P369L93:
	R0.L = .sLCHMIt.174;
	R0.H = .sLCHMIt.174;
.LN1815:
	CALL.X (_put_str1);

.P369L95:
.LN1816:
// line 5187
	NOP;                                    // Inserted to fix anomaly w_05000245_with_boundaries. 
	R0 = [P4];
	[P5 + 4] = R0;
.LN1817:
// line 5189
	SP += 12;
	(R7:4, P5:3) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._packet_TRSL.end:
._packet_TRSL.end:
	.global _packet_TRSL;
	.type _packet_TRSL,STT_FUNC;

	.align 2;
_SPORT_COM:
.LN_SPORT_COM:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 16 
//  Scratch registers used: {R0-R1,P1,ASTAT0-ASTAT1}
//  Call preserved registers used: {R7,P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":5228
	LINK 0;
	[--SP] = (R7:7, P5:5);
	SP += -12;
	R0.L = .s.132;
	R0.H = .s.132;
.LN1818:
// line 5241
	CALL.X (_put_str1);
	R7.L = .sAlfa.175;
	R7.H = .sAlfa.175;
	P1.L = _Alfa;
	P1.H = _Alfa;
.LN1819:
// line 5243
	R1 = [P1];
.LN1820:
	R0 = R7;
	CALL.X (_u_out);
	P5.L = _DISP_flag_ERROR_Timp;
	P5.H = _DISP_flag_ERROR_Timp;
	R0 = 8;
	R0 = R7 + R0;
.LN1821:
// line 5244
	R1 = [P5 + 992];
.LN1822:
	CALL.X (_u_out);
	R0 = 24;
	R0 = R7 + R0;
.LN1823:
// line 5245
	R1 = W[P5 + 874] (Z);
.LN1824:
	CALL.X (_u_out);
.LN1825:
// line 5247
	R1 = [P5 + 372];
	R0.L = .sTimebe.178;
	R0.H = .sTimebe.178;
.LN1826:
	CALL.X (_u_out);
	P1.L = _TIME_PACKET_FORM;
	P1.H = _TIME_PACKET_FORM;
.LN1827:
// line 5248
	R1 = [P1];
	R0.L = .sTIMEPA.179;
	R0.H = .sTIMEPA.179;
.LN1828:
	CALL.X (_u_out);
	P1.L = _timer_TOBM;
	P1.H = _timer_TOBM;
	R0 = 36;
	R0 = R7 + R0;
.LN1829:
// line 5249
	R1 = [P1];
.LN1830:
	CALL.X (_u_out);
	P1.L = _flag_1HZ_sync;
	P1.H = _flag_1HZ_sync;
	R0 = 52;
	R0 = R7 + R0;
.LN1831:
// line 5251
	R1 = B[P1] (Z);
.LN1832:
	CALL.X (_u_out);
	P1.L = _flag_END_sync_packet;
	P1.H = _flag_END_sync_packet;
.LN1833:
// line 5254
	R1 = B[P1] (Z);
	R0.L = .sflagEN.182;
	R0.H = .sflagEN.182;
.LN1834:
	CALL.X (_u_out);
	R0 = 68;
	R0 = R7 + R0;
.LN1835:
// line 5255
	R1 = B[P5 + 837] (Z);
.LN1836:
	CALL.X (_u_out);
	R0 = 80;
	R0 = R7 + R0;
.LN1837:
// line 5256
	R1 = B[P5 + 256] (Z);
.LN1838:
	CALL.X (_u_out);
	P1.L = _flag_PPI_sinc;
	P1.H = _flag_PPI_sinc;
	R0 = 96;
	R0 = R7 + R0;
.LN1839:
// line 5257
	R1 = B[P1] (Z);
.LN1840:
	CALL.X (_u_out);
.LN1841:
// line 5258
	R1 = [P5 + 984];
	R0.L = .sMAXUDP.54;
	R0.H = .sMAXUDP.54;
.LN1842:
	CALL.X (_u_out);
	P1.L = _flag_Packet_form;
	P1.H = _flag_Packet_form;
.LN1843:
// line 5259
	R1 = B[P1] (Z);
	R0.L = .sflagPa.186;
	R0.H = .sflagPa.186;
.LN1844:
	CALL.X (_u_out);
	P1.L = _ERROR_status_DMA;
	P1.H = _ERROR_status_DMA;
.LN1845:
// line 5260
	R1 = B[P1] (Z);
	R0.L = .sERRORs.187;
	R0.H = .sERRORs.187;
.LN1846:
	CALL.X (_u_out);
	R0 = 112;
	R0 = R7 + R0;
.LN1847:
// line 5261
	R1 = [P5 + 168];
.LN1848:
	CALL.X (_u_out);
	P1.L = _FLAG_PPI_OK;
	P1.H = _FLAG_PPI_OK;
	R0 = 128;
	R0 = R7 + R0;
.LN1849:
// line 5262
	R1 = B[P1] (Z);
.LN1850:
	CALL.X (_u_out);
	R0 = 144;
	P1.L = _flag_dsp_ok;
	P1.H = _flag_dsp_ok;
	R0 = R7 + R0;
.LN1851:
// line 5263
	R1 = B[P1] (Z);
.LN1852:
	CALL.X (_u_out);
.LN1853:
// line 5264
	R1 = [P5 + 128];
	R0.L = .sschERR.191;
	R0.H = .sschERR.191;
.LN1854:
	CALL.X (_u_out);
	R0 = 160;
	R0 = R7 + R0;
.LN1855:
// line 5265
	R1 = [P5];
.LN1856:
	CALL.X (_u_out);
.LN1857:
// line 5266
	P1 = 52;
	R0 = 0;
	[P5 ++ P1] = R0;
.LN1858:
// line 5267
	R0 = [P5 + 16];
	R1 = [P5 + 12];
	R1 = R0 - R1;
	[P5 + 60] = R1;
	R0.L = .stimede.149;
	R0.H = .stimede.149;
.LN1859:
// line 5268
	CALL.X (_u_out);
.LN1860:
// line 5269
	R0 = [P5 + 24];
	R1 = [P5 + 20];
	R1 = R0 - R1;
	[P5 + 60] = R1;
	R0.L = .stimede.150;
	R0.H = .stimede.150;
.LN1861:
// line 5270
	CALL.X (_u_out);
.LN1862:
// line 5271
	R0 = [P5 + 32];
	R1 = [P5 + 28];
	R1 = R0 - R1;
	[P5 + 60] = R1;
	R0.L = .stimede.151;
	R0.H = .stimede.151;
.LN1863:
// line 5272
	CALL.X (_u_out);
.LN1864:
// line 5273
	SP += 12;
	(R7:7, P5:5) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._SPORT_COM.end:
._SPORT_COM.end:
	.global _SPORT_COM;
	.type _SPORT_COM,STT_FUNC;

	.align 2;
_ERROR_IMP:
.LN_ERROR_IMP:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 24 
//  Scratch registers used: {R0-R1,P1}
//  Call preserved registers used: {P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":5276
	LINK 16;
	[SP + 12] = P5;
	P5.L = _FLAG_ERROR_INTERVALWORK;
	P5.H = _FLAG_ERROR_INTERVALWORK;
	P1 = 71;
	P1 = P5 + P1;
.LN1865:
// line 5279
	R1 = [P1];
	R0.L = .s.193;
	R0.H = .s.193;
.LN1866:
	CALL.X (_u_out);
.LN1867:
// line 5280
	R0 = 1;
	B[P5 + 0] = R0;
.LN1868:
// line 5290
	P5 = [SP + 12];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._ERROR_IMP.end:
._ERROR_IMP.end:
	.global _ERROR_IMP;
	.type _ERROR_IMP,STT_FUNC;

	.align 2;
_Control_Impuls:
.LN_Control_Impuls:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 48 
//  Scratch registers used: {R0-R3,P0-P2,I0,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R4-R7,P4-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":5297
	LINK 16;
	[--SP] = (R7:4, P5:4);
	SP += -12;
	P4.L = _SPORT_VAR;
	P4.H = _SPORT_VAR;
	P5 = R0;
.LN1869:
// line 5312
	R1 = [P4];
.LN1870:
// line 5313
	R0 = B[P4 + 369] (Z);
.LN1871:
// line 5312
	R3 = -113;
	R1 = R1 & R3;
.LN1872:
// line 5313
	R0 <<= 4;
	R0 = R1 | R0;
	[P4] = R0;
.LN1873:
// line 5317
	R2 = -1;
.LN1874:
// line 5315
	CALL.X (_SPORT0_write_read);
.LN1875:
// line 5317
	R2 >>= 13;
.LN1876:
// line 5334
	CC = BITTST(R0, 29);
.LN1877:
// line 5317
	R1 = R0 & R2;
	R2 = CC;
.LN1878:
// line 5333
	CC = BITTST(R0, 28);
.LN1879:
// line 5317
	R1 <<= 9;
	P1.L = _time_TNO;
	P1.H = _time_TNO;
	[P1] = R1;
.LN1880:
// line 5326
	R1 = R0 >> 25;
	R3 = CC;
.LN1881:
// line 5320
	R6 = 1;
.LN1882:
// line 5340
	B[P4 + 365] = R3;
.LN1883:
// line 5327
	R3 = R0 >> 26;
.LN1884:
// line 5339
	B[P4 + 364] = R2;
.LN1885:
// line 5326
	R2 = R1 & R6;
.LN1886:
// line 5327
	R1 = R3 & R6;
.LN1887:
// line 5325
	R7 = R0 >>> 24;
	R3 = R7 & R6;
.LN1888:
// line 5326
	B[P4 + 401] = R2;
.LN1889:
// line 5327
	B[P4 + 393] = R1;
.LN1890:
// line 5329
	R2 <<= 6;
	R1 <<= 7;
.LN1891:
// line 5325
	B[P4 + 400] = R3;
.LN1892:
// line 5329
	R1 = R1 | R2;
	R3 <<= 5;
	R3 = R1 | R3;
.LN1893:
// line 5336
	R1 = R0 >> 31;
.LN1894:
// line 5324
	R7 = R0 >> 23;
.LN1895:
// line 5336
	B[P4 + -252] = R1;
.LN1896:
// line 5324
	R7 = R7 & R6;
.LN1897:
// line 5323
	R1 = R0 >> 22;
	R1 = R1 & R6;
.LN1898:
// line 5322
	R2 = R0 >> 21;
.LN1899:
// line 5324
	B[P4 + 399] = R7;
.LN1900:
// line 5329
	R7 <<= 4;
.LN1901:
// line 5322
	R2 = R2 & R6;
.LN1902:
// line 5323
	B[P4 + 398] = R1;
.LN1903:
// line 5329
	R3 = R3 | R7;
	R1 <<= 3;
.LN1904:
// line 5322
	B[P4 + 397] = R2;
.LN1905:
// line 5329
	R1 = R3 | R1;
	R2 <<= 2;
	R2 = R1 | R2;
.LN1906:
// line 5321
	R1 = R0 >> 20;
	R1 = R1 & R6;
	B[P4 + 396] = R1;
.LN1907:
// line 5329
	R1 <<= 1;
	R1 = R2 | R1;
.LN1908:
// line 5320
	R2 = R0 >> 19;
	R2 = R2 & R6;
.LN1909:
// line 5329
	R1 = R2 | R1;
.LN1910:
// line 5332
	CC = BITTST(R0, 27);
.LN1911:
// line 5320
	B[P4 + 395] = R2;
.LN1912:
// line 5329
	B[P4 + 392] = R1;
	P0.L = _AVARIYA_flag;
	P0.H = _AVARIYA_flag;
.LN1913:
// line 5341
	if !CC jump .P379L8 ;

.P379L7:
.LN1914:
	B[P4 + 366] = R6;
.LN1915:
	R1 = 300;
	[P0] = R1;
	jump.s .P379L9;

.P379L8:
.LN1916:
	R1 = 0;
	B[P4 + 366] = R1;

.P379L9:
.LN1917:
// line 5335
	CC = BITTST(R0, 30);
.LN1918:
// line 5342
	if !CC jump .P379L11 ;

.P379L10:
.LN1919:
	B[P4 + 367] = R6;
.LN1920:
	R0 = 310;
	[P0] = R0;
	jump.s .P379L12;

.P379L11:
.LN1921:
	R0 = 0;
	B[P4 + 367] = R0;

.P379L12:
.LN1922:
// line 5344
	R0 = B[P4 + -252] (Z);
	CC = R0 == 1;
	if !CC jump .P379L15 ;

.P379L17:
	R0 = B[P4 + -207] (Z);
	CC = R0 == 0;
	if !CC jump .P379L15 ;

.P379L16:
	R0 = [P4 + -44];
	R1 = 500;
	CC = R1 < R0 (IU);
	if !CC jump .P379L15 ;

.P379L13:
.LN1923:
	B[P4 + 368] = R6;
.LN1924:
	B[P4 + 65] = R6;

.P379L15:
.LN1925:
// line 5351
	R0 = B[P4 + 364] (Z);
	CC = R0 == 1;
	if !CC jump .P379L20 ;

.P379L18:
.LN1926:
	R0 = 50;
	[P0] = R0;

.P379L20:
.LN1927:
// line 5352
	R0 = B[P4 + 365] (Z);
	CC = R0 == 1;
	if !CC jump .P379L23 ;

.P379L21:
.LN1928:
	R0 = 60;
	[P0] = R0;

.P379L23:
	R1 = [P4 + 364];
.LN1929:
// line 5357
	R2 = B[P4 + 367] (Z);
	R0 = R1;
	B[P4 + 409] = R2;
.LN1930:
// line 5358
	CC = R2 == 1;
	R0 >>>= 8;
.LN1931:
// line 5356
	R2 = B[P4 + 366] (X);
.LN1932:
// line 5354
	B[P4 + 404] = R1;
.LN1933:
// line 5355
	B[P4 + 403] = R0;
.LN1934:
// line 5356
	B[P4 + 402] = R2;
.LN1935:
// line 5358
	if CC jump .P379L24 ;

.P379L27:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R0 = [P0];
	CC = R0 == 0;
	if CC jump .P379L25 ;

.P379L24:
.LN1936:
	B[P4 + 405] = R6;
	jump.s .P379L26;

.P379L25:
.LN1937:
	B[P4 + 405] = R0;

.P379L26:
.LN1938:
// line 5360
	R0 = [P1];
	P0.L = _time_TNO_max;
	P0.H = _time_TNO_max;
	R1 = [P0];
	CC = R1 < R0 (IU);
	if !CC jump .P379L30 ;

.P379L28:
.LN1939:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R0 = [P1];
	[P0] = R0;

.P379L30:
.LN1940:
// line 5361
	R0 = [P1];
	P0.L = _time_TNO_min;
	P0.H = _time_TNO_min;
	R1 = [P0];
	CC = R0 < R1 (IU);
	if !CC jump .P379L33 ;

.P379L31:
.LN1941:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R0 = [P1];
	[P0] = R0;

.P379L33:
.LN1942:
// line 5365
	R0 = [P4];
.LN1943:
	CALL.X (_SPORT0_write_read);
.LN1944:
// line 5367
	R4 = R0 >> 22;
.LN1945:
// line 5370
	R1 = 2;
.LN1946:
	R1 = R4 & R1;
.LN1947:
	R2 = 4;
.LN1948:
	R5 = R1 >>> 1;
	[SP + 40] = R1;
.LN1949:
// line 5365
	R7 = R0;
.LN1950:
// line 5367
	R0 = R4.b (Z);
.LN1951:
// line 5370
	R2 = R4 & R2;
.LN1952:
	R1 = 8;
.LN1953:
	R3 = R4 & R6;
.LN1954:
// line 5367
	[SP + 60] = R0;
.LN1955:
// line 5370
	R1 = R4 & R1;
	[SP + 44] = R2;
	R2 >>>= 2;
	R0 = R3 ^ R5;
	[SP + 36] = R3;
.LN1956:
	R3 = 16;
.LN1957:
	[FP + 16] = R1;
	R1 >>>= 3;
	R2 = R0 ^ R2;
	R3 = R4 & R3;
.LN1958:
	R0 = 32;
.LN1959:
	R1 = R2 ^ R1;
	R0 = R4 & R0;
	R2 = R3 >>> 4;
	[FP + 12] = R3;
	R5 = 64;
	R1 = R1 ^ R2;
	R5 = R4 & R5;
	R3 = R0 >>> 5;
	[SP + 48] = R0;
	R1 = R1 ^ R3;
	R0 = R5 >>> 6;
.LN1960:
// line 5378
	R2 = [SP + 60];
.LN1961:
// line 5370
	R1 = R1 ^ R0;
.LN1962:
// line 5378
	R2 >>>= 7;
.LN1963:
// line 5370
	R1 = R1.b (Z);
.LN1964:
// line 5378
	CC = R1 == R2;
	if CC jump .P379L36 ;

.P379L34:
.LN1965:
	R0 = B[P4 + -56] (X);
	R0 += 1;
	B[P4 + -56] = R0;
.LN1966:
	R0 = [P4 + -52];
	R0 += 1;
	[P4 + -52] = R0;

.P379L36:
	R0 = 7681;
.LN1967:
// line 5380
	R0 = EXTRACT(R7, R0.L) (Z);
	CC = R0 == 1;
	if !CC jump .P379L39 ;

.P379L37:
.LN1968:
	R0 = [P4 + -12];
	R0 += 1;
	[P4 + -12] = R0;

.P379L39:
.LN1969:
// line 5381
	R0 = R7 >> 31;
	CC = R0 == 1;
	if !CC jump .P379L42 ;

.P379L40:
.LN1970:
	R0 = [P4 + -184];
	R0 += 1;
	[P4 + -184] = R0;

.P379L42:
.LN1971:
// line 5383
	R0 = B[P4 + 885] (X);
	R0 += 1;
	B[P4 + 885] = R0;
.LN1972:
// line 5385
	R0 = [P4 + -184];
	CC = R0 == 1;
	if !CC jump .P379L45 (bp);

.P379L43:
.LN1973:
	CALL.X (_ERROR_IMP);

.P379L45:
.LN1974:
// line 5388
	R0 = -1;
	R0 >>= 10;
	R0 = R7 & R0;
	P0.L = _time_TNC;
	P0.H = _time_TNC;
.LN1975:
// line 5390
	[P0] = R0;
.LN1976:
// line 5392
	R0 = [P0];
	P1.L = _time_TNC_max;
	P1.H = _time_TNC_max;
	R1 = [P1];
	CC = R1 < R0 (IU);
	if !CC jump .P379L48 ;

.P379L46:
.LN1977:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R0 = [P0];
	[P1] = R0;

.P379L48:
.LN1978:
// line 5393
	R0 = [P0];
	P1.L = _time_TNC_min;
	P1.H = _time_TNC_min;
	R1 = [P1];
	CC = R0 < R1 (IU);
	if !CC jump .P379L51 ;

.P379L49:
.LN1979:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R0 = [P0];
	[P1] = R0;

.P379L51:
.LN1980:
// line 5397
	CC = !BITTST(R4, 6);
	if !CC jump .P379L54 ;

.P379L52:
.LN1981:
	R0 = 0;
	B[P4 + 659] = R0;

.P379L54:
.LN1982:
// line 5398
	CC = !BITTST(R4, 0);
	if !CC jump .P379L57 ;

.P379L55:
.LN1983:
	R0 = 0;
	B[P4 + 657] = R0;

.P379L57:
.LN1984:
// line 5399
	CC = !BITTST(R4, 5);
	if !CC jump .P379L60 ;

.P379L58:
.LN1985:
	R0 = 0;
	B[P4 + 76] = R0;

.P379L60:
.LN1986:
// line 5400
	CC = !BITTST(R4, 1);
	if !CC jump .P379L63 ;

.P379L61:
.LN1987:
	R0 = 0;
	B[P4 + 656] = R0;

.P379L63:
.LN1988:
// line 5401
	if !CC jump .P379L66 ;

.P379L64:
.LN1989:
	R0 = 0;
	B[P4 + 656] = R0;

.P379L66:
.LN1990:
// line 5402
	CC = !BITTST(R4, 2);
	if !CC jump .P379L69 ;

.P379L67:
.LN1991:
	R0 = 0;
	B[P4 + 655] = R0;

.P379L69:
.LN1992:
// line 5403
	CC = !BITTST(R4, 4);
	if !CC jump .P379L72 ;

.P379L70:
.LN1993:
	R0 = 0;
	B[P4 + 653] = R0;

.P379L72:
.LN1994:
// line 5404
	CC = !BITTST(R4, 3);
	if !CC jump .P379L75 ;

.P379L73:
.LN1995:
	R0 = 0;
	B[P4 + 654] = R0;

.P379L75:
.LN1996:
// line 5406
	R0 = B[P4 + -56] (X);
	CC = R0 == 0;
	if !CC jump .P379L78 ;

.P379L76:
.LN1997:
// line 5409
	BITTGL(R5, 6);
	CC = R5 == 0;
	if !CC jump .P379L81 ;

.P379L79:
.LN1998:
	R0 = B[P4 + 659] (Z);
	CC = R0 == 0;
	if !CC jump .P379L81 ;

.P379L82:
.LN1999:
// line 5411
	B[P4 + 73] = R6;
.LN2000:
// line 5412
	B[P4 + 659] = R6;
.LN2001:
// line 5426
	R0 = B[P4 + 652] (Z);
	CC = R0 == 1;
	if !CC jump .P379L81 ;

.P379L86:
.LN2002:
// line 5429
	B[P4 + 652] = R5;

.P379L81:
.LN2003:
// line 5432
	R0 = [SP + 36];
	CC = R0 == 1;
	I0.L = _timer_TNC1;
	I0.H = _timer_TNC1;
	P2.L = _timer_TOBM;
	P2.H = _timer_TOBM;
	if !CC jump .P379L90 ;

.P379L88:
.LN2004:
	R0 = B[P4 + 657] (Z);
	CC = R0 == 0;
	if !CC jump .P379L90 ;

.P379L91:
.LN2005:
// line 5434
	R0 = [P4 + 104];
	R1 = [P4 + 100];
	CC = R0 < R1 (IU);
	if !CC jump .P379L96 ;

.P379L94:
.LN2006:
	[P4 + 104] = R1;

.P379L96:
.LN2007:
// line 5435
	R0 = [P4 + 108];
	CC = R1 < R0 (IU);
	if !CC jump .P379L99 ;

.P379L97:
.LN2008:
	[P4 + 108] = R1;

.P379L99:
.LN2009:
// line 5436
	R0 = [P4 + -172];
	P1.L = _sch_event_sinhron;
	P1.H = _sch_event_sinhron;
	R1 = [P1];
	CC = R0 < R1;
	if !CC jump .P379L102 ;

.P379L100:
.LN2010:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R0 = [P1];
	[P4 + -172] = R0;

.P379L102:
.LN2011:
// line 5437
	R0 = [P4 + -168];
	R1 = [P1];
	CC = R1 < R0;
	if !CC jump .P379L105 ;

.P379L103:
.LN2012:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R0 = [P1];
	[P4 + -168] = R0;

.P379L105:
.LN2013:
// line 5439
	R2 = 0;
	B[P4 + 76] = R2;
	P1.L = _flag_Packet_form;
	P1.H = _flag_Packet_form;
.LN2014:
// line 5440
	B[P1] = R6;
.LN2015:
// line 5441
	B[P4 + 657] = R6;
.LN2016:
// line 5442
	[P4 + 100] = R2;
.LN2017:
// line 5444
	B[P4 + 659] = R2;
.LN2018:
// line 5443
	R0 = 100;
	[P4 + 24] = R0;
	P1.L = _flag_END_sync_packet;
	P1.H = _flag_END_sync_packet;
.LN2019:
// line 5445
	B[P1] = R6;
.LN2020:
// line 5446
	R0 = [P4 + 812];
	R0 += 1;
	[P4 + 812] = R0;
	P1.L = _FLAG_PPI_OK;
	P1.H = _FLAG_PPI_OK;
.LN2021:
// line 5447
	B[P1] = R6;
.LN2022:
// line 5448
	P1 = 1572 /* -4192732 */;
	P1.H = -64 /* -4192732 */;
	R0 = [P1];
	R1 = [I0];
	R0 = R0 - R1;
	[P2] = R0;
.LN2023:
// line 5451
	R0 = B[P4 + 66] (Z);
	CC = R0 == 1;
	if !CC jump .P379L108 ;

.P379L106:
.LN2024:
// line 5453
	B[P4 + -204] = R2;
.LN2025:
// line 5454
	B[P4 + -203] = R2;

.P379L108:
.LN2026:
// line 5457
	B[P4 + 66] = R2;

.P379L90:
.LN2027:
// line 5461
	R0 = 32;
.LN2028:
	R1 = [SP + 48];
	CC = R1 == R0;
	if !CC jump .P379L111 ;

.P379L109:
.LN2029:
// line 5462
	R0 = B[P4 + 76] (Z);
	CC = R0 == 0;
	if CC jump .P379L112 ;

.P379L111:
.LN2030:
// line 5506
	R0 = [SP + 40];
	CC = R0 == 2;
	if !CC jump .P379L129 ;

.P379L127:
.LN2031:
	R0 = B[P4 + 656] (Z);
	CC = R0 == 0;
	if !CC jump .P379L129 ;

.P379L130:
.LN2032:
// line 5508
	B[P4 + 656] = R6;
.LN2033:
// line 5509
	R1 = 0;
	B[P4 + 655] = R1;
.LN2034:
// line 5513
	R0 = W[P5 + 2246] (Z);
	CC = R0 == 0;
	if CC jump .P379L135 ;

.P379L133:
.LN2035:
// line 5515
	P1 = [P5 + 2100];
	P0 = 2112;
	P0 = P5 + P0;
	R0 = W[P5 + 2244] (Z);
	P1 = P0 + (P1<<1);
	R2 = W[P1] (Z);
	CC = R0 == R2;
	if !CC jump .P379L135 ;

.P379L136:
.LN2036:
// line 5518
	R0 = [P5 + 2100];
	CC = R0 < 4 (IU);
	if !CC jump .P379L141 ;

.P379L139:
.LN2037:
	R0 += 1;
	[P5 + 2100] = R0;

.P379L141:
	P1.L = _flag_PPI_sz2;
	P1.H = _flag_PPI_sz2;
.LN2038:
// line 5519
	B[P1] = R1;

.P379L135:
.LN2039:
// line 5523
	R0 = W[P5 + 2246] (Z);
	R1 = 130;
	CC = R0 < R1 (IU);
	if !CC jump .P379L129 ;

.P379L142:
.LN2040:
	R0 = W[P5 + 2246] (X);
	R0 += 1;
	W[P5 + 2246] = R0;

.P379L129:
.LN2041:
// line 5528
	R0 = 4;
.LN2042:
	R1 = [SP + 44];
	CC = R1 == R0;
	P2.L = _flag_PPI_sinc;
	P2.H = _flag_PPI_sinc;
	if !CC jump .P379L147 ;

.P379L145:
.LN2043:
	R0 = B[P4 + 655] (Z);
	CC = R0 == 0;
	if !CC jump .P379L147 ;

.P379L148:
.LN2044:
// line 5530
	B[P4 + 655] = R6;
.LN2045:
// line 5531
	R0 = 0;
	B[P4 + 656] = R0;
.LN2046:
// line 5533
	R0 = W[P5 + 2244] (Z);
	R1 = 130;
	CC = R0 < R1 (IU);
	if !CC jump .P379L147 ;

.P379L151:
.LN2047:
// line 5535
	R0 = W[P5 + 2244] (X);
	R0 += 1;
	W[P5 + 2244] = R0;
.LN2048:
// line 5536
	R0 = B[P2] (Z);
	R0 += 1;
	B[P2] = R0;

.P379L147:
.LN2049:
// line 5544
	R0 = 16;
.LN2050:
	R1 = [FP + 12];
	CC = R1 == R0;
	if !CC jump .P379L156 ;

.P379L154:
.LN2051:
	R0 = B[P4 + 653] (Z);
	CC = R0 == 0;
	if !CC jump .P379L156 ;

.P379L157:
.LN2052:
// line 5546
	B[P4 + 653] = R6;
.LN2053:
// line 5547
	R0 = 0;
	B[P4 + 654] = R0;
.LN2054:
// line 5550
	R0 = W[P5 + 2240] (Z);
	R1 = 130;
	CC = R0 < R1 (IU);
	if !CC jump .P379L156 ;

.P379L160:
.LN2055:
// line 5552
	R0 = W[P5 + 2240] (X);
	R0 += 1;
	W[P5 + 2240] = R0;
.LN2056:
// line 5553
	R0 = B[P2] (Z);
	R0 += 1;
	B[P2] = R0;

.P379L156:
.LN2057:
// line 5559
	R0 = 8;
.LN2058:
	R1 = [FP + 16];
	CC = R1 == R0;
	if !CC jump .P379L78 ;

.P379L163:
.LN2059:
	R0 = B[P4 + 654] (Z);
	CC = R0 == 0;
	if !CC jump .P379L78 ;

.P379L166:
.LN2060:
// line 5561
	B[P4 + 654] = R6;
.LN2061:
// line 5565
	B[P4 + 884] = R6;
.LN2062:
// line 5566
	B[P4 + -248] = R6;
.LN2063:
// line 5562
	R2 = 0;
	B[P4 + 653] = R2;
.LN2064:
// line 5571
	R0 = W[P5 + 2242] (Z);
	R1 = 130;
	CC = R0 < R1 (IU);
	if !CC jump .P379L78 ;

.P379L169:
.LN2065:
// line 5573
	R0 = W[P5 + 2242] (X);
	R0 += 1;
	W[P5 + 2242] = R0;
.LN2066:
// line 5575
	R1 = [P4 + 88];
.LN2067:
// line 5573
	R0 = R0.L (Z);
.LN2068:
// line 5575
	CC = R0 < R1 (IU);
	if !CC jump .P379L78 ;

.P379L172:
.LN2069:
// line 5577
	P1 = [P5 + 2096];
	P0 = 2106;
	P0 = P5 + P0;
	R0 = W[P5 + 2240] (Z);
	P1 = P0 + (P1<<1);
	R1 = W[P1] (Z);
	CC = R0 == R1;
	if !CC jump .P379L78 ;

.P379L175:
.LN2070:
// line 5579
	R0 = [P5 + 2096];
	CC = R0 < 2 (IU);
	if !CC jump .P379L180 ;

.P379L178:
.LN2071:
	R0 += 1;
	[P5 + 2096] = R0;

.P379L180:
	P1.L = _flag_PPI_sz1;
	P1.H = _flag_PPI_sz1;
.LN2072:
// line 5580
	B[P1] = R2;
.LN2073:
// line 5581
	R0 = B[P2] (Z);
	R0 += 1;
	B[P2] = R0;

.P379L78:
.LN2074:
// line 5594
	R0 = [SP + 60];
	SP += 12;
	(R7:4, P5:4) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;

.P379L112:
.LN2075:
// line 5464
	R1 = 0;
	P1.L = _TIME_WORK_CONTROL;
	P1.H = _TIME_WORK_CONTROL;
	[P1] = R1;
.LN2076:
// line 5467
	[P4 + 24] = R1;
.LN2077:
// line 5468
	B[P4 + -352] = R6;
.LN2078:
// line 5469
	[P4 + -284] = R1;
.LN2079:
// line 5470
	B[P4 + 76] = R6;
.LN2080:
// line 5471
	B[P4 + 657] = R1;
.LN2081:
// line 5472
	B[P4 + -4] = R1;
.LN2082:
// line 5465
	R0 = B[P4 + -292] (X);
	R0 += 1;
	B[P4 + -292] = R0;
.LN2083:
// line 5466
	R0 = W[P4 + 694] (X);
	R0 += 1;
	W[P4 + 694] = R0;
	P1.L = _TIMER_FINDER;
	P1.H = _TIMER_FINDER;
.LN2084:
// line 5473
	[P1] = R1;
.LN2085:
// line 5475
	R0 = [P4 + 116];
	[P4 + 120] = R0;
.LN2086:
// line 5476
	R0 = [P4 + 112];
.LN2087:
// line 5474
	B[P4 + 792] = R6;
.LN2088:
// line 5477
	B[P4 + -248] = R1;
.LN2089:
// line 5476
	[P4 + 116] = R0;
.LN2090:
// line 5479
	R0 = -1;
	P1.L = _TIME_PACKET_FORM;
	P1.H = _TIME_PACKET_FORM;
	[P1] = R0;
.LN2091:
// line 5480
	[P2] = R0;
.LN2092:
// line 5485
	R0 = [P4 + 120];
	R2 = -200;
	R0 = R0 + R2;
	R2 = [P0];
	CC = R2 < R0 (IU);
	if !CC jump .P379L117 ;

.P379L115:
.LN2093:
// line 5486
	R0 = [P4 + 776];
	R0 += 1;
	[P4 + 776] = R0;

.P379L117:
.LN2094:
// line 5491
	R0 = [P4 + 120];
	R2 = [P0];
	R3 = 200;
	R0 = R0 + R3;
	CC = R0 < R2 (IU);
	if !CC jump .P379L120 ;

.P379L118:
.LN2095:
	R0 = [P4 + 784];
	R0 += 1;
	[P4 + 784] = R0;

.P379L120:
.LN2096:
// line 5495
	P1 = 1572 /* -4192732 */;
	P1.H = -64 /* -4192732 */;
	R0 = [P1];
	[I0] = R0;
.LN2097:
// line 5498
	R2 = B[P4 + -217] (Z);
	CC = R2 == 1;
.LN2098:
// line 5497
	R0 = [P4 + 188];
	[P4 + 192] = R0;
	P1.L = _FLAG_UDP_EVENT;
	P1.H = _FLAG_UDP_EVENT;
.LN2099:
// line 5496
	R0 = W[P1] (X);
	R0 += 1;
	W[P1] = R0.L;
.LN2100:
// line 5498
	if !CC jump .P379L123 ;

.P379L121:
.LN2101:
	B[P4 + -218] = R6;

.P379L123:
.LN2102:
// line 5499
	CC = R2 == 2;
	if !CC jump .P379L126 ;

.P379L124:
.LN2103:
	R0 = 2;
.LN2104:
	B[P4 + -218] = R0;

.P379L126:
.LN2105:
// line 5501
	[P4 + -8] = R1;
	jump.s .P379L111;
.LN._Control_Impuls.end:
._Control_Impuls.end:
	.global _Control_Impuls;
	.type _Control_Impuls,STT_FUNC;

	.align 2;
_PPI_massiv:
.LN_PPI_massiv:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 36 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {R4-R7,P3-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//Inlined in _PPI_massiv:
//  ..\BFcom\main.c:5843:14'_ssync
//  ..\BFcom\main.c:5819:8'_ssync
//  ..\BFcom\main.c:5818:8'_ssync
//  ..\BFcom\main.c:5817:8'_ssync
//  ..\BFcom\main.c:5816:8'_ssync
//  ..\BFcom\main.c:5815:8'_ssync
//  ..\BFcom\main.c:5814:8'_ssync
//  ..\BFcom\main.c:5813:14'_ssync
//  ..\BFcom\main.c:5788:8'_ssync
//  ..\BFcom\main.c:5787:8'_ssync
//  ..\BFcom\main.c:5786:8'_ssync
//  ..\BFcom\main.c:5785:8'_ssync
//  ..\BFcom\main.c:5784:8'_ssync
//  ..\BFcom\main.c:5783:8'_ssync
//  ..\BFcom\main.c:5782:8'_ssync
//  ..\BFcom\main.c:5776:8'_ssync
//  ..\BFcom\main.c:5775:8'_ssync
//  ..\BFcom\main.c:5774:8'_ssync
//  ..\BFcom\main.c:5773:8'_ssync
//  ..\BFcom\main.c:5772:8'_ssync
//  ..\BFcom\main.c:5771:8'_ssync
//  ..\BFcom\main.c:5770:14'_ssync
//  ..\BFcom\main.c:5734:11'_ssync
//  ..\BFcom\main.c:5706:11'_ssync
//  ..\BFcom\main.c:5679:8'_ssync
//  ..\BFcom\main.c:5678:8'_ssync
//  ..\BFcom\main.c:5677:8'_ssync
//  ..\BFcom\main.c:5676:8'_ssync
//  ..\BFcom\main.c:5675:8'_ssync
//  ..\BFcom\main.c:5674:8'_ssync
//  ..\BFcom\main.c:5673:11'_ssync
//-------------------------------------------------------------------
// line "..\BFcom\main.c":5646
	LINK 0;
	[--SP] = (R7:4, P5:3);
	SP += -12;
	P0.L = _flag_dsp_ok;
	P0.H = _flag_dsp_ok;
	[SP + 48] = P0;
	R7 = R0;
.LN2106:
// line 5650
	R0 = B[P0] (Z);
	P2.L = _FLAG_PPI_OK;
	P2.H = _FLAG_PPI_OK;
	CC = R0 == 1;
	[SP + 56] = P2;
.LN2107:
// line 5646
	P1 = R1;
.LN2108:
// line 5650
	if !CC jump .P380L3 ;

.P380L1:
.LN2109:
// line 5653
	NOP;                                    // Inserted 2 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	P0 = 1572 /* -4192732 */;
	P0.H = -64 /* -4192732 */;
	R0 = [P0];
	P0.L = _TIME2_PPI_START;
	P0.H = _TIME2_PPI_START;
	[P0] = R0;
.LN2110:
// line 5655
	R0 = [P0];
	P2.L = _TIME_PPI_END;
	P2.H = _TIME_PPI_END;
	R1 = [P2];
	CC = R1 < R0 (IU);
	if !CC jump .P380L3 ;

.P380L4:
.LN2111:
// line 5657
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R0 = [P0];
	R1 = [P2];
	R0 = R0 - R1;
	P0.L = _TIME3_PPI_START;
	P0.H = _TIME3_PPI_START;
	[P0] = R0;
.LN2112:
// line 5659
	R0 = [P0];
	CC = R0 <= 4 (IU);
	if CC jump .P380L3 ;

.P380L7:
.LN2113:
// line 5661
	P0 = [SP + 56];
	R0 = 1;
.LN2114:
// line 5662
	R1 = -1;
	// -- stall --
.LN2115:
// line 5661
	B[P0] = R0;
.LN2116:
// line 5662
	[P2] = R1;

.P380L3:
.LN2117:
// line 5670
	P0 = [SP + 56];
	// -- 3 stalls --
	R0 = B[P0] (Z);
	CC = R0 == 1;
	if !CC jump .P380L12 ;

.P380L37:
.LN2118:
// line 5673
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2119:
// line 5674
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2120:
// line 5675
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2121:
// line 5676
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2122:
// line 5677
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2123:
// line 5678
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2124:
// line 5679
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2125:
// line 5701
	R4 = 115;
	CC = R7 == R4;
	P2.L = _DSP_in1+10;
	P2.H = _DSP_in1+10;
.LN2126:
// line 5699
	R0 = -86;
	B[P2] = R0;
.LN2127:
// line 5701
	if !CC jump .P380L14 ;

.P380L13:
.LN2128:
	R0 = 51;
	B[P2 + 1] = R0;

.P380L15:
.LN2129:
// line 5704
	CC = R7 == R4;
	if !CC jump .P380L21 ;

.P380L51:
.LN2130:
// line 5710
	NOP;                                    // Inserted 2 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
.LN2131:
// line 5706
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2132:
// line 5710
	P5 = [P1 + 2096];
	[SP + 52] = P5;
	P3 = [SP + 52];
	P4 = 2140;
	P4 = P1 + P4;
	P5 = P4;
	P0 = P2;
	P4 += -18;
	P4 = P4 + P3;
	P0 += 2;
.LN2133:
// line 5709
	R2 = 0;
	B[P0++] = R2;
.LN2134:
// line 5710
	R5 = B[P4] (X);
	P5 += -12;
	B[P0++] = R5;
.LN2135:
// line 5714
	P5 = P5 + (P3<<2);
.LN2136:
// line 5711
	B[P0++] = R2;
.LN2137:
// line 5714
	R1 = [P5];
.LN2138:
// line 5712
	R2 = B[P4 + 3] (X);
	B[P0++] = R2;
.LN2139:
// line 5714
	R5 = R1 >>> 24;
	B[P0++] = R5;
.LN2140:
// line 5715
	R0.L = R1.H << 0;
	B[P0++] = R0;
.LN2141:
// line 5716
	R5 = R1 >> 8;
	B[P0++] = R5;
.LN2142:
// line 5719
	R3 = [P5 + 24];
.LN2143:
// line 5717
	B[P0++] = R1;
.LN2144:
// line 5719
	R5 = R3 >>> 24;
	B[P0++] = R5;
.LN2145:
// line 5720
	R2.L = R3.H << 0;
	B[P0++] = R2;
.LN2146:
// line 5721
	R1 = R3 >> 8;
	B[P0++] = R1;
.LN2147:
// line 5724
	R6 = [P5 + 12];
.LN2148:
// line 5722
	B[P0++] = R3;
.LN2149:
// line 5724
	R5 = R6 >>> 24;
	B[P0++] = R5;
.LN2150:
// line 5725
	R0.L = R6.H << 0;
	B[P0++] = R0;
.LN2151:
// line 5726
	R1 = R6 >> 8;
	B[P0++] = R1;
.LN2152:
// line 5727
	B[P0] = R6;

.P380L21:
.LN2153:
// line 5730
	R5 = 103;
	CC = R7 == R5;
	if !CC jump .P380L24 ;

.P380L53:
.LN2154:
// line 5734
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
	P0 = P2;
	P0 += 2;
.LN2155:
// line 5737
	P4 = [P1 + 2100];
	P5 = 2196;
	P5 = P1 + P5;
	P1 = P5;
	P1 += -32;
	P1 = P1 + P4;
	P5 += -20;
.LN2156:
// line 5741
	P5 = P5 + (P4<<2);
	R1 = [P5];
.LN2157:
// line 5746
	R2 = [P5 + 40];
.LN2158:
// line 5751
	R3 = [P5 + 20];
.LN2159:
// line 5736
	R0 = 0;
	B[P0++] = R0;
.LN2160:
// line 5737
	R6 = B[P1] (X);
	B[P0++] = R6;
.LN2161:
// line 5738
	B[P0++] = R0;
.LN2162:
// line 5739
	R0 = B[P1 + 5] (X);
	B[P0++] = R0;
.LN2163:
// line 5741
	R0 = R1 >>> 24;
	B[P0++] = R0;
.LN2164:
// line 5742
	R0 = PACK(R0.H, R1.H);
	B[P0++] = R0;
.LN2165:
// line 5743
	R0 = R1 >> 8;
	B[P0++] = R0;
.LN2166:
// line 5744
	B[P0++] = R1;
.LN2167:
// line 5746
	R0 = R2 >>> 24;
	B[P0++] = R0;
.LN2168:
// line 5747
	R0 = PACK(R0.H, R2.H);
	B[P0++] = R0;
.LN2169:
// line 5748
	R0 = R2 >> 8;
	B[P0++] = R0;
.LN2170:
// line 5749
	B[P0++] = R2;
.LN2171:
// line 5751
	R0 = R3 >>> 24;
	B[P0++] = R0;
.LN2172:
// line 5752
	R0 = PACK(R0.H, R3.H);
	B[P0++] = R0;
.LN2173:
// line 5753
	R0 = R3 >> 8;
	B[P0++] = R0;
.LN2174:
// line 5754
	B[P0] = R3;

.P380L24:
	P1.L = _TNC0_packet;
	P1.H = _TNC0_packet;
.LN2175:
// line 5758
	R0 = B[P1] (Z);
	CC = R0 == 1;
	R6 = 0;
	R0 = 0;
	R1 = CC;
.LN2176:
	B[P2 + 18] = R1;
	P0 = 19;
	P1 = P2;
	LOOP .P380L29L LC0 = P0;

.P380L29:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 5760 col 8
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in estimated 2 cycles.
//-------------------------------------------------------------------
//   Trip Count  = 19
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   2 out of    2 (100.0%)
//     16-bit Instruction  used   3 out of    4 ( 75.0%)
//     32-bit Instruction  used   1 out of    2 ( 50.0%)
//-------------------------------------------------------------------
//  This loop was not modulo scheduled because it was optimized for space.
//-------------------------------------------------------------------
	LOOP_BEGIN .P380L29L;
.LN2177:
// line 5760
	R1 = B[P1++] (X);
	R0 = R0 + R1;
.LN2178:
	LOOP_END .P380L29L;
//-------------------------------------------------------------------
//   End Loop L29
//-------------------------------------------------------------------

.P380L102:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN2179:
// line 5762
	B[P2 + 19] = R0;
.LN2180:
// line 5765
	B[P2 + 20] = R6;
.LN2181:
// line 5766
	B[P2 + 21] = R6;
.LN2182:
// line 5767
	B[P2 + 22] = R6;
.LN2183:
// line 5768
	B[P2 + 23] = R6;
.LN2184:
// line 5770
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2185:
// line 5771
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2186:
// line 5772
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2187:
// line 5773
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2188:
// line 5774
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2189:
// line 5775
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2190:
// line 5776
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2191:
// line 5781
	R0 = 35;
	CALL.X (_Init_DMA);
.LN2192:
// line 5782
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2193:
// line 5783
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2194:
// line 5784
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2195:
// line 5785
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2196:
// line 5786
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2197:
// line 5787
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2198:
// line 5788
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2199:
// line 5811
	R0 = 35;
	CALL.X (_Init_PPI);
.LN2200:
// line 5813
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2201:
// line 5814
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2202:
// line 5815
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2203:
// line 5816
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2204:
// line 5817
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2205:
// line 5818
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2206:
// line 5819
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2207:
// line 5841
	P1 = 1792 /* -4192512 */;
	P1.H = -64 /* -4192512 */;
	R0 = W[P1] (X);
	BITSET(R0, 11);
	W[P1] = R0.L;
	P0.L = _FLAG_SYNC_PF11;
	P0.H = _FLAG_SYNC_PF11;
.LN2208:
// line 5842
	R1 = 1;
	B[P0] = R1;
.LN2209:
// line 5843
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2210:
// line 5845
	P5 = [SP + 56];
.LN2211:
// line 5851
	CC = R7 == R5;
	// -- 2 stalls --
.LN2212:
// line 5845
	B[P5] = R6;
.LN2213:
// line 5847
	P2 = [SP + 48];
	// -- 3 stalls --
	B[P2] = R6;
.LN2214:
// line 5851
	if !CC jump .P380L32 ;

.P380L31:
	P1.L = _flag_PPI_sz2;
	P1.H = _flag_PPI_sz2;
.LN2215:
	B[P1] = R1;

.P380L12:
.LN2216:
// line 5856
	SP += 12;
	(R7:4, P5:3) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;

.P380L32:
.LN2217:
// line 5852
	CC = R7 == R4;
	if !CC jump .P380L12 ;

.P380L34:
	P1.L = _flag_PPI_sz1;
	P1.H = _flag_PPI_sz1;
.LN2218:
	B[P1] = R1;
	jump.s .P380L12;

.P380L14:
.LN2219:
// line 5702
	R0 = 103;
	CC = R7 == R0;
	if !CC jump .P380L15 ;

.P380L16:
.LN2220:
	R0 = 52;
	B[P2 + 1] = R0;
	jump.s .P380L15;
.LN._PPI_massiv.end:
._PPI_massiv.end:
	.global _PPI_massiv;
	.type _PPI_massiv,STT_FUNC;

	.align 2;
_massiv_time_setka:
.LN_massiv_time_setka:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 56 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {R4-R7,P3-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//Inlined in _massiv_time_setka:
//  ..\BFcom\main.c:6036:18'_ssync
//  ..\BFcom\main.c:6033:18'_ssync
//  ..\BFcom\main.c:6028:8'_ssync
//  ..\BFcom\main.c:6027:8'_ssync
//  ..\BFcom\main.c:6026:8'_ssync
//  ..\BFcom\main.c:6025:8'_ssync
//  ..\BFcom\main.c:6024:8'_ssync
//  ..\BFcom\main.c:6023:8'_ssync
//  ..\BFcom\main.c:6022:8'_ssync
//  ..\BFcom\main.c:6017:8'_ssync
//  ..\BFcom\main.c:6016:8'_ssync
//  ..\BFcom\main.c:6015:8'_ssync
//  ..\BFcom\main.c:6014:8'_ssync
//  ..\BFcom\main.c:6013:8'_ssync
//  ..\BFcom\main.c:6012:8'_ssync
//  ..\BFcom\main.c:6011:8'_ssync
//  ..\BFcom\main.c:6007:8'_ssync
//  ..\BFcom\main.c:6006:8'_ssync
//  ..\BFcom\main.c:6005:8'_ssync
//  ..\BFcom\main.c:6004:8'_ssync
//  ..\BFcom\main.c:6003:8'_ssync
//  ..\BFcom\main.c:6002:8'_ssync
//  ..\BFcom\main.c:6001:11'_ssync
//  ..\BFcom\main.c:5996:8'_ssync
//  ..\BFcom\main.c:5995:8'_ssync
//  ..\BFcom\main.c:5994:8'_ssync
//  ..\BFcom\main.c:5993:8'_ssync
//  ..\BFcom\main.c:5992:8'_ssync
//  ..\BFcom\main.c:5991:8'_ssync
//  ..\BFcom\main.c:5990:14'_ssync
//  ..\BFcom\main.c:5986:8'_ssync
//  ..\BFcom\main.c:5985:8'_ssync
//  ..\BFcom\main.c:5984:8'_ssync
//  ..\BFcom\main.c:5983:8'_ssync
//  ..\BFcom\main.c:5982:8'_ssync
//  ..\BFcom\main.c:5981:8'_ssync
//  ..\BFcom\main.c:5980:8'_ssync
//  ..\BFcom\main.c:5923:13'_csync
//  ..\BFcom\main.c:5900:9'_ssync
//-------------------------------------------------------------------
// line "..\BFcom\main.c":5860
	LINK 20;
	[--SP] = (R7:4, P5:3);
	SP += -12;
	P0.L = _flag_dsp_ok;
	P0.H = _flag_dsp_ok;
	[FP + 8] = P0;
	P1 = R0;
.LN2221:
// line 5877
	R0 = B[P0] (Z);
	CC = R0 == 1;
	P5.L = _FLAG_PPI_OK;
	P5.H = _FLAG_PPI_OK;
	if !CC jump .P383L3 ;

.P383L1:
.LN2222:
// line 5880
	NOP;                                    // Inserted 2 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	P0 = 1572 /* -4192732 */;
	P0.H = -64 /* -4192732 */;
	R0 = [P0];
	P0.L = _TIME2_PPI_START;
	P0.H = _TIME2_PPI_START;
	[P0] = R0;
.LN2223:
// line 5882
	R0 = [P0];
	P2.L = _TIME_PPI_END;
	P2.H = _TIME_PPI_END;
	R2 = [P2];
	CC = R2 < R0 (IU);
	if !CC jump .P383L3 ;

.P383L4:
.LN2224:
// line 5884
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R0 = [P0];
	R2 = [P2];
	R0 = R0 - R2;
	P0.L = _TIME3_PPI_START;
	P0.H = _TIME3_PPI_START;
	[P0] = R0;
.LN2225:
// line 5886
	R0 = [P0];
	CC = R0 <= 4 (IU);
	if CC jump .P383L3 ;

.P383L7:
.LN2226:
// line 5888
	R0 = 1;
	B[P5] = R0;
.LN2227:
// line 5889
	R0 = -1;
	[P2] = R0;

.P383L3:
.LN2228:
// line 5898
	R0 = B[P5] (Z);
	CC = R0 == 1;
	if !CC jump .P383L12 ;

.P383L28:
.LN2229:
// line 5900
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
	P0.L = _RESET_packet;
	P0.H = _RESET_packet;
	P2 = 651;
.LN2230:
// line 5902
	R0 = B[P0] (Z);
	P4 = P0 + P2;
	P2.L = _FLAG_PACHKA_DELAY;
	P2.H = _FLAG_PACHKA_DELAY;
	CC = R0 == 1;
	[SP + 40] = P2;
	if !CC jump .P383L14 ;

.P383L13:
	R0 = -1;
.LN2231:
	R0.H = -30584;
.LN2232:
	R3 = 0;
.LN2233:
	[P4] = R0;
.LN2234:
	B[P0 + 0] = R3;
.LN2235:
	B[P0 + 77] = R3;
.LN2236:
	R7 = -1;
	B[P2] = R7;

.P383L30:
	P0 = 524;
	P0 = P1 + P0;
.LN2237:
// line 5923
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	CSYNC;
	[SP + 52] = P0;
	P0 = 1048;
	P0 = P1 + P0;
	[SP + 44] = P0;
	P0 = 1572;
	P0 = P1 + P0;
	P2.L = _DSP_in1;
	P2.H = _DSP_in1;
	[SP + 56] = P4;
	P4 += -60;
.LN2238:
// line 5926
	R3 = -86;
	[SP + 48] = P0;
	P0 = P2;
	B[P2++] = R3;
.LN2239:
// line 5929
	R2 = [P4 + -492];
.LN2240:
// line 5927
	R4 = 1;
.LN2241:
	B[P2++] = R4;
.LN2242:
// line 5929
	R5 = R2 >>> 24;
	B[P2++] = R5;
.LN2243:
// line 5930
	R0.L = R2.H << 0;
	B[P2++] = R0;
.LN2244:
// line 5931
	R4 = R2 >> 8;
.LN2245:
// line 5944
	R0 = W[P1 + 2240] (Z);
	[FP + 16] = R0;
	P3 = [FP + 16];
.LN2246:
// line 5934
	R7 = [P1 + 2268];
.LN2247:
// line 5931
	B[P2++] = R4;
.LN2248:
// line 5934
	R5 = R7 >>> 24;
.LN2249:
// line 5932
	B[P2++] = R2;
.LN2250:
// line 5935
	R3.L = R7.H << 0;
.LN2251:
// line 5934
	B[P2++] = R5;
.LN2252:
// line 5936
	R2 = R7 >> 8;
.LN2253:
// line 5935
	B[P2++] = R3;
.LN2254:
// line 5944
	P3 = P1 + (P3<<2);
.LN2255:
// line 5936
	B[P2++] = R2;
.LN2256:
// line 5951
	R2 = W[P1 + 2242] (Z);
.LN2257:
// line 5944
	[FP + 16] = P3;
.LN2258:
// line 5939
	R6 = [P1 + 2276];
.LN2259:
// line 5951
	[FP + 16] = R2;
.LN2260:
// line 5939
	R3 = R6 >>> 24;
.LN2261:
// line 5937
	B[P2++] = R7;
.LN2262:
// line 5940
	R0.L = R6.H << 0;
.LN2263:
// line 5944
	R5 = [P3];
.LN2264:
// line 5941
	R4 = R6 >> 8;
.LN2265:
// line 5972
	R7 = [P4 + 60];
.LN2266:
// line 5951
	P3 = [FP + 16];
	P4 = [SP + 52];
.LN2267:
// line 5939
	B[P2++] = R3;
.LN2268:
// line 5973
	R3.L = R7.H << 0;
.LN2269:
// line 5940
	B[P2++] = R0;
.LN2270:
// line 5941
	B[P2++] = R4;
.LN2271:
// line 5958
	R0 = W[P1 + 2244] (Z);
.LN2272:
// line 5942
	B[P2++] = R6;
.LN2273:
// line 5972
	R6 = R7 >>> 24;
.LN2274:
// line 5965
	R2 = W[P1 + 2246] (Z);
.LN2275:
// line 5951
	P4 = P4 + (P3<<2);
.LN2276:
// line 5946
	R7 = R5 >>> 24;
.LN2277:
// line 5951
	R4 = [P4];
.LN2278:
// line 5958
	P1 = R0;
.LN2279:
// line 5946
	B[P2++] = R7;
.LN2280:
// line 5947
	R7 = PACK(R7.H, R5.H);
.LN2281:
// line 5958
	P4 = [SP + 44];
.LN2282:
// line 5948
	R0 = R5 >> 8;
.LN2283:
// line 5947
	B[P2++] = R7;
.LN2284:
// line 5948
	B[P2++] = R0;
.LN2285:
// line 5954
	R0.L = R4.H << 0;
.LN2286:
// line 5949
	B[P2++] = R5;
.LN2287:
// line 5953
	R5 = R4 >>> 24;
.LN2288:
// line 5958
	P4 = P4 + (P1<<2);
.LN2289:
// line 5965
	P1 = R2;
.LN2290:
// line 5953
	B[P2++] = R5;
.LN2291:
// line 5955
	R5 = R4 >> 8;
.LN2292:
// line 5958
	R7 = [P4];
.LN2293:
// line 5965
	P4 = [SP + 48];
.LN2294:
// line 5961
	R2.L = R7.H << 0;
.LN2295:
// line 5954
	B[P2++] = R0;
.LN2296:
// line 5960
	R0 = R7 >>> 24;
.LN2297:
// line 5955
	B[P2++] = R5;
.LN2298:
// line 5956
	B[P2++] = R4;
.LN2299:
// line 5962
	R4 = R7 >> 8;
.LN2300:
// line 5960
	B[P2++] = R0;
.LN2301:
// line 5965
	P1 = P4 + (P1<<2);
.LN2302:
// line 5961
	B[P2++] = R2;
.LN2303:
// line 5962
	B[P2++] = R4;
.LN2304:
// line 5965
	R5 = [P1];
.LN2305:
// line 5963
	B[P2++] = R7;
.LN2306:
// line 5967
	R4 = R5 >>> 24;
	B[P2++] = R4;
.LN2307:
// line 5968
	R0.L = R5.H << 0;
	B[P2++] = R0;
.LN2308:
// line 5969
	R2 = R5 >> 8;
.LN2309:
// line 5974
	P4 = [SP + 40];
.LN2310:
// line 5969
	B[P2++] = R2;
.LN2311:
// line 5970
	B[P2++] = R5;
.LN2312:
// line 5972
	B[P2++] = R6;
.LN2313:
// line 5973
	B[P2++] = R3;
.LN2314:
// line 5974
	R2 = B[P4] (X);
	B[P2++] = R2;
	R7 = 0;
	P1 = 34;
.LN2315:
// line 5975
	B[P2] = R1;
	R0 = 0;
	LOOP .P383L23L LC0 = P1;

.P383L23:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 5977 col 8
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in estimated 2 cycles.
//-------------------------------------------------------------------
//   Trip Count  = 34
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   2 out of    2 (100.0%)
//     16-bit Instruction  used   3 out of    4 ( 75.0%)
//     32-bit Instruction  used   1 out of    2 ( 50.0%)
//-------------------------------------------------------------------
//  This loop was not modulo scheduled because it was optimized for space.
//-------------------------------------------------------------------
	LOOP_BEGIN .P383L23L;
.LN2316:
// line 5977
	R1 = B[P0++] (X);
	R0 = R0 + R1;
.LN2317:
	LOOP_END .P383L23L;
//-------------------------------------------------------------------
//   End Loop L23
//-------------------------------------------------------------------

.P383L109:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN2318:
// line 5978
	B[P2 + 1] = R0;
.LN2319:
// line 5980
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2320:
// line 5981
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2321:
// line 5982
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2322:
// line 5983
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2323:
// line 5984
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2324:
// line 5985
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2325:
// line 5986
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2326:
// line 5990
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2327:
// line 5991
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2328:
// line 5992
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2329:
// line 5993
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2330:
// line 5994
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2331:
// line 5995
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2332:
// line 5996
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2333:
// line 6000
	R0 = 35;
	CALL.X (_Init_DMA);
.LN2334:
// line 6001
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2335:
// line 6002
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2336:
// line 6003
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2337:
// line 6004
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2338:
// line 6005
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2339:
// line 6006
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2340:
// line 6007
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2341:
// line 6011
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2342:
// line 6012
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2343:
// line 6013
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2344:
// line 6014
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2345:
// line 6015
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2346:
// line 6016
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2347:
// line 6017
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2348:
// line 6021
	R0 = 35;
	CALL.X (_Init_PPI);
.LN2349:
// line 6022
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2350:
// line 6023
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2351:
// line 6024
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2352:
// line 6025
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2353:
// line 6026
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2354:
// line 6027
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2355:
// line 6028
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2356:
// line 6033
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2357:
// line 6034
	P1 = 1792 /* -4192512 */;
	P1.H = -64 /* -4192512 */;
	R0 = W[P1] (X);
	BITSET(R0, 8);
	W[P1] = R0.L;
	P0.L = _FLAG_SYNC_PF8;
	P0.H = _FLAG_SYNC_PF8;
.LN2358:
// line 6035
	R1 = 1;
.LN2359:
	B[P0] = R1;
.LN2360:
// line 6036
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN2361:
// line 6039
	B[P5] = R7;
.LN2362:
// line 6041
	P4 = [FP + 8];
	P2.L = _flag_PPI_sinc;
	P2.H = _flag_PPI_sinc;
	P1.L = _flag_Packet_form;
	P1.H = _flag_Packet_form;
	// -- stall --
	B[P4] = R7;
.LN2363:
// line 6043
	P3 = [SP + 56];
	// -- 3 stalls --
	R0 = [P3 + -548];
	R1 = B[P2] (Z);
	R0 = R0 + R1;
	[P3 + -548] = R0;
.LN2364:
// line 6044
	B[P2] = R7;
.LN2365:
// line 6046
	R0 = B[P1] (Z);
	CC = R0 == 2;
	if !CC jump .P383L12 ;

.P383L25:
.LN2366:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R0 = B[P1] (Z);
	R0 += 1;
	B[P1] = R0;

.P383L12:
.LN2367:
// line 6052
	SP += 12;
	(R7:4, P5:3) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;

.P383L14:
.LN2368:
// line 5907
	R0 = B[P0 + 77] (Z);
	CC = R0 == 1;
	if CC jump .P383L16 ;

.P383L17:
.LN2369:
// line 5917
	R0 = 0;
	[P4] = R0;
	jump.s .P383L30;

.P383L16:
	P0 = P4;
	P0 += -60;
.LN2370:
// line 5909
	R6 = B[P0 + -111] (Z);
	R7 = -1;
	CC = R6 == 1;
	R0 = -1;
	R3 = -1;
	R0.H = 4660;
	R3.H = -26215;
	IF !CC R0 = R3;
.LN2371:
// line 5912
	R6 = 1;
.LN2372:
// line 5911
	R2 = 0;
.LN2373:
// line 5909
	[P0 + 60] = R0;
.LN2374:
// line 5912
	B[P0 + -522] = R6;
.LN2375:
// line 5911
	B[P0 + -514] = R2;
.LN2376:
// line 5913
	B[P2] = R7;
	jump.s .P383L30;
.LN._massiv_time_setka.end:
._massiv_time_setka.end:
	.global _massiv_time_setka;
	.type _massiv_time_setka,STT_FUNC;

	.align 2;
_Packet_TNC1:
.LN_Packet_TNC1:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 88 
//  Scratch registers used: {R0-R3,P0-P2,I0-I1,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {R4-R7,P3-P5,FP,SP,RETS}
//Inlined in _Packet_TNC1:
//  ..\BFcom\main.c:6584:6'_csync
//  ..\BFcom\main.c:6582:6'_csync
//  ..\BFcom\main.c:6546:8'_csync
//  ..\BFcom\main.c:6538:8'_csync
//  ..\BFcom\main.c:6532:8'_csync
//  ..\BFcom\main.c:6480:7'_csync
//  ..\BFcom\main.c:6471:7'_csync
//  ..\BFcom\main.c:6465:7'_csync
//  ..\BFcom\main.c:6459:7'_csync
//  ..\BFcom\main.c:6411:8'_csync
//  ..\BFcom\main.c:6396:15'_csync
//  ..\BFcom\main.c:6390:75'_csync
//-------------------------------------------------------------------
// line "..\BFcom\main.c":6181
	LINK 52;
	[--SP] = (R7:4, P5:3);
	[SP + 44] = R0;
.LN2377:
// line 6182
	I1 = 1572 /* -4192732 */;
	I1.H = -64 /* -4192732 */;
	R0 = [I1];
	P2.L = _tst_time4;
	P2.H = _tst_time4;
	[P2] = R0;
.LN2378:
// line 6196
	R4 = 0;
	[FP + -16] = R4;
.LN2379:
// line 6197
	[FP + -12] = R4;
.LN2380:
// line 6198
	[FP + -8] = R4;
.LN2381:
// line 6199
	[FP + -4] = R4;
.LN2382:
// line 6181
	P3 = R1;
.LN2383:
// line 6200
	[FP + 16] = R4;
.LN2384:
// line 6201
	[FP + 12] = R4;
.LN2385:
// line 6202
	[FP + 8] = R4;
	I0.L = _Alfa;
	I0.H = _Alfa;
.LN2386:
// line 6216
	R2 = [SP + 44];
	[I0] = R2;
.LN2387:
// line 6224
	R0 = -1;
.LN2388:
// line 6218
	[P3 + 2096] = R4;
.LN2389:
// line 6219
	[P3 + 2100] = R4;
.LN2390:
// line 6221
	B[P3 + 2105] = R4;
.LN2391:
// line 6222
	B[P3 + 2104] = R4;
.LN2392:
// line 6224
	[P3 + 2264] = R0;
.LN2393:
// line 6225
	[P3 + 2268] = R0;
.LN2394:
// line 6226
	[P3 + 2272] = R0;
.LN2395:
// line 6227
	[P3 + 2276] = R0;
.LN2396:
// line 6229
	[FP + -16] = R4;
.LN2397:
// line 6230
	[FP + -12] = R4;
.LN2398:
// line 6231
	[FP + -8] = R4;
.LN2399:
// line 6232
	[FP + -4] = R4;
.LN2400:
// line 6233
	[FP + 16] = R4;
.LN2401:
// line 6234
	[FP + 12] = R4;
	P1 = 2236;
.LN2402:
// line 6235
	[FP + 8] = R4;
	P1 = P3 + P1;
.LN2403:
// line 6240
	W[P1++] = R4;
.LN2404:
// line 6241
	W[P1++] = R4;
.LN2405:
// line 6242
	W[P1++] = R4;
.LN2406:
// line 6243
	W[P1++] = R4;
.LN2407:
// line 6244
	W[P1++] = R4;
.LN2408:
// line 6245
	W[P1++] = R4;
.LN2409:
// line 6246
	P5 = -676;
	W[P1 ++ P5] = R4.L;
	P4 = 131;
	[SP + 28] = P1;
	P0 = P3;
	LOOP .P384L2L LC0 = P4;

.P384L2:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 6248 col 4
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in estimated 4 cycles.
//-------------------------------------------------------------------
//   Trip Count  = 131
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   4 out of    4 (100.0%)
//     Store               used   4 out of    4 (100.0%)
//     16-bit Instruction  used   7 out of    8 ( 87.5%)
//     32-bit Instruction  used   3 out of    4 ( 75.0%)
//-------------------------------------------------------------------
//  This loop was not modulo scheduled because it was optimized for space.
//-------------------------------------------------------------------
	LOOP_BEGIN .P384L2L;
.LN2410:
// line 6250
	[P0++] = R0;
.LN2411:
// line 6251
	[P0 + 520] = R0;
.LN2412:
// line 6252
	[P0 + 1568] = R0;
.LN2413:
// line 6253
	[P0 + 1044] = R0;
.LN2414:
// line 6248
	LOOP_END .P384L2L;
//-------------------------------------------------------------------
//   End Loop L2
//-------------------------------------------------------------------

.P384L146:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN2415:
// line 6258
	R0 = B[P2 + 197] (Z);
	CC = R0 == 1;
	P4.L = _Mem1+76;
	P4.H = _Mem1+76;
	P1.L = _flag_first_TNO;
	P1.H = _flag_first_TNO;
	if !CC jump .P384L7 (bp);

.P384L168:
	jump.s .P384L4;

.P384L7:
	NOP;                                    // Inserted to fix anomaly w_05000245_with_boundaries. 
	R0 = B[P1] (Z);
	CC = R0 == 0;
	if CC jump .P384L5 (bp);

.P384L169:
	jump.s .P384L4;

.P384L5:
.LN2416:
// line 6266
	B[P2 + 197] = R4;

.P384L6:
.LN2417:
// line 6268
	R0 = B[P2 + -66] (Z);
	CC = R0 == 1;
	if CC jump .P384L8 ;

.P384L11:
	CC = R0 == 2;
	if !CC jump .P384L10 ;

.P384L8:
	R0 = -1;
.LN2418:
	R0.H = -20481;
	[P2 + 220] = R0;

.P384L10:
.LN2419:
// line 6272
	R0 = B[P2 + 198] (Z);
	CC = R0 == 1;
.LN2420:
// line 6270
	R1 = 1;
	B[P2 + 601] = R1;
.LN2421:
// line 6272
	if !CC jump .P384L14 ;

.P384L12:
.LN2422:
// line 6274
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R0 = [I0];
	R2 = 144;
	R0 = R0 + R2;
	[I0] = R0;

.P384L14:
.LN2423:
// line 6279
	R0 = B[P2 + -77] (Z);
	CC = R0 == 0;
	if !CC jump .P384L17 ;

.P384L16:
.LN2424:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R0 = [I0];
	P1 = [FP + -4];
	R0 += -8;
	P0 = [SP + 28];
	// -- 3 stalls --
	P1 = P0 + (P1<<2);
	[P1] = R0;
	jump.s .P384L18;

.P384L17:
.LN2425:
	P1 = [FP + -4];
	P0 = [SP + 28];
	R0 = -1;
	R0.H = -20481;
	P1 = P0 + (P1<<2);
	[P1] = R0;
.LN2426:
	B[P2 + -77] = R4;

.P384L18:
.LN2427:
// line 6280
	R0 = [FP + -4];
	R5 = 130;
	CC = R0 < R5 (IU);
	if !CC jump .P384L21 ;

.P384L19:
.LN2428:
	R0 = [FP + -4];
	R0 += 1;
	[FP + -4] = R0;

.P384L21:
.LN2429:
// line 6282
	R0 = [I0];
.LN2430:
// line 6287
	R7 = W[P4 + 12] (Z);
.LN2431:
// line 6288
	R6 = W[P4 + 18] (Z);
.LN2432:
// line 6282
	[P3 + 2268] = R0;
.LN2433:
// line 6287
	R7 <<= 3;
.LN2434:
// line 6288
	R6 <<= 3;
.LN2435:
// line 6298
	R3 = B[P2 + -66] (Z);
.LN2436:
// line 6286
	R2 = [P4];
.LN2437:
// line 6287
	[P2 + 624] = R7;
.LN2438:
// line 6288
	[P2 + 636] = R6;
.LN2439:
// line 6298
	CC = R3 == 1;
.LN2440:
// line 6286
	R6 = R2 << 3;
.LN2441:
// line 6289
	R0 = [P4 + 32];
	R7 = 1000;
	IF CC R6 = R7;
.LN2442:
// line 6291
	R7 = B[P4 + 46] (X);
	B[P2 + 666] = R7;
.LN2443:
// line 6292
	R7 = W[P4 + 48] (Z);
	[SP + 52] = R0;
	[P2 + 616] = R7;
	R7 = -13825;
.LN2444:
// line 6299
	CC = R3 == 2;
	R7.H = 15258;
.LN2445:
// line 6289
	R0 += 16;
	IF CC R6 = R7;
.LN2446:
// line 6300
	CC = R3 == 1;
.LN2447:
// line 6289
	R0 <<= 3;
.LN2448:
// line 6304
	R3 = B[P2 + 598] (Z);
	IF CC R0 = R7;
.LN2449:
	CC = R3 == 1;
	P1.L = _DDS_delay;
	P1.H = _DDS_delay;
.LN2450:
// line 6295
	R7 = [SP + 52];
.LN2451:
// line 6302
	R3 = 56;
	[P2 + 628] = R6;
	[P2 + 640] = R0;
.LN2452:
// line 6294
	[P1 + 12] = R2;
.LN2453:
// line 6295
	[P1 + 16] = R7;
.LN2454:
// line 6302
	[P1] = R3;
	[SP + 32] = P1;
.LN2455:
// line 6304
	if !CC jump .P384L32 (bp);

.P384L170:
	jump.s .P384L31;

.P384L32:
.LN2456:
// line 6364
	R0 = 2;
	[P3 + 2100] = R0;

.P384L33:
.LN2457:
// line 6368
	R0 = [P2 + 452];
	R3 = -1;
.LN2458:
// line 6371
	R7 = [P4 + 60];
.LN2459:
// line 6368
	R1 = B[P2 + 592] (X);
	R0 <<= 2;
	R2 = R0 + R1;
	P0 = [SP + 28];
.LN2460:
// line 6369
	R1 = [P4 + -32];
	R6 = 2056;
	R0 = EXTRACT(R1, R6.L) (Z);
	B[P3 + 2125] = R0;
.LN2461:
// line 6370
	R0 = [P4 + -40];
.LN2462:
// line 6371
	[P3 + 2140] = R7;
.LN2463:
// line 6368
	B[P3 + 2122] = R2;
.LN2464:
// line 6370
	[P3 + 2128] = R0;
.LN2465:
// line 6372
	R0 = [P2 + 628];
	[P3 + 2152] = R0;
	P1 = -1048;
.LN2466:
// line 6377
	R0 = [P2 + 452];
	P0 = P0 + P1;
.LN2467:
// line 6374
	[P2 + 824] = R7;
.LN2468:
// line 6377
	R2 = B[P2 + 595] (X);
	R0 <<= 2;
	P1 = [SP + 28];
	R7 = R0 + R2;
.LN2469:
// line 6378
	B[P3 + 2171] = R1;
.LN2470:
// line 6380
	R0 = [P4 + 72];
.LN2471:
// line 6379
	R1 = [P4 + -36];
.LN2472:
// line 6380
	[P3 + 2204] = R0;
.LN2473:
// line 6377
	B[P3 + 2166] = R7;
.LN2474:
// line 6379
	[P3 + 2184] = R1;
.LN2475:
// line 6381
	R1 = [P2 + 640];
	P5 = -524;
	[P3 + 2224] = R1;
	P5 = P1 + P5;
.LN2476:
// line 6383
	[P2 + 828] = R0;
	[SP + 56] = P5;
	[SP + 52] = P0;
.LN2477:
// line 6385
	R2 = [I0];
	R7 = [P2 + 624];
	R2 = R2 + R7;
	R2 += -16;
	[I0] = R2;
	P5 = P2;
	[SP + 60] = R4;
	P2 += 44;
.LN2478:
// line 6416
	R3.H = -20481;
	R1 = 2;
	R0 = 0;

.P384L47:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 6387 col 3
//-------------------------------------------------------------------
.LN2479:
// line 6390
	NOP;                                    // Inserted to fix anomaly w_05000245_with_boundaries. 
	R2 = B[P2 + 89] (X);
.LN2480:
	R7 = 116;
.LN2481:
	CC = R2 == R7;
	if !CC jump .P384L112 ;

.P384L52:
	R2 = [P4 + 60];
	CC = R2 == 0;
	if !CC jump .P384L112 ;

.P384L110:
.LN2482:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R7 = [I0];                              // Use of volatile in loops precludes optimizations. 
.LN2483:
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	CSYNC;

.P384L114:
.LN2484:
// line 6414
	R1 += 1;
.LN2485:
// line 6410
	R2 = [P2 + 592];
	R2 = R7 + R2;
.LN2486:
// line 6411
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	CSYNC;
.LN2487:
// line 6416
	R7 = B[P2 + -122] (Z);
	CC = R7 == 0;
.LN2488:
// line 6412
	R7 = [P2 + 596];
	R7 = R2 + R7;
.LN2489:
// line 6416
	if !CC jump .P384L60 ;

.P384L59:
.LN2490:
	P0 = [FP + -8];                         // Use of volatile in loops precludes optimizations. 
	P1 = [SP + 56];
	[SP + 32] = P0;
	// -- 2 stalls --
	P1 = P1 + (P0<<2);
	[P1] = R2;
	jump.s .P384L61;

.P384L60:
.LN2491:
	P0 = [FP + -8];                         // Use of volatile in loops precludes optimizations. 
	P1 = [SP + 56];
	[SP + 32] = P0;
	// -- 2 stalls --
	P1 = P1 + (P0<<2);
	[P1] = R3;
.LN2492:
	B[P2 + -122] = R4;

.P384L61:
.LN2493:
// line 6418
	R2 = B[P2 + -121] (Z);
	CC = R2 == 0;
	if !CC jump .P384L63 ;

.P384L62:
.LN2494:
	P0 = [FP + -4];                         // Use of volatile in loops precludes optimizations. 
	P1 = [SP + 28];
	// -- 3 stalls --
	P1 = P1 + (P0<<2);
	[P1] = R7;
	jump.s .P384L64;

.P384L63:
.LN2495:
	P0 = [FP + -4];                         // Use of volatile in loops precludes optimizations. 
	P1 = [SP + 28];
	// -- 3 stalls --
	P1 = P1 + (P0<<2);
	[P1] = R3;
.LN2496:
	B[P2 + -121] = R4;

.P384L64:
.LN2497:
// line 6420
	R2 = [FP + -8];                         // Use of volatile in loops precludes optimizations. 
	CC = R2 < R5 (IU);
	if !CC jump .P384L66 ;

.P384L65:
.LN2498:
	R2 = [FP + -8];                         // Use of volatile in loops precludes optimizations. 
	R2 += 1;
	[FP + -8] = R2;                         // Use of volatile in loops precludes optimizations. 
	jump.s .P384L67;

.P384L66:
.LN2499:
	R2 = [P2 + 60];
	R2 += 1;
	[P2 + 60] = R2;

.P384L67:
.LN2500:
// line 6421
	R2 = [FP + -4];                         // Use of volatile in loops precludes optimizations. 
	CC = R2 < R5 (IU);
	if !CC jump .P384L69 ;

.P384L68:
.LN2501:
	R2 = [FP + -4];                         // Use of volatile in loops precludes optimizations. 
	R2 += 1;
	[FP + -4] = R2;                         // Use of volatile in loops precludes optimizations. 
	jump.s .P384L70;

.P384L69:
.LN2502:
	R2 = [P2 + 60];
	R2 += 1;
	[P2 + 60] = R2;

.P384L70:
.LN2503:
// line 6423
	[I0] = R7;                              // Use of volatile in loops precludes optimizations. 
.LN2504:
// line 6387
	R7 = W[P4 + 30] (Z);
	R2 = [SP + 60];
.LN2505:
	R2 += 1;
.LN2506:
	R7 += 1;
	CC = R2 < R7 (IU);
	[SP + 60] = R2;
	if CC jump .P384L47 (bp);
//-------------------------------------------------------------------
//   End Loop L47
//-------------------------------------------------------------------

.P384L149:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN2507:
// line 6426
	W[P3 + 2106] = R0;
.LN2508:
// line 6427
	W[P3 + 2116] = R1;
.LN2509:
// line 6431
	R2 = B[P4 + 46] (Z);
	CC = R2 == 0;
	if CC jump .P384L73 ;

.P384L71:
.LN2510:
// line 6435
	R7 = W[P4 + 14] (Z);
	R7 <<= 3;
	[SP + 60] = R7;
.LN2511:
// line 6441
	R7 = [P4 + -20];
	[SP + 36] = R7;
	R7 = EXTRACT(R7, R6.L) (Z);
	[SP + 40] = R7;
.LN2512:
// line 6435
	R7 = [SP + 60];
	[P5 + 624] = R7;
.LN2513:
// line 6440
	R3 = B[P5 + 453] (X);
	R7 = W[P4 + 20] (Z);
	R3 <<= 2;
.LN2514:
// line 6436
	R7 <<= 3;
.LN2515:
// line 6437
	R2 = [P4 + 36];
.LN2516:
// line 6440
	[SP + 48] = R3;
.LN2517:
// line 6436
	[P5 + 636] = R7;
.LN2518:
// line 6440
	R7 = B[P5 + 593] (X);
.LN2519:
// line 6434
	R3 = [P4 + 4];
.LN2520:
// line 6437
	R2 += 16;
.LN2521:
// line 6440
	[SP + 32] = R7;
.LN2522:
// line 6434
	R3 <<= 3;
.LN2523:
// line 6437
	R2 <<= 3;
.LN2524:
// line 6434
	[P5 + 628] = R3;
.LN2525:
// line 6437
	[P5 + 640] = R2;
.LN2526:
// line 6444
	[P3 + 2156] = R3;
.LN2527:
// line 6441
	R3 = [SP + 40];
	R7 = [SP + 48];
	B[P3 + 2126] = R3;
	R6 = PACK(R7.L, R6.L);
	R7 = [SP + 32];
.LN2528:
// line 6442
	R3 = [P4 + -28];
	[P3 + 2132] = R3;
.LN2529:
// line 6440
	R7.L = R6.H + R7.L (NS);
.LN2530:
// line 6443
	R3 = [P4 + 64];
.LN2531:
// line 6440
	B[P3 + 2123] = R7;
.LN2532:
// line 6443
	[P3 + 2144] = R3;
.LN2533:
// line 6447
	R7 = B[P5 + 596] (X);
	R3 = B[P5 + 453] (X);
.LN2534:
// line 6451
	[P3 + 2228] = R2;
.LN2535:
// line 6447
	R3 <<= 2;
.LN2536:
// line 6449
	R2 = [P4 + -24];
	[P3 + 2188] = R2;
.LN2537:
// line 6447
	R7.L = R3.L + R7.L (NS);
.LN2538:
// line 6448
	R3 = [SP + 36];
.LN2539:
// line 6450
	R2 = [P4 + 76];
.LN2540:
// line 6448
	B[P3 + 2172] = R3;
.LN2541:
// line 6447
	B[P3 + 2167] = R7;
.LN2542:
// line 6450
	[P3 + 2208] = R2;
.LN2543:
// line 6453
	R2 = [I0];
	R7 = [P5 + 624];
	R2 = R2 + R7;
	R2 += -16;
	[I0] = R2;
	R3 = 0;

.P384L116:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 6455 col 1
//-------------------------------------------------------------------
.LN2544:
// line 6458
	NOP;                                    // Inserted to fix anomaly w_05000245_with_boundaries. 
	R2 = [I0];                              // Use of volatile in loops precludes optimizations. 
.LN2545:
// line 6459
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	CSYNC;
.LN2546:
// line 6458
	R2 += 16;
.LN2547:
// line 6460
	R7 = [P2 + 584];
.LN2548:
// line 6464
	P0 = [FP + -16];                        // Use of volatile in loops precludes optimizations. 
.LN2549:
// line 6460
	R7 = R2 + R7;
.LN2550:
// line 6468
	R0 += 1;
	// -- stall --
.LN2551:
// line 6464
	P0 = P3 + (P0<<2);
	[P0] = R2;
.LN2552:
// line 6465
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	CSYNC;
.LN2553:
// line 6466
	P0 = [FP + -12];                        // Use of volatile in loops precludes optimizations. 
	P1 = [SP + 52];
	// -- 3 stalls --
	P1 = P1 + (P0<<2);
	[P1] = R7;
.LN2554:
// line 6470
	R2 = [P2 + 592];
.LN2555:
// line 6471
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	CSYNC;
.LN2556:
// line 6470
	R2 = R7 + R2;
.LN2557:
// line 6472
	R7 = [P2 + 596];
	R7 = R2 + R7;
	[SP + 60] = R7;
.LN2558:
// line 6474
	R7 = [FP + -16];                        // Use of volatile in loops precludes optimizations. 
	CC = R7 < R5 (IU);
	if !CC jump .P384L78 ;

.P384L77:
.LN2559:
	R7 = [FP + -16];                        // Use of volatile in loops precludes optimizations. 
	R7 += 1;
	[FP + -16] = R7;                        // Use of volatile in loops precludes optimizations. 
	jump.s .P384L79;

.P384L78:
.LN2560:
	R7 = [P2 + 60];
	R7 += 1;
	[P2 + 60] = R7;

.P384L79:
.LN2561:
// line 6475
	R7 = [FP + -12];                        // Use of volatile in loops precludes optimizations. 
	CC = R7 < R5 (IU);
	if !CC jump .P384L81 ;

.P384L80:
.LN2562:
	R7 = [FP + -12];                        // Use of volatile in loops precludes optimizations. 
	R7 += 1;
	[FP + -12] = R7;                        // Use of volatile in loops precludes optimizations. 
	jump.s .P384L122;

.P384L81:
.LN2563:
	R7 = [P2 + 60];
	R7 += 1;
	[P2 + 60] = R7;

.P384L122:
.LN2564:
// line 6479
	P0 = [FP + -8];                         // Use of volatile in loops precludes optimizations. 
	P1 = [SP + 56];
.LN2565:
// line 6483
	R1 += 1;
	// -- 2 stalls --
.LN2566:
// line 6479
	P0 = P1 + (P0<<2);
	[P0] = R2;
.LN2567:
// line 6480
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	CSYNC;
.LN2568:
// line 6481
	P0 = [FP + -4];                         // Use of volatile in loops precludes optimizations. 
	P1 = [SP + 28];
	R7 = [SP + 60];
	// -- 2 stalls --
	P1 = P1 + (P0<<2);
	[P1] = R7;
.LN2569:
// line 6485
	R2 = [FP + -8];                         // Use of volatile in loops precludes optimizations. 
	CC = R2 < R5 (IU);
	if !CC jump .P384L84 ;

.P384L83:
.LN2570:
	R2 = [FP + -8];                         // Use of volatile in loops precludes optimizations. 
	R2 += 1;
	[FP + -8] = R2;                         // Use of volatile in loops precludes optimizations. 
	jump.s .P384L85;

.P384L84:
.LN2571:
	R2 = [P2 + 60];
	R2 += 1;
	[P2 + 60] = R2;

.P384L85:
.LN2572:
// line 6486
	R2 = [FP + -4];                         // Use of volatile in loops precludes optimizations. 
	CC = R2 < R5 (IU);
	if !CC jump .P384L87 ;

.P384L86:
.LN2573:
	R2 = [FP + -4];                         // Use of volatile in loops precludes optimizations. 
	R2 += 1;
	[FP + -4] = R2;                         // Use of volatile in loops precludes optimizations. 
	jump.s .P384L88;

.P384L87:
.LN2574:
	R2 = [P2 + 60];
	R2 += 1;
	[P2 + 60] = R2;

.P384L88:
.LN2575:
// line 6488
	[I0] = R7;                              // Use of volatile in loops precludes optimizations. 
.LN2576:
// line 6455
	R2 = W[P4 + 30] (Z);
.LN2577:
	R3 += 1;
.LN2578:
	R2 += 1;
	CC = R3 < R2 (IU);
	if CC jump .P384L116 (bp);
//-------------------------------------------------------------------
//   End Loop L116
//-------------------------------------------------------------------

.P384L150:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------

.P384L73:
.LN2579:
// line 6494
	W[P3 + 2108] = R0;
.LN2580:
// line 6495
	W[P3 + 2118] = R1;
.LN2581:
// line 6499
	R2 = B[P4 + 46] (Z);
	CC = R2 <= 1 (IU);
	if CC jump .P384L91 ;

.P384L89:
.LN2582:
// line 6509
	R2 = B[P5 + 454] (X);
	R2 <<= 2;
	[SP + 40] = R2;
.LN2583:
// line 6510
	R2 = [P4 + -8];
	R6 = EXTRACT(R2, R6.L) (Z);
.LN2584:
// line 6506
	R7 = [P4 + 40];
.LN2585:
// line 6510
	[SP + 60] = R6;
	[SP + 48] = R2;
.LN2586:
// line 6504
	R3 = W[P4 + 16] (Z);
.LN2587:
// line 6505
	R6 = W[P4 + 22] (Z);
.LN2588:
// line 6503
	R2 = [P4 + 8];
.LN2589:
// line 6506
	R7 += 16;
.LN2590:
// line 6504
	R3 <<= 3;
.LN2591:
// line 6503
	R2 <<= 3;
.LN2592:
// line 6506
	R7 <<= 3;
.LN2593:
// line 6505
	R6 <<= 3;
.LN2594:
// line 6504
	[P5 + 624] = R3;
.LN2595:
// line 6503
	[P5 + 628] = R2;
.LN2596:
// line 6506
	[P5 + 640] = R7;
.LN2597:
// line 6505
	[P5 + 636] = R6;
.LN2598:
// line 6509
	R3 = B[P5 + 594] (X);
.LN2599:
// line 6513
	[P3 + 2160] = R2;
.LN2600:
// line 6510
	R2 = [SP + 60];
	B[P3 + 2127] = R2;
.LN2601:
// line 6511
	R2 = [P4 + -16];
	R6 = [SP + 40];
	[P3 + 2136] = R2;
.LN2602:
// line 6509
	R3.L = R6.L + R3.L (NS);
.LN2603:
// line 6512
	R2 = [P4 + 68];
.LN2604:
// line 6509
	B[P3 + 2124] = R3;
.LN2605:
// line 6512
	[P3 + 2148] = R2;
.LN2606:
// line 6516
	R2 = B[P5 + 454] (X);
	R3 = B[P5 + 597] (X);
	R2 <<= 2;
	R6 = R2 + R3;
.LN2607:
// line 6517
	R3 = [SP + 48];
.LN2608:
// line 6518
	R2 = [P4 + -12];
	[P3 + 2192] = R2;
.LN2609:
// line 6519
	R2 = [P4 + 80];
.LN2610:
// line 6517
	B[P3 + 2173] = R3;
.LN2611:
// line 6520
	[P3 + 2232] = R7;
.LN2612:
// line 6516
	B[P3 + 2168] = R6;
.LN2613:
// line 6519
	[P3 + 2212] = R2;
.LN2614:
// line 6522
	R2 = [I0];
	R7 = [P5 + 624];
	R2 = R2 + R7;
	R2 += -16;
	[I0] = R2;
	R3 = 0;

.P384L124:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 6524 col 1
//-------------------------------------------------------------------
.LN2615:
// line 6527
	NOP;                                    // Inserted to fix anomaly w_05000245_with_boundaries. 
	R2 = [I0];                              // Use of volatile in loops precludes optimizations. 
.LN2616:
// line 6528
	R7 = [P2 + 584];
.LN2617:
// line 6527
	R2 += 16;
.LN2618:
// line 6531
	P0 = [FP + -16];                        // Use of volatile in loops precludes optimizations. 
.LN2619:
// line 6528
	R7 = R2 + R7;
.LN2620:
// line 6535
	R0 += 1;
	// -- stall --
.LN2621:
// line 6531
	P0 = P3 + (P0<<2);
	[P0] = R2;
.LN2622:
// line 6532
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	CSYNC;
.LN2623:
// line 6533
	P0 = [FP + -12];                        // Use of volatile in loops precludes optimizations. 
	P1 = [SP + 52];
	// -- 3 stalls --
	P1 = P1 + (P0<<2);
	[P1] = R7;
.LN2624:
// line 6537
	R2 = [P2 + 592];
.LN2625:
// line 6538
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	CSYNC;
.LN2626:
// line 6537
	R7 = R7 + R2;
.LN2627:
// line 6539
	R6 = [P2 + 596];
	R2 = R7 + R6;
.LN2628:
// line 6541
	R6 = [FP + -16];                        // Use of volatile in loops precludes optimizations. 
	CC = R6 < R5 (IU);
	if !CC jump .P384L96 ;

.P384L95:
.LN2629:
	R6 = [FP + -16];                        // Use of volatile in loops precludes optimizations. 
	R6 += 1;
	[FP + -16] = R6;                        // Use of volatile in loops precludes optimizations. 
	jump.s .P384L97;

.P384L96:
.LN2630:
	R6 = [P2 + 60];
	R6 += 1;
	[P2 + 60] = R6;

.P384L97:
.LN2631:
// line 6542
	R6 = [FP + -12];                        // Use of volatile in loops precludes optimizations. 
	CC = R6 < R5 (IU);
	if !CC jump .P384L99 ;

.P384L98:
.LN2632:
	R6 = [FP + -12];                        // Use of volatile in loops precludes optimizations. 
	R6 += 1;
	[FP + -12] = R6;                        // Use of volatile in loops precludes optimizations. 
	jump.s .P384L128;

.P384L99:
.LN2633:
	R6 = [P2 + 60];
	R6 += 1;
	[P2 + 60] = R6;

.P384L128:
.LN2634:
// line 6545
	P0 = [FP + -8];                         // Use of volatile in loops precludes optimizations. 
	P1 = [SP + 56];
.LN2635:
// line 6549
	R1 += 1;
	// -- 2 stalls --
.LN2636:
// line 6545
	P0 = P1 + (P0<<2);
	[P0] = R7;
.LN2637:
// line 6546
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	CSYNC;
.LN2638:
// line 6547
	P0 = [FP + -4];                         // Use of volatile in loops precludes optimizations. 
	P1 = [SP + 28];
	// -- 3 stalls --
	P1 = P1 + (P0<<2);
	[P1] = R2;
.LN2639:
// line 6551
	R7 = [FP + -8];                         // Use of volatile in loops precludes optimizations. 
	CC = R7 < R5 (IU);
	if !CC jump .P384L102 ;

.P384L101:
.LN2640:
	R7 = [FP + -8];                         // Use of volatile in loops precludes optimizations. 
	R7 += 1;
	[FP + -8] = R7;                         // Use of volatile in loops precludes optimizations. 
	jump.s .P384L103;

.P384L102:
.LN2641:
	R7 = [P2 + 60];
	R7 += 1;
	[P2 + 60] = R7;

.P384L103:
.LN2642:
// line 6552
	R7 = [FP + -4];                         // Use of volatile in loops precludes optimizations. 
	CC = R7 < R5 (IU);
	if !CC jump .P384L105 ;

.P384L104:
.LN2643:
	R7 = [FP + -4];                         // Use of volatile in loops precludes optimizations. 
	R7 += 1;
	[FP + -4] = R7;                         // Use of volatile in loops precludes optimizations. 
	jump.s .P384L106;

.P384L105:
.LN2644:
	R7 = [P2 + 60];
	R7 += 1;
	[P2 + 60] = R7;

.P384L106:
.LN2645:
// line 6554
	[I0] = R2;                              // Use of volatile in loops precludes optimizations. 
.LN2646:
// line 6524
	R3 += 1;
.LN2647:
	R2 = W[P4 + 30] (Z);
	R2 += 1;
	CC = R3 < R2 (IU);
	if CC jump .P384L124 (bp);
//-------------------------------------------------------------------
//   End Loop L124
//-------------------------------------------------------------------

.P384L151:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------

.P384L91:
.LN2648:
// line 6560
	W[P3 + 2110] = R0;
.LN2649:
// line 6561
	W[P3 + 2120] = R1;
.LN2650:
// line 6570
	R2 = 116;
.LN2651:
// line 6567
	R0 = [FP + -4];
	[P5 + 208] = R0;
.LN2652:
// line 6568
	R0 = [FP + -12];
.LN2653:
// line 6570
	R1 = B[P5 + 133] (X);
	CC = R1 == R2;
.LN2654:
// line 6568
	[P5 + 212] = R0;
.LN2655:
// line 6570
	if CC jump .P384L108 ;

.P384L107:
.LN2656:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R0 = [I0];
	R1 = -110;
	R0 = R0 + R1;
	jump.s .P384L130;

.P384L108:
.LN2657:
// line 6571
	R0 = [I0];
	R1 = -125;
	R0 = R0 + R1;

.P384L130:
.LN2658:
// line 6570
	[P3 + 2276] = R0;
.LN2659:
// line 6573
	R0 = [I0];
	R0 += 8;
	[I0] = R0;
.LN2660:
// line 6575
	R0 = [I0];
	[P3 + 2272] = R0;
.LN2661:
// line 6577
	R0 = [P3 + 2276];
	R2 = [SP + 44];
	R0 = R0 - R2;
	R1 = -3000;
	R0 = R0 + R1;
	[P5 + 312] = R0;
.LN2662:
// line 6580
	R0 = [I0];
	R0 = R0 - R2;
	[P5 + 236] = R0;
.LN2663:
// line 6582
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	CSYNC;
.LN2664:
// line 6583
	R0 = [I1];
	[P5 + 4] = R0;
.LN2665:
// line 6584
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	CSYNC;
.LN2666:
// line 6587
	B[P5 + 1008] = R4;
.LN2667:
// line 6588
	B[P5 + 1009] = R4;
.LN2668:
// line 6589
	(R7:4, P5:3) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;

.P384L112:
//-------------------------------------------------------------------
//   Part of Loop 47, depth 1
//-------------------------------------------------------------------
.LN2669:
// line 6395
	R2 = [I0];                              // Use of volatile in loops precludes optimizations. 
.LN2670:
// line 6396
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	CSYNC;
.LN2671:
// line 6395
	R2 += 16;
.LN2672:
// line 6397
	R7 = [P2 + 584];
.LN2673:
// line 6401
	P0 = [FP + -16];                        // Use of volatile in loops precludes optimizations. 
.LN2674:
// line 6397
	R7 = R2 + R7;
.LN2675:
// line 6399
	R0 += 1;
	// -- stall --
.LN2676:
// line 6401
	P0 = P3 + (P0<<2);
	[P0] = R2;
.LN2677:
// line 6402
	P0 = [FP + -12];                        // Use of volatile in loops precludes optimizations. 
	P1 = [SP + 52];
	[SP + 32] = P0;
	// -- 2 stalls --
	P1 = P1 + (P0<<2);
	[P1] = R7;
.LN2678:
// line 6404
	R2 = [FP + -16];                        // Use of volatile in loops precludes optimizations. 
	CC = R2 < R5 (IU);
	if !CC jump .P384L54 ;

.P384L53:
.LN2679:
	R2 = [FP + -16];                        // Use of volatile in loops precludes optimizations. 
	R2 += 1;
	[FP + -16] = R2;                        // Use of volatile in loops precludes optimizations. 
	jump.s .P384L55;

.P384L54:
.LN2680:
	R2 = [P2 + 60];
	R2 += 1;
	[P2 + 60] = R2;

.P384L55:
.LN2681:
// line 6405
	R2 = [FP + -12];                        // Use of volatile in loops precludes optimizations. 
	CC = R2 < R5 (IU);
	if !CC jump .P384L57 ;

.P384L56:
.LN2682:
	R2 = [FP + -12];                        // Use of volatile in loops precludes optimizations. 
	R2 += 1;
	[FP + -12] = R2;                        // Use of volatile in loops precludes optimizations. 
	jump.s .P384L114;

.P384L57:
.LN2683:
	R2 = [P2 + 60];
	R2 += 1;
	[P2 + 60] = R2;
	jump.s .P384L114;

.P384L31:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN2684:
// line 6308
	R0 = [I0];
	R0 += 56;
	P1.L = _Beta;
	P1.H = _Beta;
	[P1] = R0;
.LN2685:
// line 6310
	R0 = [P1];
	P5 = [FP + -8];
	[SP + 56] = P5;
	P5 = [SP + 28];
	P0 = -524;
.LN2686:
// line 6316
	R3 = [P4 + 88];
.LN2687:
// line 6317
	R2 = 304;
	P0 = P5 + P0;
	[SP + 52] = P0;
.LN2688:
// line 6310
	P0 = [SP + 56];
	P5 = [SP + 52];
	// -- 3 stalls --
	P5 = P5 + (P0<<2);
	[P5] = R0;
.LN2689:
// line 6313
	B[P3 + 2164] = R1;
.LN2690:
// line 6314
	B[P3 + 2169] = R4;
.LN2691:
// line 6315
	[P3 + 2176] = R4;
.LN2692:
// line 6316
	[P3 + 2196] = R3;
.LN2693:
// line 6317
	[P3 + 2216] = R2;
.LN2694:
// line 6321
	W[P3 + 2112] = R1;
.LN2695:
// line 6323
	[P2 + 836] = R3;
.LN2696:
// line 6310
	[SP + 56] = P5;
.LN2697:
// line 6326
	R0 = [P1];
	R0 = R0 + R2;
	[P1] = R0;
.LN2698:
// line 6328
	R0 = [P1];
	P5 = [FP + -4];
	[SP + 56] = P5;
	P5 = [SP + 28];
	P0 = [SP + 56];
	// -- 3 stalls --
	P0 = P5 + (P0<<2);
	[P0] = R0;
	[SP + 56] = P0;
.LN2699:
// line 6330
	R0 = [P1];
	P0 = [SP + 32];
	// -- 3 stalls --
	R1 = [P0 + 0];
	R0 = R0 + R1;
	[P1] = R0;
.LN2700:
// line 6332
	R0 = [FP + -8];
	CC = R0 < R5 (IU);
	if !CC jump .P384L35 ;

.P384L34:
.LN2701:
	R0 = [FP + -8];
	R0 += 1;
	[FP + -8] = R0;
	jump.s .P384L36;

.P384L35:
.LN2702:
	R0 = [P2 + 104];
	R0 += 1;
	[P2 + 104] = R0;

.P384L36:
.LN2703:
// line 6333
	R0 = [FP + -4];
	CC = R0 < R5 (IU);
	if !CC jump .P384L38 ;

.P384L37:
.LN2704:
	R0 = [FP + -4];
	R0 += 1;
	[FP + -4] = R0;
	jump.s .P384L39;

.P384L38:
.LN2705:
	R0 = [P2 + 104];
	R0 += 1;
	[P2 + 104] = R0;

.P384L39:
.LN2706:
// line 6335
	R2 = [P1];
	P5 = [FP + -8];
	P0 = [SP + 52];
.LN2707:
// line 6340
	R0 = [P4 + -48];
.LN2708:
// line 6342
	R3 = [P4 + 84];
.LN2709:
// line 6341
	R7 = [P4 + -44];
.LN2710:
// line 6335
	P0 = P0 + (P5<<2);
	[P0] = R2;
.LN2711:
// line 6339
	R2 = B[P2 + 600] (X);
.LN2712:
// line 6340
	R0 >>>= 24;
.LN2713:
// line 6343
	R6 = 512;
.LN2714:
// line 6347
	R1 = 2;
.LN2715:
// line 6341
	[P3 + 2180] = R7;
.LN2716:
// line 6342
	[P3 + 2200] = R3;
.LN2717:
// line 6339
	B[P3 + 2165] = R2;
.LN2718:
// line 6340
	B[P3 + 2170] = R0;
.LN2719:
// line 6343
	[P3 + 2220] = R6;
.LN2720:
// line 6347
	W[P3 + 2114] = R1;
.LN2721:
// line 6349
	[P2 + 832] = R3;
.LN2722:
// line 6353
	R0 = [P1];
	R0 = R0 + R6;
	[P1] = R0;
.LN2723:
// line 6355
	R0 = [P1];
	P5 = [FP + -4];
	P0 = [SP + 28];
	// -- 3 stalls --
	P0 = P0 + (P5<<2);
	[P0] = R0;
.LN2724:
// line 6357
	R0 = [P1];
	[I0] = R0;
.LN2725:
// line 6359
	R0 = [FP + -8];
	CC = R0 < R5 (IU);
	if !CC jump .P384L41 ;

.P384L40:
.LN2726:
	R0 = [FP + -8];
	R0 += 1;
	[FP + -8] = R0;
	jump.s .P384L42;

.P384L41:
.LN2727:
	R0 = [P2 + 104];
	R0 += 1;
	[P2 + 104] = R0;

.P384L42:
.LN2728:
// line 6360
	R0 = [FP + -4];
	CC = R0 < R5 (IU);
	if !CC jump .P384L44 ;

.P384L43:
.LN2729:
	R0 = [FP + -4];
	R0 += 1;
	[FP + -4] = R0;
	jump.s .P384L33;

.P384L44:
.LN2730:
	R0 = [P2 + 104];
	R0 += 1;
	[P2 + 104] = R0;
	jump.s .P384L33;

.P384L4:
.LN2731:
// line 6260
	R2 = 16960;
	R1 = R2;
	R1.H = 15;
	R0 = W[P4 + 48] (Z);
	R0 *= R1;
.LN2732:
// line 6263
	B[P2 + 197] = R4;
.LN2733:
// line 6260
	[P2 + 216] = R0;
.LN2734:
// line 6261
	[P2 + 220] = R0;
.LN2735:
// line 6262
	[P2 + 796] = R0;
.LN2736:
// line 6264
	B[P1] = R4;
.LN2737:
// line 6265
	R2 = 1;
	B[P2 + 167] = R2;
	jump.s .P384L6;
.LN._Packet_TNC1.end:
._Packet_TNC1.end:
	.global _Packet_TNC1;
	.type _Packet_TNC1,STT_FUNC;

	.align 2;
_MU_TEST:
.LN_MU_TEST:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 56 
//  Scratch registers used: {R0-R3,P0-P1,M3,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R4-R7,P3-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":6721
	LINK 20;
	M3.L = .static11;
	M3.H = .static11;
	[--SP] = (R7:4, P5:3);
	P3 = M3;
	R4 = R0;
.LN2738:
// line 6751
	R0 = [P3++];
	R5 = [P3++];
	R2 = [P3++];
.LN2739:
// line 6721
	SP += -16;
	P5.L = _Fcalibrovka;
	P5.H = _Fcalibrovka;
.LN2740:
// line 6742
	R3 = 1;
.LN2741:
// line 6751
	R1 = [P3++];
.LN2742:
// line 6742
	B[P5 + 756] = R3;
.LN2743:
// line 6743
	B[P5 + 747] = R3;
.LN2744:
// line 6744
	B[P5 + 758] = R3;
.LN2745:
// line 6745
	B[P5 + 763] = R3;
.LN2746:
// line 6746
	B[P5 + 748] = R3;
.LN2747:
// line 6747
	B[P5 + 751] = R3;
.LN2748:
// line 6751
	[SP + 12] = R1;
	R1 = [P5++];
	R0 = R1 + R0;
	CC = AC0;
	R1 = [P5++];
	R3 = CC;
	R1 = R1 + R3;
	R1 = R1 + R5;
	CALL.X (___mulli3);                     // integral multiplication of this size is implemented as a library call. 
	R2 = [P3++];
	R3 = [P3++];
	CALL.X (___divrem_u64);                 // division is implemented as a library call. 
	P4.L = _Mem1+28;
	P4.H = _Mem1+28;
.LN2749:
// line 6755
	R6 = [P5++];
	R5 = [P3++];
.LN2750:
// line 6752
	[P4 + 136] = R0;
.LN2751:
// line 6755
	R0 = R6 + R5;
	CC = AC0;
	R5 = [P3++];
	R1 = CC;
	R6 = [P5++];
	R2 = [P3++];
	R1 = R6 + R1;
	R3 = [P3++];
	R1 = R1 + R5;
	[SP + 12] = R3;
	CALL.X (___mulli3);                     // integral multiplication of this size is implemented as a library call. 
	R2 = [P3++];
	R3 = [P3++];
	CALL.X (___divrem_u64);                 // division is implemented as a library call. 
.LN2752:
// line 6756
	[P4 + 132] = R0;
.LN2753:
// line 6758
	R0 = [P5++];
	P1 = 508;
	R1 = [P5 ++ P1];
	CALL.X (___unsigned_int64_to_float64);  // integral to floating-point conversion is implemented as a library call. 
.LN2754:
// line 6760
	R2 = [P3++];
	R3 = [P3++];
	[SP + 12] = R3;
	CALL.X (___float64_div);                // floating-point division is implemented as a library call. 
	R2 = [P3++];
	R5 = R0;
	R3 = [P3++];
.LN2755:
// line 6772
	R6 = [P5++];
	[SP + 12] = R3;
	R3 = [P5++];
	[SP + 60] = R6;
	[FP + 16] = R3;
	R6 = R1;
	CALL.X (___float64_adi_lt);             // floating-point comparison is implemented as a library call. 
	R0 = 100;
	R3 = 255;
	IF CC R0 = R3;
.LN2756:
// line 6763
	R7 = PACK(R0.L, R7.L);
.LN2757:
// line 6765
	CALL.X (___unsigned_int32_to_float64);  // integral to floating-point conversion is implemented as a library call. 
	R2 = [P3++];
	R3 = [P3++];
	[SP + 12] = R3;
	CALL.X (___float64_mul);                // floating-point multiplication is implemented as a library call. 
	[SP + 12] = R1;
	R2 = R0;
	R1 = R6;
	R0 = R5;
	CALL.X (___float64_mul);                // floating-point multiplication is implemented as a library call. 
.LN2758:
// line 6766
	CALL.X (___float64_to_unsigned_int32_round_to_zero);// floating-point to integral conversion is implemented as a library call. 
	R0 += 1;
.LN2759:
// line 6768
	[P4 + 4] = R0;
.LN2760:
// line 6772
	R6 = [P3++];
.LN2761:
// line 6763
	R3 = [P4];
	R7.L = 6152;
.LN2762:
// line 6772
	R1 = [P3++];
.LN2763:
// line 6763
	R3 = DEPOSIT(R3, R7);
.LN2764:
// line 6772
	R0 = [SP + 60];
	R2 = [P3++];
	R0 = R0 + R6;
	R5 = [P3++];
	CC = AC0;
	[SP + 12] = R5;
	R6 = CC;
	R5 = [FP + 16];
	R6 = R5 + R6;
	R1 = R6 + R1;
.LN2765:
// line 6763
	[P4] = R3;
.LN2766:
// line 6772
	CALL.X (___mulli3);                     // integral multiplication of this size is implemented as a library call. 
	R2 = [P3++];
	R3 = [P3++];
	CALL.X (___divrem_u64);                 // division is implemented as a library call. 
.LN2767:
// line 6773
	R1 = [P5++];
	R7 = R0;
	R6 = [P3++];
.LN2768:
// line 6775
	[P4 + 108] = R0;
.LN2769:
// line 6773
	R0 = R1 + R6;
	CC = AC0;
	R5 = [P3++];
	P1 = 80;
	R1 = [P5 ++ P1];
	R6 = CC;
	R2 = [P3++];
	R1 = R1 + R6;
	R3 = [P3++];
	R1 = R1 + R5;
	[SP + 12] = R3;
	CALL.X (___mulli3);                     // integral multiplication of this size is implemented as a library call. 
	R2 = [P3++];
	R3 = [P3++];
	CALL.X (___divrem_u64);                 // division is implemented as a library call. 
.LN2770:
// line 6776
	[P4 + 120] = R0;
.LN2771:
// line 6778
	R0 = R7;
	CALL.X (_F_comp_tst);
.LN2772:
// line 6782
	R2 = [P5 + 4];
	R1 = [P5 + 16];
	R1 *= R2;
.LN2773:
// line 6780
	R0 = B[P5 + -12] (Z);
	R1 <<= 1;
	CC = R0 == 1;
	R1 = R1 - R2;
	IF CC R2 = R1;
.LN2774:
// line 6782
	[P5 + 8] = R2;
.LN2775:
// line 6790
	R0 = [P5++];
.LN2776:
// line 6791
	P0 = [P5 + 4];
.LN2777:
// line 6790
	CALL.X (___unsigned_int32_to_float64);  // integral to floating-point conversion is implemented as a library call. 
	R7 = R0;
	R6 = R1;
.LN2778:
// line 6791
	P1 = P0 + (P0<<1);
	P1 = (P1 + P1) << 2;
	P0 = (P0 + P1) << 2;
	R0 = P0;
	CALL.X (___unsigned_int32_to_float64);  // integral to floating-point conversion is implemented as a library call. There are 4 more instructions related to this call. 
.LN2779:
// line 6792
	[SP + 12] = R1;
.LN2780:
// line 6791
	R2 = R0;
.LN2781:
// line 6792
	R1 = R6;
	R0 = R7;
	CALL.X (___float64_div);                // floating-point division is implemented as a library call. 
	R2 = [P3++];
	R3 = [P3++];
	[SP + 12] = R3;
	[FP + 12] = R0;
	[SP + 44] = R1;
	CALL.X (___float64_adi_lt);             // floating-point comparison is implemented as a library call. 
	R0 = 100;
	R3 = 255;
	IF CC R0 = R3;
.LN2782:
// line 6796
	R7 = PACK(R0.L, R7.L);
.LN2783:
// line 6805
	R5 = [P5++];
.LN2784:
// line 6797
	R6 = PACK(R0.L, R6.L);
.LN2785:
// line 6805
	[P5++] = R5;
.LN2786:
// line 6799
	CALL.X (___unsigned_int32_to_float64);  // integral to floating-point conversion is implemented as a library call. 
	R2 = [P3++];
	R3 = [P3++];
	[SP + 12] = R3;
	CALL.X (___float64_mul);                // floating-point multiplication is implemented as a library call. 
.LN2787:
// line 6796
	R2 = [P4 + 16];
	R7.L = 2056;
.LN2788:
// line 6797
	R3 = 8;
.LN2789:
// line 6796
	R2 = DEPOSIT(R2, R7);
.LN2790:
// line 6799
	[SP + 12] = R1;
	R6 = PACK(R6.H, R3.L);
	[SP + 60] = R1;
.LN2791:
// line 6797
	R3 = DEPOSIT(R2, R6);
	[FP + 16] = R0;
.LN2792:
// line 6799
	R2 = R0;
	R1 = [SP + 44];
.LN2793:
// line 6806
	P1 = -632;
.LN2794:
// line 6799
	R0 = [FP + 12];
.LN2795:
// line 6797
	[P4 + 16] = R3;
.LN2796:
// line 6806
	[P5 ++ P1] = R5;
.LN2797:
// line 6799
	CALL.X (___float64_mul);                // floating-point multiplication is implemented as a library call. 
.LN2798:
// line 6800
	CALL.X (___float64_to_unsigned_int32_round_to_zero);// floating-point to integral conversion is implemented as a library call. 
	R0 += 1;
.LN2799:
// line 6808
	R1 = B[P5 + 408] (Z);
.LN2800:
// line 6802
	[P4 + 8] = R0;
.LN2801:
// line 6808
	CC = R1 == 0;
.LN2802:
// line 6803
	[P4 + 12] = R0;
.LN2803:
// line 6808
	if CC jump .P394L12 (bp);

.P394L10:
	R0 = M3;
	R1 = -192;
	R0 = R0 + R1;
.LN2804:
// line 6810
	CALL.X (_put_str1);
.LN2805:
// line 6811
	R1 = [P5 + 536];
	R0.L = .sF0FGTS.194;
	R0.H = .sF0FGTS.194;
.LN2806:
	CALL.X (_u_out);
.LN2807:
// line 6812
	R1 = [P5 + 528];
	R0.L = .sF0FSTS.195;
	R0.H = .sF0FSTS.195;
.LN2808:
	CALL.X (_u_out);
.LN2809:
// line 6813
	R1 = B[P5 + 747] (Z);
	R0.L = .sLCHMos.196;
	R0.H = .sLCHMos.196;
.LN2810:
	CALL.X (_u_out);
.LN2811:
// line 6814
	R1 = [P4 + 136];
	R0.L = .sMem1Ko.197;
	R0.H = .sMem1Ko.197;
.LN2812:
	CALL.X (_u_out);
.LN2813:
// line 6815
	R1 = [P4 + 132];
	R0.L = .sMem1Ko.198;
	R0.H = .sMem1Ko.198;
.LN2814:
	CALL.X (_u_out);
.LN2815:
// line 6816
	R1 = [P4 + 108];
	R0.L = .sMem1Ko.199;
	R0.H = .sMem1Ko.199;
.LN2816:
	CALL.X (_u_out);
.LN2817:
// line 6817
	R1 = [P4 + 120];
	R0.L = .sMem1Ko.200;
	R0.H = .sMem1Ko.200;
.LN2818:
	CALL.X (_u_out);
.LN2819:
// line 6818
	R1 = [P4 + 8];
	R0.L = .sMem1Ko.201;
	R0.H = .sMem1Ko.201;
.LN2820:
	CALL.X (_u_out);
.LN2821:
// line 6819
	R1 = [P4 + 4];
	R0.L = .sMem1Ko.202;
	R0.H = .sMem1Ko.202;
.LN2822:
	CALL.X (_u_out);
.LN2823:
// line 6820
	R0 = 0;
	B[P5 + 408] = R0;

.P394L12:
.LN2824:
// line 6831
	R1 = [P5 + 636];
	R1 += -1;
	W[P4 + 78] = R1;
.LN2825:
// line 6832
	R0 = [P5 + 632];
.LN2826:
// line 6835
	R2 = W[P5 + 524] (Z);
.LN2827:
// line 6827
	R5 = [P5 + 628];
.LN2828:
// line 6833
	R1 = B[P5 + 616] (X);
.LN2829:
// line 6832
	R0 >>= 3;
.LN2830:
// line 6836
	[P5 + 956] = R2;
.LN2831:
// line 6833
	B[P4 + 94] = R1;
.LN2832:
// line 6835
	W[P4 + 96] = R2;
.LN2833:
// line 6827
	[FP + 12] = R5;
	R5 >>= 3;
.LN2834:
// line 6828
	R3 = [P5 + 456];
.LN2835:
// line 6832
	R0 += -16;
.LN2836:
// line 6829
	R2 = [P5 + 460];
.LN2837:
// line 6824
	R1 = 2;
.LN2838:
// line 6859
	CC = R4 == 0;
.LN2839:
// line 6827
	[P4 + 48] = R5;
.LN2840:
// line 6832
	[P4 + 80] = R0;
.LN2841:
// line 6824
	B[P5 + 130] = R1;
.LN2842:
// line 6828
	W[P4 + 60] = R3;
.LN2843:
// line 6829
	W[P4 + 66] = R2;
.LN2844:
// line 6859
	if !CC jump .P394L15 ;

.P394L13:
.LN2845:
// line 6903
	[P4 + 84] = R0;
.LN2846:
// line 6931
	[P4 + 88] = R0;
.LN2847:
// line 6898
	[P4 + 52] = R5;
.LN2848:
// line 6900
	R2.H = R2.L << 0;
.LN2849:
// line 6926
	[P4 + 56] = R5;
.LN2850:
// line 6870
	R0 = B[P4 + -26] (Z);
	R5 = 4;
	R0 = DEPOSIT(R0, R5);
	P1 = 544;
.LN2851:
// line 6899
	W[P4 + 62] = R3;
.LN2852:
// line 6927
	W[P4 + 64] = R3;
.LN2853:
// line 6864
	R3 = 13;
.LN2854:
// line 6870
	B[P4 + -26] = R0;
.LN2855:
// line 6861
	B[P4 + 92] = R4;
.LN2856:
// line 6863
	B[P4 + 101] = R4;
.LN2857:
// line 6867
	B[P4 + -28] = R4;
.LN2858:
// line 6901
	B[P4 + 99] = R4;
.LN2859:
// line 6929
	B[P4 + 100] = R4;
.LN2860:
// line 6868
	R0 = B[P4 + -27] (Z);
.LN2861:
// line 6862
	R4 = 23;
	P5 = P5 + P1;
.LN2862:
// line 6864
	B[P4 + 104] = R3;
.LN2863:
// line 6868
	R0 = DEPOSIT(R0, R1);
.LN2864:
// line 6862
	B[P4 + 93] = R4;
.LN2865:
// line 6879
	R4 = [P5++];
.LN2866:
// line 6868
	R0 = R0.b (Z);
.LN2867:
// line 6879
	R5 = [P5++];
.LN2868:
// line 6868
	[SP + 52] = R0;
.LN2869:
// line 6880
	R0 = [P5++];
	R1 = [P5++];
	[P4 + 68] = R2;
.LN2870:
// line 6879
	R2 = [P3++];
.LN2871:
// line 6880
	[SP + 48] = R1;
.LN2872:
// line 6879
	R1 = [P3++];
	[SP + 44] = R2;
	R2 = [P3++];
	R3 = [P3++];
.LN2873:
// line 6880
	[SP + 56] = R0;
.LN2874:
// line 6879
	[SP + 12] = R3;
.LN2875:
// line 6865
	R0 = [P4 + 104];
.LN2876:
	R3 = 255;
.LN2877:
	R0 = R3 & R0;
	[P4 + 104] = R0;
.LN2878:
// line 6869
	R3 = 516;
	R0 = [SP + 52];
	R3 = DEPOSIT(R0, R3);
.LN2879:
// line 6879
	R0 = [SP + 44];
	R0 = R4 + R0;
	CC = AC0;
	R4 = CC;
	R5 = R5 + R4;
	R1 = R5 + R1;
.LN2880:
// line 6869
	B[P4 + -27] = R3;
.LN2881:
// line 6879
	CALL.X (___mulli3);                     // integral multiplication of this size is implemented as a library call. 
	R2 = [P3++];
	R3 = [P3++];
	CALL.X (___divrem_u64);                 // division is implemented as a library call. 
.LN2882:
// line 6880
	R5 = [P3++];
	R2 = [SP + 56];
.LN2883:
// line 6882
	[P4 + 112] = R0;
.LN2884:
// line 6880
	R0 = R2 + R5;
	CC = AC0;
	R1 = [P3++];
	R3 = CC;
	R5 = [SP + 48];
	R3 = R5 + R3;
	R4 = [P3 + 4];
	R1 = R3 + R1;
	[SP + 12] = R4;
	R2 = [P3];
	CALL.X (___mulli3);                     // integral multiplication of this size is implemented as a library call. 
	R2 = [P3 + 8];
	R3 = [P3 + 12];
	CALL.X (___divrem_u64);                 // division is implemented as a library call. 
.LN2885:
// line 6883
	[P4 + 124] = R0;
.LN2886:
// line 6888
	R0 = [P5 + 60];
	CALL.X (___unsigned_int32_to_float64);  // integral to floating-point conversion is implemented as a library call. 
	R5 = R0;
	R4 = R1;
	R0 = [FP + 12];
.LN2887:
// line 6889
	R1 = 100;
.LN2888:
	R0 *= R1;
	CALL.X (___unsigned_int32_to_float64);  // integral to floating-point conversion is implemented as a library call. 
.LN2889:
// line 6890
	[SP + 12] = R1;
.LN2890:
// line 6889
	R2 = R0;
.LN2891:
// line 6890
	R1 = R4;
.LN2892:
// line 6907
	R4 = [P3 + 20];
.LN2893:
// line 6890
	R0 = R5;
	CALL.X (___float64_div);                // floating-point division is implemented as a library call. 
.LN2894:
// line 6892
	[SP + 12] = R1;
.LN2895:
// line 6890
	R2 = R0;
.LN2896:
// line 6892
	R1 = [SP + 60];
	R0 = [FP + 16];
	CALL.X (___float64_mul);                // floating-point multiplication is implemented as a library call. 
.LN2897:
// line 6893
	CALL.X (___float64_to_unsigned_int32_round_to_zero);// floating-point to integral conversion is implemented as a library call. 
	R0 += 1;
.LN2898:
// line 6895
	[P4 + 20] = R0;
.LN2899:
// line 6896
	[P4 + 24] = R0;
.LN2900:
// line 6923
	[P4 + 32] = R0;
.LN2901:
// line 6924
	[P4 + 36] = R0;
.LN2902:
// line 6885
	R0 = [P4 + 28];
	R1 = DEPOSIT(R0, R7);
.LN2903:
// line 6907
	R5 = [P5];
.LN2904:
// line 6902
	R3 = B[P5 + 76] (X);
.LN2905:
// line 6886
	R1 = DEPOSIT(R1, R6);
.LN2906:
// line 6907
	R0 = [P3 + 16];
.LN2907:
// line 6902
	R3 += -1;
.LN2908:
// line 6907
	R0 = R5 + R0;
	CC = AC0;
.LN2909:
// line 6886
	[P4 + 28] = R1;
.LN2910:
// line 6907
	R1 = [P5 + 4];
	R5 = CC;
.LN2911:
	R2 = [P3 + 28];
.LN2912:
	R1 = R1 + R5;
	[SP + 12] = R2;
	R1 = R1 + R4;
	R2 = [P3 + 24];
.LN2913:
// line 6902
	B[P4 + 102] = R3;
.LN2914:
// line 6930
	B[P4 + 103] = R3;
.LN2915:
// line 6907
	CALL.X (___mulli3);                     // integral multiplication of this size is implemented as a library call. 
	R2 = [P3 + 32];
	R3 = [P3 + 36];
	CALL.X (___divrem_u64);                 // division is implemented as a library call. 
.LN2916:
// line 6908
	R5 = [P3 + 40];
	R4 = [P5 + 8];
.LN2917:
// line 6910
	[P4 + 116] = R0;
.LN2918:
// line 6908
	R0 = R4 + R5;
	CC = AC0;
	R1 = [P5 + 12];
	R3 = CC;
.LN2919:
	R2 = [P3 + 52];
.LN2920:
	R1 = R1 + R3;
	R4 = [P3 + 44];
	[SP + 12] = R2;
	R1 = R1 + R4;
	R2 = [P3 + 48];
	CALL.X (___mulli3);                     // integral multiplication of this size is implemented as a library call. 
.LN2921:
// line 6913
	R5 = [P4 + 40];
	R7 = DEPOSIT(R5, R7);
.LN2922:
// line 6908
	R2 = [P3 + 56];
	R3 = [P3 + 60];
.LN2923:
// line 6914
	R7 = DEPOSIT(R7, R6);
.LN2924:
// line 6908
	CALL.X (___divrem_u64);                 // division is implemented as a library call. 
.LN2925:
// line 6914
	[P4 + 40] = R7;
.LN2926:
// line 6911
	[P4 + 128] = R0;

.P394L15:
.LN2927:
// line 6934
	SP += 16;
	(R7:4, P5:3) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._MU_TEST.end:
._MU_TEST.end:
	.global _MU_TEST;
	.type _MU_TEST,STT_FUNC;

	.align 2;
_TNC_ERROR:
.LN_TNC_ERROR:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0-R3,P0-P1,ASTAT0-ASTAT1}
//  Call preserved registers used: {R7,P4-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":3944
	LINK 0;
	[--SP] = (R7:7, P5:4);
	SP += -12;
.LN2928:
// line 3946
	P1 = 1572 /* -4192732 */;
	P1.H = -64 /* -4192732 */;
	R3 = [P1];
.LN2929:
// line 3950
	R0 = 0;
	P1.L = _FLAG_SYNC_PF8;
	P1.H = _FLAG_SYNC_PF8;
	B[P1] = R0;
	P1.L = _FLAG_SYNC_PF11;
	P1.H = _FLAG_SYNC_PF11;
.LN2930:
// line 3951
	B[P1] = R0;
	P1.L = _TIME1_PPI_START;
	P1.H = _TIME1_PPI_START;
.LN2931:
// line 3953
	[P1] = R0;
.LN2932:
// line 3954
	R1 = 100;
	P1.L = _TIME2_PPI_START;
	P1.H = _TIME2_PPI_START;
	[P1] = R1;
.LN2933:
// line 3955
	R1 = 1000;
	P1.L = _TIME3_PPI_START;
	P1.H = _TIME3_PPI_START;
	[P1] = R1;
.LN2934:
// line 3957
	R2 = 1;
	P1.L = _FLAG_PPI_OK;
	P1.H = _FLAG_PPI_OK;
	B[P1] = R2;
.LN2935:
// line 3959
	P1 = 1792 /* -4192512 */;
	P1.H = -64 /* -4192512 */;
	R1 = W[P1] (X);
	BITCLR(R1, 11);
	W[P1] = R1.L;
.LN2936:
// line 3960
	R1 = W[P1] (X);
	BITCLR(R1, 8);
	W[P1] = R1.L;
	P1.L = _flag_END_sync_packet;
	P1.H = _flag_END_sync_packet;
.LN2937:
// line 3963
	B[P1] = R0;
	P0.L = _flag_ERROR_CRC_control_word;
	P0.H = _flag_ERROR_CRC_control_word;
.LN2938:
// line 3964
	B[P0 + 864] = R2;
	P1.L = _flag_Packet_form;
	P1.H = _flag_Packet_form;
.LN2939:
// line 3965
	B[P1] = R0;
.LN2940:
// line 3966
	B[P0 + 132] = R0;
	P1.L = _flag_event_sinhron;
	P1.H = _flag_event_sinhron;
.LN2941:
// line 3967
	B[P1] = R0;
	P1.L = _flag_dsp_ok;
	P1.H = _flag_dsp_ok;
.LN2942:
// line 3968
	B[P1] = R2;
.LN2943:
// line 3969
	B[P0 + 722] = R2;
.LN2944:
// line 3971
	B[P0 + 131] = R0;
.LN2945:
// line 3977
	B[P0 + 721] = R0;
.LN2946:
// line 3978
	B[P0] = R0;
.LN2947:
// line 3979
	[P0 + 44] = R0;
.LN2948:
// line 3980
	[P0 + 48] = R0;
	P5.L = _Event_word;
	P5.H = _Event_word;
.LN2949:
// line 3982
	R1 = -1;
	B[P5] = R1;
.LN2950:
// line 3984
	B[P0 + 712] = R0;
.LN2951:
// line 3985
	B[P0 + 710] = R0;
.LN2952:
// line 3986
	B[P0 + 711] = R0;
.LN2953:
// line 3987
	B[P0 + 709] = R0;
.LN2954:
// line 3988
	B[P0 + 715] = R0;
	P1.L = _flag_PPI_sz1;
	P1.H = _flag_PPI_sz1;
.LN2955:
// line 3992
	B[P1] = R0;
	P1.L = _flag_PPI_sz2;
	P1.H = _flag_PPI_sz2;
.LN2956:
// line 3993
	B[P1] = R0;
	P1.L = _flag_PPI_sinc;
	P1.H = _flag_PPI_sinc;
.LN2957:
// line 3994
	B[P1] = R2;
	P1.L = _flag_1HZ_sync;
	P1.H = _flag_1HZ_sync;
.LN2958:
// line 3996
	B[P1] = R0;
.LN2959:
// line 4000
	R1 = 50000 (Z);
.LN2960:
// line 3997
	B[P0 + 134] = R0;
.LN2961:
// line 4000
	R1 = R3 + R1;
	P4.L = _Alfa;
	P4.H = _Alfa;
	[P4] = R1;
.LN2962:
// line 4002
	CALL.X (_MU_TEST);
	R7.L = _Struk0;
	R7.H = _Struk0;
.LN2963:
// line 4003
	R0 = [P4];
.LN2964:
	R1 = R7;
	CALL.X (_Packet_TNC1);
.LN2965:
// line 4004
	R1 = B[P5] (Z);
.LN2966:
	R0 = R7;
	CALL.X (_massiv_time_setka);
.LN2967:
// line 4005
	R1 = [P4];
	R0.L = .sTNCERR.203;
	R0.H = .sTNCERR.203;
.LN2968:
	CALL.X (_n_out);
.LN2969:
// line 4006
	SP += 12;
	(R7:7, P5:4) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._TNC_ERROR.end:
._TNC_ERROR.end:
	.global _TNC_ERROR;
	.type _TNC_ERROR,STT_FUNC;

	.align 2;
_Avariya_test:
.LN_Avariya_test:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0-R1,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R6-R7,P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4009
	LINK 0;
	[--SP] = (R7:6, P5:5);
	SP += -12;
	P5.L = _flag_Avariya_TNC;
	P5.H = _flag_Avariya_TNC;
.LN2970:
// line 4010
	R0 = [P5];
	CC = R0 == 1;
	if !CC jump .P398L3 (bp);

.P398L1:
	R7.L = .s.6;
	R7.H = .s.6;
.LN2971:
// line 4012
	R0 = 2;
	[P5] = R0;
.LN2972:
// line 4013
	R0 = R7;
	CALL.X (_put_str1);
	P1.L = _Interval_TNC;
	P1.H = _Interval_TNC;
.LN2973:
// line 4014
	R1 = [P1];
	R0 = 1488;
	R0 = R7 + R0;
.LN2974:
	CALL.X (_n_out);
	R0 = 1500;
	R6 = R7 + R0;
.LN2975:
// line 4015
	R0 = R6;
	CALL.X (_put_str1);
	R0 = 1508;
	R0 = R7 + R0;
.LN2976:
// line 4016
	CALL.X (_put_str1);
.LN2977:
// line 4017
	R1 = [P5 + 124];
	R0 = 1512;
	R0 = R7 + R0;
.LN2978:
	CALL.X (_n_out);
.LN2979:
// line 4018
	R0 = R6;
	CALL.X (_put_str1);
.LN2980:
// line 4019
	R0 = R7;
	CALL.X (_put_str1);
.LN2981:
// line 4021
	CALL.X (_SPORT_COM);
.LN2982:
// line 4022
	CALL.X (_TNC_ERROR);

.P398L3:
.LN2983:
// line 4024
	SP += 12;
	(R7:6, P5:5) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._Avariya_test.end:
._Avariya_test.end:
	.global _Avariya_test;
	.type _Avariya_test,STT_FUNC;

	.align 2;
_buf_txt:
.LN_buf_txt:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 28 
//  Scratch registers used: {R0-R2,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R4-R7,P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":6980
	LINK 0;
	[--SP] = (R7:4, P5:5);
	P5 = R0;
	R5.L = .s.6;
	R5.H = .s.6;
	R0 = 1516;
	R0 = R5 + R0;
	SP += -12;
	R7 = R1;
.LN2984:
// line 6984
	CALL.X (_put_str1);
.LN2985:
// line 6985
	CC = R7 == 0;
	if CC jump .P399L3 ;

.P399L6:
	R6 = R5;
	R4 = R5;
	R0.L = _strng;
	R0.H = _strng;
	[SP + 40] = R0;
	R6 += 48;
	R4 += 44;

.P399L2:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 6985 col 2
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in an estimated 15 
//   cycles (includes 4 stalls but excludes the cost of function calls).
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used  11 out of   15 ( 73.3%)
//     16-bit Instruction  used  19 out of   30 ( 63.3%)
//     32-bit Instruction  used   8 out of   15 ( 53.3%)
//-------------------------------------------------------------------
	// -- 4 stalls --
.LN2986:
// line 6987
	R0 = R4;
	CALL.X (_put_str1);
.LN2987:
// line 6988
	R1 = R6;
	R0 = [SP + 40];
.LN2988:
	R2 = B[P5++] (Z);
.LN2989:
	CALL.X (__sprintf64);
.LN2990:
// line 6989
	R0 = [SP + 40];
	CALL.X (_put_str1);
	R7 += -1;
	CC = R7 == 0;
	if !CC jump .P399L2 (bp);
//-------------------------------------------------------------------
//   End Loop L2
//-------------------------------------------------------------------

.P399L7:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------

.P399L3:
.LN2991:
// line 6995
	R0 = R5;
	CALL.X (_put_str1);
.LN2992:
// line 6997
	SP += 12;
	(R7:4, P5:5) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._buf_txt.end:
._buf_txt.end:
	.global _buf_txt;
	.type _buf_txt,STT_FUNC;

	.align 2;
_INF_UART_SRV2:
.LN_INF_UART_SRV2:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 16 
//  Scratch registers used: {R0-R1,P0-P1,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {R6-R7,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
	P1 = R0;
// line "..\BFcom\main.c":7067
	LINK 0;
	[--SP] = (R7:6);
	R7 = R0;
	SP += -12;
.LN2993:
// line 7078
	R0 = 32;
	P0 = 32;
	B[SP + 32] = R0;
	R0 = 0;
	LOOP .P400L2L LC0 = P0;

.P400L2:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 7080 col 3
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in estimated 2 cycles.
//-------------------------------------------------------------------
//   Trip Count  = 32
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   2 out of    2 (100.0%)
//     16-bit Instruction  used   3 out of    4 ( 75.0%)
//     32-bit Instruction  used   1 out of    2 ( 50.0%)
//-------------------------------------------------------------------
//  This loop was not modulo scheduled because it was optimized for space.
//-------------------------------------------------------------------
	LOOP_BEGIN .P400L2L;
.LN2994:
// line 7082
	R1 = B[P1++] (X);
	R0 = R0 ^ R1;
.LN2995:
// line 7080
	LOOP_END .P400L2L;
//-------------------------------------------------------------------
//   End Loop L2
//-------------------------------------------------------------------

.P400L13:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN2996:
// line 7085
	B[SP + 28] = R0;
.LN2997:
// line 7091
	CC = R2 == 1;
	P1.L = _FLAG_SCH_TX485;
	P1.H = _FLAG_SCH_TX485;
.LN2998:
// line 7087
	R0 = [P1];
	R0 += 1;
	[P1] = R0;
	R6.L = .s.171;
	R6.H = .s.171;
.LN2999:
// line 7091
	if CC jump .P400L4 ;

.P400L5:
.LN3000:
// line 7092
	CC = R2 == 0;
	if !CC jump .P400L6 (bp);

.P400L7:
	R0 = 472;
	R0 = R6 + R0;
.LN3001:
	CALL.X (_Transf);

.P400L6:
.LN3002:
// line 7067
	R0 = FP;
.LN3003:
// line 7093
	R0 += 12;
	R1 = 1;
	CALL.X (_ZTransf);
	R0 = 480;
	R0 = R6 + R0;
.LN3004:
// line 7094
	CALL.X (_Transf);
.LN3005:
// line 7095
	R0 = R7;
	R1 = 32;
	CALL.X (_ZUTransf);
.LN3006:
// line 7096
	R0 = R6;
	CALL.X (_Transf);
.LN3007:
// line 7067
	R0 = FP;
.LN3008:
// line 7097
	R0 += 8;
	R1 = 1;
	CALL.X (_ZTransf);
	R0 = 484;
	R0 = R6 + R0;
.LN3009:
// line 7098
	CALL.X (_Transf);
.LN3010:
// line 7100
	SP += 12;
	(R7:6) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;

.P400L4:
	R0 = 464;
	R0 = R6 + R0;
.LN3011:
// line 7091
	CALL.X (_Transf);
	jump.s .P400L6;
.LN._INF_UART_SRV2.end:
._INF_UART_SRV2.end:
	.global _INF_UART_SRV2;
	.type _INF_UART_SRV2,STT_FUNC;

	.align 2;
_test_inf:
.LN_test_inf:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 16 
//  Scratch registers used: {R0-R1,ASTAT0-ASTAT1}
//  Call preserved registers used: {R7,P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":7422
	LINK 0;
	[--SP] = (R7:7, P5:5);
	R7.L = .s.6;
	R7.H = .s.6;
	SP += -12;
.LN3012:
// line 7426
	R0 = R7;
	CALL.X (_put_str1);
	P5.L = _Vikl;
	P5.H = _Vikl;
.LN3013:
// line 7429
	R1 = B[P5 + 32] (Z);
	R0.L = .sLoKWEB.213;
	R0.H = .sLoKWEB.213;
.LN3014:
	CALL.X (_x_out);
.LN3015:
// line 7430
	R1 = B[P5++] (Z);
	R0.L = .sVikl.214;
	R0.H = .sVikl.214;
.LN3016:
	CALL.X (_x_out);
.LN3017:
// line 7431
	R1 = B[P5++] (Z);
	R0.L = .sGBR.215;
	R0.H = .sGBR.215;
.LN3018:
	CALL.X (_x_out);
.LN3019:
// line 7432
	R1 = B[P5++] (Z);
	R0.L = .sBR.216;
	R0.H = .sBR.216;
.LN3020:
	CALL.X (_x_out);
.LN3021:
// line 7433
	R1 = B[P5++] (Z);
	R0.L = .sCUMU.217;
	R0.H = .sCUMU.217;
.LN3022:
	CALL.X (_x_out);
.LN3023:
// line 7434
	R1 = B[P5++] (Z);
	R0.L = .sTnorma.218;
	R0.H = .sTnorma.218;
.LN3024:
	CALL.X (_x_out);
.LN3025:
// line 7435
	R1 = B[P5++] (Z);
	R0.L = .sPredav.219;
	R0.H = .sPredav.219;
.LN3026:
	CALL.X (_x_out);
.LN3027:
// line 7436
	R1 = B[P5 + 331] (Z);
	R0.L = .sTEMPB6.220;
	R0.H = .sTEMPB6.220;
.LN3028:
	CALL.X (_x_out);
.LN3029:
// line 7437
	R1 = B[P5 + 332] (Z);
	R0.L = .sTEMPB6.221;
	R0.H = .sTEMPB6.221;
.LN3030:
	CALL.X (_x_out);
.LN3031:
// line 7438
	R1 = B[P5 + 9] (Z);
	R0.L = .sNomerr.34;
	R0.H = .sNomerr.34;
.LN3032:
	CALL.X (_x_out);
.LN3033:
// line 7439
	R1 = B[P5++] (Z);
	R0.L = .sNormaa.32;
	R0.H = .sNormaa.32;
.LN3034:
	CALL.X (_x_out);
.LN3035:
// line 7440
	R1 = B[P5] (Z);
	R0.L = .sNormap.33;
	R0.H = .sNormap.33;
.LN3036:
	CALL.X (_x_out);
	R0 = 1556;
	R0 = R7 + R0;
.LN3037:
// line 7441
	R1 = B[P5 + 326] (Z);
.LN3038:
	CALL.X (_x_out);
	R0 = 1572;
	R0 = R7 + R0;
.LN3039:
// line 7442
	R1 = B[P5 + 327] (Z);
.LN3040:
	CALL.X (_x_out);
	P5.L = _Alfa;
	P5.H = _Alfa;
.LN3041:
// line 7443
	R0 = [P5];
	R1 = R0 >> 16;
	R0 = 1588;
	R0 = R7 + R0;
.LN3042:
	CALL.X (_x_out);
.LN3043:
// line 7444
	R0 = [P5];
	R1 = R0.L (Z);
	R0 = 1604;
	R0 = R7 + R0;
.LN3044:
	CALL.X (_x_out);
	R0 = 1620;
	R0 = R7 + R0;
.LN3045:
// line 7445
	CALL.X (_put_str1);
.LN3046:
// line 7468
	SP += 12;
	(R7:7, P5:5) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._test_inf.end:
._test_inf.end:
	.global _test_inf;
	.type _test_inf,STT_FUNC;

	.align 2;
_INIT_START_PACHKA:
.LN_INIT_START_PACHKA:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 36 
//  Scratch registers used: {R0-R3,P0-P2,I0-I1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R5-R7,P3-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":7471
	LINK 4;
	[--SP] = (R7:5, P5:3);
	SP += -12;
.LN3047:
// line 7475
	R5 = 0;
	P5.L = _sch_sync_ethernet;
	P5.H = _sch_sync_ethernet;
.LN3048:
// line 7480
	R3 = 1;
	P1.L = _flag_Ethernet;
	P1.H = _flag_Ethernet;
.LN3049:
// line 7483
	[P5 + 140] = R5;
.LN3050:
// line 7482
	B[P1] = R3;
.LN3051:
// line 7475
	[P5 + 960] = R5;
.LN3052:
// line 7476
	[P5 + 964] = R5;
.LN3053:
// line 7477
	[P5 + 968] = R5;
.LN3054:
// line 7478
	B[P5 + 278] = R5;
.LN3055:
// line 7479
	[P5] = R5;
.LN3056:
// line 7480
	B[P5 + 800] = R3;
	P0.L = _FLAG_SYNC_PF8;
	P0.H = _FLAG_SYNC_PF8;
.LN3057:
// line 7484
	B[P0] = R5;
	P2.L = _FLAG_SYNC_PF11;
	P2.H = _FLAG_SYNC_PF11;
.LN3058:
// line 7568
	R1 = 116;
.LN3059:
// line 7485
	B[P2] = R5;
	I0.L = _TIME1_PPI_START;
	I0.H = _TIME1_PPI_START;
.LN3060:
// line 7568
	CC = R0 == R1;
.LN3061:
// line 7487
	[I0] = R5;
	I1.L = _TIME2_PPI_START;
	I1.H = _TIME2_PPI_START;
.LN3062:
// line 7488
	R1 = 100;
	[I1] = R1;
.LN3063:
// line 7489
	R7 = 1000;
	P1.L = _TIME3_PPI_START;
	P1.H = _TIME3_PPI_START;
	[P1] = R7;
	P0.L = _FLAG_PPI_OK;
	P0.H = _FLAG_PPI_OK;
.LN3064:
// line 7491
	B[P0] = R3;
.LN3065:
// line 7493
	P2 = 1792 /* -4192512 */;
	P2.H = -64 /* -4192512 */;
	R1 = W[P2] (X);
	BITCLR(R1, 11);
	W[P2] = R1.L;
.LN3066:
// line 7494
	R1 = W[P2] (X);
	BITCLR(R1, 8);
	W[P2] = R1.L;
.LN3067:
// line 7499
	B[P5 + 221] = R3;
	P1.L = _flag_first_TNO;
	P1.H = _flag_first_TNO;
.LN3068:
// line 7500
	B[P1] = R3;
	P0.L = _flag_END_sync_packet;
	P0.H = _flag_END_sync_packet;
.LN3069:
// line 7502
	B[P0] = R5;
.LN3070:
// line 7503
	B[P5 + 956] = R3;
	I0.L = _Alfa;
	I0.H = _Alfa;
.LN3071:
// line 7505
	[I0] = R5;
	P4.L = _flag_Packet_form;
	P4.H = _flag_Packet_form;
.LN3072:
// line 7506
	B[P4] = R5;
.LN3073:
// line 7507
	B[P5 + 224] = R5;
	P2.L = _flag_event_sinhron;
	P2.H = _flag_event_sinhron;
.LN3074:
// line 7508
	B[P2] = R5;
	P1.L = _flag_dsp_ok;
	P1.H = _flag_dsp_ok;
.LN3075:
// line 7509
	B[P1] = R3;
	P1.L = _Event_word;
	P1.H = _Event_word;
.LN3076:
// line 7510
	B[P5 + 814] = R3;
.LN3077:
// line 7511
	B[P5 + 222] = R3;
.LN3078:
// line 7512
	B[P5 + 144] = R3;
.LN3079:
// line 7518
	B[P5 + 145] = R3;
.LN3080:
// line 7513
	B[P5 + 223] = R5;
.LN3081:
// line 7514
	[P5 + 240] = R5;
.LN3082:
// line 7522
	B[P5 + 813] = R5;
.LN3083:
// line 7523
	[P5 + 76] = R5;
.LN3084:
// line 7524
	B[P5 + 92] = R5;
.LN3085:
// line 7525
	[P5 + 136] = R5;
.LN3086:
// line 7526
	[P5 + 140] = R5;
	[SP + 36] = P1;
.LN3087:
// line 7528
	R1 = -1;
	B[P1] = R1;
.LN3088:
// line 7530
	B[P5 + 804] = R5;
.LN3089:
// line 7531
	B[P5 + 802] = R5;
.LN3090:
// line 7532
	B[P5 + 803] = R5;
.LN3091:
// line 7533
	B[P5 + 801] = R5;
.LN3092:
// line 7534
	B[P5 + 807] = R5;
.LN3093:
// line 7536
	[P5 + 12] = R5;
.LN3094:
// line 7537
	[P5 + 16] = R5;
.LN3095:
// line 7538
	[P5 + 20] = R5;
.LN3096:
// line 7539
	[P5 + 24] = R5;
.LN3097:
// line 7540
	[P5 + 28] = R5;
.LN3098:
// line 7541
	[P5 + 32] = R5;
.LN3099:
// line 7542
	[P5 + 36] = R5;
.LN3100:
// line 7543
	[P5 + 40] = R5;
.LN3101:
// line 7544
	[P5 + 44] = R5;
.LN3102:
// line 7545
	[P5 + 48] = R5;
.LN3103:
// line 7546
	[P5 + 52] = R5;
	P1.L = _sch_pachek_test;
	P1.H = _sch_pachek_test;
.LN3104:
// line 7550
	[P1] = R5;
	P0.L = _flag_PPI_sz1;
	P0.H = _flag_PPI_sz1;
.LN3105:
// line 7551
	[P5 + -16] = R5;
.LN3106:
// line 7552
	[P5 + 248] = R5;
	[SP + 56] = P0;
.LN3107:
// line 7553
	B[P0] = R5;
	P2.L = _flag_PPI_sz2;
	P2.H = _flag_PPI_sz2;
	[SP + 52] = P2;
.LN3108:
// line 7554
	B[P2] = R5;
	P3.L = _flag_PPI_sinc;
	P3.H = _flag_PPI_sinc;
.LN3109:
// line 7558
	R1 = 16959;
.LN3110:
// line 7555
	B[P3] = R3;
	R2 = R1;
.LN3111:
// line 7558
	R2.H = 15;
.LN3112:
// line 7557
	[P5 + 252] = R5;
.LN3113:
// line 7558
	[P5 + 256] = R2;
.LN3114:
// line 7561
	R7 = -13825;
	P1.L = _time_TNC_max;
	P1.H = _time_TNC_max;
.LN3115:
// line 7560
	[P1] = R5;
	R6 = R7;
.LN3116:
// line 7561
	R6.H = 15258;
	P0.L = _time_TNC_min;
	P0.H = _time_TNC_min;
	[P0] = R6;
	P2.L = _time_TNO_max;
	P2.H = _time_TNO_max;
.LN3117:
// line 7562
	[P2] = R5;
	P1.L = _time_TNO_min;
	P1.H = _time_TNO_min;
.LN3118:
// line 7563
	[P1] = R6;
	P0.L = _flag_1HZ_sync;
	P0.H = _flag_1HZ_sync;
.LN3119:
// line 7565
	B[P0] = R5;
.LN3120:
// line 7566
	B[P5 + 226] = R5;
.LN3121:
// line 7568
	if CC jump .P411L1 ;

.P411L2:
.LN3122:
// line 7589
	R0 = 119;
	B[P5 + 157] = R0;

.P411L3:
.LN3123:
// line 7591
	[P5 + 12] = R5;
	P1.L = _timer_TNC1;
	P1.H = _timer_TNC1;
.LN3124:
// line 7592
	[P1] = R5;
.LN3125:
// line 7594
	R0 = 50000 (Z);
.LN3126:
// line 7593
	[P5 + 272] = R6;
.LN3127:
// line 7594
	[P5 + 264] = R0;
.LN3128:
// line 7595
	SP += 12;
	(R7:5, P5:3) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;

.P411L1:
.LN3129:
// line 7575
	B[P5 + 385] = R3;
.LN3130:
// line 7580
	B[P5 + 276] = R3;
.LN3131:
// line 7579
	B[P5 + 157] = R0;
.LN3132:
// line 7571
	B[P5 + 278] = R5;
.LN3133:
// line 7572
	[P5 + 960] = R5;
.LN3134:
// line 7573
	[P5 + 964] = R5;
.LN3135:
// line 7574
	[P5 + 968] = R5;
.LN3136:
// line 7576
	B[P5 + 992] = R5;
.LN3137:
// line 7577
	B[P5 + 815] = R5;
	R7.L = _Struk0;
	R7.H = _Struk0;
.LN3138:
// line 7582
	R0 = [I0];
.LN3139:
	R1 = R7;
	CALL.X (_Packet_TNC1);
.LN3140:
// line 7583
	R1 = 2;
	B[P4] = R1;
.LN3141:
// line 7584
	P0 = [SP + 56];
.LN3142:
// line 7587
	R0 = 99;
	// -- 2 stalls --
.LN3143:
// line 7584
	B[P0] = R5;
.LN3144:
// line 7585
	P1 = [SP + 52];
	// -- 3 stalls --
	B[P1] = R5;
.LN3145:
// line 7586
	R1 = B[P3] (Z);
	R1 += 1;
	B[P3] = R1;
.LN3146:
// line 7588
	P2 = [SP + 36];
.LN3147:
// line 7587
	CALL.X (_Timer_INT2);
.LN3148:
// line 7588
	R0 = R7;
	// -- stall --
.LN3149:
	R1 = B[P2] (Z);
.LN3150:
	CALL.X (_massiv_time_setka);
	jump.s .P411L3;
.LN._INIT_START_PACHKA.end:
._INIT_START_PACHKA.end:
	.global _INIT_START_PACHKA;
	.type _INIT_START_PACHKA,STT_FUNC;

	.align 2;
_Test_pachka:
.LN_Test_pachka:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 28 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R5-R7,P4-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":6060
	LINK 0;
	[--SP] = (R7:5, P5:4);
	R7 = R0;
	SP += -12;
	R0.L = .s.227;
	R0.H = .s.227;
.LN3151:
// line 6061
	CALL.X (_put_str1);
	P2.L = _WORK_TU_FLAG;
	P2.H = _WORK_TU_FLAG;
	P1 = 335;
	P0 = P2 + P1;
.LN3152:
// line 6063
	R6 = 116;
	P1 = P0;
.LN3153:
// line 6065
	R0 = [P0++];
.LN3154:
// line 6063
	B[P2] = R6;
.LN3155:
// line 6065
	[P0++] = R0;
.LN3156:
// line 6066
	P2 = -172;
.LN3157:
// line 6068
	CC = R7 == 1;
.LN3158:
// line 6066
	[P0 ++ P2] = R0;
.LN3159:
// line 6068
	if !CC jump .P413L3 ;

.P413L1:
	P2 = P1;
.LN3160:
// line 6070
	R2 = 176;
	P5 = -192;
	[P2 ++ P5] = R2;
.LN3161:
// line 6072
	R1 = [P2];
	R0 = 22;
	CC = R1 == R0;
	if !CC jump .P413L6 ;

.P413L4:
	P2 = P0;
	P2 += -4;
.LN3162:
	R0 = 15;
	[P2] = R0;

.P413L6:
.LN3163:
// line 6073
	R0 = 872;
	CC = R1 == R0;
	if !CC jump .P413L9 ;

.P413L7:
	P2 = P0;
	P2 += -4;
.LN3164:
	R0 = 849;
	[P2] = R0;

.P413L9:
.LN3165:
// line 6074
	R0 = 3045;
	CC = R1 == R0;
	if !CC jump .P413L12 ;

.P413L10:
	P2 = P0;
	P2 += -4;
.LN3166:
	R0 = 3022;
	[P2] = R0;

.P413L12:
.LN3167:
// line 6075
	R0 = 12500;
	CC = R1 == R0;
	if !CC jump .P413L15 ;

.P413L13:
	P2 = P0;
	P2 += -4;
.LN3168:
	R0 = 12477;
	[P2] = R0;

.P413L15:
.LN3169:
// line 6077
	R0 = 14;
	[P0] = R0;
.LN3170:
// line 6080
	R0 = 168;
	[P0 + 172] = R0;
.LN3171:
// line 6079
	[P0 + 168] = R2;

.P413L3:
.LN3172:
// line 6084
	CC = R7 == 2;
	if !CC jump .P413L18 ;

.P413L16:
	P2 = P0;
	P2 += -4;
	P5 = P0;
.LN3173:
// line 6086
	R0 = 15;
	P4 = -20;
	[P2 ++ P4] = R0;
.LN3174:
// line 6088
	R1 = [P2];
	R0 = 19;
	CC = R1 == R0;
	if !CC jump .P413L21 ;

.P413L19:
.LN3175:
	R0 = 137;
	[P1] = R0;

.P413L21:
.LN3176:
// line 6089
	R0 = 108;
	CC = R1 == R0;
	if !CC jump .P413L24 ;

.P413L22:
.LN3177:
	R0 = 393;
	[P1] = R0;

.P413L24:
.LN3178:
// line 6090
	R0 = 3456;
	CC = R1 == R0;
	if !CC jump .P413L27 ;

.P413L25:
.LN3179:
	R0 = 13785;
	[P1] = R0;

.P413L27:
.LN3180:
// line 6091
	R0 = 12800;
	CC = R1 == R0;
	if !CC jump .P413L30 ;

.P413L28:
.LN3181:
	R0 = 51161 (Z);
	[P1] = R0;

.P413L30:
.LN3182:
// line 6093
	R0 = 14;
	P2 = 112;
	[P5 ++ P2] = R0;
.LN3183:
// line 6095
	R0 = [P5 + 52];
	[P5 + 56] = R0;
.LN3184:
// line 6096
	R0 += -8;
	[P5 + 60] = R0;

.P413L18:
.LN3185:
// line 6099
	CC = R7 == 3;
	if !CC jump .P413L33 ;

.P413L31:
	P2 = P1;
.LN3186:
// line 6101
	R2 = 176;
	P5 = -184;
	[P2 ++ P5] = R2;
.LN3187:
// line 6103
	R1 = [P2];
	R0 = 22;
	CC = R1 == R0;
	if !CC jump .P413L36 ;

.P413L34:
.LN3188:
	R0 = 15;
	[P0] = R0;

.P413L36:
.LN3189:
// line 6104
	R0 = 872;
	CC = R1 == R0;
	if !CC jump .P413L39 ;

.P413L37:
.LN3190:
	R0 = 849;
	[P0] = R0;

.P413L39:
.LN3191:
// line 6105
	R0 = 3045;
	CC = R1 == R0;
	if !CC jump .P413L42 ;

.P413L40:
.LN3192:
	R0 = 3022;
	[P0] = R0;

.P413L42:
.LN3193:
// line 6106
	R0 = 12500;
	CC = R1 == R0;
	if !CC jump .P413L45 ;

.P413L43:
.LN3194:
	R0 = 12477;
	[P0] = R0;

.P413L45:
	P2 = P0;
	P2 += -4;
.LN3195:
// line 6108
	R0 = 15;
	[P2] = R0;
.LN3196:
// line 6111
	R0 = 168;
	[P2 + 176] = R0;
.LN3197:
// line 6110
	[P2 + 172] = R2;

.P413L33:
.LN3198:
// line 6115
	R1 = 4;
	CC = R7 == R1;
	if !CC jump .P413L48 ;

.P413L46:
	P2 = P0;
	P5 = P0;
.LN3199:
// line 6117
	R0 = 14;
	P4 = -16;
	[P2 ++ P4] = R0;
.LN3200:
// line 6119
	R2 = [P2];
	R0 = 92;
	CC = R2 == R0;
	if !CC jump .P413L51 ;

.P413L49:
.LN3201:
	R0 = 137;
	[P1] = R0;

.P413L51:
.LN3202:
// line 6120
	R0 = 3824;
	CC = R2 == R0;
	if !CC jump .P413L54 ;

.P413L52:
.LN3203:
	R0 = 393;
	[P1] = R0;

.P413L54:
.LN3204:
// line 6121
	R0 = 12784;
	CC = R2 == R0;
	if !CC jump .P413L57 ;

.P413L55:
.LN3205:
	R0 = 13785;
	[P1] = R0;

.P413L57:
	P5 += -4;
.LN3206:
// line 6124
	R0 = 15;
	P1 = 116;
	[P5 ++ P1] = R0;
.LN3207:
// line 6126
	R0 = [P5 + 52];
	R3 = -7937;
.LN3208:
// line 6129
	CC = R2 == 0;
.LN3209:
// line 6126
	[P5 + 56] = R0;
	R2 = R3;
.LN3210:
// line 6127
	R0 += -8;
	R2.H = 1525;
	IF CC R0 = R2;
	[P5 + 60] = R0;

.P413L48:
.LN3211:
// line 6133
	R2 = 5;
	CC = R7 == R2;
	if !CC jump .P413L63 ;

.P413L61:
.LN3212:
// line 6137
	NOP;                                    // Inserted to fix anomaly w_05000245_with_boundaries. 
	P1 = P0;
	P1 += -12;
	R3 = [P1];
	P1 = P0;
	CC = R3 == 1;
	if !CC jump .P413L66 ;

.P413L64:
.LN3213:
	R0 = 137;
	[P1 + 164] = R0;
.LN3214:
	R0 = 22;
	[P1] = R0;

.P413L66:
.LN3215:
// line 6138
	CC = R3 == R7;
	if !CC jump .P413L69 ;

.P413L67:
.LN3216:
	R0 = 600;
	[P1 + 164] = R0;
.LN3217:
	R0 = 46;
	[P1] = R0;

.P413L69:
.LN3218:
// line 6139
	R0 = 10;
	CC = R3 == R0;
	if !CC jump .P413L72 ;

.P413L70:
.LN3219:
	R0 = 1100;
	[P1 + 164] = R0;
.LN3220:
	R0 = 97;
	[P1] = R0;

.P413L72:
.LN3221:
// line 6140
	R0 = 14;
	CC = R3 == R0;
	if !CC jump .P413L75 ;

.P413L73:
.LN3222:
	R0 = 1950;
	[P1 + 164] = R0;
.LN3223:
	R0 = 25;
	[P1] = R0;

.P413L75:
	P1 += -4;
.LN3224:
// line 6148
	R0 = 15;
	P2 = 116;
	[P1 ++ P2] = R0;
.LN3225:
// line 6150
	R0 = [P1 + 52];
	[P1 + 56] = R0;
.LN3226:
// line 6151
	R0 += -8;
	[P1 + 60] = R0;

.P413L63:
.LN3227:
// line 6154
	R0 = 6;
	CC = R7 == R0;
	if !CC jump .P413L78 ;

.P413L76:
.LN3228:
// line 6159
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R3 = [P0 + -8];
	CC = R3 == 1;
.LN3229:
// line 6156
	R0 = 14;
	[P0] = R0;
.LN3230:
// line 6157
	R5 = 393;
	[P0 + 164] = R5;
.LN3231:
// line 6159
	if !CC jump .P413L81 ;

.P413L79:
.LN3232:
	R0 = 2;
	[P0 + 64] = R0;

.P413L81:
.LN3233:
// line 6160
	CC = R3 == R1;
	if !CC jump .P413L84 ;

.P413L82:
.LN3234:
	[P0 + 64] = R2;

.P413L84:
.LN3235:
// line 6161
	CC = R3 == R2;
	if !CC jump .P413L87 ;

.P413L85:
.LN3236:
	[P0 + 64] = R7;

.P413L87:
.LN3237:
// line 6162
	R0 = 7;
	CC = R3 == R0;
	if !CC jump .P413L90 ;

.P413L88:
.LN3238:
	R0 = 8;
	[P0 + 64] = R0;

.P413L90:
	P0 += -4;
.LN3239:
// line 6164
	R0 = 15;
	[P0] = R0;
.LN3240:
// line 6167
	R0 = 385;
	[P0 + 176] = R0;
.LN3241:
// line 6166
	[P0 + 172] = R5;

.P413L78:
.LN3242:
// line 6171
	R0 = 0;
	CALL.X (_MU_TEST);
.LN3243:
// line 6173
	R0 = R6;
	CALL.X (_INIT_START_PACHKA);
.LN3244:
// line 6174
	SP += 12;
	(R7:5, P5:4) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._Test_pachka.end:
._Test_pachka.end:
	.global _Test_pachka;
	.type _Test_pachka,STT_FUNC;

	.align 2;
_K615_work:
.LN_K615_work:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 52 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {R4-R7,P3-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2576
	LINK 16;
	[--SP] = (R7:4, P5:3);
	P1 = FP;
	SP += -12;
	P1 += -8;
	[FP + 16] = P1;
	P0 = [FP + 16];
	P2 = 6;
	R7 = R0;
.LN3245:
// line 2592
	R6 = -1;
	LOOP .P417L2L LC0 = P2;

.P417L2:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 2592 col 4
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in estimated 1 cycle.
//-------------------------------------------------------------------
//   Trip Count  = 6
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   1 out of    1 (100.0%)
//     Store               used   1 out of    1 (100.0%)
//     16-bit Instruction  used   1 out of    2 ( 50.0%)
//-------------------------------------------------------------------
//  This loop was not modulo scheduled because it was optimized for space.
//-------------------------------------------------------------------
	LOOP_BEGIN .P417L2L;
	B[P0++] = R6;
.LN3246:
	LOOP_END .P417L2L;
//-------------------------------------------------------------------
//   End Loop L2
//-------------------------------------------------------------------

.P417L110:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	R0.L = .sK615wo.228;
	R0.H = .sK615wo.228;
.LN3247:
// line 2594
	CALL.X (_Transf);
.LN3248:
// line 2596
	CC = R7 == 0;
	P4.L = _VCU_BOTTON;
	P4.H = _VCU_BOTTON;
	P3.L = _Mem_K615;
	P3.H = _Mem_K615;
	if !CC jump .P417L6 ;

.P417L4:
.LN3249:
// line 2599
	R0 = [P3];
	R1 = -2;
	R0 = R0 | R1;
	CC = R0 == -2;
	if !CC jump .P417L9 (bp);

.P417L7:
.LN3250:
// line 2601
	R3 = B[P3 + 7] (Z);
	R1 = 2;
	R1.H = 3;
	R1 = DEPOSIT(R3, R1);
.LN3251:
// line 2602
	R4 = 1;
	B[P4 + 853] = R4;
.LN3252:
// line 2601
	B[P3 + 7] = R1;
	R0.L = .s.229;
	R0.H = .s.229;
.LN3253:
// line 2603
	CALL.X (_put_str1);
	P5.L = _Mem1+28;
	P5.H = _Mem1+28;
.LN3254:
// line 2608
	R0 = B[P5] (Z);
	R2 = 1028;
	R0 = DEPOSIT(R0, R2);
.LN3255:
// line 2604
	R1 = B[P3 + 6] (Z);
	R3 = 1538;
.LN3256:
// line 2608
	B[P5++] = R0;
.LN3257:
// line 2604
	R1 = DEPOSIT(R1, R3);
.LN3258:
// line 2611
	B[P4 + 565] = R4;
.LN3259:
// line 2609
	R2 = B[P5] (Z);
.LN3260:
// line 2604
	R1 = R1.b (Z);
.LN3261:
// line 2609
	R0 = 4;
.LN3262:
// line 2605
	R4 = 1026;
	R3 = DEPOSIT(R1, R4);
.LN3263:
// line 2609
	R2 = DEPOSIT(R2, R0);
.LN3264:
// line 2612
	B[P4 + 566] = R7;
.LN3265:
// line 2605
	B[P3 + 6] = R3;
.LN3266:
// line 2609
	B[P5++] = R2;
.LN3267:
// line 2613
	R0 = 1;
	CALL.X (_OFF_section);
.LN3268:
// line 2615
	R1 = 1028;
	R0 = B[P5] (Z);
	R5 = R1;
	R5.H = 12;
	R0 = DEPOSIT(R0, R5);
.LN3269:
// line 2614
	B[P4 + 855] = R7;
.LN3270:
// line 2616
	B[P4 + 599] = R7;
.LN3271:
// line 2615
	B[P5] = R0;

.P417L9:
.LN3272:
// line 2620
	R0 = [P3];
	R1 = -3;
	R0 = R0 | R1;
	CC = R0 == -3;
	if CC jump .P417L10 ;

.P417L12:
.LN3273:
// line 2628
	R0 = [P3];
	R1 = -5;
	R0 = R0 | R1;
	CC = R0 == R1;
	if CC jump .P417L16 ;

.P417L18:
.LN3274:
// line 2636
	R0 = [P3];
	R1 = -17;
	R0 = R0 | R1;
	P1.L = _flag_event_K614;
	P1.H = _flag_event_K614;
	CC = R0 == R1;
	[SP + 44] = P1;
	if !CC jump .P417L24 ;

.P417L22:
.LN3275:
// line 2638
	R2 = B[P3 + 6] (Z);
	R4 = 3;
	R0 = R2 & R4;
	CC = R0 == 2;
	if CC jump .P417L25 ;

.P417L24:
.LN3276:
// line 2658
	R0 = [P3];
	R1 = -9;
	R0 = R0 | R1;
	CC = R0 == R1;
	if !CC jump .P417L6 ;

.P417L31:
	R0 = 514;
.LN3277:
// line 2660
	R1 = B[P3 + 6] (X);
	R2 = EXTRACT(R1, R0.L) (Z);
	CC = R2 == 2;
	if !CC jump .P417L6 (bp);

.P417L34:
.LN3278:
// line 2662
	R3 = B[P3 + 6] (Z);
.LN3279:
// line 2667
	P2 = [SP + 44];
.LN3280:
// line 2662
	R2 = DEPOSIT(R3, R2);
.LN3281:
// line 2663
	R1 = 514;
	R0 = R1;
.LN3282:
// line 2662
	R2 = R2.b (Z);
.LN3283:
// line 2663
	R0.H = 255;
	R0 = DEPOSIT(R2, R0);
	P5 = P4;
	B[P3 + 6] = R0;
.LN3284:
// line 2666
	B[P5++] = R7;
.LN3285:
// line 2667
	R3 = 1;
	B[P2] = R3;
.LN3286:
// line 2668
	B[P5] = R7;
	P1.L = _sch_pachek_test;
	P1.H = _sch_pachek_test;
.LN3287:
// line 2669
	[P1] = R3;
	P0.L = _index_wr;
	P0.H = _index_wr;
.LN3288:
// line 2670
	[P0] = R7;
.LN3289:
// line 2671
	B[P5 + 216] = R7;
.LN3290:
// line 2672
	B[P5 + 224] = R7;
.LN3291:
// line 2673
	CALL.X (_BUF_clear);
.LN3292:
// line 2684
	R0 = -257 /* 2147483391 */;
	R0.H = 32767 /* 2147483391 */;
.LN3293:
// line 2681
	R1 = 4;
.LN3294:
// line 2678
	B[P5 + 425] = R3;
.LN3295:
// line 2681
	[P5 + 432] = R1;
.LN3296:
// line 2674
	B[P5 + 318] = R7;
.LN3297:
// line 2675
	[P5 + 1000] = R7;
.LN3298:
// line 2676
	[P5 + 1004] = R7;
.LN3299:
// line 2677
	[P5 + 1008] = R7;
.LN3300:
// line 2679
	B[P5 + 1032] = R7;
.LN3301:
// line 2680
	B[P5 + 855] = R7;
.LN3302:
// line 2682
	B[P5 + 226] = R7;
.LN3303:
// line 2684
	[P5 + 192] = R0;
.LN3304:
// line 2685
	CALL.X (_Event_SPORT_RUN);
.LN3305:
// line 2686
	R0 = 77;
	CALL.X (_INIT_START_PACHKA);
.LN3306:
// line 2687
	R0 = 0;
	CALL.X (_MU_TEST);
	P1.L = _Alfa;
	P1.H = _Alfa;
.LN3307:
// line 2688
	R0 = [P1];
	R1.L = _Struk0;
	R1.H = _Struk0;
.LN3308:
	CALL.X (_Packet_TNC1);
	R1.L = _StrukREZ;
	R1.H = _StrukREZ;
.LN3309:
// line 2689
	R0 = 0;
	CALL.X (_Packet_TNC1);
.LN3310:
// line 2690
	R0 = 99;
	CALL.X (_Timer_INT2);
.LN3311:
// line 2691
	B[P5 + -32] = R7;
	R0.L = .s.231;
	R0.H = .s.231;
.LN3312:
// line 2692
	CALL.X (_put_str1);

.P417L6:
.LN3313:
// line 2706
	R1 = B[P3 + 7] (Z);
.LN3314:
	R2 = 3;
.LN3315:
	R2 = R1 & R2;
	R3 = -9;
	CC = R2 == 1;
.LN3316:
// line 2698
	B[P3] = R6;
	R0 = -9;
.LN3317:
// line 2706
	[FP + 12] = R1;
	if CC jump .P417L39 ;

.P417L38:
.LN3318:
	CC = R2 == 2;
	R0 = -17;
	if CC jump .P417L39 ;

.P417L41:
.LN3319:
	CC = R2 == 3;
	R0 = -1;
	R1 = -25;
	IF CC R0 = R1;

.P417L39:
.LN3320:
// line 2707
	R4 = B[P3 + 6] (X);
	R5 = 1026;
	R7 = EXTRACT(R4, R5.L) (Z);
	R2 = -33;
	CC = R7 == 1;
	R1 = -33;
	if CC jump .P417L48 ;

.P417L47:
.LN3321:
	CC = R7 == 2;
	R1 = -65;
	if CC jump .P417L48 ;

.P417L50:
.LN3322:
	CC = R7 == 3;
	R1 = -1;
	R7 = -97;
	IF CC R1 = R7;

.P417L48:
	R7 = 1538;
.LN3323:
// line 2708
	R7 = EXTRACT(R4, R7.L) (Z);
	CC = R7 == 1;
	if CC jump .P417L57 ;

.P417L56:
.LN3324:
	CC = R7 == 2;
	R2 = -2;
	if CC jump .P417L57 ;

.P417L59:
.LN3325:
	CC = R7 == 3;
	R2 = -1;
	R7 = -34;
	IF CC R2 = R7;

.P417L57:
.LN3326:
// line 2709
	R7 = 3;
.LN3327:
	R7 = R4 & R7;
	CC = R7 == 1;
	if CC jump .P417L66 ;

.P417L65:
.LN3328:
	CC = R7 == 2;
	R3 = -17;
	if CC jump .P417L66 ;

.P417L68:
.LN3329:
	CC = R7 == 3;
	R3 = -1;
	R7 = -25;
	IF CC R3 = R7;

.P417L66:
	R7 = 514;
.LN3330:
// line 2710
	R4 = EXTRACT(R4, R7.L) (Z);
	CC = R4 == 1;
	[SP + 44] = R4;
	R4 = -3;
	W[SP + 40] = R4;
	// -- 7 stalls --
	R7 = [SP + 40];
	if CC jump .P417L75 ;

.P417L74:
.LN3331:
	R4 = [SP + 44];
	CC = R4 == 2;
	R7 = -5;
	if CC jump .P417L75 ;

.P417L77:
.LN3332:
	CC = R4 == 3;
	R7 = -1;
	R4 = -7;
	IF CC R7 = R4;

.P417L75:
.LN3333:
// line 2731
	R1 = R0 & R1;
.LN3334:
// line 2713
	R0 = [FP + 12];
.LN3335:
// line 2712
	R4 = EXTRACT(R0, R5.L) (Z);
	CC = R4 == 1;
.LN3336:
// line 2733
	R4 = B[P4 + -40] (X);
.LN3337:
// line 2732
	R2 = R2 & R3;
.LN3338:
// line 2733
	B[SP + 52] = R4;
.LN3339:
// line 2734
	B[SP + 53] = R4;
.LN3340:
// line 2732
	R2 = R7 & R2;
.LN3341:
// line 2727
	R4 = [P3 + 8];
	R7 = 1538;
	R4 = EXTRACT(R4, R5.L) (Z);
	P1 = [FP + 16];
.LN3342:
// line 2713
	R7 = EXTRACT(R0, R7.L) (Z);
	R5 = -5;
.LN3343:
// line 2729
	R0 = B[P4 + 200] (X);
	IF !CC R5 = R6;
.LN3344:
// line 2713
	CC = R7 == 1;
.LN3345:
// line 2729
	R0 <<= 3;
	R7 = [SP + 40];
	B[SP + 48] = R0;
	IF !CC R7 = R6;
.LN3346:
// line 2731
	R0 = R5 & R1;
.LN3347:
// line 2727
	CC = R4 == 1;
	R3 = -65;
.LN3348:
// line 2731
	R0 = R7 & R0;
	IF !CC R3 = R6;
	B[SP + 50] = R0;
.LN3349:
// line 2732
	R0 = R3 & R2;
	P0 = 6;
.LN3350:
// line 2730
	B[SP + 49] = R6;
.LN3351:
// line 2732
	B[SP + 51] = R0;
.LN3352:
// line 2738
	R1 = 59;
	R7 = 126;
	LOOP .P417L92L LC0 = P0;

.P417L92:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 2736 col 3
//-------------------------------------------------------------------
//   Trip Count  = 6
//-------------------------------------------------------------------
	LOOP_BEGIN .P417L92L;
	R0 = B[P1++] (X);
	CC = R0 == R7;
	if CC jump .P417L94 ;

.P417L97:
	CC = R0 == R1;
	if !CC jump .P417L96 ;

.P417L94:
.LN3353:
	BITSET(R0, 7);
	B[P1 + -1] = R0;

.P417L96:
	NOP;
.LN3354:
// line 2736
	LOOP_END .P417L92L;
//-------------------------------------------------------------------
//   End Loop L92
//-------------------------------------------------------------------

.P417L112:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	R1 = [SP + 48];
	R3 = R1 >>> 8;
	P2 = [FP + 16];
.LN3355:
// line 2741
	R3 = R1 ^ R3;
	R0.L = R1.H << 0;
	R0 = R3 ^ R0;
	R2.L = R1.H >>> 8;
	R0 = R2 ^ R0;
	R1 = W[SP + 52] (X);
	R0 = R0 ^ R1;
	P1 = P3;
	R7 = R1 >>> 8;
	P0 = 3;
	R1 = R7 ^ R0;
	P1 += 44;
	LOOP .P417L99L LC0 = P0;

.P417L99:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 2743 col 4
//-------------------------------------------------------------------
//   This loop executes 2 iterations of the original loop in estimated 2 
//   cycles.
//-------------------------------------------------------------------
//   Trip Count  = 3
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   2 out of    2 (100.0%)
//     16-bit Instruction  used   2 out of    4 ( 50.0%)
//     Store               used   1 out of    2 ( 50.0%)
//-------------------------------------------------------------------
//   Loop was vectorized by a factor of 2.
//-------------------------------------------------------------------
//  This loop was not modulo scheduled because it was optimized for space.
//-------------------------------------------------------------------
	LOOP_BEGIN .P417L99L;
.LN3356:
// line 2743
	R0 = W[P2++] (X);
	W[P1++] = R0;
.LN3357:
	LOOP_END .P417L99L;
//-------------------------------------------------------------------
//   End Loop L99
//-------------------------------------------------------------------

.P417L113:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN3358:
// line 2752
	R0 = 1;
.LN3359:
// line 2744
	B[P3 + 40] = R1;
.LN3360:
// line 2752
	B[P4 + -65] = R0;
.LN3361:
// line 2753
	CALL.X (_K615_out);
.LN3362:
// line 2754
	SP += 12;
	(R7:4, P5:3) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;

.P417L25:
	R0 = 2;
.LN3363:
// line 2641
	R0.H = 3;
	R0 = DEPOSIT(R2, R0);
.LN3364:
// line 2643
	R3 = B[P3 + 7] (Z);
.LN3365:
// line 2640
	R5 = 1;
.LN3366:
// line 2641
	R0 = R0.b (Z);
.LN3367:
// line 2642
	R1 = 514;
.LN3368:
// line 2643
	R3 = R3 & R5;
.LN3369:
// line 2642
	R0 = DEPOSIT(R0, R1);
.LN3370:
// line 2643
	CC = R3 == 1;
.LN3371:
// line 2640
	B[P4 + 954] = R5;
.LN3372:
// line 2642
	B[P3 + 6] = R0;
.LN3373:
// line 2643
	if !CC jump .P417L30 (bp);

.P417L28:
.LN3374:
	CALL.X (_GBR_zad);

.P417L30:
.LN3375:
// line 2644
	P1 = [SP + 44];
	R0.L = .s.230;
	R0.H = .s.230;
	// -- 2 stalls --
	B[P1] = R5;
.LN3376:
// line 2646
	R1 = B[P3 + 6] (X);
	R1 = R1 & R4;
.LN3377:
// line 2645
	B[P4 + 1] = R7;
.LN3378:
// line 2647
	B[P4 + 1033] = R7;
.LN3379:
// line 2648
	B[P4 + 856] = R7;
.LN3380:
// line 2646
	B[P4] = R1;
.LN3381:
// line 2649
	CALL.X (_put_str1);
	jump.s .P417L24;

.P417L16:
.LN3382:
// line 2630
	R0 = B[P3 + 7] (Z);
	R1 = 1;
	R0 = R0 & R1;
	CC = R0 == 1;
	if !CC jump .P417L21 ;

.P417L19:
.LN3383:
	R0 = 514;
	BITSET(R0, 17);
	R1 = B[P3 + 6] (Z);
	R0 = DEPOSIT(R1, R0);
	B[P3 + 6] = R0;

.P417L21:
.LN3384:
// line 2632
	CALL.X (_BR_zad);
	jump.s .P417L18;

.P417L10:
.LN3385:
// line 2622
	R0 = B[P3 + 7] (Z);
	R1 = 1;
	R0 = R0 & R1;
	CC = R0 == 1;
	if !CC jump .P417L15 ;

.P417L13:
.LN3386:
	R0 = 514;
	BITSET(R0, 17);
	R1 = B[P3 + 6] (Z);
	R0 = DEPOSIT(R1, R0);
	B[P3 + 6] = R0;

.P417L15:
.LN3387:
// line 2624
	CALL.X (_GBR_zad);
	jump.s .P417L12;
.LN._K615_work.end:
._K615_work.end:
	.global _K615_work;
	.type _K615_work,STT_FUNC;

	.align 2;
_TNO_START_PACHKA:
.LN_TNO_START_PACHKA:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  Scratch registers used: {R0-R3,P0-P1,ASTAT0-ASTAT1}
//  Call preserved registers used: {FP,SP,RETS}
//Inlined in _TNO_START_PACHKA:
//  ..\BFcom\main.c:7694:9'_csync
//  ..\BFcom\main.c:7693:9'_ssync
//  ..\BFcom\main.c:7689:9'_ssync
//-------------------------------------------------------------------
// line "..\BFcom\main.c":7598
	LINK 0;
.LN3388:
// line 7601
	R3 = 0;
	P0.L = _TNC0_packet;
	P0.H = _TNC0_packet;
	[P0 + 816] = R3;
.LN3389:
// line 7602
	[P0 + 820] = R3;
.LN3390:
// line 7605
	B[P0 + 656] = R3;
	P1.L = _FLAG_SYNC_PF8;
	P1.H = _FLAG_SYNC_PF8;
.LN3391:
// line 7607
	B[P1] = R3;
	P1.L = _FLAG_SYNC_PF11;
	P1.H = _FLAG_SYNC_PF11;
.LN3392:
// line 7608
	B[P1] = R3;
	P1.L = _TIME1_PPI_START;
	P1.H = _TIME1_PPI_START;
.LN3393:
// line 7610
	[P1] = R3;
.LN3394:
// line 7611
	R0 = 100;
	P1.L = _TIME2_PPI_START;
	P1.H = _TIME2_PPI_START;
	[P1] = R0;
.LN3395:
// line 7612
	R0 = 1000;
	P1.L = _TIME3_PPI_START;
	P1.H = _TIME3_PPI_START;
	[P1] = R0;
.LN3396:
// line 7614
	R2 = 1;
	P1.L = _FLAG_PPI_OK;
	P1.H = _FLAG_PPI_OK;
	B[P1] = R2;
.LN3397:
// line 7616
	P1 = 1792 /* -4192512 */;
	P1.H = -64 /* -4192512 */;
	R0 = W[P1] (X);
	BITCLR(R0, 11);
	W[P1] = R0.L;
.LN3398:
// line 7617
	R0 = W[P1] (X);
	BITCLR(R0, 8);
	W[P1] = R0.L;
.LN3399:
// line 7619
	B[P0 + 77] = R2;
	P1.L = _flag_first_TNO;
	P1.H = _flag_first_TNO;
.LN3400:
// line 7620
	B[P1] = R2;
	P1.L = _Alfa;
	P1.H = _Alfa;
.LN3401:
// line 7624
	[P1] = R3;
	P1.L = _flag_Packet_form;
	P1.H = _flag_Packet_form;
.LN3402:
// line 7625
	B[P1] = R3;
.LN3403:
// line 7626
	B[P0 + 80] = R3;
	P1.L = _flag_event_sinhron;
	P1.H = _flag_event_sinhron;
.LN3404:
// line 7627
	B[P1] = R3;
	P1.L = _flag_dsp_ok;
	P1.H = _flag_dsp_ok;
.LN3405:
// line 7628
	B[P1] = R2;
.LN3406:
// line 7629
	B[P0 + 670] = R2;
.LN3407:
// line 7630
	B[P0 + 78] = R2;
.LN3408:
// line 7631
	B[P0] = R2;
.LN3409:
// line 7632
	B[P0 + 79] = R3;
.LN3410:
// line 7633
	[P0 + 96] = R3;
.LN3411:
// line 7636
	B[P0 + 1] = R3;
.LN3412:
// line 7640
	B[P0 + 669] = R3;
.LN3413:
// line 7641
	[P0 + -68] = R3;
.LN3414:
// line 7642
	B[P0 + -52] = R3;
.LN3415:
// line 7643
	[P0 + -8] = R3;
.LN3416:
// line 7644
	[P0 + -4] = R3;
.LN3417:
// line 7646
	R0 = -1;
	P1.L = _Event_word;
	P1.H = _Event_word;
	B[P1] = R0;
.LN3418:
// line 7654
	[P0 + -132] = R3;
.LN3419:
// line 7648
	B[P0 + 660] = R3;
.LN3420:
// line 7649
	B[P0 + 658] = R3;
.LN3421:
// line 7650
	B[P0 + 659] = R3;
.LN3422:
// line 7651
	B[P0 + 657] = R3;
.LN3423:
// line 7652
	B[P0 + 663] = R3;
.LN3424:
// line 7655
	[P0 + -128] = R3;
.LN3425:
// line 7656
	[P0 + -124] = R3;
.LN3426:
// line 7657
	[P0 + -120] = R3;
.LN3427:
// line 7658
	[P0 + -116] = R3;
.LN3428:
// line 7659
	[P0 + -112] = R3;
.LN3429:
// line 7660
	[P0 + -108] = R3;
.LN3430:
// line 7661
	[P0 + -104] = R3;
.LN3431:
// line 7662
	[P0 + -100] = R3;
.LN3432:
// line 7663
	[P0 + -96] = R3;
.LN3433:
// line 7664
	[P0 + -92] = R3;
	P1.L = _FLAG_PACKET_SEND;
	P1.H = _FLAG_PACKET_SEND;
.LN3434:
// line 7666
	B[P1] = R3;
	P1.L = _flag_END_sync_packet;
	P1.H = _flag_END_sync_packet;
.LN3435:
// line 7667
	B[P1] = R3;
	P1.L = _sch_pachek_test;
	P1.H = _sch_pachek_test;
.LN3436:
// line 7670
	[P1] = R3;
.LN3437:
// line 7671
	[P0 + -160] = R3;
.LN3438:
// line 7672
	[P0 + 104] = R3;
	P1.L = _flag_PPI_sz1;
	P1.H = _flag_PPI_sz1;
.LN3439:
// line 7673
	B[P1] = R3;
	P1.L = _flag_PPI_sz2;
	P1.H = _flag_PPI_sz2;
.LN3440:
// line 7674
	B[P1] = R3;
	P1.L = _flag_PPI_sinc;
	P1.H = _flag_PPI_sinc;
.LN3441:
// line 7675
	B[P1] = R2;
	P1.L = _flag_1HZ_sync;
	P1.H = _flag_1HZ_sync;
.LN3442:
// line 7677
	B[P1] = R3;
.LN3443:
// line 7685
	R0 = W[P0 + 698] (X);
	W[P0 + 700] = R0;
.LN3444:
// line 7688
	R0 = [P0 + -144];
	P1.L = _sch_tx_packet;
	P1.H = _sch_tx_packet;
	[P0 + -140] = R0;
.LN3445:
// line 7687
	R0 = W[P1] (X);
.LN3446:
// line 7678
	B[P0 + 82] = R3;
.LN3447:
// line 7682
	[P0 + 28] = R3;
.LN3448:
// line 7684
	B[P0 + -216] = R3;
.LN3449:
// line 7687
	W[P0 + -212] = R0;
.LN3450:
// line 7686
	W[P0 + 698] = R3;
.LN3451:
// line 7689
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN3452:
// line 7690
	W[P1] = R3.L;
	P1 = -144;
	P1 = P0 + P1;
.LN3453:
// line 7691
	P0 = -80;
	[P1 ++ P0] = R3;
.LN3454:
// line 7692
	R0 = [P1];
	[P1 + 4] = R0;
.LN3455:
// line 7693
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN3456:
// line 7694
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	CSYNC;
.LN3457:
// line 7695
	P0 = 224;
	[P1 ++ P0] = R3;
.LN3458:
// line 7696
	R0 = [P1 + 20];
	[P1 + 24] = R0;
.LN3459:
// line 7700
	R0 = -13825;
	R1 = R0;
.LN3460:
// line 7697
	[P1 + 20] = R3;
.LN3461:
// line 7700
	R1.H = 15258;
.LN3462:
// line 7699
	[P1 + -132] = R3;
.LN3463:
// line 7700
	[P1 + 128] = R1;
.LN3464:
// line 7703
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._TNO_START_PACHKA.end:
._TNO_START_PACHKA.end:
	.global _TNO_START_PACHKA;
	.type _TNO_START_PACHKA,STT_FUNC;

	.align 2;
_PPI_sync:
.LN_PPI_sync:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0-R1,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":7706
	LINK 12;
	P1.L = _flag_PPI_sinc;
	P1.H = _flag_PPI_sinc;
.LN3465:
// line 7707
	R0 = B[P1] (Z);
	CC = R0 == 0;
	if CC jump .P419L3 (bp);

.P419L1:
	P1.L = _Event_word;
	P1.H = _Event_word;
.LN3466:
	R1 = B[P1] (Z);
	R0.L = _Struk0;
	R0.H = _Struk0;
.LN3467:
	CALL.X (_massiv_time_setka);
	P1.L = _flag_PPI_sinc_D2;
	P1.H = _flag_PPI_sinc_D2;
.LN3468:
	R0 = 1;
	B[P1] = R0;

.P419L3:
.LN3469:
// line 7709
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._PPI_sync.end:
._PPI_sync.end:
	.global _PPI_sync;
	.type _PPI_sync,STT_FUNC;

	.align 2;
_PPI_sz1:
.LN_PPI_sz1:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0-R1,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":7713
	LINK 12;
	P1.L = _flag_PPI_sz1;
	P1.H = _flag_PPI_sz1;
.LN3470:
// line 7714
	R0 = B[P1] (Z);
	CC = R0 == 0;
	if !CC jump .P420L3 (bp);

.P420L1:
	R1.L = _Struk0;
	R1.H = _Struk0;
.LN3471:
	R0 = 115;
	CALL.X (_PPI_massiv);
	P1.L = _flag_PPI_sz1_D2;
	P1.H = _flag_PPI_sz1_D2;
.LN3472:
	R0 = 1;
	B[P1] = R0;

.P420L3:
.LN3473:
// line 7716
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._PPI_sz1.end:
._PPI_sz1.end:
	.global _PPI_sz1;
	.type _PPI_sz1,STT_FUNC;

	.align 2;
_PPI_sz2:
.LN_PPI_sz2:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0-R1,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":7720
	LINK 12;
	P1.L = _flag_PPI_sz2;
	P1.H = _flag_PPI_sz2;
.LN3474:
// line 7721
	R0 = B[P1] (Z);
	CC = R0 == 0;
	if !CC jump .P421L3 (bp);

.P421L1:
	R1.L = _Struk0;
	R1.H = _Struk0;
.LN3475:
	R0 = 103;
	CALL.X (_PPI_massiv);
	P1.L = _flag_PPI_sz2_D2;
	P1.H = _flag_PPI_sz2_D2;
.LN3476:
	R0 = 1;
	B[P1] = R0;

.P421L3:
.LN3477:
// line 7723
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._PPI_sz2.end:
._PPI_sz2.end:
	.global _PPI_sz2;
	.type _PPI_sz2,STT_FUNC;

	.align 2;
_Control_bloka:
.LN_Control_bloka:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  No scratch registers used.
//  Call preserved registers used: {FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":7742
	LINK 12;
.LN3478:
// line 7743
	CALL.X (_control_K615);
.LN3479:
// line 7744
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._Control_bloka.end:
._Control_bloka.end:
	.global _Control_bloka;
	.type _Control_bloka,STT_FUNC;

	.align 2;
_Event_K615:
.LN_Event_K615:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":7727
	LINK 12;
	P1.L = _flag_K615_event;
	P1.H = _flag_K615_event;
.LN3480:
// line 7730
	R0 = B[P1] (Z);
	CC = R0 == 1;
	if !CC jump .P423L3 (bp);

.P423L1:
.LN3481:
// line 7733
	R0 = 0;
	B[P1] = R0;
	R0.L = .s615.232;
	R0.H = .s615.232;
.LN3482:
// line 7734
	CALL.X (_put_str1);
.LN3483:
// line 7736
	CALL.X (_Control_bloka);

.P423L3:
.LN3484:
// line 7738
	UNLINK;
	R0 = 0;
	// -- 3 stalls --
	RTS;
.LN._Event_K615.end:
._Event_K615.end:
	.global _Event_K615;
	.type _Event_K615,STT_FUNC;

	.align 2;
_RESTART_SYNC:
.LN_RESTART_SYNC:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0-R1,P1}
//  Call preserved registers used: {R6-R7,P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":7783
	LINK 0;
	[--SP] = (R7:6, P5:5);
	SP += -12;
.LN3485:
// line 7784
	R6 = 0;
	P5.L = _FLAG_TST_UDP;
	P5.H = _FLAG_TST_UDP;
	[P5 + 632] = R6;
	P1.L = _TIME_WORK_CONTROL;
	P1.H = _TIME_WORK_CONTROL;
.LN3486:
// line 7785
	[P1] = R6;
	R0.L = .s.233;
	R0.H = .s.233;
.LN3487:
// line 7786
	CALL.X (_put_str1);
.LN3488:
// line 7787
	R0 = 99;
	CALL.X (_Timer_INT2);
.LN3489:
// line 7788
	R0 = 77;
	CALL.X (_INIT_START_PACHKA);
.LN3490:
// line 7789
	R0 = 0;
	CALL.X (_MU_TEST);
	R7.L = _Struk0;
	R7.H = _Struk0;
	P1.L = _Alfa;
	P1.H = _Alfa;
.LN3491:
// line 7790
	R1 = R7;
.LN3492:
	R0 = [P1];
.LN3493:
	CALL.X (_Packet_TNC1);
	P1.L = _Event_word;
	P1.H = _Event_word;
.LN3494:
// line 7791
	R0 = R7;
.LN3495:
	R1 = B[P1] (Z);
.LN3496:
	CALL.X (_massiv_time_setka);
.LN3497:
// line 7792
	B[P5] = R6;
.LN3498:
// line 7793
	SP += 12;
	(R7:6, P5:5) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._RESTART_SYNC.end:
._RESTART_SYNC.end:
	.global _RESTART_SYNC;
	.type _RESTART_SYNC,STT_FUNC;

	.align 2;
_TNO_SYNC:
.LN_TNO_SYNC:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 28 
//  Scratch registers used: {R0-R1,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R5-R7,P4-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":7796
	LINK 0;
	[--SP] = (R7:5, P5:4);
	SP += -12;
	R7.L = _Struk0;
	R7.H = _Struk0;
	P1.L = _timer_TNC1;
	P1.H = _timer_TNC1;
.LN3499:
// line 7799
	R6 = 0;
	[P1] = R6;
.LN3500:
// line 7801
	R0 = R7;
	CALL.X (_Control_Impuls);
	P4.L = _Event_word;
	P4.H = _Event_word;
.LN3501:
	B[P4] = R0;
.LN3502:
// line 7802
	R1 = B[P4] (Z);
	R0.L = _StrukREZ;
	R0.H = _StrukREZ;
.LN3503:
	CALL.X (_massiv_time_setka);
	P5.L = _FLAG_RS485_OBMEN;
	P5.H = _FLAG_RS485_OBMEN;
.LN3504:
// line 7803
	R0 = [P5 + 764];
	P1 = 1572 /* -4192732 */;
	P1.H = -64 /* -4192732 */;
	R1 = [P1];
	R0 = R0 + R1;
	[P5 + 764] = R0;
.LN3505:
// line 7804
	R0 = 99;
	CALL.X (_Timer_INT2);
.LN3506:
// line 7805
	R1 = [P5 + 1148];
.LN3507:
// line 7806
	[P5 + 1152] = R0;
.LN3508:
// line 7805
	R0 = R0 + R1;
	[P5 + 1148] = R0;
.LN3509:
// line 7807
	CALL.X (_TNO_START_PACHKA);
.LN3510:
// line 7808
	R5 = 1;
	P1.L = _FLAG_PPI_OK;
	P1.H = _FLAG_PPI_OK;
	B[P1] = R5;
.LN3511:
// line 7809
	R0 = [P5 + 1172];
	R1 = [P5 + 1028];
	R0 = R0 + R1;
	[P5 + 1172] = R0;
.LN3512:
// line 7811
	R0 = 1;
	CALL.X (_MU_TEST);
	P1.L = _Alfa;
	P1.H = _Alfa;
.LN3513:
// line 7813
	R1 = R7;
.LN3514:
	R0 = [P1];
.LN3515:
	CALL.X (_Packet_TNC1);
	P1.L = _flag_PPI_sinc;
	P1.H = _flag_PPI_sinc;
.LN3516:
// line 7815
	R0 = B[P1] (Z);
	CC = R0 == 0;
	if CC jump .P425L3 (bp);

.P425L1:
.LN3517:
// line 7817
	R1 = B[P4] (Z);
.LN3518:
	R0 = R7;
	CALL.X (_massiv_time_setka);
	P1.L = _flag_PPI_sinc_D2;
	P1.H = _flag_PPI_sinc_D2;
.LN3519:
// line 7818
	B[P1] = R5;

.P425L3:
.LN3520:
// line 7824
	B[P5] = R5;
.LN3521:
// line 7859
	B[P5 + 1050] = R5;
.LN3522:
// line 7823
	B[P5 + 60] = R6;
.LN3523:
// line 7825
	[P5 + 68] = R6;
.LN3524:
// line 7851
	R0 = [P5 + 1128];
	[P5 + 1132] = R0;
.LN3525:
// line 7852
	[P5 + 1128] = R6;
.LN3526:
// line 7854
	R1 = [P5 + 1136];
.LN3527:
// line 7857
	R0 = R0 + R1;
.LN3528:
// line 7854
	[P5 + 1140] = R1;
.LN3529:
// line 7857
	[P5 + 1124] = R0;
.LN3530:
// line 7855
	[P5 + 1136] = R6;
.LN3531:
// line 7827
	R0 = [P5 + 4];
	[P5 + 8] = R0;
.LN3532:
// line 7828
	[P5 + 4] = R6;
.LN3533:
// line 7830
	R0 = [P5 + 28];
	[P5 + 32] = R0;
.LN3534:
// line 7831
	[P5 + 28] = R6;
.LN3535:
// line 7833
	R0 = [P5 + 16];
	[P5 + 20] = R0;
.LN3536:
// line 7834
	[P5 + 16] = R6;
.LN3537:
// line 7836
	R0 = [P5 + 316];
	[P5 + 320] = R0;
.LN3538:
// line 7837
	[P5 + 316] = R6;
.LN3539:
// line 7839
	R0 = [P5 + 404];
	[P5 + 408] = R0;
.LN3540:
// line 7840
	[P5 + 404] = R6;
.LN3541:
// line 7842
	R0 = [P5 + 36];
	[P5 + 40] = R0;
.LN3542:
// line 7843
	[P5 + 36] = R6;
.LN3543:
// line 7845
	R0 = [P5 + 44];
	[P5 + 48] = R0;
.LN3544:
// line 7846
	[P5 + 44] = R6;
.LN3545:
// line 7848
	R0 = [P5 + 52];
	[P5 + 56] = R0;
.LN3546:
// line 7849
	[P5 + 52] = R6;
.LN3547:
// line 7861
	R0 = [P5 + 168];
	R1 = [P5 + 172];
	CC = R1 < R0;
	if !CC jump .P425L6 ;

.P425L4:
.LN3548:
	[P5 + 172] = R0;

.P425L6:
.LN3549:
// line 7862
	[P5 + 168] = R6;
	P1.L = _AVARIYA_flag;
	P1.H = _AVARIYA_flag;
.LN3550:
// line 7863
	[P1] = R6;
.LN3551:
// line 7865
	R0 = 50000 (Z);
.LN3552:
// line 7866
	[P5 + 344] = R6;
.LN3553:
// line 7865
	[P5 + 468] = R0;
.LN3554:
// line 7867
	SP += 12;
	(R7:5, P5:4) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._TNO_SYNC.end:
._TNO_SYNC.end:
	.global _TNO_SYNC;
	.type _TNO_SYNC,STT_FUNC;

	.align 2;
_Packet_FORM:
.LN_Packet_FORM:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0-R1,P1,ASTAT0-ASTAT1}
//  Call preserved registers used: {FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I1,ASTAT0-ASTAT1,CC,LC0,LT0,LB0,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":7951
	LINK 12;
	P1.L = _Alfa;
	P1.H = _Alfa;
.LN3555:
// line 7954
	R0 = [P1];
	R1.L = _Struk0;
	R1.H = _Struk0;
.LN3556:
	CALL.X (_Packet_TNC1);
.LN3557:
// line 7955
	R0 = 0;
	P1.L = _flag_PPI_sz1;
	P1.H = _flag_PPI_sz1;
	B[P1] = R0;
	P1.L = _flag_PPI_sz2;
	P1.H = _flag_PPI_sz2;
.LN3558:
// line 7956
	B[P1] = R0;
	P1.L = _flag_PPI_sinc;
	P1.H = _flag_PPI_sinc;
.LN3559:
// line 7957
	R0 = B[P1] (Z);
	R0 += 1;
	B[P1] = R0;
.LN3560:
// line 7958
	P1 = 1572 /* -4192732 */;
	P1.H = -64 /* -4192732 */;
	R0 = [P1];
	P1.L = _timer_TNC1;
	P1.H = _timer_TNC1;
	R1 = [P1];
	R0 = R0 - R1;
	P1.L = _TIME_PACKET_FORM;
	P1.H = _TIME_PACKET_FORM;
	[P1] = R0;
.LN3561:
// line 7960
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._Packet_FORM.end:
._Packet_FORM.end:
	.global _Packet_FORM;
	.type _Packet_FORM,STT_FUNC;

	.align 2;
_Synhron_section:
.LN_Synhron_section:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 16 
//  Scratch registers used: {R0-R1,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {P4-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":7886
	LINK 0;
	[--SP] = (P5:4);
	SP += -12;
	P1.L = _Mem_K615+7;
	P1.H = _Mem_K615+7;
.LN3562:
// line 7888
	R0 = B[P1] (Z);
	CC = !BITTST(R0, 0);
	if CC jump .P427L1 ;

.P427L3:
.LN3563:
// line 7922
	NOP;                                    // Inserted 2 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	P1 = 1572 /* -4192732 */;
	P1.H = -64 /* -4192732 */;
	R0 = [P1];
	P1.L = _timer_TNC2;
	P1.H = _timer_TNC2;
	[P1] = R0;
.LN3564:
// line 7923
	SP += 12;
	(P5:4) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;

.P427L1:
	P1.L = _flag_1HZ_sync;
	P1.H = _flag_1HZ_sync;
.LN3565:
// line 7890
	R0 = B[P1] (Z);
	CC = R0 == 1;
	P4.L = _TNC0_packet;
	P4.H = _TNC0_packet;
	if CC jump .P427L4 ;

.P427L5:
.LN3566:
// line 7899
	NOP;                                    // Inserted 2 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	P5.L = _flag_event_sinhron;
	P5.H = _flag_event_sinhron;
	R0 = B[P5] (X);
	CC = R0 == 1;
	if !CC jump .P427L9 ;

.P427L10:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R0 = B[P4 + 78] (Z);
	CC = R0 == 0;
	if CC jump .P427L7 ;
.LN3567:
// line 7905
	NOP;                                    // Inserted 2 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;

.P427L9:
	P1.L = _flag_END_sync_packet;
	P1.H = _flag_END_sync_packet;
	R0 = B[P1] (Z);
	CC = R0 == 1;
	if !CC jump .P427L6 ;

.P427L14:
.LN3568:
// line 7907
	R0 = 0;
	B[P4 + 80] = R0;
.LN3569:
// line 7908
	R1 = 1;
	B[P4] = R1;
.LN3570:
// line 7909
	B[P1] = R0;

.P427L6:
	P5.L = _flag_Packet_form;
	P5.H = _flag_Packet_form;
.LN3571:
// line 7913
	R0 = B[P5] (Z);
	CC = R0 == 1;
	if !CC jump .P427L19 (bp);

.P427L17:
.LN3572:
	CALL.X (_Packet_FORM);
.LN3573:
	R0 = 2;
	B[P5] = R0;

.P427L19:
.LN3574:
// line 7916
	CALL.X (_PPI_sync);
.LN3575:
// line 7917
	CALL.X (_PPI_sz1);
.LN3576:
// line 7918
	CALL.X (_PPI_sz2);
	jump.s .P427L3;

.P427L7:
	R0.L = _Struk0;
	R0.H = _Struk0;
.LN3577:
// line 7901
	CALL.X (_Control_Impuls);
	P1.L = _Event_word;
	P1.H = _Event_word;
.LN3578:
	B[P1] = R0;
.LN3579:
// line 7902
	R0 = B[P4 + -52] (X);
	CC = R0 == 0;
.LN3580:
	R0 = 0;
.LN3581:
	if !CC jump .P427L12 ;

.P427L11:
.LN3582:
	B[P5] = R0;
	jump.s .P427L9;

.P427L12:
.LN3583:
// line 7903
	B[P4 + -52] = R0;
	jump.s .P427L9;

.P427L4:
.LN3584:
// line 7893
	R0 = 0;
	B[P1] = R0;
.LN3585:
// line 7894
	R0 = 1;
	B[P4 + 664] = R0;
.LN3586:
// line 7895
	CALL.X (_TNO_SYNC);
	jump.s .P427L6;
.LN._Synhron_section.end:
._Synhron_section.end:
	.global _Synhron_section;
	.type _Synhron_section,STT_FUNC;

	.align 2;
_Event_Synhron:
.LN_Event_Synhron:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":6055
	LINK 12;
.LN3587:
// line 6056
	CALL.X (_Event_Synhron_func);
.LN3588:
	CC = R0 == 0;
	if CC jump .P428L3 (bp);

.P428L1:
.LN3589:
	CALL.X (_Synhron_section);

.P428L3:
.LN3590:
// line 6057
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._Event_Synhron.end:
._Event_Synhron.end:
	.global _Event_Synhron;
	.type _Event_Synhron,STT_FUNC;

	.align 2;
_BUF_SEARCH:
.LN_BUF_SEARCH:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 32 
//  Scratch registers used: {R0-R1,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R5-R7,P3-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":6614
	LINK 0;
	[--SP] = (R7:5, P5:3);
.LN3591:
// line 6624
	CC = R2 == 0;
.LN3592:
// line 6614
	R6 = R0;
	R7 = R1;
	SP += -12;
	P4 = 0;
	P5 = 0;
	R5 = 0;
.LN3593:
// line 6624
	if !CC jump .P429L3 ;

.P429L1:
	P3.L = _Pkt;
	P3.H = _Pkt;

.P429L5:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 6626 col 3
//-------------------------------------------------------------------
.LN3594:
// line 6628
	CALL.X (_Event_Synhron);
.LN3595:
// line 6630
	P1 = P5 + (P5<<1);
	P1 = P1 + (P1<<2);
	P1 = (P1 + P1) << 2;
	P1 = P3 + P1;
	R0 = [P1 + 112];
	CC = R6 == R0;
	if !CC jump .P429L9 ;

.P429L10:
	R0 = [P1 + 104];
	CC = R7 == R0;
	if !CC jump .P429L9 ;

.P429L7:
	P4 = P5;
	R5 = 1;
	P5 = 120;

.P429L9:
.LN3596:
// line 6626
	P5 += 1;
.LN3597:
	P1 = 120;
.LN3598:
	CC = P5 < P1 (IU);
	if CC jump .P429L5 (bp);
//-------------------------------------------------------------------
//   End Loop L5
//-------------------------------------------------------------------

.P429L17:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------

.P429L3:
.LN3599:
// line 6641
	R0 = R5.b (Z);
.LN3600:
// line 6642
	SP += 12;
.LN3601:
// line 6641
	CC = R0 == 1;
	R0 = P4;
.LN3602:
// line 6642
	(R7:5, P5:3) = [SP++];
	UNLINK;
	R1 = -1;
	IF !CC R0 = R1;
	// -- 2 stalls --
	RTS;
.LN._BUF_SEARCH.end:
._BUF_SEARCH.end:
	.global _BUF_SEARCH;
	.type _BUF_SEARCH,STT_FUNC;

	.align 2;
_KUK_IO:
.LN_KUK_IO:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 40 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {R5-R7,P3-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4871
	LINK 8;
	[--SP] = (R7:5, P5:3);
	SP += -12;
.LN3603:
// line 4880
	R2 = 1572 /* -4192732 */;
	R2.H = -64 /* -4192732 */;
	[SP + 60] = R2;
	P2 = [SP + 60];
	P4.L = _tst_time_KUK2;
	P4.H = _tst_time_KUK2;
.LN3604:
// line 4882
	CC = R1 == 0;
.LN3605:
// line 4871
	P1 = R0;
.LN3606:
// line 4880
	R3 = [P2];
	[P4 + -4] = R3;
	P5.L = _packet;
	P5.H = _packet;
.LN3607:
// line 4882
	if CC jump .P430L3 ;

.P430L43:
.LN3608:
// line 4871
	P0 = R1;
	[SP + 56] = R0;
	P2 = 0;
	P3 = 0;
	// -- stall --
	LOOP .P430L2L LC0 = P0;

.P430L2:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 4882 col 3
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in an estimated 39 
//   cycles (includes 11 stalls).
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used  28 out of   39 ( 71.8%)
//     16-bit Instruction  used  42 out of   78 ( 53.8%)
//     32-bit Instruction  used  14 out of   39 ( 35.9%)
//     Store               used   7 out of   39 ( 17.9%)
//-------------------------------------------------------------------
//  This loop was not modulo scheduled because it was optimized for space.
//-------------------------------------------------------------------
	LOOP_BEGIN .P430L2L;
	P0 = 3;
.LN3609:
// line 4884
	P0 -= P2;
.LN3610:
// line 4886
	P2 += 1;
	[SP + 40] = P2;
.LN3611:
// line 4884
	[SP + 36] = P0;
.LN3612:
// line 4887
	P0 = [SP + 40];
.LN3613:
	P2 = 4;
	// -- 2 stalls --
.LN3614:
	CC = P0 == P2;
	P0 = [SP + 36];
	[SP + 52] = P0;
.LN3615:
// line 4885
	P2 = [SP + 52];
	// -- 3 stalls --
	P0 = (P0 + P2) << 2;
	P2 = (P2 + P0) << 2;
	P0 = P5 + P2;
	[SP + 52] = P2;
	P0 = P0 + P3;
	[SP + 52] = P0;
	P0 = P3;
	P0 += 1;
	IF CC P3 = P0;
	P2 = [SP + 40];
	P0 = 0;
	IF CC P2 = P0;
	P0 = [SP + 56];
	// -- 3 stalls --
	R0 = B[P0++] (X);
	[SP + 56] = P0;
	P0 = [SP + 52];
	// -- 3 stalls --
	B[P0] = R0;
.LN3616:
// line 4882
	LOOP_END .P430L2L;
//-------------------------------------------------------------------
//   End Loop L2
//-------------------------------------------------------------------

.P430L50:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------

.P430L3:
	P2 = 30;
	P0 = P5;
	LOOP .P430L8L LC0 = P2;

.P430L8:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 4890 col 3
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in estimated 8 cycles.
//-------------------------------------------------------------------
//   Trip Count  = 30
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   8 out of    8 (100.0%)
//     16-bit Instruction  used  14 out of   16 ( 87.5%)
//     32-bit Instruction  used   6 out of    8 ( 75.0%)
//     Store               used   4 out of    8 ( 50.0%)
//-------------------------------------------------------------------
//  This loop was not modulo scheduled because it was optimized for space.
//-------------------------------------------------------------------
	LOOP_BEGIN .P430L8L;
.LN3617:
// line 4893
	R0 = B[P0 + 72] (X);
.LN3618:
// line 4895
	R1 = B[P0 + 36] (X);
	B[P0 + 72] = R1;
.LN3619:
// line 4892
	R1 = B[P0] (X);
.LN3620:
// line 4896
	R2 = B[P0 + 108] (X);
	B[P0++] = R2;
.LN3621:
// line 4898
	B[P0 + 107] = R1;
.LN3622:
// line 4899
	B[P0 + 35] = R0;
.LN3623:
// line 4890
	LOOP_END .P430L8L;
//-------------------------------------------------------------------
//   End Loop L8
//-------------------------------------------------------------------

.P430L51:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN3624:
// line 4904
	R0 = B[P5 + 74] (Z);
	R0 <<= 8;
.LN3625:
// line 4905
	R1 = B[P5 + 75] (Z);
	R1 <<= 8;
.LN3626:
// line 4904
	R2 = B[P5 + 2] (Z);
	R2 <<= 16;
.LN3627:
// line 4905
	R3 = B[P5 + 3] (Z);
	R3 <<= 16;
.LN3628:
// line 4904
	R7 = B[P5 + 38] (Z);
	R7 <<= 24;
.LN3629:
// line 4905
	R6 = B[P5 + 39] (Z);
	R6 <<= 24;
.LN3630:
// line 4904
	R5 = B[P5 + 110] (Z);
	R0 = R0 + R5;
	R0 = R0 + R2;
	R0 = R0 + R7;
	[P4 + 852] = R0;
.LN3631:
// line 4905
	R0 = B[P5 + 111] (Z);
	R0 = R1 + R0;
	R0 = R0 + R3;
	R1 = R0 + R6;
	[P4 + 848] = R1;
.LN3632:
// line 4907
	R0 = B[P1++] (Z);
	R0 <<= 24;
	R2 = B[P1++] (Z);
	R2 <<= 16;
	R2 = R0 + R2;
	R0 = B[P1++] (Z);
	R0 <<= 8;
	R0 = R2 + R0;
	R2 = B[P1] (Z);
	R2 = R0 + R2;
	[P4 + 856] = R2;
.LN3633:
// line 4915
	R0 = [P4 + 844];
	CC = R0 < R2 (IU);
	if CC jump .P430L10 ;

.P430L13:
	CC = R2 == R0;
	R0 = 0;
	if !CC jump .P430L12 (bp);

.P430L10:
.LN3634:
	R0 = R2;
	R2 = 0;
	CALL.X (_BUF_SEARCH);

.P430L12:
.LN3635:
// line 4942
	R1 = [P4 + 848];
	CC = R1 == -1;
	if CC jump .P430L17 ;

.P430L18:
.LN3636:
// line 4963
	R1 = 120;
	CC = R1 <= R0 (IU);
	if !CC jump .P430L19 ;

.P430L23:
.LN3637:
// line 4965
	R0 = [P4 + -12];
	R0 += 1;
	[P4 + -12] = R0;
.LN3638:
// line 4966
	R1 = [P4 + 852];
	P3.L = _index_wr;
	P3.H = _index_wr;
	P0 = [P3];
	P1.L = _Pkt;
	P1.H = _Pkt;
.LN3639:
// line 4967
	R0 = [P4 + 848];
	P2 = 0;
.LN3640:
// line 4966
	P0 = P0 + (P0<<1);
	P0 = P0 + (P0<<2);
	P0 = (P0 + P0) << 2;
	P0 = P1 + P0;
	[P0 + 108] = R1;
.LN3641:
// line 4967
	P0 = [P3];
.LN3642:
// line 4968
	R1 = [P4 + 856];
	P5 += 4;
	// -- stall --
.LN3643:
// line 4967
	P0 = P0 + (P0<<1);
	P0 = P0 + (P0<<2);
	P0 = (P0 + P0) << 2;
	P0 = P1 + P0;
	[P0 + 104] = R0;
.LN3644:
// line 4968
	P0 = [P3];
	[SP + 36] = P2;
	P2 = 26;
	// -- stall --
	P0 = P0 + (P0<<1);
	P0 = P0 + (P0<<2);
	P0 = (P0 + P0) << 2;
	P0 = P1 + P0;
	[P0 + 112] = R1;
	LOOP .P430L27L LC0 = P2;

.P430L27:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 4986 col 3
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in an estimated 53 
//   cycles (includes 12 stalls).
//-------------------------------------------------------------------
//   Trip Count  = 26
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used  41 out of   53 ( 77.4%)
//     16-bit Instruction  used  73 out of  106 ( 68.9%)
//     32-bit Instruction  used  28 out of   53 ( 52.8%)
//     Store               used   5 out of   53 (  9.4%)
//-------------------------------------------------------------------
	LOOP_BEGIN .P430L27L;
.LN3645:
// line 4988
	R0 = B[P5++] (X);
	P0 = [P3];                              // Use of volatile in loops precludes optimizations. 
	P2 = [SP + 36];
.LN3646:
// line 4989
	R1 = B[P5 + 35] (X);
	// -- stall --
.LN3647:
// line 4988
	P0 = P0 + (P0<<1);
	P0 = P0 + (P0<<2);
	P0 = (P0 + P0) << 2;
	P0 = P1 + P0;
	P0 = P0 + P2;
	B[P0] = R0;
.LN3648:
// line 4989
	P0 = [P3];                              // Use of volatile in loops precludes optimizations. 
.LN3649:
// line 4990
	R0 = B[P5 + 71] (X);
	// -- 2 stalls --
.LN3650:
// line 4989
	P0 = P0 + (P0<<1);
	P0 = P0 + (P0<<2);
	P0 = (P0 + P0) << 2;
	P0 = P1 + P0;
	P0 += 26;
	P0 = P0 + P2;
	B[P0] = R1;
.LN3651:
// line 4990
	P0 = [P3];                              // Use of volatile in loops precludes optimizations. 
.LN3652:
// line 4991
	R1 = B[P5 + 107] (X);
	// -- 2 stalls --
.LN3653:
// line 4990
	P0 = P0 + (P0<<1);
	P0 = P0 + (P0<<2);
	P0 = (P0 + P0) << 2;
	P0 = P1 + P0;
	P0 += 52;
	P0 = P0 + P2;
	B[P0] = R0;
.LN3654:
// line 4991
	P0 = [P3];                              // Use of volatile in loops precludes optimizations. 
.LN3655:
	P2 = 78;
	// -- 2 stalls --
.LN3656:
	P0 = P0 + (P0<<1);
	P0 = P0 + (P0<<2);
	P0 = (P0 + P0) << 2;
	P0 = P1 + P0;
	P2 = P0 + P2;
	P0 = [SP + 36];
	// -- 3 stalls --
	P0 = P2 + P0;
	P2 = [SP + 36];
	B[P0] = R1;
	// -- 2 stalls --
.LN3657:
// line 4986
	P2 += 1;
	[SP + 36] = P2;
.LN3658:
	LOOP_END .P430L27L;
//-------------------------------------------------------------------
//   End Loop L27
//-------------------------------------------------------------------

.P430L55:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	R1 = P1;
.LN3659:
// line 4994
	R0 = [P3];
	P1.L = _index_wr_old;
	P1.H = _index_wr_old;
	[P1] = R0;
.LN3660:
// line 4996
	R0 = 0;
	CALL.X (_packet_UPR);
.LN3661:
// line 4998
	R0 = B[P4 + 52] (Z);
	CC = R0 == 0;
.LN3662:
// line 4996
	R0 = 0;
.LN3663:
// line 5000
	R1 = 119;
.LN3664:
// line 4998
	if !CC jump .P430L30 ;

.P430L29:
.LN3665:
// line 5000
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R2 = [P3];
	CC = R2 < R1 (IU);
	if !CC jump .P430L33 ;

.P430L32:
.LN3666:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R0 = [P3];
	R0 += 1;
	[P3] = R0;
	jump.s .P430L19;

.P430L33:
.LN3667:
	[P3] = R0;

.P430L19:
.LN3668:
// line 5010
	P1 = [SP + 60];
	// -- 3 stalls --
	R0 = [P1];
	[P4 + 0] = R0;
.LN3669:
// line 5012
	SP += 12;
	(R7:5, P5:3) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;

.P430L30:
.LN3670:
// line 5003
	R0 = [P3];
	CC = R0 < R1 (IU);
	if !CC jump .P430L19 ;

.P430L35:
.LN3671:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R0 = [P3];
	R0 += 1;
	[P3] = R0;
	jump.s .P430L19;

.P430L17:
	P5 += 4;
	P0.L = _Pkt_0;
	P0.H = _Pkt_0;
.LN3672:
// line 4947
	[P0 + 104] = R1;
.LN3673:
// line 4945
	R0 = 1;
	B[P4 + 860] = R0;
.LN3674:
// line 4948
	R0 = [P4 + 852];
	[P0 + 108] = R0;
.LN3675:
// line 4949
	R0 = [P4 + 856];
	[P0 + 112] = R0;
	P2 = 26;
	P1 = P0;
	LOOP .P430L21L LC0 = P2;

.P430L21:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 4951 col 3
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in estimated 8 cycles.
//-------------------------------------------------------------------
//   Trip Count  = 26
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   8 out of    8 (100.0%)
//     16-bit Instruction  used  14 out of   16 ( 87.5%)
//     32-bit Instruction  used   6 out of    8 ( 75.0%)
//     Store               used   4 out of    8 ( 50.0%)
//-------------------------------------------------------------------
//  This loop was not modulo scheduled because it was optimized for space.
//-------------------------------------------------------------------
	LOOP_BEGIN .P430L21L;
.LN3676:
// line 4953
	R0 = B[P5++] (X);
	B[P1++] = R0;
.LN3677:
// line 4954
	R0 = B[P5 + 35] (X);
	B[P1 + 25] = R0;
.LN3678:
// line 4956
	R0 = B[P5 + 107] (X);
	B[P1 + 77] = R0;
.LN3679:
// line 4955
	R0 = B[P5 + 71] (X);
	B[P1 + 51] = R0;
.LN3680:
// line 4951
	LOOP_END .P430L21L;
//-------------------------------------------------------------------
//   End Loop L21
//-------------------------------------------------------------------

.P430L53:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	R1 = P0;
.LN3681:
// line 4959
	R0 = 0;
	[P4 + 848] = R0;
.LN3682:
// line 4961
	CALL.X (_packet_UPR);
	jump.s .P430L19;
.LN._KUK_IO.end:
._KUK_IO.end:
	.global _KUK_IO;
	.type _KUK_IO,STT_FUNC;

	.align 2;
_INF_ANALIZ:
.LN_INF_ANALIZ:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 24 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {R5-R7,P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":7012
	LINK 0;
	[--SP] = (R7:5, P5:5);
	SP += -12;
	P5.L = _FLAG_SCH_RS485_PACKET;
	P5.H = _FLAG_SCH_RS485_PACKET;
	P1 = R0;
.LN3683:
// line 7020
	R6 = [P5];
	R7 = R1;
	R6 += 1;
	R3 = 0;
.LN3684:
// line 7022
	CC = R1 <= 0;
.LN3685:
// line 7020
	[P5] = R6;
	R6 = 0;
.LN3686:
// line 7022
	if CC jump .P431L3 ;

.P431L19:
.LN3687:
// line 7012
	P0 = R1;
	P2 = P1;
	// -- 2 stalls --
	LOOP .P431L2L LC0 = P0;

.P431L2:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 7022 col 3
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in estimated 2 cycles.
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   2 out of    2 (100.0%)
//     16-bit Instruction  used   3 out of    4 ( 75.0%)
//     32-bit Instruction  used   1 out of    2 ( 50.0%)
//-------------------------------------------------------------------
//  This loop was not modulo scheduled because it was optimized for space.
//-------------------------------------------------------------------
	LOOP_BEGIN .P431L2L;
.LN3688:
// line 7024
	R5 = B[P2++] (Z);
	R6 = R6 + R5;
.LN3689:
// line 7022
	LOOP_END .P431L2L;
//-------------------------------------------------------------------
//   End Loop L2
//-------------------------------------------------------------------

.P431L22:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------

.P431L3:
.LN3690:
// line 7035
	R6 = R6.L (Z);
	CC = R2 == R6;
	if !CC jump .P431L5 ;

.P431L4:
.LN3691:
// line 7038
	R2 = [P5 + 12];
	R2 += 1;
	[P5 + 12] = R2;
.LN3692:
// line 7040
	R2 = 20;
	CC = R1 < R2 (IU);
.LN3693:
// line 7037
	R2 = 1;
	B[P5 + 8] = R2;
.LN3694:
// line 7040
	if CC jump .P431L7 ;

.P431L8:
.LN3695:
// line 7042
	R0 = 144;
	CC = R1 == R0;
	if !CC jump .P431L6 ;

.P431L10:
	R6.L = _ZX_BUF;
	R6.H = _ZX_BUF;
	P0 = R6;
	P2 = 144;
	LOOP .P431L14L LC0 = P2;

.P431L14:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 7044 col 6
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in estimated 2 cycles.
//-------------------------------------------------------------------
//   Trip Count  = 144
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   2 out of    2 (100.0%)
//     16-bit Instruction  used   2 out of    4 ( 50.0%)
//     Store               used   1 out of    2 ( 50.0%)
//-------------------------------------------------------------------
//  This loop was not modulo scheduled because it was optimized for space.
//-------------------------------------------------------------------
	LOOP_BEGIN .P431L14L;
.LN3696:
// line 7046
	R0 = B[P1++] (X);
	B[P0++] = R0;
.LN3697:
// line 7044
	LOOP_END .P431L14L;
//-------------------------------------------------------------------
//   End Loop L14
//-------------------------------------------------------------------

.P431L23:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN3698:
// line 7049
	R0 = [P5 + 736];
	R0 += 1;
	[P5 + 736] = R0;
.LN3699:
// line 7050
	R0 = R6;
	CALL.X (_KUK_IO);
.LN3700:
// line 7051
	R1 = R7;
	R0 = R6;
	CALL.X (_TNC_rcv);

.P431L6:
.LN3701:
// line 7064
	SP += 12;
	(R7:5, P5:5) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;

.P431L7:
.LN3702:
// line 7040
	CALL.X (_Time_SEV_INF);
.LN3703:
	R0 = [P5 + 732];
	R0 += 1;
	[P5 + 732] = R0;
	jump.s .P431L6;

.P431L5:
.LN3704:
// line 7061
	B[P5 + 8] = R3;
.LN3705:
// line 7060
	R0 = [P5 + 24];
	R0 += 1;
	[P5 + 24] = R0;
	jump.s .P431L6;
.LN._INF_ANALIZ.end:
._INF_ANALIZ.end:
	.global _INF_ANALIZ;
	.type _INF_ANALIZ,STT_FUNC;

	.align 2;
_buff_SPORT:
.LN_buff_SPORT:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 32 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {R4-R6,P3-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":4215
	LINK 0;
	[--SP] = R4;
	[--SP] = R5;
	[--SP] = R6;
	[--SP] = (P5:3);
	P5.L = _a;
	P5.H = _a;
	P2 = 620;
	SP += -12;
	P1 = P5;
	P0.L = _rx_buffer1;
	P0.H = _rx_buffer1;
.LN3706:
// line 4224
	R4 = 0;
	LOOP .P432L2L LC0 = P2;

.P432L2:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 4221 col 3
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in estimated 3 cycles.
//-------------------------------------------------------------------
//   Trip Count  = 620
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   3 out of    3 (100.0%)
//     Store               used   2 out of    3 ( 66.7%)
//     16-bit Instruction  used   3 out of    6 ( 50.0%)
//-------------------------------------------------------------------
//  This loop was not modulo scheduled because it was optimized for space.
//-------------------------------------------------------------------
	LOOP_BEGIN .P432L2L;
.LN3707:
// line 4223
	R0 = B[P0] (X);
	B[P1++] = R0;
.LN3708:
// line 4224
	B[P0++] = R4;
.LN3709:
// line 4221
	LOOP_END .P432L2L;
//-------------------------------------------------------------------
//   End Loop L2
//-------------------------------------------------------------------

.P432L28:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	P1.L = _tx_wr_index1;
	P1.H = _tx_wr_index1;
.LN3710:
// line 4234
	[P1] = R4;
	P0.L = _tx_rd_index1;
	P0.H = _tx_rd_index1;
.LN3711:
// line 4235
	[P0] = R4;
	P2.L = _tx_counter1;
	P2.H = _tx_counter1;
.LN3712:
// line 4236
	R0 = 1;
	[P2] = R0;
	P1.L = _test_TNC;
	P1.H = _test_TNC;
	[SP + 48] = P1;
	P4.L = _z;
	P4.H = _z;
	P3 = 0;
.LN3713:
// line 4238
	R6 = 606;
.LN3714:
// line 4256
	R5 = 160;

.P432L5:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 4238 col 3
//-------------------------------------------------------------------
//   Trip Count  = 606
//-------------------------------------------------------------------
.LN3715:
// line 4240
	P1 = 150;
.LN3716:
	CC = P3 < P1;
	if !CC jump .P432L9 ;

.P432L7:
.LN3717:
	NOP;                                    // Inserted 2 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	P1 = P4 + P3;
	R0 = B[P5] (X);
	B[P1] = R0;

.P432L9:
.LN3718:
// line 4242
	P1 = 146;
.LN3719:
	CC = P3 == P1;
	if CC jump .P432L10 ;

.P432L12:
.LN3720:
// line 4256
	R0 = 11;
.LN3721:
	CC = R4 == R0;
.LN3722:
// line 4254
	P3 += 1;
	P1 = 0;
.LN3723:
// line 4256
	if CC jump .P432L18 ;

.P432L21:
	CC = R4 == R5;
	if CC jump .P432L18 ;

.P432L20:
.LN3724:
	R0 = 309;
.LN3725:
	CC = R4 == R0;
	if CC jump .P432L18 ;

.P432L19:
.LN3726:
	R0 = 458;
.LN3727:
	CC = R4 == R0;
	P1 = P3;
	P0 = 0;
	IF CC P1 = P0;

.P432L18:
.LN3728:
// line 4238
	R4 += 1;
.LN3729:
	CC = R4 < R6;
	P5 += 1;
	P3 = P1;
	if CC jump .P432L5 (bp);
//-------------------------------------------------------------------
//   End Loop L5
//-------------------------------------------------------------------

.P432L30:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN3730:
// line 4261
	SP += 12;
	(P5:3) = [SP++];
	// -- stall --
	R6 = [SP++];
	R5 = [SP++];
	R4 = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;

.P432L10:
//-------------------------------------------------------------------
//   Part of Loop 5, depth 1
//-------------------------------------------------------------------
.LN3731:
// line 4244
	R2 = B[P4 + 145] (Z);
	R3 = B[P4 + 146] (Z);
	R2 <<= 8;
	R2 = R2 + R3;
.LN3732:
// line 4245
	R0 = P4;
	R1 = 144;
	CALL.X (_INF_ANALIZ);
.LN3733:
// line 4246
	P1 = [SP + 48];
	// -- 3 stalls --
	R0 = [P1 + 1068];
	R1 = W[P1] (Z);
	CC = R0 == R1;
	if !CC jump .P432L12 (bp);

.P432L13:
.LN3734:
// line 4248
	R0 = P4;
	R1 = 147;
	CALL.X (_buf_txt);
	jump.s .P432L12;
.LN._buff_SPORT.end:
._buff_SPORT.end:
	.global _buff_SPORT;
	.type _buff_SPORT,STT_FUNC;

	.align 2;
_Ethernet_MU:
.LN_Ethernet_MU:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0-R1,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {P3-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":7748
	LINK 0;
	[--SP] = (P5:3);
	SP += -12;
.LN3735:
// line 7749
	P3 = 1572 /* -4192732 */;
	P3.H = -64 /* -4192732 */;
	R0 = [P3];
	P4.L = _tst_timeA;
	P4.H = _tst_timeA;
	[P4] = R0;
.LN3736:
// line 7751
	CALL.X (_UDP_test);
	P5.L = _flag_RX_UDP;
	P5.H = _flag_RX_UDP;
.LN3737:
// line 7754
	R0 = B[P5] (Z);
	CC = R0 == 1;
	if !CC jump .P433L3 ;

.P433L1:
.LN3738:
// line 7756
	NOP;                                    // Inserted 2 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	P1.L = _lsr_razmer;
	P1.H = _lsr_razmer;
	// -- stall --
	R1 = [P1];
	R0 = [P4 + 904];
	CC = R0 < R1 (IU);
	if !CC jump .P433L6 ;

.P433L4:
.LN3739:
	[P4 + 904] = R1;

.P433L6:
.LN3740:
// line 7757
	R0 = 10;
	CC = R1 < R0 (IU);
	R0.L = _RX_BUF;
	R0.H = _RX_BUF;
	if !CC jump .P433L8 ;

.P433L7:
.LN3741:
	CALL.X (_Time_SEV_INF);
	jump.s .P433L9;

.P433L8:
.LN3742:
// line 7758
	CALL.X (_KUK_IO);

.P433L9:
.LN3743:
// line 7762
	R0 = 0;
.LN3744:
// line 7763
	B[P5] = R0;
.LN3745:
// line 7762
	[P4 + 40] = R0;
	P1.L = _Mem_K615+7;
	P1.H = _Mem_K615+7;
.LN3746:
// line 7764
	R1 = B[P1] (Z);
	R0 = 1;
	R1 = R1 & R0;
	CC = R1 == 1;
	if !CC jump .P433L3 ;

.P433L10:
	P1.L = _FLAG_UDP_EVENT;
	P1.H = _FLAG_UDP_EVENT;
.LN3747:
	W[P1] = R0.L;

.P433L3:
.LN3748:
// line 7766
	NOP;                                    // Inserted to fix anomaly w_05000245_with_boundaries. 
	R0 = [P3];
	[P4 + 4] = R0;
.LN3749:
// line 7767
	SP += 12;
	(P5:3) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._Ethernet_MU.end:
._Ethernet_MU.end:
	.global _Ethernet_MU;
	.type _Ethernet_MU,STT_FUNC;

	.align 2;
_Ethernet_OBMEN:
.LN_Ethernet_OBMEN:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":7771
	LINK 12;
	P1.L = _Master_flag;
	P1.H = _Master_flag;
.LN3750:
// line 7774
	R0 = B[P1] (X);
	CC = R0 == 0;
	if !CC jump .P434L3 (bp);

.P434L1:
.LN3751:
	CALL.X (_Info_back_Ethernet);

.P434L3:
.LN3752:
// line 7776
	CALL.X (_Ethernet_MU);
.LN3753:
// line 7779
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._Ethernet_OBMEN.end:
._Ethernet_OBMEN.end:
	.global _Ethernet_OBMEN;
	.type _Ethernet_OBMEN,STT_FUNC;

	.align 2;
_packet_SORT:
.LN_packet_SORT:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 36 
//  Scratch registers used: {R0-R3,P0-P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R4-R7,P3-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":6648
	LINK 0;
	[--SP] = (R7:4, P5:3);
	SP += -12;
.LN3754:
// line 6658
	CC = R2 == 0;
	[SP + 52] = R1;
	R5 = 0;
.LN3755:
// line 6648
	R7 = R0;
	P4 = 0;
	P3.L = _TNO_actual;
	P3.H = _TNO_actual;
	R6.L = .s.6;
	R6.H = .s.6;
	P5 = 0;
.LN3756:
// line 6658
	if !CC jump .P437L3 ;

.P437L1:
	P1.L = _Pkt;
	P1.H = _Pkt;
	[SP + 48] = P1;

.P437L5:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 6660 col 3
//-------------------------------------------------------------------
.LN3757:
// line 6662
	CALL.X (_Event_Synhron);
.LN3758:
// line 6664
	P0 = [SP + 48];
	P1 = P5 + (P5<<1);
	P1 = P1 + (P1<<2);
	P1 = (P1 + P1) << 2;
	P1 = P0 + P1;
	R0 = [P1 + 112];
	CC = R7 == R0;
	if !CC jump .P437L9 ;

.P437L10:
	R0 = [P1 + 104];
	R1 = [SP + 52];
	CC = R1 == R0;
	if !CC jump .P437L9 ;

.P437L7:
	P4 = P5;
	R5 = 1;
	P5 = 120;

.P437L9:
.LN3759:
// line 6660
	P5 += 1;
.LN3760:
	P1 = 120;
.LN3761:
	CC = P5 < P1 (IU);
	if CC jump .P437L5 (bp);
//-------------------------------------------------------------------
//   End Loop L5
//-------------------------------------------------------------------

.P437L28:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN3762:
// line 6671
	R0 = R5.b (Z);
	CC = R0 == 0;
	if !CC jump .P437L12 ;

.P437L11:
	R5 = 0;
.LN3763:
// line 6673
	R0 = [P3 + -800];
	R0 += 1;
	[P3 + -800] = R0;
.LN3764:
// line 6674
	R0 = B[P3 + -778] (Z);
	CC = R0 == 1;
	if !CC jump .P437L3 (bp);

.P437L14:
.LN3765:
// line 6676
	R0 = R6;
	CALL.X (_put_str1);
	R2 = 1676;
	R0 = R6 + R2;
.LN3766:
// line 6677
	R1 = [SP + 52];
	CALL.X (_u_out);
	R3 = 1692;
	R0 = R6 + R3;
.LN3767:
// line 6678
	R1 = R7;
	CALL.X (_u_out);

.P437L3:
.LN3768:
// line 6690
	R7 = R5.b (Z);
	CC = R7 == 1;
	if !CC jump .P437L19 ;

.P437L21:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R0 = B[P3 + 28] (X);
	CC = R0 == 0;
	if !CC jump .P437L19 ;

.P437L20:
	R0 = B[P3 + -149] (Z);
	CC = R0 == 0;
	if !CC jump .P437L19 (bp);

.P437L17:
	R0.L = .s.236;
	R0.H = .s.236;
.LN3769:
// line 6693
	CALL.X (_put_str1);
	R0 = 1708;
	R0 = R6 + R0;
.LN3770:
// line 6694
	CALL.X (_put_str1);
	R0 = 1052;
	R0 = R6 + R0;
.LN3771:
// line 6695
	CALL.X (_put_str1);
	R0.L = .s.238;
	R0.H = .s.238;
.LN3772:
// line 6696
	CALL.X (_put_str1);
	R0 = 1724;
	R0 = R6 + R0;
.LN3773:
// line 6697
	R1 = [P3--];
.LN3774:
	CALL.X (_u_out);
	R0 = 1740;
	R0 = R6 + R0;
.LN3775:
// line 6698
	R1 = [P3];
.LN3776:
	CALL.X (_u_out);
	R0 = 1756;
	R0 = R6 + R0;
.LN3777:
// line 6699
	R1 = [P3 + 8];
.LN3778:
	CALL.X (_u_out);
.LN3779:
// line 6706
	R0 = 1;
	B[P3 + 32] = R0;
.LN3780:
// line 6707
	B[P3 + -145] = R0;

.P437L19:
.LN3781:
// line 6717
	SP += 12;
.LN3782:
// line 6716
	CC = R7 == 1;
	R0 = P4;
.LN3783:
// line 6717
	(R7:4, P5:3) = [SP++];
	UNLINK;
	R1 = -1;
	IF !CC R0 = R1;
	// -- 2 stalls --
	RTS;

.P437L12:
.LN3784:
// line 6685
	P1 = P4 + (P4<<1);
	P1 = P1 + (P1<<2);
	P1 = (P1 + P1) << 2;
	P1 = P0 + P1;
.LN3785:
// line 6686
	R0 = [P3 + -964];
.LN3786:
// line 6685
	R1 = [P1 + 108];
.LN3787:
// line 6686
	R0 += 1;
.LN3788:
// line 6685
	[P3] = R1;
.LN3789:
// line 6686
	[P3 + -964] = R0;
	jump.s .P437L3;
.LN._packet_SORT.end:
._packet_SORT.end:
	.global _packet_SORT;
	.type _packet_SORT,STT_FUNC;

	.align 2;
_VCU_sinh_form:
.LN_VCU_sinh_form:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0-R2,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R7,P4-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":6593
	LINK 0;
	[--SP] = (R7:7, P5:4);
	SP += -12;
.LN3790:
// line 6596
	P5 = 1572 /* -4192732 */;
	P5.H = -64 /* -4192732 */;
	R0 = [P5];
	P4.L = _tst_time8;
	P4.H = _tst_time8;
	[P4] = R0;
.LN3791:
// line 6599
	R0 = B[P4 + 916] (X);
.LN3792:
// line 6597
	R1 = [P4 + 920];
.LN3793:
// line 6599
	CC = R0 == 1;
.LN3794:
// line 6597
	R1 += 1;
.LN3795:
// line 6599
	if CC jump .P438L1 ;

.P438L3:
.LN3796:
// line 6609
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R0 = [P5];
	[P4 + 4] = R0;
.LN3797:
// line 6610
	SP += 12;
	(R7:7, P5:4) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;

.P438L1:
.LN3798:
// line 6601
	R0 = [P4 + 928];
.LN3799:
	R2 = 0;
	CALL.X (_packet_SORT);
	P1.L = _index_rd;
	P1.H = _index_rd;
.LN3800:
	[P1] = R0;
.LN3801:
// line 6603
	R0 = [P1];
	R1 = 120;
	CC = R0 < R1 (IU);
.LN3802:
// line 6601
	R7 = 0;
.LN3803:
// line 6603
	if CC jump .P438L4 ;

.P438L5:
.LN3804:
// line 6604
	R0 = B[P4 + 944] (Z);
	CC = R0 == 1;
	if !CC jump .P438L6 (bp);

.P438L7:
	R1.L = _Pkt_0;
	R1.H = _Pkt_0;
.LN3805:
	R0 = 0;
	CALL.X (_packet_TRSL);

.P438L6:
.LN3806:
// line 6606
	B[P4 + 916] = R7;
	jump.s .P438L3;

.P438L4:
.LN3807:
// line 6603
	R0 = [P1];
	R0 = R0.b (Z);
	R1.L = _Pkt;
	R1.H = _Pkt;
.LN3808:
	CALL.X (_packet_TRSL);
	jump.s .P438L6;
.LN._VCU_sinh_form.end:
._VCU_sinh_form.end:
	.global _VCU_sinh_form;
	.type _VCU_sinh_form,STT_FUNC;

	.align 2;
_func_TNO:
.LN_func_TNO:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 28 
//  Scratch registers used: {R0-R1,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R5-R7,P4-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":3727
	LINK 0;
	[--SP] = (R7:5, P5:4);
	SP += -12;
.LN3809:
// line 3730
	R0 = 99;
	CALL.X (_Timer_INT2);
.LN3810:
// line 3731
	R7 = 0;
	P1.L = _flag_event_K615_run;
	P1.H = _flag_event_K615_run;
	B[P1] = R7;
	P1.L = _flag_END_sync_packet;
	P1.H = _flag_END_sync_packet;
.LN3811:
// line 3736
	B[P1] = R7;
.LN3812:
// line 3737
	R6 = 1;
	P1.L = _flag_first_TNO;
	P1.H = _flag_first_TNO;
	B[P1] = R6;
	P4.L = _Alfa;
	P4.H = _Alfa;
.LN3813:
// line 3739
	[P4] = R7;
	P1.L = _flag_Packet_form;
	P1.H = _flag_Packet_form;
.LN3814:
// line 3740
	B[P1] = R7;
	P5.L = _tst_time_max;
	P5.H = _tst_time_max;
.LN3815:
// line 3741
	B[P5 + 148] = R7;
	P1.L = _flag_event_sinhron;
	P1.H = _flag_event_sinhron;
.LN3816:
// line 3742
	B[P1] = R7;
	P1.L = _flag_dsp_ok;
	P1.H = _flag_dsp_ok;
.LN3817:
// line 3743
	B[P1] = R6;
	P1.L = _Mem_K615+6;
	P1.H = _Mem_K615+6;
.LN3818:
// line 3750
	R0 = B[P1] (Z);
	CC = BITTST(R0, 0);
.LN3819:
// line 3744
	B[P5 + 738] = R6;
.LN3820:
// line 3745
	B[P5 + 146] = R6;
.LN3821:
// line 3746
	B[P5 + 68] = R6;
.LN3822:
// line 3747
	B[P5 + 147] = R7;
.LN3823:
// line 3748
	[P5 + 164] = R7;
.LN3824:
// line 3750
	if CC jump .P439L1 ;

.P439L2:
.LN3825:
// line 3751
	R0 <<= 28;
	CC = BITTST(R0, 30);
	if !CC jump .P439L3 (bp);

.P439L4:
.LN3826:
	R0 = 1;
	CALL.X (_MU_TEST);

.P439L3:
.LN3827:
// line 3753
	NOP;                                    // Inserted to fix anomaly w_05000245_with_boundaries. 
	R0 = [P4];
	R1.L = _Struk0;
	R1.H = _Struk0;
.LN3828:
	CALL.X (_Packet_TNC1);
.LN3829:
// line 3755
	B[P5 + 69] = R7;
	P1.L = _flag_event_K614;
	P1.H = _flag_event_K614;
.LN3830:
// line 3757
	B[P1] = R6;
.LN3831:
// line 3759
	R0 = -1;
	P1.L = _FLAG_PACHKA_DELAY;
	P1.H = _FLAG_PACHKA_DELAY;
	B[P1] = R0;
.LN3832:
// line 3760
	B[P5 + 737] = R7;
.LN3833:
// line 3761
	[P5++] = R7;
.LN3834:
// line 3762
	B[P5 + 12] = R7;
.LN3835:
// line 3763
	[P5 + 56] = R7;
.LN3836:
// line 3764
	[P5 + 60] = R7;
	P1.L = _Event_word;
	P1.H = _Event_word;
.LN3837:
// line 3766
	B[P1] = R0;
.LN3838:
// line 3768
	B[P5 + 724] = R7;
.LN3839:
// line 3769
	B[P5 + 722] = R7;
.LN3840:
// line 3770
	B[P5 + 723] = R7;
.LN3841:
// line 3771
	B[P5 + 721] = R7;
.LN3842:
// line 3772
	B[P5 + 725] = R7;
.LN3843:
// line 3773
	B[P5 + 727] = R7;
	P1.L = _sch_pachek_test;
	P1.H = _sch_pachek_test;
.LN3844:
// line 3775
	[P1] = R7;
.LN3845:
// line 3776
	[P5 + -96] = R7;
.LN3846:
// line 3777
	[P5 + 168] = R7;
	P1.L = _flag_PPI_sz1;
	P1.H = _flag_PPI_sz1;
.LN3847:
// line 3780
	B[P1] = R7;
	P1.L = _flag_PPI_sz2;
	P1.H = _flag_PPI_sz2;
.LN3848:
// line 3781
	B[P1] = R7;
	P1.L = _flag_PPI_sinc;
	P1.H = _flag_PPI_sinc;
.LN3849:
// line 3782
	B[P1] = R6;
	P1.L = _flag_1HZ_sync;
	P1.H = _flag_1HZ_sync;
.LN3850:
// line 3784
	B[P1] = R7;
	P1.L = _time_TNC_max;
	P1.H = _time_TNC_max;
.LN3851:
// line 3787
	R0 = -7937;
.LN3852:
// line 3786
	[P1] = R7;
	R5 = R0;
.LN3853:
// line 3787
	R5.H = 1525;
	P1.L = _time_TNC_min;
	P1.H = _time_TNC_min;
	[P1] = R5;
	P1.L = _time_TNO_max;
	P1.H = _time_TNO_max;
.LN3854:
// line 3789
	[P1] = R7;
	P1.L = _time_TNO_min;
	P1.H = _time_TNO_min;
.LN3855:
// line 3790
	[P1] = R5;
.LN3856:
// line 3795
	SP += 12;
	(R7:5, P5:4) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;

.P439L1:
.LN3857:
// line 3750
	CALL.X (_VCU_sinh_form);
	jump.s .P439L3;
.LN._func_TNO.end:
._func_TNO.end:
	.global _func_TNO;
	.type _func_TNO,STT_FUNC;

	.align 2;
_Packet_FINDER:
.LN_Packet_FINDER:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0-R1,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":7940
	LINK 12;
	P1.L = _Mem_K615+6;
	P1.H = _Mem_K615+6;
.LN3858:
// line 7943
	R0 = B[P1] (Z);
.LN3859:
// line 7941
	R1 = 1;
.LN3860:
// line 7943
	R0 = R0 & R1;
	P1.L = _flag_packet_OK_for_read;
	P1.H = _flag_packet_OK_for_read;
	CC = R0 == 1;
.LN3861:
// line 7941
	B[P1] = R1;
.LN3862:
// line 7943
	if !CC jump .P440L3 ;

.P440L1:
.LN3863:
// line 7945
	R0 = B[P1 + -678] (Z);
	CC = R0 == 1;
	if !CC jump .P440L3 ;

.P440L4:
.LN3864:
	R0 = B[P1 + -1028] (Z);
	CC = R0 == 0;
	if !CC jump .P440L3 (bp);

.P440L7:
.LN3865:
	CALL.X (_VCU_sinh_form);

.P440L3:
.LN3866:
// line 7948
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._Packet_FINDER.end:
._Packet_FINDER.end:
	.global _Packet_FINDER;
	.type _Packet_FINDER,STT_FUNC;

	.align 2;
_TEST_INTERVAL_DISP:
.LN_TEST_INTERVAL_DISP:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 8 
//  No scratch registers used.
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":7963
	LINK 0;
.LN3867:
// line 7974
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._TEST_INTERVAL_DISP.end:
._TEST_INTERVAL_DISP.end:
	.global _TEST_INTERVAL_DISP;
	.type _TEST_INTERVAL_DISP,STT_FUNC;

	.align 2;
_RZV_proir:
.LN_RZV_proir:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 24 
//  Scratch registers used: {R0-R3,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R6-R7,P4-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":7977
	LINK 0;
	[--SP] = (R7:6, P5:4);
	R7 = R0;
.LN3868:
// line 7981
	R0 = 119;
	CC = R7 == R0;
.LN3869:
// line 7977
	SP += -12;
	P5.L = _MASTER_CODE;
	P5.H = _MASTER_CODE;
.LN3870:
// line 7981
	if !CC jump .P445L3 ;

.P445L1:
.LN3871:
// line 7983
	R0 = B[P5 + 23] (Z);
	CC = R0 == 0;
	R6.L = .s.242;
	R6.H = .s.242;
	P4.L = _Mem_K615+6;
	P4.H = _Mem_K615+6;
	if CC jump .P445L4 ;

.P445L6:
.LN3872:
// line 7990
	R0 = B[P5 + 23] (Z);
	CC = R0 == 1;
	if CC jump .P445L13 ;

.P445L3:
.LN3873:
// line 7999
	R0 = 4;
	CC = R7 == R0;
	if !CC jump .P445L24 (bp);

.P445L22:
.LN3874:
// line 8001
	B[P5 + 182] = R7;
	R0.L = .s4.243;
	R0.H = .s4.243;
.LN3875:
// line 8002
	CALL.X (_put_str1);

.P445L24:
.LN3876:
// line 8005
	R0 = 5;
	CC = R7 == R0;
	if !CC jump .P445L27 (bp);

.P445L25:
.LN3877:
// line 8007
	B[P5 + 182] = R7;
	R0.L = .s5.244;
	R0.H = .s5.244;
.LN3878:
// line 8008
	CALL.X (_put_str1);

.P445L27:
	R6 = -96;
	R2 = -80;
.LN3879:
// line 8011
	R3 = B[P5 + 181] (Z);
	CC = R3 == 1;
	R1 = 0;
	R0 = 0;
	IF CC R0 = R6;
.LN3880:
// line 8012
	CC = R3 == 2;
	IF CC R0 = R2;
.LN3881:
// line 8013
	CC = R3 == 3;
	R2 = -64;
	IF CC R0 = R2;
.LN3882:
// line 8018
	R2 = B[P5 + 182] (X);
	R0 = R0 + R2;
	B[P5] = R0;
.LN3883:
// line 8020
	R0 = 99;
	CC = R7 == R0;
	if !CC jump .P445L39 (bp);

.P445L37:
.LN3884:
// line 8022
	R0 = -1;
	B[P5 + 0] = R0;
	P1.L = _AVARIYA_flag;
	P1.H = _AVARIYA_flag;
.LN3885:
// line 8023
	[P1] = R1;
	R0.L = .sMASTER.245;
	R0.H = .sMASTER.245;
.LN3886:
// line 8024
	CALL.X (_put_str1);

.P445L39:
.LN3887:
// line 8028
	SP += 12;
	(R7:6, P5:4) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;

.P445L13:
.LN3888:
// line 7992
	R1 = B[P4] (X);
	R0 = 1026;
	R0 = EXTRACT(R1, R0.L) (Z);
	R2 = 2;
	R0 = R0 & R2;
	CC = R0 == 2;
	if !CC jump .P445L18 ;

.P445L16:
.LN3889:
	R0 = 4;
	B[P5 + 182] = R0;

.P445L18:
	R0 = 1538;
.LN3890:
// line 7993
	R0 = EXTRACT(R1, R0.L) (Z);
	R0 = R0 & R2;
	CC = R0 == 2;
	if !CC jump .P445L21 ;

.P445L19:
.LN3891:
	B[P5 + 182] = R2;

.P445L21:
.LN3892:
// line 7994
	R1 = B[P5 + 182] (Z);
.LN3893:
	R0 = R6;
	CALL.X (_u_out);
	jump.s .P445L3;

.P445L4:
.LN3894:
// line 7985
	R1 = B[P4] (X);
	R0 = 1026;
	R0 = EXTRACT(R1, R0.L) (Z);
	R2 = 2;
	R0 = R0 & R2;
	CC = R0 == 2;
	if !CC jump .P445L9 ;

.P445L7:
.LN3895:
	R0 = 3;
	B[P5 + 182] = R0;

.P445L9:
	R0 = 1538;
.LN3896:
// line 7986
	R0 = EXTRACT(R1, R0.L) (Z);
	R0 = R0 & R2;
	CC = R0 == 2;
	if !CC jump .P445L12 ;

.P445L10:
.LN3897:
	R0 = 1;
	B[P5 + 182] = R0;

.P445L12:
.LN3898:
// line 7987
	R1 = B[P5 + 182] (Z);
.LN3899:
	R0 = R6;
	CALL.X (_u_out);
	jump.s .P445L6;
.LN._RZV_proir.end:
._RZV_proir.end:
	.global _RZV_proir;
	.type _RZV_proir,STT_FUNC;

	.align 2;
_LED_ERROR:
.LN_LED_ERROR:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 36 
//  Scratch registers used: {R0-R3,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R4-R7,P3-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":8032
	LINK 0;
	[--SP] = (R7:4, P5:3);
	SP += -12;
	P3.L = _tick_wait_LED_ERROR;
	P3.H = _tick_wait_LED_ERROR;
	R7 = R0;
.LN3900:
// line 8036
	R0 = [P3];
	R1 = 100;
	CC = R1 < R0 (IU);
	if !CC jump .P450L3 ;

.P450L4:
	NOP;                                    // Inserted 2 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	P4.L = _Mem_K615+7;
	P4.H = _Mem_K615+7;
	R3 = B[P4] (Z);
	R0 = R3 << 30;
	CC = AZ;
	if !CC jump .P450L3 ;

.P450L1:
.LN3901:
// line 8038
	CC = R7 == 0;
	R6.L = .s1ERROR.247;
	R6.H = .s1ERROR.247;
	P5.L = _Mem1+30;
	P5.H = _Mem1+30;
	if !CC jump .P450L7 ;

.P450L9:
	R0 = B[P3 + 5] (Z);
	CC = R0 == 0;
	if !CC jump .P450L7 ;

.P450L8:
	R0 = [P3 + -436];
	R1 = 1000;
	CC = R1 < R0 (IU);
	if CC jump .P450L5 ;

.P450L7:
.LN3902:
// line 8064
	R0 = B[P3 + -4] (Z);
	CC = R0 == 1;
	if !CC jump .P450L15 (bp);

.P450L13:
.LN3903:
// line 8066
	R0 = 1;
.LN3904:
	B[P3 + 5] = R0;
.LN3905:
// line 8067
	R4 = 0;
	P1.L = _TIME_BR;
	P1.H = _TIME_BR;
	[P1] = R4;
.LN3906:
// line 8068
	R3 = B[P4 + -1] (Z);
	R1 = 1538;
	R0 = EXTRACT(R3, R1.L) (Z);
	BITSET(R0, 0);
	R1.H = R0.L << 0;
	R0 = DEPOSIT(R3, R1);
	R3 = R0.b (Z);
	R2 = 1026;
.LN3907:
// line 8069
	R1 = EXTRACT(R3, R2.L) (Z);
	BITCLR(R1, 0);
	R2.H = R1.L << 0;
	R1 = DEPOSIT(R3, R2);
	B[P4 + -1] = R1;
.LN3908:
// line 8070
	[P3 + -436] = R4;
.LN3909:
// line 8071
	R0 = 5;
	CALL.X (_RZV_proir);
.LN3910:
// line 8072
	R0 = R6;
	CALL.X (_IO);
.LN3911:
// line 8074
	R0 = 1;
	CALL.X (_K615_work);
	R5.L = .s.249;
	R5.H = .s.249;
.LN3912:
// line 8076
	R0 = R5;
	CALL.X (_put_str1);
	R0.L = .s.250;
	R0.H = .s.250;
.LN3913:
// line 8077
	CALL.X (_put_str1);
.LN3914:
// line 8078
	R0 = R5;
	CALL.X (_put_str1);
.LN3915:
// line 8082
	R2 = 1;
.LN3916:
// line 8083
	R1 = 1;
.LN3917:
// line 8085
	B[P3 + -4] = R4;
.LN3918:
// line 8086
	[P3 + -416] = R4;
.LN3919:
// line 8082
	B[P3 + -579] = R2;
.LN3920:
// line 8083
	B[P3 + -578] = R1;

.P450L15:
.LN3921:
// line 8090
	CC = R7 == 0;
	if !CC jump .P450L18 ;

.P450L16:
.LN3922:
	B[P3 + 515] = R7;

.P450L18:
.LN3923:
// line 8092
	if CC jump .P450L21 ;

.P450L19:
.LN3924:
// line 8094
	R0 = B[P3 + 515] (X);
	R0 = ~ R0;
	B[P3 + 515] = R0;

.P450L21:
.LN3925:
// line 8100
	R0 = B[P3 + -8] (Z);
	CC = R0 == 1;
	if !CC jump .P450L24 ;

.P450L22:
.LN3926:
	R0 = 0;
	B[P3 + -8] = R0;

.P450L24:
.LN3927:
// line 8101
	R0 = B[P3 + -7] (Z);
	CC = R0 == 1;
	if !CC jump .P450L27 ;

.P450L25:
.LN3928:
	R0 = 0;
	B[P3 + -7] = R0;

.P450L27:
.LN3929:
// line 8102
	R0 = B[P3 + -6] (Z);
	CC = R0 == 1;
	if !CC jump .P450L30 ;

.P450L28:
.LN3930:
	R0 = 0;
	B[P3 + -6] = R0;

.P450L30:
.LN3931:
// line 8103
	R0 = B[P3 + -5] (Z);
	CC = R0 == 1;
	if !CC jump .P450L33 (bp);

.P450L31:
	R0.L = .s64.251;
	R0.H = .s64.251;
.LN3932:
	CALL.X (_put_str1);
.LN3933:
	R0 = 0;
	B[P3 + -5] = R0;

.P450L33:
.LN3934:
// line 8105
	CC = R7 == 0;
	if CC jump .P450L36 ;

.P450L38:
	R0 = B[P3 + 4] (Z);
	CC = R0 == 0;
	if !CC jump .P450L36 ;

.P450L37:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R0 = B[P5] (X);
	R1 = 1028;
	R0 = EXTRACT(R0, R1.L) (Z);
	R1 = 12;
	CC = R0 == R1;
	if !CC jump .P450L36 (bp);

.P450L34:
.LN3935:
// line 8107
	R0 = 514;
	BITSET(R0, 16);
.LN3936:
// line 8109
	R7 = 0;
	[P3 + -436] = R7;
.LN3937:
// line 8107
	R1 = B[P4 + 1] (Z);
	R0 = DEPOSIT(R1, R0);
	B[P4 + 1] = R0;
.LN3938:
// line 8108
	R0 = B[P4] (Z);
	R1 = 514;
	R0 = DEPOSIT(R0, R1);
	B[P4] = R0;
.LN3939:
// line 8111
	CALL.X (_GBR_zad);
.LN3940:
// line 8112
	B[P3 + -412] = R7;
.LN3941:
// line 8113
	B[P3 + -136] = R7;
.LN3942:
// line 8119
	R0 = 1;
	CALL.X (_K615_work);
.LN3943:
// line 8121
	B[P3 + 5] = R7;
.LN3944:
// line 8122
	R0 = -257 /* 2147483391 */;
	R0.H = 32767 /* 2147483391 */;
	[P3 + -368] = R0;
.LN3945:
// line 8119
	R1 = 1;
.LN3946:
// line 8120
	B[P3 + 4] = R1;
.LN3947:
// line 8123
	CALL.X (_Event_SPORT_RUN);
	R0.L = .s.252;
	R0.H = .s.252;
.LN3948:
// line 8124
	CALL.X (_put_str1);
	P1.L = _AVARIYA_flag;
	P1.H = _AVARIYA_flag;
.LN3949:
// line 8125
	R1 = [P1];
	R0 = -940;
	R0 = R6 + R0;
.LN3950:
	CALL.X (_u_out);
.LN3951:
// line 8128
	B[P3 + -307] = R7;
.LN3952:
// line 8129
	B[P3 + -4] = R7;
.LN3953:
// line 8130
	B[P3 + -579] = R7;
.LN3954:
// line 8131
	[P3 + -416] = R7;

.P450L36:
.LN3955:
// line 8134
	R0 = B[P4 + 1] (Z);
	R1 = 1026;
	R0 = DEPOSIT(R0, R1);
	B[P4 + 1] = R0;
.LN3956:
// line 8136
	R0 = 0;
	[P3 + 0] = R0;

.P450L3:
.LN3957:
// line 8139
	SP += 12;
	(R7:4, P5:3) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;

.P450L5:
.LN3958:
// line 8041
	R0 = 514;
	BITSET(R0, 16);
	R0 = DEPOSIT(R3, R0);
.LN3959:
// line 8045
	R1 = B[P5] (X);
	R2 = 1028;
	R5 = EXTRACT(R1, R2.L) (Z);
.LN3960:
// line 8041
	B[P4] = R0;
.LN3961:
// line 8040
	R0 = B[P4 + 1] (Z);
	R4 = 514;
.LN3962:
// line 8042
	R2 = -269;
.LN3963:
// line 8045
	R3 = 12;
.LN3964:
// line 8040
	R0 = DEPOSIT(R0, R4);
	R1 = R2;
.LN3965:
// line 8042
	R1.H = 32767;
.LN3966:
// line 8045
	CC = R5 == R3;
.LN3967:
// line 8043
	B[P3 + -412] = R7;
.LN3968:
// line 8040
	B[P4 + 1] = R0;
.LN3969:
// line 8042
	[P3 + -368] = R1;
.LN3970:
// line 8045
	if !CC jump .P450L12 (bp);

.P450L10:
.LN3971:
// line 8047
	R0 = 119;
	CALL.X (_RZV_proir);

.P450L12:
	R5 = 1538;
	R4 = 1026;
.LN3972:
// line 8050
	R0 = R6;
	CALL.X (_IO);
.LN3973:
// line 8052
	R1 = B[P4 + -1] (Z);
	R0 = EXTRACT(R1, R5.L) (Z);
	BITCLR(R0, 0);
	R5 = PACK(R0.L, R5.L);
	R0 = DEPOSIT(R1, R5);
	R1 = R0.b (Z);
.LN3974:
// line 8053
	R0 = EXTRACT(R1, R4.L) (Z);
	BITSET(R0, 0);
	R4 = PACK(R0.L, R4.L);
	R0 = DEPOSIT(R1, R4);
	B[P4 + -1] = R0;
.LN3975:
// line 8055
	R0 = 1;
	CALL.X (_K615_work);
.LN3976:
// line 8056
	B[P3 + 4] = R7;
.LN3977:
// line 8055
	R0 = 1;
.LN3978:
// line 8057
	B[P3 + 5] = R0;
.LN3979:
// line 8059
	CALL.X (_help);
	R0 = R6;
	R0 += 12;
.LN3980:
// line 8060
	CALL.X (_put_str1);
	jump.s .P450L7;
.LN._LED_ERROR.end:
._LED_ERROR.end:
	.global _LED_ERROR;
	.type _LED_ERROR,STT_FUNC;

	.align 2;
_block_ON:
.LN_block_ON:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 28 
//  Scratch registers used: {R0-R2,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R6-R7,P3-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":8160
	LINK 0;
	[--SP] = (R7:6, P5:3);
	SP += -12;
	P3.L = _Mem1+28;
	P3.H = _Mem1+28;
.LN3981:
// line 8163
	R0 = [P3];
	R7 = 15;
	R0 = R0 & R7;
	R1 = 5;
	CC = R0 == R1;
	P4.L = _Zadano_off_ON.253;
	P4.H = _Zadano_off_ON.253;
	if CC jump .P452L1 ;

.P452L4:
	R1 = 12;
	CC = R0 == R1;
	if !CC jump .P452L3 ;

.P452L1:
.LN3982:
// line 8165
	R1 = B[P4] (Z);
	CC = R0 == R1;
	if CC jump .P452L3 ;

.P452L5:
.LN3983:
// line 8167
	R1 = 12;
	CC = R0 == R1;
	if !CC jump .P452L3 ;

.P452L11:
	NOP;                                    // Inserted 2 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	P5.L = _VCU_BOTTON;
	P5.H = _VCU_BOTTON;
	R0 = B[P5] (Z);
	CC = R0 == 3;
	if !CC jump .P452L3 (bp);

.P452L8:
.LN3984:
// line 8169
	CALL.X (_GBR_zad);
	R0 = 2;
.LN3985:
// line 8170
	R2 = B[P4 + -50] (Z);
	R0.H = 3;
	R0 = DEPOSIT(R2, R0);
	R0 = R0.b (Z);
.LN3986:
// line 8171
	R1 = 514;
	R0 = DEPOSIT(R0, R1);
.LN3987:
// line 8176
	R1 = 1;
	P1 = 1001;
.LN3988:
// line 8171
	B[P4 + -50] = R0;
.LN3989:
// line 8176
	B[P5 + 426] = R1;
	P1 = P5 + P1;
.LN3990:
// line 8173
	R6 = 0;
.LN3991:
// line 8182
	R0 = -257 /* 2147483391 */;
	R0.H = 32767 /* 2147483391 */;
.LN3992:
// line 8179
	R1 = 4;
.LN3993:
// line 8173
	[P1] = R6;
.LN3994:
// line 8174
	[P1 + 4] = R6;
.LN3995:
// line 8175
	[P1 + 8] = R6;
.LN3996:
// line 8182
	[P1 + -808] = R0;
.LN3997:
// line 8179
	[P1 + -568] = R1;
.LN3998:
// line 8177
	B[P5 + 1033] = R6;
.LN3999:
// line 8178
	B[P5 + 856] = R6;
.LN4000:
// line 8180
	B[P5 + 227] = R6;
.LN4001:
// line 8183
	CALL.X (_Event_SPORT_RUN);
.LN4002:
// line 8184
	R0 = 77;
	CALL.X (_INIT_START_PACHKA);
.LN4003:
// line 8185
	R0 = 0;
	CALL.X (_MU_TEST);
	P1.L = _Alfa;
	P1.H = _Alfa;
.LN4004:
// line 8186
	R0 = [P1];
	R1.L = _Struk0;
	R1.H = _Struk0;
.LN4005:
	CALL.X (_Packet_TNC1);
	R1.L = _StrukREZ;
	R1.H = _StrukREZ;
.LN4006:
// line 8187
	R0 = 0;
	CALL.X (_Packet_TNC1);
.LN4007:
// line 8188
	R0 = 99;
	CALL.X (_Timer_INT2);
.LN4008:
// line 8189
	B[P5 + -31] = R6;
	R0.L = .s.254;
	R0.H = .s.254;
.LN4009:
// line 8190
	CALL.X (_put_str1);

.P452L3:
.LN4010:
// line 8194
	R0 = B[P3] (X);
	R0 = R0 & R7;
	B[P4 + 0] = R0;
.LN4011:
// line 8195
	SP += 12;
	(R7:6, P5:3) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._block_ON.end:
._block_ON.end:
	.global _block_ON;
	.type _block_ON,STT_FUNC;

	.align 2;
_block_OFF_upr:
.LN_block_OFF_upr:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 32 
//  Scratch registers used: {R0-R3,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R4-R7,P4-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":8198
	LINK 0;
	[--SP] = (R7:4, P5:4);
	SP += -12;
	P5.L = _Mem1+29;
	P5.H = _Mem1+29;
	R6 = 1028;
.LN4012:
// line 8249
	R0 = B[P5--] (X);
	R2 = EXTRACT(R0, R6.L) (Z);
.LN4013:
	R1 = 5;
.LN4014:
	CC = R2 == R1;
	P4.L = _Mem_K615+6;
	P4.H = _Mem_K615+6;
	if CC jump .P455L1 ;

.P455L4:
	R0 = 12;
	CC = R2 == R0;
	R1 = 0;
	if !CC jump .P455L3 ;

.P455L1:
.LN4015:
// line 8251
	R0 = B[P4 + 54] (Z);
	CC = R2 == R0;
	CC = ! CC;
	R1 = CC;

.P455L3:
.LN4016:
// line 8255
	R4 = B[P4 + 1] (Z);
	R7 = 1538;
.LN4017:
	R5 = 3;
.LN4018:
	R5 = R4 & R5;
.LN4019:
// line 8256
	R3 = EXTRACT(R4, R7.L) (Z);
.LN4020:
// line 8255
	R4 = B[P4 + 55] (Z);
	R0 = R1;
	CC = R5 == R4;
	R1 += 1;
	IF !CC R0 = R1;
.LN4021:
// line 8256
	R1 = B[P4 + 57] (Z);
	R5 = R0;
	CC = R3 == R1;
	R0 += 1;
.LN4022:
// line 8258
	R4 = 5;
	IF !CC R5 = R0;
.LN4023:
	CC = R2 == R4;
	if CC jump .P455L14 ;

.P455L15:
.LN4024:
// line 8262
	R0 = 12;
	CC = R2 == R0;
	if !CC jump .P455L16 ;

.P455L17:
.LN4025:
// line 8264
	R3 = B[P4] (Z);
	R1 = 1;
	R1 = R3 & R1;
	R4 = 2;
	R0 = PACK(R1.L, R4.L);
	R0 = DEPOSIT(R3, R0);
	R1 = R0.b (Z);
	R2 = 514;
.LN4026:
// line 8265
	R0 = EXTRACT(R1, R2.L) (Z);
	BITSET(R0, 1);
	R2.H = R0.L << 0;
	R0 = DEPOSIT(R1, R2);
	P1.L = _FLAG_BLOCK_TST;
	P1.H = _FLAG_BLOCK_TST;
.LN4027:
// line 8266
	R3 = 0;
.LN4028:
// line 8265
	B[P4] = R0;
.LN4029:
// line 8266
	B[P1] = R3;

.P455L16:
.LN4030:
// line 8270
	CC = R5 <= 0;
	if !CC jump .P455L20 ;

.P455L22:
.LN4031:
// line 8300
	CC = R5 == 0;
	if CC jump .P455L31 ;

.P455L29:
.LN4032:
// line 8302
	P1 = 1;
.LN4033:
// line 8303
	R0 = B[P4 + 1] (X);
.LN4034:
	R1 = 3;
.LN4035:
// line 8302
	R4 = [P5 ++ P1];
.LN4036:
// line 8308
	R2 = EXTRACT(R0, R7.L) (Z);
.LN4037:
// line 8305
	R3 = B[P5++] (X);
.LN4038:
// line 8303
	R1 = R0 & R1;
.LN4039:
// line 8308
	B[P4 + 57] = R2;
.LN4040:
// line 8307
	R5 = B[P5] (X);
.LN4041:
// line 8306
	R0 = EXTRACT(R3, R6.L) (Z);
.LN4042:
// line 8302
	R2 = 15;
.LN4043:
// line 8303
	B[P4 + 55] = R1;
.LN4044:
// line 8304
	R1 = EXTRACT(R4, R6.L) (Z);
.LN4045:
// line 8305
	R7 = R3 & R2;
.LN4046:
// line 8302
	R4 = R4 & R2;
.LN4047:
// line 8307
	R5 = EXTRACT(R5, R6.L) (Z);
.LN4048:
// line 8306
	B[P4 + 54] = R0;
.LN4049:
// line 8304
	B[P4 + 52] = R1;
.LN4050:
// line 8305
	B[P4 + 53] = R7;
.LN4051:
// line 8302
	B[P4 + 51] = R4;
.LN4052:
// line 8307
	B[P4 + 56] = R5;

.P455L31:
.LN4053:
// line 8314
	SP += 12;
	(R7:4, P5:4) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;

.P455L20:
	R0.L = .s.262;
	R0.H = .s.262;
.LN4054:
// line 8273
	CALL.X (_put_str1);
	// -- stall --
.LN4055:
// line 8283
	R0 = B[P4 + 1] (X);
	R0 = EXTRACT(R0, R7.L) (Z);
	R1 = B[P4 + 57] (Z);
	CC = R1 == R0;
	[SP + 48] = R0;
	if CC jump .P455L25 ;

.P455L23:
.LN4056:
// line 8285
	CC = R0 == 1;
	if CC jump .P455L26 ;

.P455L27:
	R0.L = .s0ERROR.264;
	R0.H = .s0ERROR.264;
.LN4057:
// line 8292
	CALL.X (_Transf2);

.P455L25:
.LN4058:
// line 8296
	R0 = 1;
	CALL.X (_K615_work);
	jump.s .P455L22;

.P455L26:
	R0.L = .s0ERROR.263;
	R0.H = .s0ERROR.263;
.LN4059:
// line 8287
	CALL.X (_Transf2);
.LN4060:
// line 8288
	R3 = 2;
	R2 = B[P4] (Z);
	R0 = 1;
	R0 = R2 & R0;
	R1 = PACK(R0.L, R3.L);
	R0 = DEPOSIT(R2, R1);
	R1 = R0.b (Z);
	R4 = 514;
.LN4061:
// line 8289
	R0 = EXTRACT(R1, R4.L) (Z);
	BITSET(R0, 1);
	R4 = PACK(R0.L, R4.L);
	R0 = DEPOSIT(R1, R4);
	B[P4] = R0;
	jump.s .P455L25;

.P455L14:
.LN4062:
// line 8260
	R1 = B[P4] (Z);
	R0 = R1;
	BITSET(R1, 1);
	R4 = 2;
	R3 = PACK(R1.L, R4.L);
	R0 = DEPOSIT(R0, R3);
	R1 = R0.b (Z);
	R2 = 514;
.LN4063:
// line 8261
	R0 = EXTRACT(R1, R2.L) (Z);
	BITCLR(R0, 1);
	R2.H = R0.L << 0;
	R0 = DEPOSIT(R1, R2);
	B[P4] = R0;
	jump.s .P455L16;
.LN._block_OFF_upr.end:
._block_OFF_upr.end:
	.global _block_OFF_upr;
	.type _block_OFF_upr,STT_FUNC;

	.align 2;
_block_upr:
.LN_block_upr:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 40 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R4-R7,P3-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":8317
	LINK 4;
	[--SP] = (R7:4, P5:3);
	SP += -12;
	P4.L = _REZERV_M;
	P4.H = _REZERV_M;
	R7 = R0;
.LN4064:
// line 8344
	R0 = B[P4 + 703] (Z);
	R0 <<= 30;
	CC = AZ;
	P5.L = _Mem1+28;
	P5.H = _Mem1+28;
	if !CC jump .P460L3 ;

.P460L1:
.LN4065:
	R1 = 1028;
	R2 = B[P5 + 1] (Z);
	R0 = R1;
	R0.H = 12;
	R0 = DEPOSIT(R2, R0);
	B[P5 + 1] = R0;

.P460L3:
.LN4066:
// line 8346
	R0 = B[P4 + 264] (Z);
	CC = R0 == 1;
	if !CC jump .P460L6 ;

.P460L8:
	R0 = B[P4 + 212] (Z);
	CC = R0 == 0;
	if !CC jump .P460L6 ;

.P460L7:
	R0 = B[P5 + 2] (X);
	R1 = 1028;
	R0 = EXTRACT(R0, R1.L) (Z);
	R1 = 12;
	CC = R0 == R1;
	if !CC jump .P460L6 (bp);

.P460L4:
.LN4067:
// line 8348
	R6 = 0;
	B[P4 + 46] = R6;
.LN4068:
// line 8349
	R0 = 119;
	CALL.X (_RZV_proir);
.LN4069:
// line 8351
	B[P4 + 264] = R6;
.LN4070:
// line 8352
	R0 = 1;
	B[P4 + 212] = R0;
	R0.L = .snewEve.275;
	R0.H = .snewEve.275;
.LN4071:
// line 8353
	CALL.X (_put_str1);
.LN4072:
// line 8358
	R0 = 1;
	CALL.X (_K615_work);

.P460L6:
.LN4073:
// line 8361
	R0 = B[P4] (Z);
	CC = R0 == 0;
	P3.L = _Mem_K615+6;
	P3.H = _Mem_K615+6;
	if !CC jump .P460L14 ;

.P460L15:
	R0 = B[P3 + 0] (Z);
	R0 <<= 24;
	CC = BITTST(R0, 30);
	if !CC jump .P460L14 (bp);

.P460L12:
	P1.L = _AVARIYA_flag;
	P1.H = _AVARIYA_flag;
.LN4074:
	R0 = 999;
	[P1] = R0;
	R0.L = .sREZERV.276;
	R0.H = .sREZERV.276;
.LN4075:
	CALL.X (_put_str1);

.P460L14:
.LN4076:
// line 8363
	R0 = B[P4 + 1014] (Z);
	CC = R0 == 1;
	if CC jump .P460L16 (bp);

.P460L210:
	jump.s .P460L17;

.P460L16:
.LN4077:
	R2 = B[P5 + 1] (Z);
	R0 = 4;
	R0.H = 5;
	R0 = DEPOSIT(R2, R0);
.LN4078:
	R3 = 3;
.LN4079:
	B[P5 + 1] = R0;
.LN4080:
	B[P4 + 1014] = R3;

.P460L18:
.LN4081:
// line 8364
	R0 = B[P4 + 1015] (Z);
	CC = R0 == 1;
	if CC jump .P460L22 (bp);

.P460L211:
	jump.s .P460L23;

.P460L22:
.LN4082:
	R1 = 1028;
	R2 = B[P5] (Z);
	R0 = R1;
	R0.H = 5;
	R0 = DEPOSIT(R2, R0);
.LN4083:
	R3 = 3;
.LN4084:
	B[P5] = R0;
.LN4085:
	B[P4 + 1015] = R3;

.P460L24:
.LN4086:
// line 8365
	R0 = B[P4 + 1012] (Z);
	CC = R0 == 1;
	if CC jump .P460L28 (bp);

.P460L212:
	jump.s .P460L29;

.P460L28:
.LN4087:
	R1 = 1028;
	R2 = B[P5 + 1] (Z);
	R0 = R1;
	R0.H = 5;
	R0 = DEPOSIT(R2, R0);
.LN4088:
	R3 = 3;
.LN4089:
	B[P5 + 1] = R0;
.LN4090:
	B[P4 + 1012] = R3;

.P460L30:
.LN4091:
// line 8366
	R0 = B[P4 + 1016] (Z);
	CC = R0 == 1;
	if CC jump .P460L34 (bp);

.P460L213:
	jump.s .P460L35;

.P460L34:
.LN4092:
	R2 = B[P5] (Z);
	R0 = 4;
	R0.H = 5;
	R0 = DEPOSIT(R2, R0);
.LN4093:
	R3 = 3;
.LN4094:
	B[P5] = R0;
.LN4095:
	B[P4 + 1016] = R3;

.P460L36:
.LN4096:
// line 8368
	CC = R7 == 1;
	R0 = CC;
.LN4097:
// line 8374
	R1 = B[P3] (Z);
	R4 = 1;
	R1 = R1 & R4;
	CC = R1 == 1;
	R6 = R0;
	if !CC jump .P460L45 ;

.P460L43:
.LN4098:
// line 8376
	R2 = [P5];
.LN4099:
	R1 = 15;
.LN4100:
	R1 = R2 & R1;
	R7 = 5;
	CC = R1 == R7;
	if CC jump .P460L46 ;

.P460L49:
	R3 = 12;
	CC = R1 == R3;
	if !CC jump .P460L48 ;

.P460L46:
.LN4101:
// line 8378
	R3 = B[P3 + 58] (Z);
	CC = R1 == R3;
	R6 = R0;
	R0 += 1;
	IF !CC R6 = R0;

.P460L48:
.LN4102:
// line 8389
	CC = R1 == R7;
	if !CC jump .P460L57 ;

.P460L56:
.LN4103:
	R1 = B[P3 + 1] (Z);
	R0 = R1;
	BITSET(R1, 1);
	R5 = 2;
	R3 = PACK(R1.L, R5.L);
	R0 = DEPOSIT(R0, R3);
	B[P3 + 1] = R0;

.P460L58:
	R5 = 1028;
.LN4104:
// line 8390
	R2 = EXTRACT(R2, R5.L) (Z);
	CC = R2 == R7;
	if !CC jump .P460L63 ;

.P460L62:
.LN4105:
	R1 = B[P3] (Z);
	R0 = 1026;
	R3 = EXTRACT(R1, R0.L) (Z);
	BITSET(R3, 1);
	R0.H = R3.L << 0;
	R0 = DEPOSIT(R1, R0);
	B[P3] = R0;

.P460L64:
.LN4106:
// line 8391
	R0 = B[P5 + 1] (Z);
.LN4107:
	R1 = 15;
.LN4108:
	R0 = R0 & R1;
	CC = R0 == R7;
	if !CC jump .P460L69 ;

.P460L68:
.LN4109:
	R1 = B[P3] (Z);
	R0 = 1538;
	R3 = EXTRACT(R1, R0.L) (Z);
	BITSET(R3, 1);
	R0.H = R3.L << 0;
	R0 = DEPOSIT(R1, R0);
	B[P3] = R0;

.P460L70:
.LN4110:
// line 8393
	CC = R2 == R7;
	if CC jump .P460L74 ;

.P460L77:
	R0 = 12;
	CC = R2 == R0;
	if !CC jump .P460L76 ;

.P460L74:
.LN4111:
// line 8395
	R0 = B[P3 + 59] (Z);
	CC = R2 == R0;
	if CC jump .P460L76 ;

.P460L78:
.LN4112:
// line 8399
	CC = R2 == R7;
.LN4113:
// line 8397
	R6 += 1;
.LN4114:
// line 8399
	if CC jump .P460L81 ;

.P460L76:
.LN4115:
// line 8407
	R0 = B[P5 + 1] (Z);
.LN4116:
	R1 = 15;
.LN4117:
	R0 = R0 & R1;
	CC = R0 == R7;
	if CC jump .P460L87 ;

.P460L90:
	R1 = 12;
	CC = R0 == R1;
	if !CC jump .P460L45 ;

.P460L87:
.LN4118:
// line 8409
	R1 = B[P3 + 60] (Z);
	CC = R0 == R1;
	if CC jump .P460L45 ;

.P460L91:
.LN4119:
// line 8412
	CC = R0 == R7;
.LN4120:
// line 8411
	R6 += 1;
.LN4121:
// line 8412
	if !CC jump .P460L45 ;

.P460L94:
.LN4122:
// line 8414
	R0 = B[P5 + 2] (X);
	R0 = EXTRACT(R0, R5.L) (Z);
	R1 = 12;
	CC = R0 == R1;
	if !CC jump .P460L45 (bp);

.P460L97:
.LN4123:
	R0 = 119;
	CALL.X (_RZV_proir);

.P460L45:
.LN4124:
// line 8424
	R0 = B[P5 + 1] (X);
	R5 = 1028;
	R1 = EXTRACT(R0, R5.L) (Z);
.LN4125:
	R2 = 5;
.LN4126:
	CC = R1 == R2;
	if CC jump .P460L100 ;

.P460L103:
	R7 = R6;
	R0 = 12;
	CC = R1 == R0;
	if !CC jump .P460L102 ;

.P460L100:
.LN4127:
// line 8426
	R0 = B[P3 + 61] (Z);
	CC = R1 == R0;
	R7 = R6;
	R6 += 1;
	IF !CC R7 = R6;

.P460L102:
.LN4128:
// line 8429
	R0 = B[P5 + 2] (X);
	R1 = EXTRACT(R0, R5.L) (Z);
	CC = R1 == R2;
	if CC jump .P460L107 ;

.P460L110:
	R0 = 12;
	CC = R1 == R0;
	if !CC jump .P460L109 ;

.P460L107:
.LN4129:
// line 8431
	R0 = B[P3 + 63] (Z);
	CC = R1 == R0;
	if CC jump .P460L109 ;

.P460L111:
.LN4130:
// line 8434
	R0 = 5;
.LN4131:
	CC = R1 == R0;
.LN4132:
// line 8433
	R7 += 1;
.LN4133:
// line 8434
	if !CC jump .P460L116 ;

.P460L117:
	R0 = B[P4 + 45] (Z);
	CC = R0 == 1;
	if CC jump .P460L116 (bp);

.P460L114:
.LN4134:
	R0 = 99;
	CALL.X (_RZV_proir);

.P460L116:
.LN4135:
// line 8435
	R0 = B[P5 + 2] (X);
	R0 = EXTRACT(R0, R5.L) (Z);
	R1 = 12;
	CC = R0 == R1;
	if !CC jump .P460L109 (bp);

.P460L118:
.LN4136:
	R0 = 119;
	CALL.X (_RZV_proir);

.P460L109:
	[SP + 60] = P3;
	P3 += 1;
.LN4137:
// line 8439
	R1 = 3;
.LN4138:
	R3 = B[P3++] (Z);
	R0 = R7;
	R6 = 1538;
	R1 = R3 & R1;
.LN4139:
// line 8440
	R3 = EXTRACT(R3, R6.L) (Z);
	[SP + 56] = R3;
.LN4140:
// line 8439
	R3 = B[P3 + 60] (Z);
	CC = R1 == R3;
	R7 += 1;
	IF !CC R0 = R7;
.LN4141:
// line 8440
	R7 = B[P3 + 62] (Z);
	R1 = R0;
	R3 = [SP + 56];
	CC = R3 == R7;
	R1 += 1;
.LN4142:
// line 8441
	P1 = -2;
	IF !CC R0 = R1;
	R3 = [P3 ++ P1];
.LN4143:
	R1 = 3;
.LN4144:
	R3 = R3 & R1;
	R1 = B[P3 + 65] (Z);
.LN4145:
// line 8447
	R2 = B[P5 + 1] (X);
	R7 = R0;
.LN4146:
// line 8441
	CC = R3 == R1;
	R0 += 1;
.LN4147:
// line 8447
	R2 = EXTRACT(R2, R5.L) (Z);
.LN4148:
	R1 = 5;
	IF !CC R7 = R0;
.LN4149:
	CC = R2 == R1;
	if CC jump .P460L130 ;

.P460L131:
.LN4150:
// line 8452
	R0 = 12;
	CC = R2 == R0;
	if !CC jump .P460L132 ;

.P460L136:
.LN4151:
// line 8454
	R3 = B[P3] (Z);
	R2 = R3 & R4;
	R0.H = R2.L << 0;
	R2 = 2;
	R0.L = R2.L << 0;
	R0 = DEPOSIT(R3, R0);
	R2 = R0.b (Z);
	R1 = 514;
.LN4152:
// line 8455
	R0 = EXTRACT(R2, R1.L) (Z);
	BITSET(R0, 1);
	R1.H = R0.L << 0;
	R0 = DEPOSIT(R2, R1);
.LN4153:
// line 8456
	R3 = 0;
.LN4154:
// line 8455
	B[P3] = R0;
.LN4155:
// line 8456
	B[P4 + 1017] = R3;

.P460L132:
.LN4156:
// line 8460
	R0 = B[P3 + 1] (Z);
	R1 = 2;
	R0 = R0 & R1;
	CC = R0 == 2;
	if !CC jump .P460L141 ;

.P460L142:
	R0 = B[P4 + 916] (Z);
	CC = R0 == 0;
	if !CC jump .P460L141 (bp);

.P460L139:
.LN4157:
// line 8462
	R0 = 1;
	CALL.X (_OFF_section);
.LN4158:
// line 8464
	R3 = 1026;
	R0 = B[P3] (Z);
	R0 = DEPOSIT(R0, R3);
.LN4159:
// line 8463
	R1 = 2;
	R2 = B[P3 + 1] (Z);
.LN4160:
// line 8464
	R3 = R0.b (Z);
	R1.H = 3;
.LN4161:
// line 8465
	R6 = 1538;
.LN4162:
// line 8463
	R1 = DEPOSIT(R2, R1);
.LN4163:
// line 8465
	R3 = DEPOSIT(R3, R6);
.LN4164:
// line 8468
	B[P4 + 916] = R4;
.LN4165:
// line 8463
	B[P3 + 1] = R1;
.LN4166:
// line 8465
	B[P3] = R3;
	R0.L = .s.277;
	R0.H = .s.277;
.LN4167:
// line 8469
	CALL.X (_put_str1);

.P460L141:
.LN4168:
// line 8472
	R7 = R7.b (Z);
	CC = R7 <= 0;
	if !CC jump .P460L143 ;

.P460L145:
.LN4169:
// line 8503
	CC = R7 == 0;
	if CC jump .P460L154 ;

.P460L152:
	P1 = P5;
.LN4170:
// line 8505
	P2 = 1;
	R7 = 514;
	R2 = [P1 ++ P2];
.LN4171:
// line 8508
	R1 = B[P1++] (X);
	P0 = [SP + 60];
.LN4172:
// line 8510
	R0 = B[P1] (X);
	R0 = EXTRACT(R0, R5.L) (Z);
	[SP + 56] = R0;
.LN4173:
// line 8505
	R0 = 15;
	R4 = R2 & R0;
	P0 += 58;
	B[P0++] = R4;
.LN4174:
// line 8507
	R2 = EXTRACT(R2, R5.L) (Z);
.LN4175:
// line 8508
	R4 = R1 & R0;
.LN4176:
// line 8509
	R1 = EXTRACT(R1, R5.L) (Z);
	[SP + 40] = R1;
.LN4177:
// line 8506
	R0 = B[P0 + -58] (X);
.LN4178:
	R1 = 3;
.LN4179:
// line 8511
	R6 = EXTRACT(R0, R6.L) (Z);
.LN4180:
// line 8506
	R0 = R0 & R1;
	B[P0 + 3] = R0;
.LN4181:
// line 8507
	B[P0++] = R2;
.LN4182:
// line 8508
	B[P0++] = R4;
.LN4183:
// line 8509
	R2 = [SP + 40];
	B[P0++] = R2;
.LN4184:
// line 8512
	R0 = [P0 + -60];
	R3 = 1026;
	R1 = R0 & R1;
.LN4185:
// line 8513
	R2 = EXTRACT(R0, R7.L) (Z);
.LN4186:
// line 8510
	R4 = [SP + 56];
.LN4187:
// line 8514
	R3 = EXTRACT(R0, R3.L) (Z);
.LN4188:
// line 8511
	B[P0 + 2] = R6;
.LN4189:
// line 8512
	B[P0 + 3] = R1;
.LN4190:
// line 8510
	B[P0 + 1] = R4;
.LN4191:
// line 8513
	B[P0 + 4] = R2;
.LN4192:
// line 8514
	B[P0 + 5] = R3;

.P460L154:
.LN4193:
// line 8517
	R0 = B[P5 + 2] (X);
	R0 = EXTRACT(R0, R5.L) (Z);
	B[P4 + 702] = R0;
.LN4194:
// line 8521
	SP += 12;
	(R7:4, P5:3) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;

.P460L143:
	R0.L = .s.278;
	R0.H = .s.278;
.LN4195:
// line 8476
	CALL.X (_put_str1);
	// -- stall --
.LN4196:
// line 8486
	R0 = B[P3 + 1] (X);
	R0 = EXTRACT(R0, R6.L) (Z);
	R1 = B[P3 + 64] (Z);
	CC = R1 == R0;
	if CC jump .P460L148 ;

.P460L146:
.LN4197:
// line 8488
	CC = R0 == 1;
	if !CC jump .P460L150 ;

.P460L149:
	R0.L = .s0ERROR.263;
	R0.H = .s0ERROR.263;
.LN4198:
// line 8490
	CALL.X (_Transf2);
	jump.s .P460L148;

.P460L150:
	R0.L = .s0ERROR.264;
	R0.H = .s0ERROR.264;
.LN4199:
// line 8493
	CALL.X (_Transf2);

.P460L148:
.LN4200:
// line 8499
	R0 = 1;
	CALL.X (_K615_work);
	jump.s .P460L145;

.P460L130:
.LN4201:
// line 8449
	R1 = B[P3] (Z);
	R0 = R1;
	BITSET(R1, 1);
	R3.H = R1.L << 0;
	R1 = 2;
	R3.L = R1.L << 0;
	R0 = DEPOSIT(R0, R3);
	R1 = R0.b (Z);
	R2 = 514;
.LN4202:
// line 8450
	R0 = EXTRACT(R1, R2.L) (Z);
	BITCLR(R0, 1);
	R2.H = R0.L << 0;
	R0 = DEPOSIT(R1, R2);
.LN4203:
// line 8451
	R1 = R0 & R4;
	CC = R1 == 1;
.LN4204:
// line 8450
	B[P3] = R0;
.LN4205:
// line 8451
	if !CC jump .P460L132 ;

.P460L133:
.LN4206:
	B[P4 + 1017] = R4;
	jump.s .P460L132;

.P460L81:
.LN4207:
// line 8401
	CALL.X (_GBR_zad);
.LN4208:
// line 8402
	R0 = B[P5 + 2] (X);
	R0 = EXTRACT(R0, R5.L) (Z);
	R1 = 12;
	CC = R0 == R1;
	if !CC jump .P460L76 (bp);

.P460L84:
.LN4209:
	R0 = 119;
	CALL.X (_RZV_proir);
	jump.s .P460L76;

.P460L69:
.LN4210:
// line 8391
	R1 = 12;
	CC = R0 == R1;
	if !CC jump .P460L70 ;

.P460L71:
.LN4211:
	R1 = B[P3] (Z);
	R0 = 1538;
	R3 = EXTRACT(R1, R0.L) (Z);
	BITCLR(R3, 1);
	R0.H = R3.L << 0;
	R0 = DEPOSIT(R1, R0);
	B[P3] = R0;
	jump.s .P460L70;

.P460L63:
.LN4212:
// line 8390
	R0 = 12;
	CC = R2 == R0;
	if !CC jump .P460L64 ;

.P460L65:
.LN4213:
	R1 = B[P3] (Z);
	R0 = 1026;
	R3 = EXTRACT(R1, R0.L) (Z);
	BITCLR(R3, 1);
	R0.H = R3.L << 0;
	R0 = DEPOSIT(R1, R0);
	B[P3] = R0;
	jump.s .P460L64;

.P460L57:
.LN4214:
// line 8389
	R0 = 12;
	CC = R1 == R0;
	if !CC jump .P460L58 ;

.P460L59:
.LN4215:
	R3 = B[P3 + 1] (Z);
	R1 = R3 & R4;
	R5 = 2;
	R0 = PACK(R1.L, R5.L);
	R0 = DEPOSIT(R3, R0);
	B[P3 + 1] = R0;
	jump.s .P460L58;

.P460L35:
.LN4216:
// line 8366
	CC = R0 == 0;
	if !CC jump .P460L36 ;

.P460L37:
.LN4217:
	R3 = B[P5] (Z);
	R0 = 4;
	R0.H = 12;
	R0 = DEPOSIT(R3, R0);
.LN4218:
	R2 = 3;
.LN4219:
	B[P5] = R0;
.LN4220:
	B[P4 + 1016] = R2;
	jump.s .P460L36;

.P460L29:
.LN4221:
// line 8365
	CC = R0 == 0;
	if CC jump .P460L31 (bp);

.P460L214:
	jump.s .P460L30;

.P460L31:
.LN4222:
	R1 = 1028;
	R3 = B[P5 + 1] (Z);
	R0 = R1;
	R0.H = 12;
	R0 = DEPOSIT(R3, R0);
.LN4223:
	R2 = 3;
.LN4224:
	B[P5 + 1] = R0;
.LN4225:
	B[P4 + 1012] = R2;
	jump.s .P460L30;

.P460L23:
.LN4226:
// line 8364
	CC = R0 == 0;
	if CC jump .P460L25 (bp);

.P460L215:
	jump.s .P460L24;

.P460L25:
.LN4227:
	R1 = 1028;
	R3 = B[P5] (Z);
	R0 = R1;
	R0.H = 12;
	R0 = DEPOSIT(R3, R0);
.LN4228:
	R2 = 3;
.LN4229:
	B[P5] = R0;
.LN4230:
	B[P4 + 1015] = R2;
	jump.s .P460L24;

.P460L17:
.LN4231:
// line 8363
	CC = R0 == 0;
	if CC jump .P460L19 (bp);

.P460L216:
	jump.s .P460L18;

.P460L19:
.LN4232:
	R3 = B[P5 + 1] (Z);
	R0 = 4;
	R0.H = 12;
	R0 = DEPOSIT(R3, R0);
.LN4233:
	R2 = 3;
.LN4234:
	B[P5 + 1] = R0;
.LN4235:
	B[P4 + 1014] = R2;
	jump.s .P460L18;
.LN._block_upr.end:
._block_upr.end:
	.global _block_upr;
	.type _block_upr,STT_FUNC;

	.align 2;
_SYNC_obmen:
.LN_SYNC_obmen:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 16 
//  Scratch registers used: {R0-R1,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R7,P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//Inlined in _SYNC_obmen:
//  ..\BFcom\main.c:8544:8'_ssync
//-------------------------------------------------------------------
// line "..\BFcom\main.c":8524
	LINK 0;
	[--SP] = (R7:7, P5:5);
	SP += -12;
	P5.L = _FLAG_RS485_OBMEN;
	P5.H = _FLAG_RS485_OBMEN;
.LN4236:
// line 8528
	R0 = B[P5] (Z);
	CC = R0 == 1;
	if !CC jump .P461L3 ;

.P461L1:
.LN4237:
// line 8530
	R0 = 0;
	[P5 + 396] = R0;
.LN4238:
// line 8531
	B[P5 + 400] = R0;
.LN4239:
// line 8533
	R0 = B[P5 + 98] (Z);
	CC = R0 == 0;
	if !CC jump .P461L6 (bp);

.P461L4:
.LN4240:
	CALL.X (_control_K615);

.P461L6:
.LN4241:
// line 8534
	R0 = B[P5 + 98] (Z);
	CC = R0 == 1;
	if !CC jump .P461L9 (bp);

.P461L7:
.LN4242:
	CALL.X (_K615_out);
.LN4243:
	R0 = 3;
	B[P5 + 98] = R0;

.P461L9:
	P1 = P5;
.LN4244:
// line 8535
	R0 = 2;
	B[P1++] = R0;
.LN4245:
// line 8536
	R0 = 1;
	B[P1] = R0;

.P461L3:
.LN4246:
// line 8539
	R0 = B[P5] (Z);
	CC = R0 == 2;
	if !CC jump .P461L12 ;

.P461L13:
	R0 = [P5 + 396];
	CC = R0 <= 4 (IU);
	if CC jump .P461L12 (bp);

.P461L26:
.LN4247:
// line 8541
	R0 = 0;
	P1.L = _rx_wr_index1;
	P1.H = _rx_wr_index1;
	[P1] = R0;
	P1.L = _rx_rd_index1;
	P1.H = _rx_rd_index1;
.LN4248:
// line 8542
	[P1] = R0;
	P1.L = _rx_counter1;
	P1.H = _rx_counter1;
.LN4249:
// line 8543
	[P1] = R0;
.LN4250:
// line 8544
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN4251:
// line 8545
	R0 = 606;
	CALL.X (_read_str1);
.LN4252:
// line 8546
	R0 = 3;
	B[P5 + 0] = R0;

.P461L12:
.LN4253:
// line 8550
	R0 = B[P5] (Z);
	CC = R0 == 3;
	if !CC jump .P461L19 ;

.P461L20:
	R0 = [P5 + 396];
	R1 = 9;
	CC = R1 < R0 (IU);
	if !CC jump .P461L19 (bp);

.P461L17:
.LN4254:
// line 8552
	R0 = 606;
	CALL.X (_buff_SPORT);
.LN4255:
// line 8553
	R0 = 0;
.LN4256:
// line 8554
	R1 = 1;
	B[P5 + 161] = R1;
.LN4257:
// line 8553
	B[P5] = R0;

.P461L19:
.LN4258:
// line 8560
	R0 = [P5 + 396];
	R1 = 10;
	CC = R1 < R0 (IU);
	if !CC jump .P461L23 ;

.P461L25:
	R7 = [P5 + 1164];
	CC = R7 == 0;
	if !CC jump .P461L23 ;

.P461L24:
	R0 = B[P5 + 1050] (Z);
	CC = R0 == 1;
	if !CC jump .P461L23 (bp);

.P461L21:
.LN4259:
	CALL.X (_control_TNC_TNO);
.LN4260:
	B[P5 + 1050] = R7;

.P461L23:
.LN4261:
// line 8562
	CALL.X (_UART_DMA_TX);
.LN4262:
// line 8563
	SP += 12;
	(R7:7, P5:5) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._SYNC_obmen.end:
._SYNC_obmen.end:
	.global _SYNC_obmen;
	.type _SYNC_obmen,STT_FUNC;

	.align 2;
_WORK_REGIM:
.LN_WORK_REGIM:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 24 
//  Scratch registers used: {R0-R2,P1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R6-R7,P4-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":8616
	LINK 0;
	[--SP] = (R7:6, P5:4);
	SP += -12;
	P4.L = _TIMER_UDP_LS_DOWN;
	P4.H = _TIMER_UDP_LS_DOWN;
.LN4263:
// line 8617
	R0 = 119;
	B[P4 + 69] = R0;
.LN4264:
// line 8618
	CALL.X (_func_event_k615);
.LN4265:
// line 8619
	CALL.X (_Event_K615);
.LN4266:
// line 8620
	R0 = B[P4 + 189] (Z);
.LN4267:
	CALL.X (_INF_K607);
.LN4268:
// line 8622
	R0 = [P4];
.LN4269:
	CALL.X (_UDP_TIMEOUT_TST);
.LN4270:
// line 8625
	R0 = B[P4 + 470] (Z);
	CC = R0 == 1;
	if !CC jump .P462L3 (bp);

.P462L1:
.LN4271:
	CALL.X (_SYNC_obmen);

.P462L3:
	P5.L = _Mem_K615+7;
	P5.H = _Mem_K615+7;
.LN4272:
// line 8626
	R0 = B[P5] (Z);
	R6 = 1;
	R0 = R0 & R6;
	CC = R0 == 1;
	if CC jump .P462L4 ;

.P462L6:
.LN4273:
// line 8654
	R0 = B[P5] (Z);
	CC = !BITTST(R0, 0);
	if !CC jump .P462L20 ;

.P462L18:
.LN4274:
// line 8656
	NOP;                                    // Inserted 2 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	P1.L = _TIME_WORK_CONTROL;
	P1.H = _TIME_WORK_CONTROL;
	R0 = [P1];
	R1 = 4100;
	CC = R1 < R0 (IU);
	if !CC jump .P462L23 (bp);

.P462L21:
.LN4275:
	CALL.X (_Avariya_test);
.LN4276:
	CALL.X (_RESTART_SYNC);

.P462L23:
.LN4277:
// line 8658
	R0 = B[P4 + 726] (Z);
	CC = R0 == 0;
	if !CC jump .P462L26 ;

.P462L24:
	P1.L = _flag_event_sinhron;
	P1.H = _flag_event_sinhron;
.LN4278:
	R0 = 0;
	B[P1] = R0;

.P462L26:
.LN4279:
// line 8660
	R0 = B[P4 + 726] (Z);
	CC = R0 == 1;
	if !CC jump .P462L29 (bp);

.P462L27:
.LN4280:
	CALL.X (_Synhron_section);

.P462L29:
.LN4281:
// line 8662
	R0 = B[P4 + 726] (Z);
	CC = R0 == 1;
	P5.L = _Interval_TNC;
	P5.H = _Interval_TNC;
	if CC jump .P462L30 ;

.P462L32:
.LN4282:
// line 8684
	R0 = B[P4 + 852] (Z);
	CC = R0 == 1;
	if !CC jump .P462L42 ;

.P462L43:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R0 = [P5];
	R1 = [P4 + 252];
	CC = R1 < R0 (IU);
	if !CC jump .P462L42 (bp);

.P462L40:
.LN4283:
	CALL.X (_Packet_FINDER);
.LN4284:
	R0 = 0;
	B[P4 + 852] = R0;

.P462L42:
.LN4285:
// line 8687
	R0 = B[P4 + -193] (Z);
	CC = R0 == 0;
	if !CC jump .P462L46 ;

.P462L47:
	R0 = B[P4 + -188] (Z);
	CC = R0 == 1;
	if !CC jump .P462L46 (bp);

.P462L44:
.LN4286:
	R0 = 0;
	CALL.X (_block_upr);
	R0 = 0;
.LN4287:
	B[P4 + -188] = R0;

.P462L46:
.LN4288:
// line 8689
	R0 = B[P4 + -193] (Z);
	CC = R0 == 0;
	if !CC jump .P462L20 (bp);

.P462L48:
	P1.L = _AVARIYA_flag;
	P1.H = _AVARIYA_flag;
.LN4289:
	R0 = [P1];
.LN4290:
	CALL.X (_LED_ERROR);

.P462L20:
.LN4291:
// line 8691
	SP += 12;
	(R7:6, P5:4) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;

.P462L30:
.LN4292:
// line 8666
	P1 = 1572 /* -4192732 */;
	P1.H = -64 /* -4192732 */;
	R0 = [P1];
	P1.L = _timer_TNC2;
	P1.H = _timer_TNC2;
	[P1] = R0;
.LN4293:
// line 8669
	R0 = [P1];
	P1.L = _timer_TNC1;
	P1.H = _timer_TNC1;
	R1 = [P1];
	R0 = R0 - R1;
	[P5] = R0;
.LN4294:
// line 8673
	R0 = [P5];
	R1 = [P4 + 176];
	R2 = 250;
	R1 = R1 + R2;
	CC = R1 < R0 (IU);
	if !CC jump .P462L35 (bp);

.P462L33:
.LN4295:
	R0 = [P4 + 52];
	R0 += 1;
	[P4 + 52] = R0;
.LN4296:
	CALL.X (_Avariya_test);

.P462L35:
.LN4297:
// line 8675
	NOP;                                    // Inserted to fix anomaly w_05000245_with_boundaries. 
	R0 = [P5];
	R1 = 400;
	CC = R1 < R0 (IU);
	if !CC jump .P462L32 ;

.P462L39:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R0 = [P5];
	R1 = [P4 + 252];
	CC = R0 < R1 (IU);
	if !CC jump .P462L32 (bp);

.P462L36:
.LN4298:
// line 8678
	CALL.X (_Ethernet_OBMEN);
.LN4299:
// line 8679
	R0 = [P4 + 84];
	R0 += 1;
	[P4 + 84] = R0;
	jump.s .P462L32;

.P462L4:
.LN4300:
// line 8628
	CALL.X (_Event_K615);
.LN4301:
// line 8629
	CALL.X (_Ethernet_OBMEN);
.LN4302:
// line 8630
	R7 = 0;
	B[P4 + 825] = R7;
.LN4303:
// line 8631
	R0 = 1;
	CALL.X (_block_ON);
.LN4304:
// line 8634
	R0 = [P4 + -4];
.LN4305:
// line 8632
	R1 = 10;
.LN4306:
// line 8634
	CC = R1 < R0 (IU);
.LN4307:
// line 8632
	[P4 + -272] = R1;
.LN4308:
// line 8634
	if !CC jump .P462L9 ;

.P462L10:
	R1 = B[P4 + -190] (Z);
	CC = R1 == 0;
	if !CC jump .P462L9 ;

.P462L7:
.LN4309:
// line 8636
	B[P4 + -190] = R6;

.P462L9:
.LN4310:
// line 8641
	R1 = 500;
	CC = R1 < R0 (IU);
	if !CC jump .P462L6 ;

.P462L14:
	R0 = B[P4 + -190] (Z);
	CC = R0 == 1;
	if !CC jump .P462L6 (bp);

.P462L11:
.LN4311:
// line 8643
	B[P4 + -190] = R7;
.LN4312:
// line 8646
	R0 = 1;
	CALL.X (_K615_work);
.LN4313:
// line 8647
	R0 = B[P4 + -194] (Z);
	CC = R0 == 1;
	if !CC jump .P462L17 (bp);

.P462L15:
.LN4314:
	CALL.X (_K615_out);
.LN4315:
	B[P4 + -194] = R7;

.P462L17:
.LN4316:
// line 8648
	[P4 + -4] = R7;
	jump.s .P462L6;
.LN._WORK_REGIM.end:
._WORK_REGIM.end:
	.global _WORK_REGIM;
	.type _WORK_REGIM,STT_FUNC;

	.align 2;
_FAZA:
.LN_FAZA:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 16 
//  Scratch registers used: {R0-R1,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R7,P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":8699
	LINK 0;
	[--SP] = (R7:7, P5:5);
	R7.L = .s.6;
	R7.H = .s.6;
	SP += -12;
.LN4317:
// line 8700
	R0 = R7;
	CALL.X (_put_str1);
	P5.L = _Sintez1_ERROR;
	P5.H = _Sintez1_ERROR;
.LN4318:
// line 8701
	R0 = B[P5++] (Z);
	CC = R0 == 0;
	R0 = 1812;
	R1 = R7 + R0;
	R0.L = .sFFAIL.280;
	R0.H = .sFFAIL.280;
	IF CC R0 = R1;
.LN4319:
	CALL.X (_put_str1);
.LN4320:
// line 8703
	R0 = B[P5] (Z);
	CC = R0 == 0;
	R0 = 1828;
	R1 = R7 + R0;
	R0.L = .sFFAIL.282;
	R0.H = .sFFAIL.282;
	IF CC R0 = R1;
.LN4321:
	CALL.X (_put_str1);
.LN4322:
// line 8705
	R0 = R7;
	CALL.X (_put_str1);
.LN4323:
// line 8706
	SP += 12;
	(R7:7, P5:5) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._FAZA.end:
._FAZA.end:
	.global _FAZA;
	.type _FAZA,STT_FUNC;

	.align 2;
_IO:
.LN_IO:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 60 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1,CC,LC0,LT0,LB0}
//  Call preserved registers used: {R4-R7,P3-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//Inlined in _IO:
//  ..\BFcom\main.c:3712:16'_ssync
//  ..\BFcom\main.c:3665:39'_atoi
//  ..\BFcom\main.c:3577:62'_atoi
//  ..\BFcom\main.c:3556:68'_atoi
//  ..\BFcom\main.c:3537:41'_atoi
//  ..\BFcom\main.c:3511:50'_atoi
//  ..\BFcom\main.c:3496:61'_atoi
//  ..\BFcom\main.c:3489:63'_atoi
//  ..\BFcom\main.c:3482:60'_atoi
//  ..\BFcom\main.c:3475:60'_atoi
//  ..\BFcom\main.c:3467:45'_atoi
//  ..\BFcom\main.c:3460:45'_atoi
//  ..\BFcom\main.c:3450:46'_atoi
//  ..\BFcom\main.c:3442:46'_atoi
//  ..\BFcom\main.c:3435:45'_atoi
//  ..\BFcom\main.c:3428:47'_atoi
//  ..\BFcom\main.c:3421:47'_atoi
//  ..\BFcom\main.c:3414:28'_atoi
//  ..\BFcom\main.c:3363:45'_atoi
//  ..\BFcom\main.c:3354:46'_atoi
//  ..\BFcom\main.c:3326:63'_atoi
//  ..\BFcom\main.c:3315:46'_atoi
//  ..\BFcom\main.c:3308:46'_atoi
//  ..\BFcom\main.c:3297:46'_atoi
//  ..\BFcom\main.c:3284:46'_atoi
//  ..\BFcom\main.c:3203:46'_atoi
//  ..\BFcom\main.c:3155:46'_atoi
//  ..\BFcom\main.c:3056:19'_atoi
//  ..\BFcom\main.c:3055:19'_atoi
//  ..\BFcom\main.c:3047:22'_atoi
//-------------------------------------------------------------------
// line "..\BFcom\main.c":2880
	LINK 24;
	[--SP] = (R7:4, P5:3);
	SP += -12;
	P3.L = _lenght;
	P3.H = _lenght;
.LN4324:
// line 2888
	P1 = [P3];
.LN4325:
// line 2880
	[SP + 40] = R0;
	// -- 2 stalls --
.LN4326:
// line 2889
	CC = P1 == 0;
	if !CC jump .P244L3 (bp);

.P244L1:
.LN4327:
	CALL.X (_leng);
	P1 = R0;

.P244L3:
	P0.L = _time_uart;
	P0.H = _time_uart;
	[FP + 16] = P0;
.LN4328:
// line 2890
	R7 = 0;
.LN4329:
// line 2895
	P2 = [FP + 16];
.LN4330:
// line 2890
	[P3] = R7;
.LN4331:
// line 2893
	[P3 + 12] = R7;
.LN4332:
// line 2895
	R2 = 50;
	R1 = [P2];
	P5.L = _DATA_Word2;
	P5.H = _DATA_Word2;
	CC = R2 < R1 (IU);
	[FP + 12] = P5;
	P4.L = _DATA_Word;
	P4.H = _DATA_Word;
	if CC jump .P244L4 ;

.P244L7:
	R0 = W[P3 + 42] (Z);
	R1 = 157;
	CC = R1 < R0 (IU);
	if !CC jump .P244L8 ;

.P244L4:
.LN4333:
// line 2898
	B[P3 + 10] = R7;
.LN4334:
// line 2900
	[P0] = R7;
.LN4335:
// line 2905
	R0 = 1;
.LN4336:
// line 2912
	R1 = 32;
.LN4337:
// line 2901
	[P3 + 4] = R7;
.LN4338:
// line 2902
	B[P3 + 8] = R7;
.LN4339:
// line 2903
	B[P3 + 9] = R7;
.LN4340:
// line 2904
	[P3 + 16] = R7;
.LN4341:
// line 2907
	B[P3 + 32] = R7;
.LN4342:
// line 2908
	B[P3 + 33] = R7;
.LN4343:
// line 2909
	B[P3 + 34] = R7;
.LN4344:
// line 2910
	[P3 + 28] = R7;
.LN4345:
// line 2911
	[P3 + 36] = R7;
.LN4346:
// line 2914
	B[P3 + 44] = R7;
.LN4347:
// line 2915
	B[P3 + 40] = R7;
.LN4348:
// line 2905
	[P3 + 20] = R0;
.LN4349:
// line 2906
	[P3 + 24] = R0;
.LN4350:
// line 2912
	B[P4 + 0] = R1;
.LN4351:
// line 2913
	B[P5] = R1;
.LN4352:
// line 2916
	W[P3 + 42] = R7;

.P244L8:
	P2.L = _InOut;
	P2.H = _InOut;
	[FP + 8] = P2;
	P0 = [FP + 8];
.LN4353:
// line 2919
	CC = P1 == 0;
	[SP + 60] = P0;
	P5.L = _Word;
	P5.H = _Word;
	if CC jump .P244L9 ;

.P244L360:
.LN4354:
// line 2924
	R5 = 1;
.LN4355:
// line 2938
	R6 = 32;
.LN4356:
// line 2967
	R3 = 200;
	LOOP .P244L10L LC0 = P1;

.P244L10:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 2919 col 3
//-------------------------------------------------------------------
	LOOP_BEGIN .P244L10L;
.LN4357:
// line 2921
	P1 = [P3 + 12];
	P0 = [SP + 40];
.LN4358:
	R1 = 126;
	// -- 2 stalls --
.LN4359:
	P1 = P0 + P1;
	R0 = B[P1] (X);
	CC = R0 == R1;
	if !CC jump .P244L13 ;

.P244L14:
	R0 = B[P3 + 10] (Z);
	CC = R0 == 0;
	if !CC jump .P244L13 ;

.P244L11:
.LN4360:
// line 2926
	P1 = [FP + 16];
.LN4361:
// line 2924
	B[P3 + 10] = R5;
	// -- 2 stalls --
.LN4362:
// line 2926
	[P1] = R7;                              // Use of volatile in loops precludes optimizations. 
.LN4363:
// line 2939
	P1 = [FP + 12];
.LN4364:
// line 2927
	[P3 + 4] = R7;
.LN4365:
// line 2928
	B[P3 + 8] = R7;
.LN4366:
// line 2929
	B[P3 + 9] = R7;
.LN4367:
// line 2930
	[P3 + 16] = R7;
.LN4368:
// line 2931
	[P3 + 20] = R5;
.LN4369:
// line 2932
	[P3 + 24] = R5;
.LN4370:
// line 2933
	B[P3 + 32] = R7;
.LN4371:
// line 2934
	B[P3 + 33] = R7;
.LN4372:
// line 2935
	B[P3 + 34] = R7;
.LN4373:
// line 2936
	[P3 + 28] = R7;
.LN4374:
// line 2937
	[P3 + 36] = R7;
.LN4375:
// line 2938
	B[P4] = R6;
.LN4376:
// line 2940
	B[P3 + 44] = R7;
.LN4377:
// line 2941
	B[P3 + 40] = R7;
.LN4378:
// line 2939
	B[P1] = R6;
.LN4379:
// line 2942
	W[P3 + 42] = R7;

.P244L13:
.LN4380:
// line 2945
	P1 = [P3 + 12];
	P2 = [SP + 40];
.LN4381:
// line 2948
	R1 = 59;
.LN4382:
// line 2945
	P0 = [P3 + 4];
.LN4383:
// line 2946
	R0 = W[P3 + 42] (X);
.LN4384:
// line 2945
	P1 = P2 + P1;
	P2 = [FP + 8];
	R4 = B[P1] (X);
.LN4385:
// line 2946
	R0 += 1;
.LN4386:
// line 2948
	CC = R4 == R1;
.LN4387:
// line 2945
	P0 = P2 + P0;
	B[P0] = R4;
.LN4388:
// line 2946
	W[P3 + 42] = R0;
.LN4389:
// line 2948
	if !CC jump .P244L17 ;

.P244L19:
	R0 = B[P3 + 40] (Z);
	CC = R0 == 0;
	if !CC jump .P244L17 ;

.P244L18:
	R0 = B[P3 + 10] (Z);
	CC = R0 == 1;
	if !CC jump .P244L17 ;

.P244L15:
.LN4390:
	B[P3 + 10] = R7;
.LN4391:
	B[P3 + 9] = R5;
.LN4392:
	B[P3 + 44] = R5;

.P244L17:
.LN4393:
// line 2950
	R0 = 61;
.LN4394:
	CC = R4 == R0;
	if CC jump .P244L23 ;

.P244L24:
.LN4395:
	R0 = 58;
.LN4396:
	CC = R4 == R0;
	if !CC jump .P244L22 ;

.P244L23:
	R0 = B[P3 + 32] (Z);
	CC = R0 == 0;
	if !CC jump .P244L22 ;

.P244L20:
.LN4397:
	B[P3 + 32] = R5;
.LN4398:
	B[P3 + 44] = R5;

.P244L22:
.LN4399:
// line 2952
	R0 = 46;
.LN4400:
	CC = R4 == R0;
	if !CC jump .P244L27 ;

.P244L29:
	R0 = B[P3 + 33] (Z);
	CC = R0 == 0;
	if !CC jump .P244L27 ;

.P244L28:
	R0 = B[P3 + 40] (Z);
	CC = R0 == 0;
	if !CC jump .P244L27 ;

.P244L25:
.LN4401:
	B[P3 + 33] = R5;
.LN4402:
	B[P3 + 44] = R5;

.P244L27:
.LN4403:
// line 2954
	R0 = 36;
.LN4404:
	CC = R4 == R0;
	if !CC jump .P244L32 ;

.P244L33:
	R0 = B[P3 + 34] (Z);
	CC = R0 == 0;
	if !CC jump .P244L32 ;

.P244L30:
.LN4405:
	R0 = 2;
.LN4406:
	B[P3 + 44] = R5;
.LN4407:
	B[P3 + 34] = R0;

.P244L32:
.LN4408:
// line 2956
	R2 = [P3 + 4];
	CC = R2 <= 2 (IU);
	if CC jump .P244L36 ;

.P244L39:
	NOP;                                    // Inserted 3 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	NOP;
	R0 = B[P2 + 2] (X);
	CC = R0 == R6;
	if !CC jump .P244L36 ;

.P244L38:
	R0 = B[P3 + 44] (Z);
	CC = R0 == 0;
	if !CC jump .P244L36 ;

.P244L37:
	R0 = B[P3 + 34] (Z);
	CC = R0 < 2 (IU);
	if !CC jump .P244L36 ;

.P244L34:
.LN4409:
// line 2958
	R1 = B[P3 + 32] (Z);
	CC = R1 == 1;
	if CC jump .P244L42 ;

.P244L40:
.LN4410:
	P1 = [P3 + 16];
	// -- 3 stalls --
	P1 = P5 + P1;
	B[P1] = R4;

.P244L42:
.LN4411:
// line 2960
	if !CC jump .P244L45 ;

.P244L46:
	R0 = B[P3 + 33] (Z);
	CC = R0 == 0;
	if !CC jump .P244L45 ;

.P244L43:
.LN4412:
	P1 = [P3 + 20];
	// -- 3 stalls --
	P1 = P4 + P1;
	B[P1] = R4;

.P244L45:
.LN4413:
// line 2961
	CC = R1 == 1;
	if !CC jump .P244L49 ;

.P244L50:
	R0 = B[P3 + 33] (Z);
	CC = R0 == 1;
	if !CC jump .P244L49 ;

.P244L47:
.LN4414:
	P2 = [P3 + 24];
.LN4415:
	P1 = [FP + 12];
	// -- 3 stalls --
	P1 = P1 + P2;
	B[P1] = R4;

.P244L49:
.LN4416:
// line 2963
	CC = R1 == 1;
	if !CC jump .P244L51 (bp);

.P244L443:
	jump.l .P244L52;

.P244L51:
.LN4417:
// line 2964
	R0 = [P3 + 16];
	CC = R0 < R6 (IU);
	if !CC jump .P244L36 ;

.P244L54:
.LN4418:
	R0 += 1;
	[P3 + 16] = R0;

.P244L36:
.LN4419:
// line 2973
	R0 = B[P3 + 34] (Z);
	CC = R0 == 2;
	if !CC jump .P244L73 ;

.P244L74:
	R0 = B[P3 + 44] (Z);
	CC = R0 == 0;
	if !CC jump .P244L73 ;

.P244L71:
.LN4420:
	R0 = B[P0] (Z);
.LN4421:
	B[P3 + 34] = R5;
.LN4422:
	[P3 + 28] = R0;

.P244L73:
.LN4423:
// line 2975
	R0 = [P3 + 36];
	R1 = [P3 + 28];
	CC = R0 < R1 (IU);
	if !CC jump .P244L76 ;

.P244L78:
	R0 = B[P3 + 34] (Z);
	CC = R0 == 1;
	if !CC jump .P244L76 ;

.P244L75:
.LN4424:
	B[P3 + 40] = R5;
	jump.s .P244L77;

.P244L76:
.LN4425:
	B[P3 + 40] = R7;

.P244L77:
.LN4426:
// line 2977
	CC = R2 < R3 (IU);
	if !CC jump .P244L81 ;

.P244L79:
.LN4427:
	R2 += 1;
	[P3 + 4] = R2;

.P244L81:
.LN4428:
// line 2978
	R0 = [P3 + 12];
	CC = R0 < R3 (IU);
	if !CC jump .P244L84 ;

.P244L82:
.LN4429:
	R0 += 1;
	[P3 + 12] = R0;

.P244L84:
.LN4430:
// line 2980
	B[P3 + 44] = R7;
.LN4431:
// line 2919
	LOOP_END .P244L10L;
//-------------------------------------------------------------------
//   End Loop L10
//-------------------------------------------------------------------

.P244L371:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------

.P244L9:
.LN4432:
// line 2985
	R0 = B[P3 + 9] (Z);
	CC = R0 == 1;
	R6.L = .sINPORT.283;
	R6.H = .sINPORT.283;
	if !CC jump .P244L87 ;

.P244L85:
.LN4433:
// line 2991
	P1 = [FP + 8];
.LN4434:
// line 2988
	R0 = [P3 + 108];
.LN4435:
// line 2991
	R2 = 126;
.LN4436:
// line 2988
	R0 += 1;
.LN4437:
// line 2991
	R1 = B[P1] (X);
	CC = R1 == R2;
.LN4438:
// line 2988
	[P3 + 108] = R0;
.LN4439:
// line 2991
	if !CC jump .P244L90 ;

.P244L88:
.LN4440:
	R0 = B[P3 + 8] (X);
	BITSET(R0, 0);
	B[P3 + 8] = R0;

.P244L90:
.LN4441:
// line 2992
	R0 = B[P1 + 1] (X);
	R1 = B[P3 + -16] (X);
	CC = R0 == R1;
	if !CC jump .P244L93 ;

.P244L91:
.LN4442:
	R0 = B[P3 + 8] (X);
	BITSET(R0, 1);
	B[P3 + 8] = R0;

.P244L93:
.LN4443:
// line 2995
	R0 = B[P3 + 8] (Z);
	CC = R0 == 3;
	if CC jump .P244L94 ;

.P244L96:
	P1 = 32;
	LOOP .P244L276L LC0 = P1;

.P244L276:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 3672 col 7
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in estimated 1 cycle.
//-------------------------------------------------------------------
//   Trip Count  = 32
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   1 out of    1 (100.0%)
//     Store               used   1 out of    1 (100.0%)
//     16-bit Instruction  used   1 out of    2 ( 50.0%)
//-------------------------------------------------------------------
//  This loop was not modulo scheduled because it was optimized for space.
//-------------------------------------------------------------------
	LOOP_BEGIN .P244L276L;
.LN4444:
// line 3672
	B[P5++] = R7;
.LN4445:
	LOOP_END .P244L276L;
//-------------------------------------------------------------------
//   End Loop L276
//-------------------------------------------------------------------

.P244L372:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	P0 = 201;
	P1 = P4;
	LOOP .P244L279L LC0 = P0;

.P244L279:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 3673 col 7
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in estimated 1 cycle.
//-------------------------------------------------------------------
//   Trip Count  = 201
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   1 out of    1 (100.0%)
//     Store               used   1 out of    1 (100.0%)
//     16-bit Instruction  used   1 out of    2 ( 50.0%)
//-------------------------------------------------------------------
//  This loop was not modulo scheduled because it was optimized for space.
//-------------------------------------------------------------------
	LOOP_BEGIN .P244L279L;
.LN4446:
// line 3673
	B[P1++] = R7;
.LN4447:
	LOOP_END .P244L279L;
//-------------------------------------------------------------------
//   End Loop L279
//-------------------------------------------------------------------

.P244L373:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	P1 = [FP + 12];
	LOOP .P244L282L LC0 = P0;

.P244L282:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 3674 col 7
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in estimated 1 cycle.
//-------------------------------------------------------------------
//   Trip Count  = 201
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   1 out of    1 (100.0%)
//     Store               used   1 out of    1 (100.0%)
//     16-bit Instruction  used   1 out of    2 ( 50.0%)
//-------------------------------------------------------------------
//  This loop was not modulo scheduled because it was optimized for space.
//-------------------------------------------------------------------
	LOOP_BEGIN .P244L282L;
.LN4448:
// line 3674
	B[P1++] = R7;
.LN4449:
	LOOP_END .P244L282L;
//-------------------------------------------------------------------
//   End Loop L282
//-------------------------------------------------------------------

.P244L374:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
	P1 = [FP + 8];
	P0 = 200;
	LOOP .P244L285L LC0 = P0;

.P244L285:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 3675 col 7
//-------------------------------------------------------------------
//   This loop executes 1 iteration of the original loop in estimated 1 cycle.
//-------------------------------------------------------------------
//   Trip Count  = 200
//-------------------------------------------------------------------
//   This loop's resource usage is:
//     Group 1             used   1 out of    1 (100.0%)
//     Store               used   1 out of    1 (100.0%)
//     16-bit Instruction  used   1 out of    2 ( 50.0%)
//-------------------------------------------------------------------
//  This loop was not modulo scheduled because it was optimized for space.
//-------------------------------------------------------------------
	LOOP_BEGIN .P244L285L;
.LN4450:
// line 3677
	B[P1++] = R7;
.LN4451:
// line 3675
	LOOP_END .P244L285L;
//-------------------------------------------------------------------
//   End Loop L285
//-------------------------------------------------------------------

.P244L375:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN4452:
// line 3680
	P1 = [FP + 16];
.LN4453:
// line 3698
	R0 = 32;
	// -- 2 stalls --
.LN4454:
// line 3680
	[P1] = R7;
.LN4455:
// line 3699
	P1 = [FP + 12];
.LN4456:
// line 3681
	B[P3 + 10] = R7;
.LN4457:
// line 3682
	[P3 + 4] = R7;
.LN4458:
// line 3683
	B[P3 + 8] = R7;
.LN4459:
// line 3685
	B[P3 + 9] = R7;
.LN4460:
// line 3686
	[P3 + 16] = R7;
.LN4461:
// line 3687
	[P3 + 20] = R7;
.LN4462:
// line 3688
	B[P3 + 32] = R7;
.LN4463:
// line 3689
	[P3 + 24] = R7;
.LN4464:
// line 3690
	B[P3 + 33] = R7;
.LN4465:
// line 3691
	[P3 + 12] = R7;
.LN4466:
// line 3692
	B[P3 + 34] = R7;
.LN4467:
// line 3693
	[P3 + 28] = R7;
.LN4468:
// line 3694
	[P3 + 36] = R7;
.LN4469:
// line 3695
	B[P3 + 44] = R7;
.LN4470:
// line 3696
	B[P3 + 40] = R7;
.LN4471:
// line 3698
	B[P4 + 0] = R0;
.LN4472:
// line 3699
	B[P1] = R0;
.LN4473:
// line 3700
	W[P3 + 42] = R7;

.P244L87:
.LN4474:
// line 3703
	R0 = B[P3 + 9] (Z);
	CC = R0 == 1;
	if !CC jump .P244L289 ;

.P244L290:
	R0 = B[P3 + 8] (Z);
	CC = R0 == 1;
	if !CC jump .P244L289 ;

.P244L287:
.LN4475:
// line 3707
	R0 = B[P3 + -15] (X);
	CC = R0 == 0;
	if !CC jump .P244L289 (bp);

.P244L352:
.LN4476:
// line 3710
	R1 = 1;
	R2 = -1844;
	B[P3 + 418] = R1;
	R6 = R6 + R2;
.LN4477:
// line 3712
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN4478:
// line 3713
	R0 = R6;
	CALL.X (_Transf);
.LN4479:
// line 3714
	R1 = B[P3 + 4] (Z);
.LN4480:
	R0 = [SP + 60];
	CALL.X (_ZTransf);
.LN4481:
// line 3715
	R0 = R6;
	CALL.X (_Transf);
	P1.L = _rx_wr_index0;
	P1.H = _rx_wr_index0;
.LN4482:
// line 3717
	[P1] = R7;
	P0.L = _rx_rd_index0;
	P0.H = _rx_rd_index0;
.LN4483:
// line 3718
	[P0] = R7;
	P2.L = _rx_counter0;
	P2.H = _rx_counter0;
.LN4484:
// line 3719
	[P2] = R7;

.P244L289:
.LN4485:
// line 3723
	SP += 12;
	(R7:4, P5:3) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;

.P244L94:
.LN4486:
// line 2998
	R1 = R6;
	R0 = P5;
	CALL.X (_strcmp);
	R1.L = _tick_process_K615;
	R1.H = _tick_process_K615;
	P2.L = _Flag_K615;
	P2.H = _Flag_K615;
	R2.L = _tick_process;
	R2.H = _tick_process;
	P1.L = _Mem_K615;
	P1.H = _Mem_K615;
.LN4487:
	CC = R0 == 0;
	[SP + 44] = R1;
	[SP + 48] = P2;
	[SP + 52] = R2;
	[SP + 56] = P1;
	if !CC jump .P244L98 (bp);

.P244L444:
	jump.s .P244L97;

.P244L98:
	R1 = R6;
	R1 += 8;
	R0 = P5;
.LN4488:
// line 3038
	CALL.X (_strcmp);
.LN4489:
	CC = R0 == 0;
	if CC jump .P244L96 (bp);

.P244L108:
	R1 = R6;
	R1 += 12;
	R0 = P5;
.LN4490:
// line 3045
	CALL.X (_strcmp);
.LN4491:
	CC = R0 == 0;
	if !CC jump .P244L111 ;

.P244L294:
	R0 = P4;
.LN4492:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
.LN4493:
// line "..\BFcom\main.c":3047
	[P3 + 52] = R0;
.LN4494:
// line 3049
	R2 = 1;
	R1 = 160;
	R0.L = _TX_BUF;
	R0.H = _TX_BUF;
	CALL.X (_INF_UART_SRV2);
	jump.s .P244L96;

.P244L111:
	R1 = R6;
	R1 += 24;
	R0 = P5;
.LN4495:
// line 3053
	CALL.X (_strcmp);
.LN4496:
	CC = R0 == 0;
	if !CC jump .P244L114 (bp);

.P244L445:
	jump.s .P244L296;

.P244L114:
	R1 = R6;
	R1 += 44;
	R5 = R6;
	R5 += 52;
	R0 = -792;
	R4 = R6 + R0;
	R0 = P5;
.LN4497:
// line 3091
	CALL.X (_strcmp);
.LN4498:
	CC = R0 == 0;
	if !CC jump .P244L117 ;

.P244L116:
.LN4499:
// line 3094
	R0 = R5;
	CALL.X (_put_str1);
.LN4500:
// line 3095
	R0 = R4;
	CALL.X (_put_str1);
.LN4501:
// line 3096
	CALL.X (_help);
.LN4502:
// line 3097
	CALL.X (_test_inf);
	jump.s .P244L96;

.P244L117:
	R0 = 68;
	R1 = R6 + R0;
	R0 = P5;
.LN4503:
// line 3099
	CALL.X (_strcmp);
.LN4504:
	CC = R0 == 0;
	if !CC jump .P244L120 ;

.P244L119:
.LN4505:
// line 3102
	R0 = R5;
	CALL.X (_put_str1);
.LN4506:
// line 3103
	R0 = R4;
	CALL.X (_put_str1);
.LN4507:
// line 3104
	CALL.X (_test_inf);
	jump.s .P244L96;

.P244L120:
	R0 = 76;
	R1 = R6 + R0;
	R0 = P5;
.LN4508:
// line 3107
	CALL.X (_strcmp);
.LN4509:
	CC = R0 == 0;
	if !CC jump .P244L123 ;

.P244L122:
	R0 = 84;
	R0 = R6 + R0;
.LN4510:
// line 3110
	CALL.X (_put_str1);
.LN4511:
// line 3111
	R0 = R4;
	CALL.X (_put_str1);
	jump.s .P244L96;

.P244L123:
	R0 = 100;
	R1 = R6 + R0;
	R0 = P5;
.LN4512:
// line 3153
	CALL.X (_strcmp);
.LN4513:
	CC = R0 == 0;
	if !CC jump .P244L126 (bp);

.P244L446:
	jump.s .P244L300;

.P244L126:
	R0 = 112;
	R1 = R6 + R0;
	R0 = P5;
.LN4514:
// line 3201
	CALL.X (_strcmp);
.LN4515:
	CC = R0 == 0;
	if !CC jump .P244L141 (bp);

.P244L447:
	jump.s .P244L302;

.P244L141:
	R0 = 132;
	R1 = R6 + R0;
	R0 = P5;
.LN4516:
// line 3282
	CALL.X (_strcmp);
	R2.L = _index_wr;
	R2.H = _index_wr;
.LN4517:
	CC = R0 == 0;
	[SP + 56] = R2;
	if !CC jump .P244L144 (bp);

.P244L448:
	jump.s .P244L304;

.P244L144:
	R0 = 156;
	R1 = R6 + R0;
	R0 = P5;
.LN4518:
// line 3289
	CALL.X (_strcmp);
.LN4519:
	CC = R0 == 0;
	if !CC jump .P244L147 ;

.P244L146:
	R0.L = .sextraU.302;
	R0.H = .sextraU.302;
.LN4520:
// line 3291
	CALL.X (_put_str1);
.LN4521:
// line 3292
	R1 = 2;
	R0 = 0;
	CALL.X (_tabl_view);
	R0 = -1844;
	R0 = R6 + R0;
.LN4522:
// line 3293
	CALL.X (_put_str1);
	jump.s .P244L96;

.P244L147:
	R0 = 168;
	R1 = R6 + R0;
	R0 = P5;
.LN4523:
// line 3295
	CALL.X (_strcmp);
.LN4524:
	CC = R0 == 0;
	if !CC jump .P244L150 (bp);

.P244L449:
	jump.s .P244L306;

.P244L150:
	R0 = 180;
	R1 = R6 + R0;
	R0 = P5;
.LN4525:
// line 3302
	CALL.X (_strcmp);
.LN4526:
	CC = R0 == 0;
	if !CC jump .P244L153 ;

.P244L308:
.LN4527:
// line 3304
	P1 = [SP + 56];
.LN4528:
// line 3305
	R3 = 1;
	R0 = P4;
.LN4529:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
.LN4530:
// line "..\BFcom\main.c":3304
	[P1] = R7;
.LN4531:
// line 3305
	B[P3 + 436] = R3;
.LN4532:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R1 = 0;
	CALL.X (__Stoul);
.LN4533:
// line "..\BFcom\main.c":3308
	[P3 + 52] = R0;
	R0.L = .sPachka.306;
	R0.H = .sPachka.306;
.LN4534:
// line 3309
	CALL.X (_put_str1);
.LN4535:
// line 3310
	CALL.X (_pachka_monitor);
	jump.s .P244L96;

.P244L153:
	R0 = 196;
	R1 = R6 + R0;
	R0 = P5;
.LN4536:
// line 3313
	CALL.X (_strcmp);
.LN4537:
	CC = R0 == 0;
	if !CC jump .P244L156 ;

.P244L310:
	R0 = P4;
.LN4538:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
	R1 = R0;
.LN4539:
// line "..\BFcom\main.c":3315
	[P3 + 52] = R1;
	R0.L = .sContro.308;
	R0.H = .sContro.308;
.LN4540:
// line 3316
	CALL.X (_u_out);
.LN4541:
// line 3317
	R0 = [P3 + 52];
.LN4542:
// line 3319
	CC = R0 == 0;
.LN4543:
// line 3318
	[P3 + 332] = R0;
.LN4544:
// line 3317
	W[P3 + 152] = R0;
.LN4545:
// line 3319
	if CC jump .P244L159 ;

.P244L158:
.LN4546:
	R0 = 1;
	B[P3 + 446] = R0;
	jump.s .P244L96;

.P244L159:
.LN4547:
	B[P3 + 446] = R7;
	jump.s .P244L96;

.P244L156:
	R0 = 208;
	R1 = R6 + R0;
	R0 = P5;
.LN4548:
// line 3321
	CALL.X (_strcmp);
.LN4549:
	CC = R0 == 0;
	if !CC jump .P244L162 ;

.P244L161:
	R0.L = .s.310;
	R0.H = .s.310;
.LN4550:
	CALL.X (_put_str1);
.LN4551:
	R0 = 1;
	B[P3 + 191] = R0;
	jump.s .P244L96;

.P244L162:
	R0 = 216;
	R1 = R6 + R0;
	R0 = P5;
.LN4552:
// line 3323
	CALL.X (_strcmp);
.LN4553:
	CC = R0 == 0;
	if !CC jump .P244L165 ;

.P244L164:
	R0 = 224;
	R0 = R6 + R0;
.LN4554:
	CALL.X (_put_str1);
.LN4555:
	CALL.X (_FAZA);
	jump.s .P244L96;

.P244L165:
	R0 = 240;
	R1 = R6 + R0;
	R0 = P5;
.LN4556:
// line 3325
	CALL.X (_strcmp);
.LN4557:
	CC = R0 == 0;
	if !CC jump .P244L168 ;

.P244L312:
	R0 = P4;
.LN4558:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
	R1 = R0;
.LN4559:
// line "..\BFcom\main.c":3326
	[P3 + 52] = R1;
	R0 = 248;
	R0 = R6 + R0;
.LN4560:
// line 3327
	CALL.X (_u_out);
.LN4561:
// line 3328
	R0 = B[P3 + 52] (X);
	B[P3 + 419] = R0;
	jump.s .P244L96;

.P244L168:
	R0 = 264;
	R1 = R6 + R0;
	R0 = P5;
.LN4562:
// line 3331
	CALL.X (_strcmp);
.LN4563:
	CC = R0 == 0;
	if !CC jump .P244L171 ;

.P244L170:
	R0.L = .sFTsig.316;
	R0.H = .sFTsig.316;
.LN4564:
	CALL.X (_put_str1);
.LN4565:
	CALL.X (_SIG_FT_IN);
	jump.s .P244L96;

.P244L171:
	R0 = 272;
	R1 = R6 + R0;
	R0 = P5;
.LN4566:
// line 3336
	CALL.X (_strcmp);
.LN4567:
	CC = R0 == 0;
	if !CC jump .P244L174 ;

.P244L173:
	R0.L = .s.318;
	R0.H = .s.318;
.LN4568:
// line 3338
	CALL.X (_put_str1);
	R5.L = _strng;
	R5.H = _strng;
	P1.L = _Alfa;
	P1.H = _Alfa;
.LN4569:
// line 3339
	R0 = [P1];
.LN4570:
	R1 = R5;
	CALL.X (_itoa);
.LN4571:
// line 3340
	R0 = R5;
	CALL.X (_put_str1);
	R0 = 280;
	R0 = R6 + R0;
.LN4572:
// line 3341
	CALL.X (_put_str1);
	jump.s .P244L96;

.P244L174:
	R0 = 288;
	R1 = R6 + R0;
	R0 = P5;
.LN4573:
// line 3350
	CALL.X (_strcmp);
.LN4574:
	CC = R0 == 0;
	if !CC jump .P244L177 ;

.P244L176:
	R0.L = .s.321;
	R0.H = .s.321;
.LN4575:
	CALL.X (_put_str1);
.LN4576:
	R0 = 2;
	B[P3 + 191] = R0;
	jump.s .P244L96;

.P244L177:
	R0 = 296;
	R1 = R6 + R0;
	R0 = P5;
.LN4577:
// line 3352
	CALL.X (_strcmp);
.LN4578:
	CC = R0 == 0;
	if !CC jump .P244L180 ;

.P244L314:
	R0 = P4;
.LN4579:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
	R1 = R0;
.LN4580:
// line "..\BFcom\main.c":3354
	[P3 + 52] = R1;
	R0.L = .sDopINT.323;
	R0.H = .sDopINT.323;
.LN4581:
// line 3355
	CALL.X (_u_out);
.LN4582:
// line 3356
	R0 = B[P3 + 52] (X);
	B[P3 + 882] = R0;
	jump.s .P244L96;

.P244L180:
	R0 = 308;
	R1 = R6 + R0;
	R0 = P5;
.LN4583:
// line 3361
	CALL.X (_strcmp);
.LN4584:
	CC = R0 == 0;
	if !CC jump .P244L183 ;

.P244L316:
	R0 = P4;
.LN4585:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
	R1 = R0;
.LN4586:
// line "..\BFcom\main.c":3363
	[P3 + 652] = R1;
	R0.L = .sDobzor.325;
	R0.H = .sDobzor.325;
.LN4587:
// line 3364
	CALL.X (_u_out);
	jump.s .P244L96;

.P244L183:
	R0 = 316;
	R1 = R6 + R0;
	R0 = P5;
.LN4588:
// line 3367
	CALL.X (_strcmp);
	P1.L = _Mem1+29;
	P1.H = _Mem1+29;
.LN4589:
	CC = R0 == 0;
	[SP + 56] = P1;
	if !CC jump .P244L186 ;

.P244L185:
.LN4590:
// line 3373
	P0 = [SP + 56];
	R3 = 1028;
	R2 = R3;
	R5 = B[P1] (Z);
	R2.H = 5;
	R2 = DEPOSIT(R5, R2);
.LN4591:
// line 3372
	[P3 + 124] = R7;
.LN4592:
// line 3373
	B[P0] = R2;
.LN4593:
// line 3374
	R1 = 1;
	R0.L = .s.327;
	R0.H = .s.327;
	CALL.X (_u_out);
	jump.s .P244L96;

.P244L186:
	R0 = 320;
	R1 = R6 + R0;
	R0 = P5;
.LN4594:
// line 3377
	CALL.X (_strcmp);
.LN4595:
	CC = R0 == 0;
	if !CC jump .P244L189 ;

.P244L188:
.LN4596:
// line 3383
	P1 = [SP + 56];
	R3 = 1028;
	R2 = R3;
	R2.H = 12;
	R5 = B[P1] (Z);
	R2 = DEPOSIT(R5, R2);
.LN4597:
// line 3382
	[P3 + 124] = R7;
.LN4598:
// line 3383
	B[P1] = R2;
.LN4599:
// line 3384
	R1 = 1;
	R0.L = .s.329;
	R0.H = .s.329;
	CALL.X (_u_out);
	jump.s .P244L96;

.P244L189:
	R0 = 324;
	R1 = R6 + R0;
	R0 = P5;
.LN4600:
// line 3387
	CALL.X (_strcmp);
.LN4601:
	CC = R0 == 0;
	if !CC jump .P244L192 ;

.P244L191:
.LN4602:
// line 3391
	B[P3 + 1171] = R7;
.LN4603:
// line 3390
	R1 = 1;
	B[P3 + 1170] = R1;
	R0.L = .s.331;
	R0.H = .s.331;
.LN4604:
// line 3392
	CALL.X (_u_out);
	jump.s .P244L96;

.P244L192:
	R0 = 328;
	R1 = R6 + R0;
	R0 = P5;
.LN4605:
// line 3395
	CALL.X (_strcmp);
.LN4606:
	CC = R0 == 0;
	if !CC jump .P244L195 ;

.P244L194:
.LN4607:
// line 3398
	B[P3 + 1170] = R7;
.LN4608:
// line 3399
	R1 = 1;
	B[P3 + 1171] = R1;
	R0.L = .s.333;
	R0.H = .s.333;
.LN4609:
// line 3400
	CALL.X (_u_out);
	jump.s .P244L96;

.P244L195:
	R0 = 332;
	R1 = R6 + R0;
	R0 = P5;
.LN4610:
// line 3403
	CALL.X (_strcmp);
.LN4611:
	CC = R0 == 0;
	if !CC jump .P244L198 ;

.P244L197:
.LN4612:
// line 3406
	R1 = 1;
	B[P3 + 1172] = R1;
	R0.L = .s.335;
	R0.H = .s.335;
.LN4613:
// line 3408
	CALL.X (_u_out);
	jump.s .P244L96;

.P244L198:
	R0 = 340;
	R1 = R6 + R0;
	R0 = P5;
.LN4614:
// line 3411
	CALL.X (_strcmp);
.LN4615:
	CC = R0 == 0;
	if !CC jump .P244L201 ;

.P244L318:
	R0 = P4;
.LN4616:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
.LN4617:
// line "..\BFcom\main.c":3414
	B[P3 + 1173] = R0;
.LN4618:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R1 = R0.b (Z);
	R0.L = .s.337;
	R0.H = .s.337;
.LN4619:
// line "..\BFcom\main.c":3415
	CALL.X (_u_out);
	jump.s .P244L96;

.P244L201:
	R0 = 352;
	R1 = R6 + R0;
	R0 = P5;
.LN4620:
// line 3419
	CALL.X (_strcmp);
.LN4621:
	CC = R0 == 0;
	if !CC jump .P244L204 ;

.P244L320:
	R0 = P4;
.LN4622:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
	R1 = R0;
.LN4623:
// line "..\BFcom\main.c":3421
	[P3 + 656] = R1;
.LN4624:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R0 = R1 >>> 31;
.LN4625:
// line "..\BFcom\main.c":3421
	[P3 + 660] = R0;
	R0.L = .sFS.339;
	R0.H = .sFS.339;
.LN4626:
// line 3422
	CALL.X (_u_out);
	jump.s .P244L96;

.P244L204:
	R0 = 356;
	R1 = R6 + R0;
	R0 = P5;
.LN4627:
// line 3426
	CALL.X (_strcmp);
.LN4628:
	CC = R0 == 0;
	if !CC jump .P244L207 ;

.P244L322:
	R0 = P4;
.LN4629:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
	R1 = R0;
.LN4630:
// line "..\BFcom\main.c":3428
	[P3 + 664] = R1;
.LN4631:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R0 = R1 >>> 31;
.LN4632:
// line "..\BFcom\main.c":3428
	[P3 + 668] = R0;
	R0.L = .sFG.341;
	R0.H = .sFG.341;
.LN4633:
// line 3429
	CALL.X (_u_out);
	jump.s .P244L96;

.P244L207:
	R0 = 360;
	R1 = R6 + R0;
	R0 = P5;
.LN4634:
// line 3433
	CALL.X (_strcmp);
.LN4635:
	CC = R0 == 0;
	if !CC jump .P244L210 ;

.P244L324:
	R0 = P4;
.LN4636:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
.LN4637:
// line "..\BFcom\main.c":3435
	B[P3 + 218] = R0;
.LN4638:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R1 = R0.b (Z);
	R0 = 368;
	R0 = R6 + R0;
.LN4639:
// line "..\BFcom\main.c":3436
	CALL.X (_u_out);
.LN4640:
// line 3437
	R0 = 2000;
	[P3 + 652] = R0;
	jump.s .P244L96;

.P244L210:
	R0 = 384;
	R1 = R6 + R0;
	R0 = P5;
.LN4641:
// line 3440
	CALL.X (_strcmp);
.LN4642:
	CC = R0 == 0;
	if !CC jump .P244L213 ;

.P244L326:
	R0 = P4;
.LN4643:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
	R1 = R0;
.LN4644:
// line "..\BFcom\main.c":3442
	[P3 + 748] = R1;
	R0.L = .s.345;
	R0.H = .s.345;
.LN4645:
// line 3443
	CALL.X (_u_out);
	jump.s .P244L96;

.P244L213:
	R0 = 392;
	R1 = R6 + R0;
	R0 = P5;
.LN4646:
// line 3448
	CALL.X (_strcmp);
.LN4647:
	CC = R0 == 0;
	if !CC jump .P244L216 ;

.P244L328:
	R0 = P4;
.LN4648:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
	R3 = -13825;
.LN4649:
// line "..\BFcom\main.c":3451
	CC = R0 == 0;
	R5 = R3;
	R5.H = 15258;
	IF CC R0 = R5;
	[P3 + 752] = R0;
	R0.L = .sT.347;
	R0.H = .sT.347;
.LN4650:
// line 3452
	CALL.X (_put_str1);
	R0 = P4;
.LN4651:
// line 3453
	CALL.X (_put_str1);
.LN4652:
// line 3454
	R0 = R4;
	CALL.X (_put_str1);
	jump.s .P244L96;

.P244L216:
	R0 = 400;
	R1 = R6 + R0;
	R0 = P5;
.LN4653:
// line 3458
	CALL.X (_strcmp);
.LN4654:
	CC = R0 == 0;
	if !CC jump .P244L222 ;

.P244L330:
	R0 = P4;
.LN4655:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
.LN4656:
// line "..\BFcom\main.c":3461
	R1 = R0 >> 3;
	[P3 + 588] = R1;
	R0.L = .sDelayT.349;
	R0.H = .sDelayT.349;
.LN4657:
// line 3462
	CALL.X (_u_out);
	jump.s .P244L96;

.P244L222:
	R0 = 412;
	R1 = R6 + R0;
	R0 = P5;
.LN4658:
// line 3465
	CALL.X (_strcmp);
.LN4659:
	CC = R0 == 0;
	if !CC jump .P244L225 ;

.P244L332:
	R0 = P4;
.LN4660:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
.LN4661:
// line "..\BFcom\main.c":3468
	R1 = R0 >> 3;
	[P3 + 584] = R1;
	R0.L = .sDelayT.351;
	R0.H = .sDelayT.351;
.LN4662:
// line 3469
	CALL.X (_u_out);
	jump.s .P244L96;

.P244L225:
	R0 = 424;
	R1 = R6 + R0;
	R0 = P5;
.LN4663:
// line 3473
	CALL.X (_strcmp);
.LN4664:
	CC = R0 == 0;
	if !CC jump .P244L228 ;

.P244L334:
	R0 = P4;
.LN4665:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
	R1 = R0;
.LN4666:
// line "..\BFcom\main.c":3475
	[P3 + 764] = R1;
	R0.L = .s.353;
	R0.H = .s.353;
.LN4667:
// line 3476
	CALL.X (_u_out);
	jump.s .P244L96;

.P244L228:
	R0 = 436;
	R1 = R6 + R0;
	R0 = P5;
.LN4668:
// line 3480
	CALL.X (_strcmp);
.LN4669:
	CC = R0 == 0;
	if !CC jump .P244L231 ;

.P244L336:
	R0 = P4;
.LN4670:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
.LN4671:
// line "..\BFcom\main.c":3482
	B[P3 + 744] = R0;
.LN4672:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R1 = R0.b (Z);
	R0.L = .s.355;
	R0.H = .s.355;
.LN4673:
// line "..\BFcom\main.c":3483
	CALL.X (_u_out);
	jump.s .P244L96;

.P244L231:
	R0 = 448;
	R1 = R6 + R0;
	R0 = P5;
.LN4674:
// line 3487
	CALL.X (_strcmp);
.LN4675:
	CC = R0 == 0;
	if !CC jump .P244L234 ;

.P244L338:
	R0 = P4;
.LN4676:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
.LN4677:
// line "..\BFcom\main.c":3489
	B[P3 + 876] = R0;
.LN4678:
// line 3490
	B[P3 + 879] = R0;
.LN4679:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R1 = R0.b (Z);
	R0 = 452;
	R0 = R6 + R0;
.LN4680:
// line "..\BFcom\main.c":3491
	CALL.X (_u_out);
	jump.s .P244L96;

.P244L234:
	R0 = 464;
	R1 = R6 + R0;
	R0 = P5;
.LN4681:
// line 3494
	CALL.X (_strcmp);
.LN4682:
	CC = R0 == 0;
	if !CC jump .P244L237 ;

.P244L340:
	R0 = P4;
.LN4683:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
.LN4684:
// line "..\BFcom\main.c":3496
	B[P3 + 736] = R0;
.LN4685:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R1 = R0.b (Z);
	R0.L = .sSYNCPI.359;
	R0.H = .sSYNCPI.359;
.LN4686:
// line "..\BFcom\main.c":3497
	CALL.X (_u_out);
	jump.s .P244L96;

.P244L237:
	R0 = 476;
	R1 = R6 + R0;
	R0 = P5;
.LN4687:
// line 3500
	CALL.X (_strcmp);
.LN4688:
	CC = R0 == 0;
	if !CC jump .P244L240 ;

.P244L342:
	R0 = P4;
.LN4689:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
.LN4690:
// line "..\BFcom\main.c":3511
	B[P3 + 777] = R0;
	R0.L = .sTSTout.361;
	R0.H = .sTSTout.361;
.LN4691:
// line 3512
	CALL.X (_put_str1);
	R0 = P4;
.LN4692:
// line 3513
	CALL.X (_put_str1);
	R0 = -1844;
	R0 = R6 + R0;
.LN4693:
// line 3514
	CALL.X (_put_str1);
	jump.s .P244L96;

.P244L240:
	R0 = 484;
	R1 = R6 + R0;
	R0 = P5;
.LN4694:
// line 3535
	CALL.X (_strcmp);
.LN4695:
	CC = R0 == 0;
	if !CC jump .P244L243 ;

.P244L344:
	R0 = P4;
.LN4696:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
.LN4697:
// line "..\BFcom\main.c":3537
	CC = R0 == 1;
	if !CC jump .P244L246 ;

.P244L245:
.LN4698:
// line 3540
	R1 = -257;
	P1.L = _AVARIYA_flag;
	P1.H = _AVARIYA_flag;
.LN4699:
// line 3539
	R2 = 900;
	[P1] = R2;
	R0 = R1;
.LN4700:
// line 3540
	R0.H = 32767;
	jump.s .P244L247;

.P244L246:
.LN4701:
// line 3542
	R1 = -269;
	R0 = R1;
	R0.H = 32767;

.P244L247:
.LN4702:
// line 3540
	[P3 + 412] = R0;
	R0 = 492;
	R0 = R6 + R0;
.LN4703:
// line 3544
	CALL.X (_put_str1);
	R0 = P4;
.LN4704:
// line 3545
	CALL.X (_put_str1);
	R0 = -1844;
	R0 = R6 + R0;
.LN4705:
// line 3546
	CALL.X (_put_str1);
	jump.s .P244L96;

.P244L243:
	R0 = 508;
	R1 = R6 + R0;
	R0 = P5;
.LN4706:
// line 3551
	CALL.X (_strcmp);
.LN4707:
	CC = R0 == 0;
	if CC jump .P244L346 ;

.P244L249:
	R0 = 524;
	R1 = R6 + R0;
	R0 = P5;
.LN4708:
// line 3563
	CALL.X (_strcmp);
.LN4709:
	CC = R0 == 0;
	if !CC jump .P244L252 ;

.P244L251:
	R0 = 532;
	R0 = R6 + R0;
.LN4710:
	CALL.X (_put_str1);
.LN4711:
	B[P3 + 1074] = R7;
.LN4712:
	R0 = 3000;
	[P3 + 648] = R0;
	P1.L = _flag_event_sinhron;
	P1.H = _flag_event_sinhron;
.LN4713:
	B[P1] = R7;
	jump.s .P244L96;

.P244L252:
	R0 = 548;
	R1 = R6 + R0;
	R0 = P5;
.LN4714:
// line 3566
	CALL.X (_strcmp);
.LN4715:
	CC = R0 == 0;
	if !CC jump .P244L255 ;

.P244L254:
	P2.L = _Flag_init_K615;
	P2.H = _Flag_init_K615;
.LN4716:
// line 3568
	R0 = 1;
	B[P2] = R0;
.LN4717:
// line 3569
	P1 = [SP + 52];
	// -- 3 stalls --
	[P1] = R7;
.LN4718:
// line 3570
	P2 = [SP + 48];
	// -- 3 stalls --
	B[P2] = R7;
.LN4719:
// line 3572
	P0 = [SP + 44];
.LN4720:
// line 3571
	B[P3 + 220] = R7;
	// -- 2 stalls --
.LN4721:
// line 3572
	[P0] = R7;
	jump.s .P244L96;

.P244L255:
	R0 = 556;
	R1 = R6 + R0;
	R0 = P5;
.LN4722:
// line 3575
	CALL.X (_strcmp);
.LN4723:
	CC = R0 == 0;
	if !CC jump .P244L258 ;

.P244L348:
	R0 = P4;
.LN4724:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
	R1 = R0;
.LN4725:
// line "..\BFcom\main.c":3577
	[P3 + 120] = R1;
	R0.L = .s.370;
	R0.H = .s.370;
.LN4726:
// line 3578
	CALL.X (_u_out);
	jump.s .P244L96;

.P244L258:
	R0 = 560;
	R1 = R6 + R0;
	R0 = P5;
.LN4727:
// line 3583
	CALL.X (_strcmp);
.LN4728:
	CC = R0 == 0;
	if !CC jump .P244L261 ;

.P244L260:
	R0.L = .sPOWERO.372;
	R0.H = .sPOWERO.372;
.LN4729:
// line 3585
	CALL.X (_put_str1);
.LN4730:
// line 3586
	R0 = -1;
	R0 >>= 1;
	CALL.X (_Event_SPORT_RUN);
	jump.s .P244L96;

.P244L261:
	R0 = 572;
	R1 = R6 + R0;
	R0 = P5;
.LN4731:
// line 3589
	CALL.X (_strcmp);
.LN4732:
	CC = R0 == 0;
	if !CC jump .P244L264 ;

.P244L263:
	R0.L = .sPOWERO.374;
	R0.H = .sPOWERO.374;
.LN4733:
// line 3591
	CALL.X (_put_str1);
.LN4734:
// line 3592
	R0 = -257 /* 2147483391 */;
	R0.H = 32767 /* 2147483391 */;
	CALL.X (_Event_SPORT_RUN);
	jump.s .P244L96;

.P244L264:
	R0 = P5;
	R1 = 584;
	R1 = R6 + R1;
.LN4735:
// line 3662
	CALL.X (_strcmp);
.LN4736:
	CC = R0 == 0;
	if CC jump .P244L350 ;

.P244L450:
	jump.s .P244L96;

.P244L350:
	R0.L = .s610.376;
	R0.H = .s610.376;
.LN4737:
// line 3664
	CALL.X (_put_str1);
	R0 = P4;
.LN4738:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
.LN4739:
// line "..\BFcom\main.c":3665
	[P3 + 52] = R0;
.LN4740:
// line 3667
	CC = R0 == 0;
	if !CC jump .P244L271 (bp);

.P244L269:
	R0 = 596;
	R0 = R6 + R0;
.LN4741:
	CALL.X (_put_str1);

.P244L271:
.LN4742:
// line 3668
	R0 = [P3 + 52];
	CC = R0 == 1;
	if CC jump .P244L272 ;

.P244L451:
	jump.s .P244L96;

.P244L272:
	R0 = 608;
	R0 = R6 + R0;
.LN4743:
	CALL.X (_put_str1);
	jump.s .P244L96;

.P244L346:
	R0.L = .sZapret.365;
	R0.H = .sZapret.365;
.LN4744:
// line 3553
	CALL.X (_put_str1);
	R0 = P4;
.LN4745:
// line 3554
	CALL.X (_put_str1);
	R3 = -1844;
	R0 = R6 + R3;
.LN4746:
// line 3555
	CALL.X (_put_str1);
	R0 = P4;
.LN4747:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
.LN4748:
// line "..\BFcom\main.c":3556
	P1 = [SP + 56];
	R5 = PACK(R0.L, R5.L);
	R5.L = 1028;
	// -- 2 stalls --
	R1 = B[P1 + 1] (Z);
	R0 = DEPOSIT(R1, R5);
	B[P1 + 1] = R0;
	jump.s .P244L96;

.P244L306:
	R0 = P4;
.LN4749:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
.LN4750:
// line "..\BFcom\main.c":3297
	[P3 + 52] = R0;
	R0.L = .sListUD.304;
	R0.H = .sListUD.304;
.LN4751:
// line 3298
	CALL.X (_put_str1);
.LN4752:
// line 3299
	R0 = [P3 + 52];
.LN4753:
	R1 = 3;
	CALL.X (_tabl_view);
.LN4754:
// line 3300
	P1 = [SP + 56];
	R2 = 144;
	R0 = R6 + R2;
	// -- stall --
	R1 = [P1];
.LN4755:
	CALL.X (_u_out);
	jump.s .P244L96;

.P244L304:
	R0 = P4;
.LN4756:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
.LN4757:
// line "..\BFcom\main.c":3284
	[P3 + 52] = R0;
	R0.L = .sUDPcon.299;
	R0.H = .sUDPcon.299;
.LN4758:
// line 3285
	CALL.X (_put_str1);
.LN4759:
// line 3286
	R0 = [P3 + 52];
.LN4760:
	R1 = 0;
	CALL.X (_tabl_view);
.LN4761:
// line 3287
	P1 = [SP + 56];
	R2 = 144;
	R0 = R6 + R2;
	// -- stall --
	R1 = [P1];
.LN4762:
	CALL.X (_u_out);
	jump.s .P244L96;

.P244L302:
	R0 = P4;
.LN4763:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
.LN4764:
// line "..\BFcom\main.c":3203
	[P3 + 52] = R0;
	R0 = 116;
	R0 = R6 + R0;
.LN4765:
// line 3204
	CALL.X (_put_str1);
	R0 = P4;
.LN4766:
// line 3205
	CALL.X (_put_str1);
	R0 = -1844;
	R0 = R6 + R0;
.LN4767:
// line 3206
	CALL.X (_put_str1);
.LN4768:
// line 3208
	R0 = [P3 + 52];
.LN4769:
	CALL.X (_tst_out);
	jump.s .P244L96;

.P244L300:
	R0 = P4;
.LN4770:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
.LN4771:
// line "..\BFcom\main.c":3155
	[P3 + 52] = R0;
	R0.L = .sIDreze.295;
	R0.H = .sIDreze.295;
.LN4772:
// line 3156
	CALL.X (_put_str1);
	R0 = P4;
.LN4773:
// line 3157
	CALL.X (_put_str1);
	R0 = -1844;
	R0 = R6 + R0;
.LN4774:
// line 3158
	CALL.X (_put_str1);
.LN4775:
// line 3160
	R0 = [P3 + 52];
	CC = R0 == 1;
	if CC jump .P244L128 ;

.P244L131:
	R1 = 4;
	CC = R0 == R1;
	if !CC jump .P244L130 ;

.P244L128:
.LN4776:
	R1 = 1;
	B[P3 + 360] = R1;

.P244L130:
.LN4777:
// line 3161
	CC = R0 == 2;
	if CC jump .P244L132 ;

.P244L135:
	R1 = 5;
	CC = R0 == R1;
	if !CC jump .P244L134 ;

.P244L132:
.LN4778:
	R1 = 2;
	B[P3 + 360] = R1;

.P244L134:
.LN4779:
// line 3162
	CC = R0 == 3;
	if CC jump .P244L136 ;

.P244L139:
	R1 = 6;
	CC = R0 == R1;
	if !CC jump .P244L138 ;

.P244L136:
.LN4780:
	R0 = 3;
	B[P3 + 360] = R0;

.P244L138:
.LN4781:
// line 3164
	R0 = B[P3 + 360] (X);
	B[P3 + 361] = R0;
.LN4782:
// line 3177
	R0 = 1;
	B[P3 + 472] = R0;
	jump.s .P244L96;

.P244L296:
	R0 = P4;
.LN4783:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	CALL.X (__Stoul);
.LN4784:
// line "..\BFcom\main.c":3055
	[P3 + 52] = R0;
.LN4785:
// line "C:\Program Files (x86)\Analog Devices\VisualDSP 5.1.2\Blackfin\include\stdlib.h":275
	R2 = 10;
	R1 = 0;
	R0 = [FP + 12];
	CALL.X (__Stoul);
.LN4786:
// line "..\BFcom\main.c":3056
	[P3 + 48] = R0;
.LN4787:
// line 3057
	R1 = [P3 + 52];
	R0.L = .ssdramw.287;
	R0.H = .ssdramw.287;
.LN4788:
	CALL.X (_u_out);
	R0 = R6;
.LN4789:
// line 3058
	R1 = [P3 + 48];
	R0 += 36;
.LN4790:
	CALL.X (_u_out);
.LN4791:
// line 3059
	P1 = [SP + 56];
	P0 = [P3 + 48];
	R0 = [P3 + 52];
	// -- stall --
	P1 = [P1 + -40];
	// -- 3 stalls --
	P1 = P1 + (P0<<1);
	W[P1] = R0.L;
	jump.s .P244L96;

.P244L97:
.LN4792:
// line 3000
	R4 = B[P4 + 1] (X);
	R2 = B[P4 + 2] (X);
	R2 = R4 ^ R2;
	R3 = B[P4 + 3] (X);
.LN4793:
// line 3015
	R0 = B[P3 + 80] (Z);
.LN4794:
// line 3000
	R2 = R2 ^ R3;
	R5 = B[P4 + 4] (X);
.LN4795:
// line 3007
	R1 = B[P4 + 7] (X);
.LN4796:
// line 3015
	CC = R0 == 1;
.LN4797:
// line 3000
	R2 = R2 ^ R5;
	R0 = B[P4 + 5] (X);
.LN4798:
// line 3007
	[P3 + 48] = R1;
.LN4799:
// line 3000
	R0 = R2 ^ R0;
	R5 = B[P4 + 6] (X);
.LN4800:
// line 3013
	R1 = -25;
.LN4801:
// line 3000
	R0 = R0 ^ R5;
.LN4802:
// line 3013
	R1 = R4 | R1;
.LN4803:
// line 3000
	[P3 + 52] = R0;
.LN4804:
// line 3013
	B[P1] = R1;
.LN4805:
// line 3015
	if !CC jump .P244L102 ;

.P244L103:
	R0 = B[P3 + 1173] (Z);
	CC = R0 == 1;
	if CC jump .P244L102 ;

.P244L100:
.LN4806:
// line 3017
	B[P1 + 0] = R4;
.LN4807:
// line 3018
	B[P3 + 80] = R7;

.P244L102:
.LN4808:
// line 3021
	P2 = [SP + 56];
.LN4809:
// line 3025
	P1 = [SP + 56];
	// -- stall --
	R1 = W[P4 + 2] (X);
	R3 = [P4 + 4];
	R0 = R1;
	R2 = R3;
	R0 >>>= 8;
	R2 >>>= 8;
.LN4810:
// line 3022
	B[P1 + 2] = R0;
.LN4811:
// line 3021
	B[P2 + 1] = R1;
.LN4812:
// line 3023
	B[P2 + 3] = R3;
.LN4813:
// line 3024
	B[P2 + 4] = R2;
.LN4814:
// line 3025
	B[P1 + 5] = R5;
.LN4815:
// line 3027
	R0 = 1;
	P2.L = _Flag_control_K615;
	P2.H = _Flag_control_K615;
	B[P2] = R0;
.LN4816:
// line 3028
	P1 = [SP + 52];
	// -- 3 stalls --
	[P1] = R7;
.LN4817:
// line 3029
	P2 = [SP + 48];
	// -- 3 stalls --
	B[P2] = R7;
.LN4818:
// line 3031
	P0 = [SP + 44];
.LN4819:
// line 3030
	B[P3 + 220] = R7;
	// -- 2 stalls --
.LN4820:
// line 3031
	[P0] = R7;
.LN4821:
// line 3032
	CALL.X (_FT_control);
.LN4822:
// line 3033
	R0 = B[P3 + 417] (X);
	R1 = 116;
	CC = R0 == R1;
	if !CC jump .P244L106 ;

.P244L104:
.LN4823:
	[P3 + 124] = R7;

.P244L106:
.LN4824:
// line 3034
	R0 = 0;
	CALL.X (_K615_work);
	jump.l .P244L96;

.P244L52:
//-------------------------------------------------------------------
//   Part of Loop 10, depth 1
//-------------------------------------------------------------------
.LN4825:
// line 2967
	R1 = B[P3 + 33] (Z);
	CC = R1 == 0;
	if !CC jump .P244L59 ;

.P244L57:
.LN4826:
	R0 = [P3 + 20];
	CC = R0 < R3 (IU);
	if !CC jump .P244L59 ;

.P244L61:
.LN4827:
	R0 += 1;
.LN4828:
	R4 = [P3 + 36];
	R4 += 1;
	[P3 + 36] = R4;
.LN4829:
	[P3 + 20] = R0;

.P244L59:
.LN4830:
// line 2969
	CC = R1 == 1;
	if CC jump .P244L64 (bp);

.P244L452:
	jump.l .P244L36;

.P244L64:
.LN4831:
	R0 = [P3 + 24];
	CC = R0 < R3 (IU);
	if CC jump .P244L68 (bp);

.P244L453:
	jump.l .P244L36;

.P244L68:
.LN4832:
	R0 += 1;
	[P3 + 24] = R0;
	jump.l .P244L36;
.LN._IO.end:
._IO.end:
	.global _IO;
	.type _IO,STT_FUNC;

	.align 2;
_start_init:
.LN_start_init:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 36 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1}
//  Call preserved registers used: {R4-R7,P3-P5,FP,SP,RETS}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":8709
	LINK 0;
	[--SP] = (R7:4, P5:3);
	SP += -12;
.LN4833:
// line 8712
	R7 = -1;
	P1.L = _flag_Ethernet;
	P1.H = _flag_Ethernet;
	B[P1 + 12] = R7;
.LN4834:
// line 8713
	B[P1 + 13] = R7;
.LN4835:
// line 8714
	B[P1 + 14] = R7;
.LN4836:
// line 8715
	B[P1 + 15] = R7;
.LN4837:
// line 8718
	P0 = 1792 /* -4192512 */;
	P0.H = -64 /* -4192512 */;
	R2 = W[P0] (X);
	BITCLR(R2, 10);
	W[P0] = R2.L;
.LN4838:
// line 8719
	R5 = 1;
	B[P1] = R5;
	P1 += 10;
.LN4839:
// line 8721
	B[P1++] = R7;
.LN4840:
// line 8722
	B[P1++] = R7;
.LN4841:
// line 8723
	B[P1++] = R7;
.LN4842:
// line 8724
	B[P1++] = R7;
.LN4843:
// line 8725
	B[P1++] = R7;
.LN4844:
// line 8726
	B[P1++] = R7;
.LN4845:
// line 8728
	R6 = 0;
	P2.L = _Flag_K611;
	P2.H = _Flag_K611;
	B[P2] = R6;
	P5.L = _Flag_K612;
	P5.H = _Flag_K612;
.LN4846:
// line 8729
	B[P5] = R6;
	P2.L = _Flag_K613;
	P2.H = _Flag_K613;
.LN4847:
// line 8730
	B[P2] = R6;
	P5.L = _Flag_K615;
	P5.H = _Flag_K615;
.LN4848:
// line 8731
	B[P5] = R6;
.LN4849:
// line 8736
	R2 = B[P1 + 1] (Z);
	R7 = 2;
	R2 = DEPOSIT(R2, R7);
.LN4850:
// line 8737
	R4 = B[P1] (Z);
.LN4851:
// line 8741
	R0 = 514;
.LN4852:
// line 8736
	R2 = R2.b (Z);
.LN4853:
// line 8741
	BITSET(R0, 16);
	R0 = DEPOSIT(R2, R0);
	R2 = R0.b (Z);
.LN4854:
// line 8737
	R0 = 1026;
	R4 = DEPOSIT(R4, R0);
.LN4855:
// line 8742
	R0 = DEPOSIT(R2, R0);
.LN4856:
// line 8744
	R2 = 1028;
	P2.L = _Mem1+30;
	P2.H = _Mem1+30;
	R1 = R2;
.LN4857:
	R2 = B[P2] (Z);
.LN4858:
	R1.H = 12;
	R1 = DEPOSIT(R2, R1);
	B[P2] = R1;
.LN4859:
// line 8737
	R4 = R4.b (Z);
.LN4860:
// line 8738
	R1 = 1538;
	R4 = DEPOSIT(R4, R1);
.LN4861:
// line 8740
	R2 = 514;
.LN4862:
// line 8739
	R4 = DEPOSIT(R4, R7);
	R2.H = 3;
.LN4863:
// line 8740
	R2 = DEPOSIT(R4, R2);
.LN4864:
// line 8742
	R0 = R0.b (Z);
.LN4865:
// line 8740
	B[P1++] = R2;
.LN4866:
// line 8743
	R0 = DEPOSIT(R0, R1);
	P4.L = _Fcalibrovka;
	P4.H = _Fcalibrovka;
	B[P1] = R0;
.LN4867:
// line 8732
	B[P4 + 92] = R6;
.LN4868:
// line 8747
	B[P4 + 93] = R6;
	P2.L = _flag_event_sinhron;
	P2.H = _flag_event_sinhron;
.LN4869:
// line 8749
	B[P2] = R6;
.LN4870:
// line 8750
	B[P4 + 354] = R6;
.LN4871:
// line 8751
	B[P4 + 946] = R6;
	P5.L = _flag_event_K615_run;
	P5.H = _flag_event_K615_run;
.LN4872:
// line 8752
	B[P5] = R5;
	P1.L = _flag_K615_event;
	P1.H = _flag_K615_event;
.LN4873:
// line 8753
	B[P1] = R5;
.LN4874:
// line 8754
	R1 = W[P0] (X);
	BITCLR(R1, 10);
	W[P0] = R1.L;
	P2.L = _NUMBER_BLOK;
	P2.H = _NUMBER_BLOK;
.LN4875:
// line 8755
	R1 = B[P2] (X);
	B[P4 + 232] = R1;
.LN4876:
// line 8756
	B[P4 + 233] = R1;
.LN4877:
// line 8757
	R0 = 99;
	CALL.X (_Timer_INT2);
.LN4878:
// line 8758
	R0 = W[P0] (X);
	BITCLR(R0, 11);
	P3.L = .s.466;
	P3.H = .s.466;
	W[P0] = R0.L;
.LN4879:
// line 8760
	R1 = [P3 + 12];
	P5 = P4;
	[P4++] = R1;
	R2 = [P3 + 16];
	[P4++] = R2;
.LN4880:
// line 8761
	R4 = [P3 + 20];
	[P4++] = R4;
	R0 = [P3 + 24];
	[P4++] = R0;
.LN4881:
// line 8762
	R1 = [P3 + 28];
	[P4++] = R1;
	R2 = [P3 + 32];
.LN4882:
// line 8763
	R3 = 34464 (Z);
.LN4883:
// line 8762
	P1 = 508;
	[P4 ++ P1] = R2;
.LN4884:
// line 8763
	BITSET(R3, 16);
.LN4885:
// line 8765
	R4 = [P3 + 36];
.LN4886:
// line 8763
	[P4 + 92] = R3;
.LN4887:
// line 8765
	[P4++] = R4;
	R0 = [P3 + 40];
	[P4++] = R0;
.LN4888:
// line 8766
	R1 = [P3 + 44];
	[P4++] = R1;
	R2 = [P3 + 48];
	[P4++] = R2;
.LN4889:
// line 8771
	R3 = [P3 + 52];
.LN4890:
// line 8767
	B[P4 + 203] = R5;
.LN4891:
// line 8768
	B[P4 + 204] = R5;
.LN4892:
// line 8769
	B[P4 + 207] = R5;
.LN4893:
// line 8771
	[P4++] = R3;
	R0 = [P3 + 56];
	[P4++] = R0;
.LN4894:
// line 8772
	R1 = [P3 + 60];
	[P4++] = R1;
	R2 = [P3 + 64];
	[P4++] = R2;
.LN4895:
// line 8777
	R3 = [P3 + 68];
.LN4896:
// line 8773
	B[P4 + 198] = R5;
.LN4897:
// line 8774
	B[P4 + 189] = R5;
.LN4898:
// line 8775
	B[P4 + 192] = R5;
.LN4899:
// line 8777
	[P4++] = R3;
	R0 = [P3 + 72];
	[P4++] = R0;
.LN4900:
// line 8778
	R1 = [P3 + 76];
	[P4++] = R1;
	R2 = [P3 + 80];
	P1 = 36;
	[P4 ++ P1] = R2;
.LN4901:
// line 8783
	R0 = 24416;
.LN4902:
// line 8792
	R1 = 14;
.LN4903:
// line 8791
	R2 = 15;
.LN4904:
// line 8792
	[P4 + -148] = R1;
.LN4905:
// line 8791
	[P4 + -152] = R2;
.LN4906:
// line 8793
	B[P4 + -478] = R7;
.LN4907:
// line 8779
	B[P4 + 155] = R5;
.LN4908:
// line 8780
	B[P4 + 142] = R5;
.LN4909:
// line 8781
	B[P4 + 145] = R5;
.LN4910:
// line 8787
	[P4 + 28] = R5;
.LN4911:
// line 8788
	B[P4 + 8] = R6;
.LN4912:
// line 8790
	B[P4 + -546] = R5;
.LN4913:
// line 8795
	B[P4 + 146] = R5;
.LN4914:
// line 8796
	B[P4 + 147] = R5;
.LN4915:
// line 8797
	B[P4 + 148] = R5;
.LN4916:
// line 8798
	B[P4 + 149] = R5;
.LN4917:
// line 8783
	[P4 + 16] = R0;
.LN4918:
// line 8784
	[P4 + 20] = R0;
.LN4919:
// line 8785
	[P4 + 24] = R0;
.LN4920:
// line 8799
	B[P4++] = R6;
.LN4921:
// line 8800
	B[P4++] = R6;
.LN4922:
// line 8801
	B[P4] = R6;
	P1.L = _rx_wr_index0;
	P1.H = _rx_wr_index0;
.LN4923:
// line 8803
	[P1] = R6;
	P0.L = _rx_rd_index0;
	P0.H = _rx_rd_index0;
.LN4924:
// line 8804
	[P0] = R6;
	P2.L = _rx_counter0;
	P2.H = _rx_counter0;
.LN4925:
// line 8805
	[P2] = R6;
	R0 = P3;
.LN4926:
// line 8807
	CALL.X (_Transf);
.LN4927:
// line 8808
	R0 = -257 /* 2147483391 */;
	R0.H = 32767 /* 2147483391 */;
	[P5 + 284] = R0;
.LN4928:
// line 8809
	CALL.X (_Event_SPORT_RUN);
.LN4929:
// line 8810
	CALL.X (_BUF_clear);
.LN4930:
// line 8811
	R0 = 77;
	CALL.X (_INIT_START_PACHKA);
.LN4931:
// line 8812
	R0 = 0;
	CALL.X (_MU_TEST);
	P1.L = _flag_1HZ_sync;
	P1.H = _flag_1HZ_sync;
.LN4932:
// line 8813
	B[P1] = R6;
.LN4933:
// line 8814
	B[P4 + 330] = R5;
.LN4934:
// line 8815
	CALL.X (_TNO_SYNC);
	R7 = P3;
	R1 = -2432;
.LN4935:
// line 8817
	[P5 + 216] = R6;
	R0 = R7 + R1;
.LN4936:
// line 8818
	CALL.X (_IO);
.LN4937:
// line 8820
	R2 = 9999;
.LN4938:
// line 8819
	B[P4 + 80] = R6;
.LN4939:
// line 8820
	[P5 + 216] = R2;
.LN4940:
// line 8821
	SP += 12;
	(R7:4, P5:3) = [SP++];
	UNLINK;
	// -- 4 stalls --
	RTS;
.LN._start_init.end:
._start_init.end:
	.global _start_init;
	.type _start_init,STT_FUNC;

	.align 2;
_main:
.LN_main:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0-R2,P0-P2,I0,ASTAT0-ASTAT1,CC}
//  Call preserved registers used: {R4-R7,P4-P5,FP,SP}
//  Registers that could be clobbered by function calls: {R0-R3,P0-P2,I0-I3,B0-B3,M0-M3,A0-A1,ASTAT0-ASTAT1,CC,AQ,LC0-LC1,LT0-LT1,LB0-LB1,RETS,SEQSTAT,SYSCFG,USP}
//-------------------------------------------------------------------
// line "..\BFcom\main.c":8824
	LINK 12;

.P503L1:
.LN4941:
// line 8825
	R0 = 50;
	SYSCFG = R0;

.P503L2:
.LN4942:
// line 8826
	R1 = 4;
	R0 = 20;
	CALL.X (_Set_PLL);
.LN4943:
// line 8828
	CALL.X (_Init_Flags);
.LN4944:
// line 8829
	CALL.X (_Init_Timers);
.LN4945:
// line 8830
	R0 = 1;
	CALL.X (_spi_cs);
.LN4946:
// line 8831
	R1 = 0;
	R0 = 20;
	CALL.X (_SPIInit);
.LN4947:
// line 8832
	R2 = -6144;
	R7 = R2;
	R7.H = 3;
	R0 = R7;
	CALL.X (_UART_init);
.LN4948:
// line 8833
	R0 = -3968 /* 50000000 */;
	R0.H = 762 /* 50000000 */;
	CALL.X (_init_SPORT0);
.LN4949:
// line 8834
	R0 = R7;
	CALL.X (_init_SPORT1);
.LN4950:
// line 8837
	CALL.X (_Init_Interrupts);
	P1.L = _Master_flag;
	P1.H = _Master_flag;
	P0 = 527;
	P5 = P1 + P0;
.LN4951:
// line 8831
	R4 = 0;
.LN4952:
// line 8847
	R0 = 16959;
.LN4953:
// line 8846
	[P5++] = R4;
	R6 = R0;
.LN4954:
// line 8847
	R6.H = 15;
	P2.L = _time_sekund;
	P2.H = _time_sekund;
	I0.L = _sch_uart;
	I0.H = _sch_uart;
	P1 = -531;
	[P5 ++ P1] = R6;
.LN4955:
// line 8841
	[P2] = R4;
.LN4956:
// line 8845
	W[I0] = R4.L;
.LN4957:
// line 8850
	R1 = -13825;
	P0.L = _time_TNC_max;
	P0.H = _time_TNC_max;
.LN4958:
// line 8849
	[P0] = R4;
	R5 = R1;
.LN4959:
// line 8850
	R5.H = 15258;
	P2.L = _time_TNC_min;
	P2.H = _time_TNC_min;
	[P2] = R5;
	P1.L = _time_TNO_max;
	P1.H = _time_TNO_max;
.LN4960:
// line 8852
	[P1] = R4;
	P0.L = _time_TNO_min;
	P0.H = _time_TNO_min;
.LN4961:
// line 8853
	[P0] = R5;
	P2.L = _flag_1HZ_sync;
	P2.H = _flag_1HZ_sync;
.LN4962:
// line 8855
	B[P2] = R4;
	P4.L = _tick_process;
	P4.H = _tick_process;
.LN4963:
// line 8859
	[P4] = R4;
	R7.L = .s.6;
	R7.H = .s.6;
.LN4964:
// line 8861
	B[P5 + 272] = R4;
.LN4965:
// line 8865
	R0 = R7;
	CALL.X (_put_str1);
.LN4966:
// line 8866
	P1 = 1792 /* -4192512 */;
	P1.H = -64 /* -4192512 */;
	R0 = W[P1] (X);
	BITCLR(R0, 10);
	W[P1] = R0.L;
	R6 = 0;
.LN4967:
// line 8870
	R5 = 1000;

.P503L5:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 8868 col 5
//-------------------------------------------------------------------
	NOP;                                    // Inserted to fix anomaly w_05000245_with_boundaries. 
	R0 = [P4];                              // Use of volatile in loops precludes optimizations. 
	CC = R0 == R5;
	if !CC jump .P503L18 ;

.P503L6:
.LN4968:
// line 8873
	[P4] = R4;                              // Use of volatile in loops precludes optimizations. 
.LN4969:
// line 8874
	R0 = B[P5] (X);
	CC = R0 == 0;
	if !CC jump .P503L11 (bp);

.P503L9:
.LN4970:
	R0 = R6.b (Z);
.LN4971:
	CALL.X (_tst_out);

.P503L11:
.LN4972:
// line 8876
	R6 += 1;

.P503L18:
.LN4973:
// line 8868
	R0 = R6.b (Z);
.LN4974:
	R1 = 15;
.LN4975:
	CC = R0 < R1 (IU);
	if CC jump .P503L5 (bp);
//-------------------------------------------------------------------
//   End Loop L5
//-------------------------------------------------------------------

.P503L22:
//-------------------------------------------------------------------
//   Part of top level (no loop)
//-------------------------------------------------------------------
.LN4976:
// line 8880
	CALL.X (_UDP_TCP_setup);
.LN4977:
// line 8881
	CALL.X (_UDP_test);
.LN4978:
// line 8885
	[P4] = R4;
.LN4979:
// line 8894
	CALL.X (_start_init);
	R0 = 2544;
	R0 = R7 + R0;
.LN4980:
// line 8897
	CALL.X (_IO);

.P503L14:
//-------------------------------------------------------------------
//   Loop at "..\BFcom\main.c" line 8899 col 2
//-------------------------------------------------------------------
.LN4981:
// line 8901
	CALL.X (_UART_control);
.LN4982:
// line 8904
	R0 = B[P5 + 205] (Z);
	CC = R0 == 1;
	if !CC jump .P503L17 (bp);

.P503L15:
.LN4983:
	CALL.X (_WORK_REGIM);

.P503L17:
.LN4984:
// line 8907
	CALL.X (_UART_DMA_TX);
.LN4985:
// line 8908
	CALL.X (_UART_DMA_TX2);
	jump.s .P503L14;
//-------------------------------------------------------------------
//   End Loop L14
//-------------------------------------------------------------------
.LN._main.end:
._main.end:
	.global _main;
	.type _main,STT_FUNC;

	.file_attr ProjectName="NewProject";
.epctext.end:

	.extern ___unsigned_int32_to_float64;
	.type ___unsigned_int32_to_float64,STT_FUNC;
	.extern ___udiv32;
	.type ___udiv32,STT_FUNC;
	.extern ___float64_div;
	.type ___float64_div,STT_FUNC;
	.extern ___float64_mul;
	.type ___float64_mul,STT_FUNC;
	.extern ___float64_to_unsigned_int32_round_to_zero;
	.type ___float64_to_unsigned_int32_round_to_zero,STT_FUNC;
	.extern ___mulli3;
	.type ___mulli3,STT_FUNC;
	.extern ___divrem_u64;
	.type ___divrem_u64,STT_FUNC;
	.extern _strlen;
	.type _strlen,STT_FUNC;
	.extern ___divrem_s32;
	.type ___divrem_s32,STT_FUNC;
	.extern _loopback_udp;
	.type _loopback_udp,STT_FUNC;
	.extern _Init_TxUART_DMA;
	.type _Init_TxUART_DMA,STT_FUNC;
	.extern _TxUART_en;
	.type _TxUART_en,STT_FUNC;
	.extern __sprintf64;
	.type __sprintf64,STT_FUNC;
	.extern _Set_network;
	.type _Set_network,STT_FUNC;
	.extern _Init_DMA;
	.type _Init_DMA,STT_FUNC;
	.extern _Init_PPI;
	.type _Init_PPI,STT_FUNC;
	.extern ___unsigned_int64_to_float64;
	.type ___unsigned_int64_to_float64,STT_FUNC;
	.extern ___float64_adi_lt;
	.type ___float64_adi_lt,STT_FUNC;
	.extern _strcmp;
	.type _strcmp,STT_FUNC;
	.extern __Stoul;
	.type __Stoul,STT_FUNC;
	.extern _Set_PLL;
	.type _Set_PLL,STT_FUNC;
	.extern _Init_Flags;
	.type _Init_Flags,STT_FUNC;
	.extern _Init_Timers;
	.type _Init_Timers,STT_FUNC;
	.extern _SPIInit;
	.type _SPIInit,STT_FUNC;
	.extern _UART_init;
	.type _UART_init,STT_FUNC;
	.extern _init_SPORT0;
	.type _init_SPORT0,STT_FUNC;
	.extern _init_SPORT1;
	.type _init_SPORT1,STT_FUNC;
	.extern _Init_Interrupts;
	.type _Init_Interrupts,STT_FUNC;

	.section/DOUBLE64 data1;

	.align 4;
.epcdata:
	.type .epcdata,STT_OBJECT;
_Adress:
	.global _Adress;
	.type _Adress,STT_OBJECT;
	.byte =
		0x31;
	.byte _Master_flag[1];
	.global _Master_flag;
	.type _Master_flag,STT_OBJECT;
	.byte _FLAG_SPORT1_RX[1];
	.global _FLAG_SPORT1_RX;
	.type _FLAG_SPORT1_RX,STT_OBJECT;
	.byte _DataTr_flag[1];
	.global _DataTr_flag;
	.type _DataTr_flag,STT_OBJECT;
	.byte _Data_in_port[1];
	.global _Data_in_port;
	.type _Data_in_port,STT_OBJECT;
	.byte _DontConnect_flag[1];
	.global _DontConnect_flag;
	.type _DontConnect_flag,STT_OBJECT;
	.byte =
		0x00,0x00;
	.byte _CntDown[4];
	.global _CntDown;
	.type _CntDown,STT_OBJECT;
	.byte _CyclEnd_flag[1];
	.global _CyclEnd_flag;
	.type _CyclEnd_flag,STT_OBJECT;
	.byte _BufIsRead_flag[1];
	.global _BufIsRead_flag;
	.type _BufIsRead_flag,STT_OBJECT;
	.byte =
		0x00,0x00;
	.byte _lenght[4];
	.global _lenght;
	.type _lenght,STT_OBJECT;
	.byte _index1[4];
	.global _index1;
	.type _index1,STT_OBJECT;
	.byte _crc_ok[1];
	.global _crc_ok;
	.type _crc_ok,STT_OBJECT;
	.byte _packet_ok[1];
	.global _packet_ok;
	.type _packet_ok,STT_OBJECT;
	.byte _packet_flag[1];
	.global _packet_flag;
	.type _packet_flag,STT_OBJECT;
	.byte =
		0x00;
	.byte _index[4];
	.global _index;
	.type _index,STT_OBJECT;
	.byte _index_word[4];
	.global _index_word;
	.type _index_word,STT_OBJECT;
	.byte _index_data_word[4];
	.global _index_data_word;
	.type _index_data_word,STT_OBJECT;
	.byte _index_data_word2[4];
	.global _index_data_word2;
	.type _index_data_word2,STT_OBJECT;
	.byte _lenght_data[4];
	.global _lenght_data;
	.type _lenght_data,STT_OBJECT;
	.byte _data_flag[1];
	.global _data_flag;
	.type _data_flag,STT_OBJECT;
	.byte _data_flag2[1];
	.global _data_flag2;
	.type _data_flag2,STT_OBJECT;
	.byte _FLAG_lenght[1];
	.global _FLAG_lenght;
	.type _FLAG_lenght,STT_OBJECT;
	.byte =
		0x00;
	.byte _sch_lenght_data[4];
	.global _sch_lenght_data;
	.type _sch_lenght_data,STT_OBJECT;
	.byte _FLAG_DATA[1];
	.global _FLAG_DATA;
	.type _FLAG_DATA,STT_OBJECT;
	.byte =
		0x00;
	.byte _SCH_LENGHT_PACKET[2];
	.global _SCH_LENGHT_PACKET;
	.type _SCH_LENGHT_PACKET,STT_OBJECT;
	.byte _FLAG_CW[1];
	.global _FLAG_CW;
	.type _FLAG_CW,STT_OBJECT;
	.byte =
		0x00,0x00,0x00;
	.byte _crc_input[4];
	.global _crc_input;
	.type _crc_input,STT_OBJECT;
	.byte _crc_comp[4];
	.global _crc_comp;
	.type _crc_comp,STT_OBJECT;
	.byte _FLAG_RS485_OBMEN[1];
	.global _FLAG_RS485_OBMEN;
	.type _FLAG_RS485_OBMEN,STT_OBJECT;
	.byte _FLAG_RS485_OBMEN1[1];
	.global _FLAG_RS485_OBMEN1;
	.type _FLAG_RS485_OBMEN1,STT_OBJECT;
	.byte =
		0x00,0x00;
	.byte _FLAG_SCH_RS485_PACKET[4];
	.global _FLAG_SCH_RS485_PACKET;
	.type _FLAG_SCH_RS485_PACKET,STT_OBJECT;
	.byte _FLAG_SCH_RS485_PACKET_MAX[4];
	.global _FLAG_SCH_RS485_PACKET_MAX;
	.type _FLAG_SCH_RS485_PACKET_MAX,STT_OBJECT;
	.byte _FLAG_CRC_OK[1];
	.global _FLAG_CRC_OK;
	.type _FLAG_CRC_OK,STT_OBJECT;
	.byte =
		0x00,0x00,0x00;
	.byte _FLAG_SCH_RS485_OK_PACKET[4];
	.global _FLAG_SCH_RS485_OK_PACKET;
	.type _FLAG_SCH_RS485_OK_PACKET,STT_OBJECT;
	.byte _FLAG_SCH_RS485_OK_PACKET_MAX[4];
	.global _FLAG_SCH_RS485_OK_PACKET_MAX;
	.type _FLAG_SCH_RS485_OK_PACKET_MAX,STT_OBJECT;
	.byte _FLAG_EVENT_K615_UP[1];
	.global _FLAG_EVENT_K615_UP;
	.type _FLAG_EVENT_K615_UP,STT_OBJECT;
	.byte _FLAG_PF10[1];
	.global _FLAG_PF10;
	.type _FLAG_PF10,STT_OBJECT;
	.byte =
		0x00,0x00;
	.byte _FLAG_SCH_CRC485_BAD[4];
	.global _FLAG_SCH_CRC485_BAD;
	.type _FLAG_SCH_CRC485_BAD,STT_OBJECT;
	.byte _FLAG_SCH_CRC485_BAD_MAX[4];
	.global _FLAG_SCH_CRC485_BAD_MAX;
	.type _FLAG_SCH_CRC485_BAD_MAX,STT_OBJECT;
	.byte _SCH_7E_PAKET[4];
	.global _SCH_7E_PAKET;
	.type _SCH_7E_PAKET,STT_OBJECT;
	.byte _SCH_7E_PAKET_MAX[4];
	.global _SCH_7E_PAKET_MAX;
	.type _SCH_7E_PAKET_MAX,STT_OBJECT;
	.byte _SCH_7k_PAKET[4];
	.global _SCH_7k_PAKET;
	.type _SCH_7k_PAKET,STT_OBJECT;
	.byte _SCH_7k_PAKET_MAX[4];
	.global _SCH_7k_PAKET_MAX;
	.type _SCH_7k_PAKET_MAX,STT_OBJECT;
	.byte _SCH_7ok_PAKET[4];
	.global _SCH_7ok_PAKET;
	.type _SCH_7ok_PAKET,STT_OBJECT;
	.byte _SCH_7ok_PAKET_MAX[4];
	.global _SCH_7ok_PAKET_MAX;
	.type _SCH_7ok_PAKET_MAX,STT_OBJECT;
	.byte _FLAG_TNO_CONTR_1[1];
	.global _FLAG_TNO_CONTR_1;
	.type _FLAG_TNO_CONTR_1,STT_OBJECT;
	.byte =
		0x00,0x00,0x00;
	.byte _Number_TNC[4];
	.global _Number_TNC;
	.type _Number_TNC,STT_OBJECT;
	.byte _TIMER_RS485_OBMEN[4];
	.global _TIMER_RS485_OBMEN;
	.type _TIMER_RS485_OBMEN,STT_OBJECT;
	.byte _Fcalibrovka[8];
	.global _Fcalibrovka;
	.type _Fcalibrovka,STT_OBJECT;
	.byte _Fpomehi[8];
	.global _Fpomehi;
	.type _Fpomehi,STT_OBJECT;
	.byte _DevFpomehi[8];
	.global _DevFpomehi;
	.type _DevFpomehi,STT_OBJECT;
_test_TNC:
	.global _test_TNC;
	.type _test_TNC,STT_OBJECT;
	.byte =
		0xD1,0x07;
	.byte _FLAG_OUTPORT[1];
	.global _FLAG_OUTPORT;
	.type _FLAG_OUTPORT,STT_OBJECT;
	.byte _FLAG_EVENT_K615_RZRV[1];
	.global _FLAG_EVENT_K615_RZRV;
	.type _FLAG_EVENT_K615_RZRV,STT_OBJECT;
	.byte _REZERV_M[1];
	.global _REZERV_M;
	.type _REZERV_M,STT_OBJECT;
	.byte _FLAG_ERROR_INTERVALWORK[1];
	.global _FLAG_ERROR_INTERVALWORK;
	.type _FLAG_ERROR_INTERVALWORK,STT_OBJECT;
	.byte _FLAG_SEND1[1];
	.global _FLAG_SEND1;
	.type _FLAG_SEND1,STT_OBJECT;
	.byte _FLAG_SEND2[1];
	.global _FLAG_SEND2;
	.type _FLAG_SEND2,STT_OBJECT;
	.byte _FLAG_UPR_TKI[1];
	.global _FLAG_UPR_TKI;
	.type _FLAG_UPR_TKI,STT_OBJECT;
	.byte _FT_pit[1];
	.global _FT_pit;
	.type _FT_pit,STT_OBJECT;
	.byte _FT_pit_log[1];
	.global _FT_pit_log;
	.type _FT_pit_log,STT_OBJECT;
	.byte _FT_pit_log2[1];
	.global _FT_pit_log2;
	.type _FT_pit_log2,STT_OBJECT;
	.byte _FLAG_FT_pit[2];
	.global _FLAG_FT_pit;
	.type _FLAG_FT_pit,STT_OBJECT;
	.byte _FT_reg[1];
	.global _FT_reg;
	.type _FT_reg,STT_OBJECT;
	.byte _FT_reg_log[1];
	.global _FT_reg_log;
	.type _FT_reg_log,STT_OBJECT;
	.byte _FT_reg_log2[1];
	.global _FT_reg_log2;
	.type _FT_reg_log2,STT_OBJECT;
	.byte =
		0x00;
	.byte _FLAG_FT_reg[2];
	.global _FLAG_FT_reg;
	.type _FLAG_FT_reg,STT_OBJECT;
	.byte _j_pack[4];
	.global _j_pack;
	.type _j_pack,STT_OBJECT;
	.byte _flag_clear[1];
	.global _flag_clear;
	.type _flag_clear,STT_OBJECT;
	.byte _sch_plis_ppi[1];
	.global _sch_plis_ppi;
	.type _sch_plis_ppi,STT_OBJECT;
	.byte _flag_test_sync[1];
	.global _flag_test_sync;
	.type _flag_test_sync,STT_OBJECT;
_MASTER_CODE:
	.global _MASTER_CODE;
	.type _MASTER_CODE,STT_OBJECT;
	.byte =
		0xA1;
	.byte _sch_packet_UDP_reciv[4];
	.global _sch_packet_UDP_reciv;
	.type _sch_packet_UDP_reciv,STT_OBJECT;
	.byte _sch_packet_UDP_reciv_max[4];
	.global _sch_packet_UDP_reciv_max;
	.type _sch_packet_UDP_reciv_max,STT_OBJECT;
	.byte _FLAG_TST_UDP[1];
	.global _FLAG_TST_UDP;
	.type _FLAG_TST_UDP,STT_OBJECT;
	.byte _PPI_reg[1];
	.global _PPI_reg;
	.type _PPI_reg,STT_OBJECT;
	.byte _FLAG_REGIM[1];
	.global _FLAG_REGIM;
	.type _FLAG_REGIM,STT_OBJECT;
	.byte _FLAG_REGIM_init[1];
	.global _FLAG_REGIM_init;
	.type _FLAG_REGIM_init,STT_OBJECT;
	.byte _sch_tx_packet_max[2];
	.global _sch_tx_packet_max;
	.type _sch_tx_packet_max,STT_OBJECT;
	.byte =
		0x00,0x00;
	.byte _DELAY_RZV[4];
	.global _DELAY_RZV;
	.type _DELAY_RZV,STT_OBJECT;
	.byte _FLAG_MASTER_REZERV_DELAY[1];
	.global _FLAG_MASTER_REZERV_DELAY;
	.type _FLAG_MASTER_REZERV_DELAY,STT_OBJECT;
	.byte _FLAG_MASTER_BR_OK[1];
	.global _FLAG_MASTER_BR_OK;
	.type _FLAG_MASTER_BR_OK,STT_OBJECT;
	.byte _FLAG_BR_REM_OK[1];
	.global _FLAG_BR_REM_OK;
	.type _FLAG_BR_REM_OK,STT_OBJECT;
	.byte _FLAG_RAM_BR[1];
	.global _FLAG_RAM_BR;
	.type _FLAG_RAM_BR,STT_OBJECT;
	.byte _FLAG_ERR_TNI[1];
	.global _FLAG_ERR_TNI;
	.type _FLAG_ERR_TNI,STT_OBJECT;
	.byte _FLAG_ERR_TKI[1];
	.global _FLAG_ERR_TKI;
	.type _FLAG_ERR_TKI,STT_OBJECT;
	.byte _FLAG_ERR_TNP[1];
	.global _FLAG_ERR_TNP;
	.type _FLAG_ERR_TNP,STT_OBJECT;
	.byte _FLAG_ERR_TKP[1];
	.global _FLAG_ERR_TKP;
	.type _FLAG_ERR_TKP,STT_OBJECT;
	.byte _FLAG_BR_GBR_PROCESS[1];
	.global _FLAG_BR_GBR_PROCESS;
	.type _FLAG_BR_GBR_PROCESS,STT_OBJECT;
	.byte =
		0x00,0x00,0x00;
	.byte _TIMER_REZERV[4];
	.global _TIMER_REZERV;
	.type _TIMER_REZERV,STT_OBJECT;
	.byte _FLAG_BR_GBR[1];
	.global _FLAG_BR_GBR;
	.type _FLAG_BR_GBR,STT_OBJECT;
	.byte _FLAG_FIZL_ON[1];
	.global _FLAG_FIZL_ON;
	.type _FLAG_FIZL_ON,STT_OBJECT;
	.byte _Metka_F[1];
	.global _Metka_F;
	.type _Metka_F,STT_OBJECT;
	.byte _VCU_BOTTON[1];
	.global _VCU_BOTTON;
	.type _VCU_BOTTON,STT_OBJECT;
	.byte _sch_obmen[1];
	.global _sch_obmen;
	.type _sch_obmen,STT_OBJECT;
	.byte _Process_code[1];
	.global _Process_code;
	.type _Process_code,STT_OBJECT;
	.byte _Test_f_mono[1];
	.global _Test_f_mono;
	.type _Test_f_mono,STT_OBJECT;
	.byte =
		0x00;
	.byte _flag_ERROR_Timp[4];
	.global _flag_ERROR_Timp;
	.type _flag_ERROR_Timp,STT_OBJECT;
	.byte _DISP_flag_ERROR_Timp[4];
	.global _DISP_flag_ERROR_Timp;
	.type _DISP_flag_ERROR_Timp,STT_OBJECT;
	.byte _UDP_TCP_flag[1];
	.global _UDP_TCP_flag;
	.type _UDP_TCP_flag,STT_OBJECT;
	.byte _K615_indik[1];
	.global _K615_indik;
	.type _K615_indik,STT_OBJECT;
	.byte _Error_ethernet_obmen[1];
	.global _Error_ethernet_obmen;
	.type _Error_ethernet_obmen,STT_OBJECT;
	.byte =
		0x00;
	.byte _sch_event_sinhron_max[4];
	.global _sch_event_sinhron_max;
	.type _sch_event_sinhron_max,STT_OBJECT;
_sch_event_sinhron_min:
	.global _sch_event_sinhron_min;
	.type _sch_event_sinhron_min,STT_OBJECT;
	.byte =
		0xFF,0xE0,0xF5,0x05;
	.byte _sch_TNC_test[4];
	.global _sch_TNC_test;
	.type _sch_TNC_test,STT_OBJECT;
_flag_process:
	.global _flag_process;
	.type _flag_process,STT_OBJECT;
	.byte =
		0x01;
	.byte =
		0x00,0x00,0x00;
_delay_process:
	.global _delay_process;
	.type _delay_process,STT_OBJECT;
	.byte =
		0x32,0x00,0x00,0x00;
	.byte _flag_uart_trcv[1];
	.global _flag_uart_trcv;
	.type _flag_uart_trcv,STT_OBJECT;
	.byte _sync_flag[1];
	.global _sync_flag;
	.type _sync_flag,STT_OBJECT;
	.byte _sinc_type[1];
	.global _sinc_type;
	.type _sinc_type,STT_OBJECT;
	.byte =
		0x00;
	.byte _sch_sync_ethernet[4];
	.global _sch_sync_ethernet;
	.type _sch_sync_ethernet,STT_OBJECT;
	.byte _sch_sync_ethernet_max[4];
	.global _sch_sync_ethernet_max;
	.type _sch_sync_ethernet_max,STT_OBJECT;
	.byte _flag_form_packet_SDRAM[1];
	.global _flag_form_packet_SDRAM;
	.type _flag_form_packet_SDRAM,STT_OBJECT;
	.byte =
		0x00,0x00,0x00;
	.byte _tst_time1[4];
	.global _tst_time1;
	.type _tst_time1,STT_OBJECT;
	.byte _tst_time2[4];
	.global _tst_time2;
	.type _tst_time2,STT_OBJECT;
	.byte _tst_time3[4];
	.global _tst_time3;
	.type _tst_time3,STT_OBJECT;
	.byte _tst_time4[4];
	.global _tst_time4;
	.type _tst_time4,STT_OBJECT;
	.byte _tst_time5[4];
	.global _tst_time5;
	.type _tst_time5,STT_OBJECT;
	.byte _tst_time6[4];
	.global _tst_time6;
	.type _tst_time6,STT_OBJECT;
	.byte _tst_time7[4];
	.global _tst_time7;
	.type _tst_time7,STT_OBJECT;
	.byte _tst_time8[4];
	.global _tst_time8;
	.type _tst_time8,STT_OBJECT;
	.byte _tst_time9[4];
	.global _tst_time9;
	.type _tst_time9,STT_OBJECT;
	.byte _tst_timeA[4];
	.global _tst_timeA;
	.type _tst_timeA,STT_OBJECT;
	.byte _tst_timeB[4];
	.global _tst_timeB;
	.type _tst_timeB,STT_OBJECT;
_test_Ntin:
	.global _test_Ntin;
	.type _test_Ntin,STT_OBJECT;
	.byte =
		0x01,0x00,0x00,0x00;
_test_Ntik:
	.global _test_Ntik;
	.type _test_Ntik,STT_OBJECT;
	.byte =
		0x01,0x00,0x00,0x00;
_test_Ntpn:
	.global _test_Ntpn;
	.type _test_Ntpn,STT_OBJECT;
	.byte =
		0x03,0x00,0x00,0x00;
_test_Ntpk:
	.global _test_Ntpk;
	.type _test_Ntpk,STT_OBJECT;
	.byte =
		0x03,0x00,0x00,0x00;
	.byte _TNC_test[4];
	.global _TNC_test;
	.type _TNC_test,STT_OBJECT;
	.byte _tst_time_max[4];
	.global _tst_time_max;
	.type _tst_time_max,STT_OBJECT;
	.byte _tst_time_delta[4];
	.global _tst_time_delta;
	.type _tst_time_delta,STT_OBJECT;
	.byte _TIMER_AVARIYA[4];
	.global _TIMER_AVARIYA;
	.type _TIMER_AVARIYA,STT_OBJECT;
	.byte _TIMER_UDP_LS_DOWN[4];
	.global _TIMER_UDP_LS_DOWN;
	.type _TIMER_UDP_LS_DOWN,STT_OBJECT;
	.byte _flag_ERROR_CRC_control_word[1];
	.global _flag_ERROR_CRC_control_word;
	.type _flag_ERROR_CRC_control_word,STT_OBJECT;
	.byte _flag_ERROR_END_packet[1];
	.global _flag_ERROR_END_packet;
	.type _flag_ERROR_END_packet,STT_OBJECT;
	.byte =
		0x00,0x00;
	.byte _sch_ERROR_CRC_control_word[4];
	.global _sch_ERROR_CRC_control_word;
	.type _sch_ERROR_CRC_control_word,STT_OBJECT;
	.byte _CODE_REZERV[1];
	.global _CODE_REZERV;
	.type _CODE_REZERV,STT_OBJECT;
	.byte _CODE_REZERV_soft[1];
	.global _CODE_REZERV_soft;
	.type _CODE_REZERV_soft,STT_OBJECT;
	.byte =
		0x00,0x00;
	.byte _TIMER_GBR_OK[4];
	.global _TIMER_GBR_OK;
	.type _TIMER_GBR_OK,STT_OBJECT;
	.byte _EVENT_REZERV[1];
	.global _EVENT_REZERV;
	.type _EVENT_REZERV,STT_OBJECT;
	.byte =
		0x00,0x00,0x00;
	.byte _FLAG_SCH_NEW_BUF[4];
	.global _FLAG_SCH_NEW_BUF;
	.type _FLAG_SCH_NEW_BUF,STT_OBJECT;
	.byte _FLAG_SCH_NEW_BUF_MAX[4];
	.global _FLAG_SCH_NEW_BUF_MAX;
	.type _FLAG_SCH_NEW_BUF_MAX,STT_OBJECT;
	.byte _tst_time_KUK1[4];
	.global _tst_time_KUK1;
	.type _tst_time_KUK1,STT_OBJECT;
	.byte _tst_time_KUK2[4];
	.global _tst_time_KUK2;
	.type _tst_time_KUK2,STT_OBJECT;
	.byte _FLAG_ERROR_Nimp[4];
	.global _FLAG_ERROR_Nimp;
	.type _FLAG_ERROR_Nimp,STT_OBJECT;
	.byte _flag_ERROR_CRC_control_word2[4];
	.global _flag_ERROR_CRC_control_word2;
	.type _flag_ERROR_CRC_control_word2,STT_OBJECT;
	.byte _flag_FAIL_PPI[4];
	.global _flag_FAIL_PPI;
	.type _flag_FAIL_PPI,STT_OBJECT;
	.byte _flag_Avariya_TNC[4];
	.global _flag_Avariya_TNC;
	.type _flag_Avariya_TNC,STT_OBJECT;
	.byte _TNC0_packet[1];
	.global _TNC0_packet;
	.type _TNC0_packet,STT_OBJECT;
	.byte _RESET_packet[1];
	.global _RESET_packet;
	.type _RESET_packet,STT_OBJECT;
	.byte =
		0x00,0x00;
	.byte _SPORT_VAR[4];
	.global _SPORT_VAR;
	.type _SPORT_VAR,STT_OBJECT;
_ERROR_FLAG:
	.global _ERROR_FLAG;
	.type _ERROR_FLAG,STT_OBJECT;
	.byte =
		0xF3,0xFE,0xFF,0x7F;
	.byte _BR_GBR_FLAG[1];
	.global _BR_GBR_FLAG;
	.type _BR_GBR_FLAG,STT_OBJECT;
_WORK_TU_FLAG:
	.global _WORK_TU_FLAG;
	.type _WORK_TU_FLAG,STT_OBJECT;
	.byte =
		0x77;
	.byte _FLAG_UART_K607[1];
	.global _FLAG_UART_K607;
	.type _FLAG_UART_K607,STT_OBJECT;
	.byte _VKL_COM_FT[1];
	.global _VKL_COM_FT;
	.type _VKL_COM_FT,STT_OBJECT;
	.byte _REZERV_INT1[1];
	.global _REZERV_INT1;
	.type _REZERV_INT1,STT_OBJECT;
	.byte =
		0x00,0x00,0x00;
	.byte _FLAG_VCU_SYNC_ERROR[4];
	.global _FLAG_VCU_SYNC_ERROR;
	.type _FLAG_VCU_SYNC_ERROR,STT_OBJECT;
	.byte _FLAG_VCU_SYNC_ERROR_max[4];
	.global _FLAG_VCU_SYNC_ERROR_max;
	.type _FLAG_VCU_SYNC_ERROR_max,STT_OBJECT;
	.byte _flag_UDP_OBMEN[4];
	.global _flag_UDP_OBMEN;
	.type _flag_UDP_OBMEN,STT_OBJECT;
	.byte _FLAG_TST_UDP_BUF[1];
	.global _FLAG_TST_UDP_BUF;
	.type _FLAG_TST_UDP_BUF,STT_OBJECT;
	.byte =
		0x00,0x00,0x00;
	.byte _TNC_actual_old[4];
	.global _TNC_actual_old;
	.type _TNC_actual_old,STT_OBJECT;
	.byte _FLAG_VCU_SYNC_UP[1];
	.global _FLAG_VCU_SYNC_UP;
	.type _FLAG_VCU_SYNC_UP,STT_OBJECT;
_FLAG_TEST_SEV:
	.global _FLAG_TEST_SEV;
	.type _FLAG_TEST_SEV,STT_OBJECT;
	.byte =
		0x01;
	.byte _FLAG_ERROR_SYNC_VIEV[1];
	.global _FLAG_ERROR_SYNC_VIEV;
	.type _FLAG_ERROR_SYNC_VIEV,STT_OBJECT;
	.byte _STATUS_B610[1];
	.global _STATUS_B610;
	.type _STATUS_B610,STT_OBJECT;
	.byte _STATUS_B610_INF[1];
	.global _STATUS_B610_INF;
	.type _STATUS_B610_INF,STT_OBJECT;
	.byte _SYS_HELTH_B610[1];
	.global _SYS_HELTH_B610;
	.type _SYS_HELTH_B610,STT_OBJECT;
	.byte _FLAG_WORK_B610[1];
	.global _FLAG_WORK_B610;
	.type _FLAG_WORK_B610,STT_OBJECT;
	.byte _FLAG_TKP_TNO_TRUE[1];
	.global _FLAG_TKP_TNO_TRUE;
	.type _FLAG_TKP_TNO_TRUE,STT_OBJECT;
	.byte _FLAG_TIMER_UART_K614[4];
	.global _FLAG_TIMER_UART_K614;
	.type _FLAG_TIMER_UART_K614,STT_OBJECT;
	.byte _FLAG_INIT_UART[1];
	.global _FLAG_INIT_UART;
	.type _FLAG_INIT_UART,STT_OBJECT;
	.byte =
		0x00,0x00,0x00;
	.byte _FLAG_SCH_TX485[4];
	.global _FLAG_SCH_TX485;
	.type _FLAG_SCH_TX485,STT_OBJECT;
	.byte _FLAG_SCH_TX485_MAX[4];
	.global _FLAG_SCH_TX485_MAX;
	.type _FLAG_SCH_TX485_MAX,STT_OBJECT;
	.byte _TIME3_PPI_START_MAX[4];
	.global _TIME3_PPI_START_MAX;
	.type _TIME3_PPI_START_MAX,STT_OBJECT;
	.byte _FLAG_ETHERNET_INIT[1];
	.global _FLAG_ETHERNET_INIT;
	.type _FLAG_ETHERNET_INIT,STT_OBJECT;
	.byte _FLAG_MASTER_REZERV_disp[1];
	.global _FLAG_MASTER_REZERV_disp;
	.type _FLAG_MASTER_REZERV_disp,STT_OBJECT;
	.byte _FLAG_START_OBZOR[1];
	.global _FLAG_START_OBZOR;
	.type _FLAG_START_OBZOR,STT_OBJECT;
	.byte =
		0x00;
	.byte _Gamma[4];
	.global _Gamma;
	.type _Gamma,STT_OBJECT;
	.byte _flag_END_sync_packet_vsp[1];
	.global _flag_END_sync_packet_vsp;
	.type _flag_END_sync_packet_vsp,STT_OBJECT;
	.byte _flag_TNO_TRUE[1];
	.global _flag_TNO_TRUE;
	.type _flag_TNO_TRUE,STT_OBJECT;
	.byte _START_packet[1];
	.global _START_packet;
	.type _START_packet,STT_OBJECT;
	.byte _flag_NUMBER_pachki[1];
	.global _flag_NUMBER_pachki;
	.type _flag_NUMBER_pachki,STT_OBJECT;
	.byte _flag_TNC_UP[1];
	.global _flag_TNC_UP;
	.type _flag_TNC_UP,STT_OBJECT;
	.byte _flag_time_test[1];
	.global _flag_time_test;
	.type _flag_time_test,STT_OBJECT;
	.byte _flag_STOP_ALL_WORK[1];
	.global _flag_STOP_ALL_WORK;
	.type _flag_STOP_ALL_WORK,STT_OBJECT;
	.byte =
		0x00;
	.byte _index_Packet_form[4];
	.global _index_Packet_form;
	.type _index_Packet_form,STT_OBJECT;
	.byte _index_END_TKP_form[4];
	.global _index_END_TKP_form;
	.type _index_END_TKP_form,STT_OBJECT;
	.byte _index_END_TKI_form[4];
	.global _index_END_TKI_form;
	.type _index_END_TKI_form,STT_OBJECT;
	.byte _TNO_work1[4];
	.global _TNO_work1;
	.type _TNO_work1,STT_OBJECT;
	.byte _TNO_work2[4];
	.global _TNO_work2;
	.type _TNO_work2,STT_OBJECT;
	.byte _sch_tst_pachek[4];
	.global _sch_tst_pachek;
	.type _sch_tst_pachek,STT_OBJECT;
	.byte _sch_tst_pachek_max[4];
	.global _sch_tst_pachek_max;
	.type _sch_tst_pachek_max,STT_OBJECT;
	.byte _sch_tst_pachek_min[4];
	.global _sch_tst_pachek_min;
	.type _sch_tst_pachek_min,STT_OBJECT;
_Delta_TNC:
	.global _Delta_TNC;
	.type _Delta_TNC,STT_OBJECT;
	.byte =
		0xFF,0xFF,0xFF,0xFF;
_Delta_TNC_old:
	.global _Delta_TNC_old;
	.type _Delta_TNC_old,STT_OBJECT;
	.byte =
		0xFF,0xFF,0xFF,0xFF;
_Delta_TNC_old2:
	.global _Delta_TNC_old2;
	.type _Delta_TNC_old2,STT_OBJECT;
	.byte =
		0xFF,0xFF,0xFF,0xFF;
_Delta_TNC_work:
	.global _Delta_TNC_work;
	.type _Delta_TNC_work,STT_OBJECT;
	.byte =
		0xFF,0xFF,0xFF,0xFF;
	.byte _displey[1];
	.global _displey;
	.type _displey,STT_OBJECT;
	.byte _FLAG_EVENT_to_K607[1];
	.global _FLAG_EVENT_to_K607;
	.type _FLAG_EVENT_to_K607,STT_OBJECT;
	.byte _FLAG_SYNC_SEV[1];
	.global _FLAG_SYNC_SEV;
	.type _FLAG_SYNC_SEV,STT_OBJECT;
	.byte _FLAG_DELAY_TNO[1];
	.global _FLAG_DELAY_TNO;
	.type _FLAG_DELAY_TNO,STT_OBJECT;
	.byte _FLAG_K615_LED[1];
	.global _FLAG_K615_LED;
	.type _FLAG_K615_LED,STT_OBJECT;
	.byte =
		0x00,0x00,0x00;
	.byte _tst_time_sev1[4];
	.global _tst_time_sev1;
	.type _tst_time_sev1,STT_OBJECT;
	.byte _tst_time_sev2[4];
	.global _tst_time_sev2;
	.type _tst_time_sev2,STT_OBJECT;
	.byte _tst_time_sev3[4];
	.global _tst_time_sev3;
	.type _tst_time_sev3,STT_OBJECT;
	.byte _tst_time_sev4[4];
	.global _tst_time_sev4;
	.type _tst_time_sev4,STT_OBJECT;
	.byte _TNI_Timp[4];
	.global _TNI_Timp;
	.type _TNI_Timp,STT_OBJECT;
	.byte _TKI_Timp[4];
	.global _TKI_Timp;
	.type _TKI_Timp,STT_OBJECT;
	.byte _TNP_Timp[4];
	.global _TNP_Timp;
	.type _TNP_Timp,STT_OBJECT;
	.byte _TKP_Timp[4];
	.global _TKP_Timp;
	.type _TKP_Timp,STT_OBJECT;
	.byte _TNC_Timp[4];
	.global _TNC_Timp;
	.type _TNC_Timp,STT_OBJECT;
	.byte _TNO_Timp[4];
	.global _TNO_Timp;
	.type _TNO_Timp,STT_OBJECT;
_TST_Dni:
	.global _TST_Dni;
	.type _TST_Dni,STT_OBJECT;
	.byte =
		0x0F,0x00,0x00,0x00;
_TST_Dnp:
	.global _TST_Dnp;
	.type _TST_Dnp,STT_OBJECT;
	.byte =
		0x0E,0x00,0x00,0x00;
	.byte _ERROR_TN_FLAG[1];
	.global _ERROR_TN_FLAG;
	.type _ERROR_TN_FLAG,STT_OBJECT;
	.byte =
		0x00;
	.byte _FLAG_ERROR_PPI[2];
	.global _FLAG_ERROR_PPI;
	.type _FLAG_ERROR_PPI,STT_OBJECT;
	.byte _Time_before_TOBM_1[4];
	.global _Time_before_TOBM_1;
	.type _Time_before_TOBM_1,STT_OBJECT;
	.byte _Time_before_TOBM_2[4];
	.global _Time_before_TOBM_2;
	.type _Time_before_TOBM_2,STT_OBJECT;
	.byte _TIMER1_IZL[4];
	.global _TIMER1_IZL;
	.type _TIMER1_IZL,STT_OBJECT;
	.byte _TIMER2_IZL[4];
	.global _TIMER2_IZL;
	.type _TIMER2_IZL,STT_OBJECT;
	.byte _TIMER1_PRI[4];
	.global _TIMER1_PRI;
	.type _TIMER1_PRI,STT_OBJECT;
	.byte _TIMER2_PRI[4];
	.global _TIMER2_PRI;
	.type _TIMER2_PRI,STT_OBJECT;
	.byte _INTERVAL_IZL[4];
	.global _INTERVAL_IZL;
	.type _INTERVAL_IZL,STT_OBJECT;
	.byte _INTERVAL_PRI[4];
	.global _INTERVAL_PRI;
	.type _INTERVAL_PRI,STT_OBJECT;
	.byte _INTERVAL_IZL_zad[4];
	.global _INTERVAL_IZL_zad;
	.type _INTERVAL_IZL_zad,STT_OBJECT;
	.byte _INTERVAL_PRI_zad[4];
	.global _INTERVAL_PRI_zad;
	.type _INTERVAL_PRI_zad,STT_OBJECT;
	.byte _ERROR_SCH_IZL[4];
	.global _ERROR_SCH_IZL;
	.type _ERROR_SCH_IZL,STT_OBJECT;
	.byte _ERROR_SCH_GET[4];
	.global _ERROR_SCH_GET;
	.type _ERROR_SCH_GET,STT_OBJECT;
	.byte _FLAG_OK_DELAY[1];
	.global _FLAG_OK_DELAY;
	.type _FLAG_OK_DELAY,STT_OBJECT;
_FLAG_DSP_text_CIKL:
	.global _FLAG_DSP_text_CIKL;
	.type _FLAG_DSP_text_CIKL,STT_OBJECT;
	.byte =
		0x01;
	.byte =
		0x00,0x00;
_DELAY_CONTROL:
	.global _DELAY_CONTROL;
	.type _DELAY_CONTROL,STT_OBJECT;
	.byte =
		0x32,0x00,0x00,0x00;
_D_obzor:
	.global _D_obzor;
	.type _D_obzor,STT_OBJECT;
	.byte =
		0x04,0x00,0x00,0x00;
_F0_FS_TST:
	.global _F0_FS_TST;
	.type _F0_FS_TST,STT_OBJECT;
	.byte =
		0x80,0x47,0xA1,0x19,0x00,0x00,0x00,0x00;
_F0_FG_TST:
	.global _F0_FG_TST;
	.type _F0_FG_TST,STT_OBJECT;
	.byte =
		0x40,0xAB,0x2F,0x17,0x00,0x00,0x00,0x00;
_F1_FS_TST:
	.global _F1_FS_TST;
	.type _F1_FS_TST,STT_OBJECT;
	.byte =
		0x80,0x47,0xA1,0x19,0x00,0x00,0x00,0x00;
_F1_FG_TST:
	.global _F1_FG_TST;
	.type _F1_FG_TST,STT_OBJECT;
	.byte =
		0x40,0xAB,0x2F,0x17,0x00,0x00,0x00,0x00;
_F2_FS_TST:
	.global _F2_FS_TST;
	.type _F2_FS_TST,STT_OBJECT;
	.byte =
		0x80,0x47,0xA1,0x19,0x00,0x00,0x00,0x00;
_F2_FG_TST:
	.global _F2_FG_TST;
	.type _F2_FG_TST,STT_OBJECT;
	.byte =
		0x40,0xAB,0x2F,0x17,0x00,0x00,0x00,0x00;
	.byte _Fmax_tst[8];
	.global _Fmax_tst;
	.type _Fmax_tst,STT_OBJECT;
	.byte _F_tst[8];
	.global _F_tst;
	.type _F_tst,STT_OBJECT;
	.byte _DEVmax_tst[4];
	.global _DEVmax_tst;
	.type _DEVmax_tst,STT_OBJECT;
	.byte _DEV_tst[4];
	.global _DEV_tst;
	.type _DEV_tst,STT_OBJECT;
_Dni_MIN:
	.global _Dni_MIN;
	.type _Dni_MIN,STT_OBJECT;
	.byte =
		0x0F,0x27,0x00,0x00;
_Dnp_MIN:
	.global _Dnp_MIN;
	.type _Dnp_MIN,STT_OBJECT;
	.byte =
		0x0F,0x27,0x00,0x00;
	.byte _SYNC_PILA[1];
	.global _SYNC_PILA;
	.type _SYNC_PILA,STT_OBJECT;
	.byte _SYNC_PILA2[1];
	.global _SYNC_PILA2;
	.type _SYNC_PILA2,STT_OBJECT;
	.byte _SYNC_PILA3[1];
	.global _SYNC_PILA3;
	.type _SYNC_PILA3,STT_OBJECT;
	.byte =
		0x00;
	.byte _SYNC_PILA_TST[4];
	.global _SYNC_PILA_TST;
	.type _SYNC_PILA_TST,STT_OBJECT;
	.byte _N_tempov[1];
	.global _N_tempov;
	.type _N_tempov,STT_OBJECT;
	.byte =
		0x00,0x00,0x00;
_DevF_TST:
	.global _DevF_TST;
	.type _DevF_TST,STT_OBJECT;
	.byte =
		0x40,0x42,0x0F,0x00;
_Timp_TST:
	.global _Timp_TST;
	.type _Timp_TST,STT_OBJECT;
	.byte =
		0x40,0x9C,0x00,0x00;
_TimpIZ_TST:
	.global _TimpIZ_TST;
	.type _TimpIZ_TST,STT_OBJECT;
	.byte =
		0x40,0x9C,0x00,0x00;
_TimpPR_TST:
	.global _TimpPR_TST;
	.type _TimpPR_TST,STT_OBJECT;
	.byte =
		0x40,0x9C,0x00,0x00;
_Nimp_TST:
	.global _Nimp_TST;
	.type _Nimp_TST,STT_OBJECT;
	.byte =
		0x01,0x00,0x00,0x00;
_Tinterv_TST:
	.global _Tinterv_TST;
	.type _Tinterv_TST,STT_OBJECT;
	.byte =
		0x64,0x00,0x00,0x00;
	.byte _Sintez1_ERROR[1];
	.global _Sintez1_ERROR;
	.type _Sintez1_ERROR,STT_OBJECT;
	.byte _Sintez2_ERROR[1];
	.global _Sintez2_ERROR;
	.type _Sintez2_ERROR,STT_OBJECT;
	.byte _FOCH_ERROR[1];
	.global _FOCH_ERROR;
	.type _FOCH_ERROR,STT_OBJECT;
	.byte _ERROR64_FLAG[1];
	.global _ERROR64_FLAG;
	.type _ERROR64_FLAG,STT_OBJECT;
	.byte _FLAG_MASTER_REZERV[1];
	.global _FLAG_MASTER_REZERV;
	.type _FLAG_MASTER_REZERV,STT_OBJECT;
	.byte _TST_OUT_CODE[1];
	.global _TST_OUT_CODE;
	.type _TST_OUT_CODE,STT_OBJECT;
	.byte =
		0x00,0x00;
	.byte _tick_wait_LED_ERROR[4];
	.global _tick_wait_LED_ERROR;
	.type _tick_wait_LED_ERROR,STT_OBJECT;
	.byte _FLAG_ERROR_UP[1];
	.global _FLAG_ERROR_UP;
	.type _FLAG_ERROR_UP,STT_OBJECT;
	.byte _FLAG_OK_UP[1];
	.global _FLAG_OK_UP;
	.type _FLAG_OK_UP,STT_OBJECT;
	.byte =
		0x00,0x00;
	.byte _DELAY_ADR[4];
	.global _DELAY_ADR;
	.type _DELAY_ADR,STT_OBJECT;
	.byte _FLAG_SCH_SEV_pachka[4];
	.global _FLAG_SCH_SEV_pachka;
	.type _FLAG_SCH_SEV_pachka,STT_OBJECT;
	.byte _FLAG_SCH_KUK_pachka[4];
	.global _FLAG_SCH_KUK_pachka;
	.type _FLAG_SCH_KUK_pachka,STT_OBJECT;
	.byte _TST_RX8[1];
	.global _TST_RX8;
	.type _TST_RX8,STT_OBJECT;
	.byte _CRC_RX8[1];
	.global _CRC_RX8;
	.type _CRC_RX8,STT_OBJECT;
	.byte _FLG_B610[1];
	.global _FLG_B610;
	.type _FLG_B610,STT_OBJECT;
	.byte _FLG_K601[1];
	.global _FLG_K601;
	.type _FLG_K601,STT_OBJECT;
	.byte _FLG_K602[1];
	.global _FLG_K602;
	.type _FLG_K602,STT_OBJECT;
	.byte _FLG_K603[1];
	.global _FLG_K603;
	.type _FLG_K603,STT_OBJECT;
	.byte _FLG_K604[1];
	.global _FLG_K604;
	.type _FLG_K604,STT_OBJECT;
	.byte _FLG_K605[1];
	.global _FLG_K605;
	.type _FLG_K605,STT_OBJECT;
	.byte _FLG_K607[1];
	.global _FLG_K607;
	.type _FLG_K607,STT_OBJECT;
	.byte _FLG_K608[1];
	.global _FLG_K608;
	.type _FLG_K608,STT_OBJECT;
	.byte _FLG_K611[1];
	.global _FLG_K611;
	.type _FLG_K611,STT_OBJECT;
	.byte _FLG_K612[1];
	.global _FLG_K612;
	.type _FLG_K612,STT_OBJECT;
	.byte _FLG_K613[1];
	.global _FLG_K613;
	.type _FLG_K613,STT_OBJECT;
	.byte _FLG_K614[1];
	.global _FLG_K614;
	.type _FLG_K614,STT_OBJECT;
	.byte _FLG_K614_1[1];
	.global _FLG_K614_1;
	.type _FLG_K614_1,STT_OBJECT;
	.byte _FLG_K615[1];
	.global _FLG_K615;
	.type _FLG_K615,STT_OBJECT;
	.byte _FLG_K616[1];
	.global _FLG_K616;
	.type _FLG_K616,STT_OBJECT;
	.byte _FLG_CLK[1];
	.global _FLG_CLK;
	.type _FLG_CLK,STT_OBJECT;
	.byte _FLAG_START_WORK[1];
	.global _FLAG_START_WORK;
	.type _FLAG_START_WORK,STT_OBJECT;
	.byte =
		0x00;
	.byte _TIME_LOCAL[4];
	.global _TIME_LOCAL;
	.type _TIME_LOCAL,STT_OBJECT;
	.byte _Code_error[1];
	.global _Code_error;
	.type _Code_error,STT_OBJECT;
	.byte _Norm_ohlagdeniya[1];
	.global _Norm_ohlagdeniya;
	.type _Norm_ohlagdeniya,STT_OBJECT;
	.byte _PriemNi[1];
	.global _PriemNi;
	.type _PriemNi,STT_OBJECT;
	.byte _Vikl[1];
	.global _Vikl;
	.type _Vikl,STT_OBJECT;
	.byte _GBR[1];
	.global _GBR;
	.type _GBR,STT_OBJECT;
	.byte _BR[1];
	.global _BR;
	.type _BR,STT_OBJECT;
	.byte _CU_MU[1];
	.global _CU_MU;
	.type _CU_MU,STT_OBJECT;
	.byte _T_norma[1];
	.global _T_norma;
	.type _T_norma,STT_OBJECT;
	.byte _Pred_avariya[1];
	.global _Pred_avariya;
	.type _Pred_avariya,STT_OBJECT;
	.byte _Norma_amplifer[1];
	.global _Norma_amplifer;
	.type _Norma_amplifer,STT_OBJECT;
	.byte _Norma_pitaniyaFT[1];
	.global _Norma_pitaniyaFT;
	.type _Norma_pitaniyaFT,STT_OBJECT;
	.byte _Avariya_blokov[1];
	.global _Avariya_blokov;
	.type _Avariya_blokov,STT_OBJECT;
	.byte _Rezerv1[1];
	.global _Rezerv1;
	.type _Rezerv1,STT_OBJECT;
	.byte _Norma_IVE[1];
	.global _Norma_IVE;
	.type _Norma_IVE,STT_OBJECT;
	.byte _Rezerv2[1];
	.global _Rezerv2;
	.type _Rezerv2,STT_OBJECT;
	.byte _Rezerv3[1];
	.global _Rezerv3;
	.type _Rezerv3,STT_OBJECT;
	.byte _Rezerv4[1];
	.global _Rezerv4;
	.type _Rezerv4,STT_OBJECT;
	.byte _Rezerv5[1];
	.global _Rezerv5;
	.type _Rezerv5,STT_OBJECT;
	.byte _Nomer_rezer_amplifer_FT[1];
	.global _Nomer_rezer_amplifer_FT;
	.type _Nomer_rezer_amplifer_FT,STT_OBJECT;
	.byte _Knc_min[1];
	.global _Knc_min;
	.type _Knc_min,STT_OBJECT;
	.byte _Knc_10sec[1];
	.global _Knc_10sec;
	.type _Knc_10sec,STT_OBJECT;
	.byte _Knc_sec[1];
	.global _Knc_sec;
	.type _Knc_sec,STT_OBJECT;
	.byte _Knc_100ms[1];
	.global _Knc_100ms;
	.type _Knc_100ms,STT_OBJECT;
	.byte _Knc_10ms[1];
	.global _Knc_10ms;
	.type _Knc_10ms,STT_OBJECT;
	.byte _Knc_ms[1];
	.global _Knc_ms;
	.type _Knc_ms,STT_OBJECT;
	.byte _Knc_100us[1];
	.global _Knc_100us;
	.type _Knc_100us,STT_OBJECT;
	.byte _Knc_10us[1];
	.global _Knc_10us;
	.type _Knc_10us,STT_OBJECT;
	.byte _Knc_us[1];
	.global _Knc_us;
	.type _Knc_us,STT_OBJECT;
	.byte _Mypr_min[1];
	.global _Mypr_min;
	.type _Mypr_min,STT_OBJECT;
	.byte _Mypr_hour[1];
	.global _Mypr_hour;
	.type _Mypr_hour,STT_OBJECT;
	.byte _Mypr_day[1];
	.global _Mypr_day;
	.type _Mypr_day,STT_OBJECT;
	.byte =
		0x00;
	.byte _CONTROL_CRC[2];
	.global _CONTROL_CRC;
	.type _CONTROL_CRC,STT_OBJECT;
	.byte _Msg_ZAPRET_REZ[1];
	.global _Msg_ZAPRET_REZ;
	.type _Msg_ZAPRET_REZ,STT_OBJECT;
	.byte _LoK_WEB[1];
	.global _LoK_WEB;
	.type _LoK_WEB,STT_OBJECT;
	.byte _NILS_REZERV[1];
	.global _NILS_REZERV;
	.type _NILS_REZERV,STT_OBJECT;
	.byte _RZV_LS[1];
	.global _RZV_LS;
	.type _RZV_LS,STT_OBJECT;
	.byte _KFK[2];
	.global _KFK;
	.type _KFK,STT_OBJECT;
	.byte _NNI[1];
	.global _NNI;
	.type _NNI,STT_OBJECT;
	.byte _RC_KTV_T5M[1];
	.global _RC_KTV_T5M;
	.type _RC_KTV_T5M,STT_OBJECT;
	.byte _Tc_2sec[1];
	.global _Tc_2sec;
	.type _Tc_2sec,STT_OBJECT;
	.byte _SintV_nesootv_zadan[1];
	.global _SintV_nesootv_zadan;
	.type _SintV_nesootv_zadan,STT_OBJECT;
	.byte _In_sys_Obmen_error[1];
	.global _In_sys_Obmen_error;
	.type _In_sys_Obmen_error,STT_OBJECT;
	.byte _Sboy_form_interval[1];
	.global _Sboy_form_interval;
	.type _Sboy_form_interval,STT_OBJECT;
	.byte _Sboy_obmena_inform[1];
	.global _Sboy_obmena_inform;
	.type _Sboy_obmena_inform,STT_OBJECT;
	.byte _FAPCH_1[1];
	.global _FAPCH_1;
	.type _FAPCH_1,STT_OBJECT;
	.byte _FAPCH_2[1];
	.global _FAPCH_2;
	.type _FAPCH_2,STT_OBJECT;
	.byte _Zakon_modulac_kontrol[1];
	.global _Zakon_modulac_kontrol;
	.type _Zakon_modulac_kontrol,STT_OBJECT;
	.byte _FAPCH_3[1];
	.global _FAPCH_3;
	.type _FAPCH_3,STT_OBJECT;
	.byte _LCHM_osnv[1];
	.global _LCHM_osnv;
	.type _LCHM_osnv,STT_OBJECT;
	.byte _LCHM_I_type[1];
	.global _LCHM_I_type;
	.type _LCHM_I_type,STT_OBJECT;
	.byte _LCHM_I_type2[1];
	.global _LCHM_I_type2;
	.type _LCHM_I_type2,STT_OBJECT;
	.byte _LCHM_I_type3[1];
	.global _LCHM_I_type3;
	.type _LCHM_I_type3,STT_OBJECT;
	.byte _LCHM_G_type[1];
	.global _LCHM_G_type;
	.type _LCHM_G_type,STT_OBJECT;
	.byte _LCHM_G_type2[1];
	.global _LCHM_G_type2;
	.type _LCHM_G_type2,STT_OBJECT;
	.byte _LCHM_G_type3[1];
	.global _LCHM_G_type3;
	.type _LCHM_G_type3,STT_OBJECT;
	.byte _Dop_interval[1];
	.global _Dop_interval;
	.type _Dop_interval,STT_OBJECT;
	.byte _Type_pachki[1];
	.global _Type_pachki;
	.type _Type_pachki,STT_OBJECT;
	.byte _LCHM_pomeha[1];
	.global _LCHM_pomeha;
	.type _LCHM_pomeha,STT_OBJECT;
	.byte _SYNC_T0Tnc[1];
	.global _SYNC_T0Tnc;
	.type _SYNC_T0Tnc,STT_OBJECT;
_LCHM_osnv2:
	.global _LCHM_osnv2;
	.type _LCHM_osnv2,STT_OBJECT;
	.byte =
		0x01;
	.byte _Dop_interval2[1];
	.global _Dop_interval2;
	.type _Dop_interval2,STT_OBJECT;
	.byte _Type_pachki2[1];
	.global _Type_pachki2;
	.type _Type_pachki2,STT_OBJECT;
	.byte _LCHM_pomeha2[1];
	.global _LCHM_pomeha2;
	.type _LCHM_pomeha2,STT_OBJECT;
	.byte _SYNC_T0Tnc2[1];
	.global _SYNC_T0Tnc2;
	.type _SYNC_T0Tnc2,STT_OBJECT;
_LCHM_osnv3:
	.global _LCHM_osnv3;
	.type _LCHM_osnv3,STT_OBJECT;
	.byte =
		0x01;
	.byte _Dop_interval3[1];
	.global _Dop_interval3;
	.type _Dop_interval3,STT_OBJECT;
	.byte _Type_pachki3[1];
	.global _Type_pachki3;
	.type _Type_pachki3,STT_OBJECT;
	.byte _LCHM_pomeha3[1];
	.global _LCHM_pomeha3;
	.type _LCHM_pomeha3,STT_OBJECT;
	.byte _SYNC_T0Tnc3[1];
	.global _SYNC_T0Tnc3;
	.type _SYNC_T0Tnc3,STT_OBJECT;
_TNO_reg:
	.global _TNO_reg;
	.type _TNO_reg,STT_OBJECT;
	.byte =
		0x01;
	.byte =
		0x00,0x00,0x00;
	.byte _P0[4];
	.global _P0;
	.type _P0,STT_OBJECT;
	.byte _Pniu[4];
	.global _Pniu;
	.type _Pniu,STT_OBJECT;
	.byte _Pni[4];
	.global _Pni;
	.type _Pni,STT_OBJECT;
	.byte _Pii[4];
	.global _Pii;
	.type _Pii,STT_OBJECT;
	.byte _Pnpu[4];
	.global _Pnpu;
	.type _Pnpu,STT_OBJECT;
	.byte _Pnp[4];
	.global _Pnp;
	.type _Pnp,STT_OBJECT;
	.byte _Pip[4];
	.global _Pip;
	.type _Pip,STT_OBJECT;
_Pdop:
	.global _Pdop;
	.type _Pdop,STT_OBJECT;
	.byte =
		0x50,0x03,0x00,0x00;
_Pnpk:
	.global _Pnpk;
	.type _Pnpk,STT_OBJECT;
	.byte =
		0x10,0x00,0x00,0x00;
_Pk:
	.global _Pk;
	.type _Pk,STT_OBJECT;
	.byte =
		0x30,0x01,0x00,0x00;
_Pnpp:
	.global _Pnpp;
	.type _Pnpp,STT_OBJECT;
	.byte =
		0x10,0x00,0x00,0x00;
_Pp:
	.global _Pp;
	.type _Pp,STT_OBJECT;
	.byte =
		0x00,0x02,0x00,0x00;
_Ntp:
	.global _Ntp;
	.type _Ntp,STT_OBJECT;
	.byte =
		0x01;
_Nt:
	.global _Nt;
	.type _Nt,STT_OBJECT;
	.byte =
		0x01;
_Ntc:
	.global _Ntc;
	.type _Ntc,STT_OBJECT;
	.byte =
		0x01;
_n3:
	.global _n3;
	.type _n3,STT_OBJECT;
	.byte =
		0x01;
	.byte _Pniu2[4];
	.global _Pniu2;
	.type _Pniu2,STT_OBJECT;
	.byte _Pni2[4];
	.global _Pni2;
	.type _Pni2,STT_OBJECT;
	.byte _Pii2[4];
	.global _Pii2;
	.type _Pii2,STT_OBJECT;
	.byte _Pnpu2[4];
	.global _Pnpu2;
	.type _Pnpu2,STT_OBJECT;
	.byte _Pnp2[4];
	.global _Pnp2;
	.type _Pnp2,STT_OBJECT;
	.byte _Pip2[4];
	.global _Pip2;
	.type _Pip2,STT_OBJECT;
_Pdop2:
	.global _Pdop2;
	.type _Pdop2,STT_OBJECT;
	.byte =
		0x50,0x03,0x00,0x00;
_Pnpk2:
	.global _Pnpk2;
	.type _Pnpk2,STT_OBJECT;
	.byte =
		0x10,0x00,0x00,0x00;
_Pk2:
	.global _Pk2;
	.type _Pk2,STT_OBJECT;
	.byte =
		0x30,0x01,0x00,0x00;
_Pnpp2:
	.global _Pnpp2;
	.type _Pnpp2,STT_OBJECT;
	.byte =
		0x10,0x00,0x00,0x00;
_Pp2:
	.global _Pp2;
	.type _Pp2,STT_OBJECT;
	.byte =
		0x00,0x02,0x00,0x00;
_Ntp2:
	.global _Ntp2;
	.type _Ntp2,STT_OBJECT;
	.byte =
		0x01;
_Nt2:
	.global _Nt2;
	.type _Nt2,STT_OBJECT;
	.byte =
		0x01;
_Ntc2:
	.global _Ntc2;
	.type _Ntc2,STT_OBJECT;
	.byte =
		0x01;
	.byte =
		0x00;
	.byte _Pniu3[4];
	.global _Pniu3;
	.type _Pniu3,STT_OBJECT;
	.byte _Pni3[4];
	.global _Pni3;
	.type _Pni3,STT_OBJECT;
	.byte _Pii3[4];
	.global _Pii3;
	.type _Pii3,STT_OBJECT;
	.byte _Pnpu3[4];
	.global _Pnpu3;
	.type _Pnpu3,STT_OBJECT;
	.byte _Pnp3[4];
	.global _Pnp3;
	.type _Pnp3,STT_OBJECT;
	.byte _Pip3[4];
	.global _Pip3;
	.type _Pip3,STT_OBJECT;
_Pdop3:
	.global _Pdop3;
	.type _Pdop3,STT_OBJECT;
	.byte =
		0x50,0x03,0x00,0x00;
_Pnpk3:
	.global _Pnpk3;
	.type _Pnpk3,STT_OBJECT;
	.byte =
		0x10,0x00,0x00,0x00;
_Pk3:
	.global _Pk3;
	.type _Pk3,STT_OBJECT;
	.byte =
		0x30,0x01,0x00,0x00;
_Pnpp3:
	.global _Pnpp3;
	.type _Pnpp3,STT_OBJECT;
	.byte =
		0x10,0x00,0x00,0x00;
_Pp3:
	.global _Pp3;
	.type _Pp3,STT_OBJECT;
	.byte =
		0x00,0x02,0x00,0x00;
_Ntp3:
	.global _Ntp3;
	.type _Ntp3,STT_OBJECT;
	.byte =
		0x01;
_Nt3:
	.global _Nt3;
	.type _Nt3,STT_OBJECT;
	.byte =
		0x01;
_Ntc3:
	.global _Ntc3;
	.type _Ntc3,STT_OBJECT;
	.byte =
		0x01;
	.byte _Flag_init_B610[1];
	.global _Flag_init_B610;
	.type _Flag_init_B610,STT_OBJECT;
_Flag_B610:
	.global _Flag_B610;
	.type _Flag_B610,STT_OBJECT;
	.byte =
		0x01;
	.byte _test1[1];
	.global _test1;
	.type _test1,STT_OBJECT;
	.byte _test2[1];
	.global _test2;
	.type _test2,STT_OBJECT;
	.byte _flag_Ethernet_Terminal[1];
	.global _flag_Ethernet_Terminal;
	.type _flag_Ethernet_Terminal,STT_OBJECT;
	.byte _tst_control_impuls_sch[1];
	.global _tst_control_impuls_sch;
	.type _tst_control_impuls_sch,STT_OBJECT;
	.byte _tst_control_impuls_flag_1[1];
	.global _tst_control_impuls_flag_1;
	.type _tst_control_impuls_flag_1,STT_OBJECT;
	.byte _tst_control_impuls_flag_2[1];
	.global _tst_control_impuls_flag_2;
	.type _tst_control_impuls_flag_2,STT_OBJECT;
	.byte =
		0x00;
	.byte _Command_Sync[4];
	.global _Command_Sync;
	.type _Command_Sync,STT_OBJECT;
_flag_START_PROCESS:
	.global _flag_START_PROCESS;
	.type _flag_START_PROCESS,STT_OBJECT;
	.byte =
		0x01;
	.byte _flag_TNI[1];
	.global _flag_TNI;
	.type _flag_TNI,STT_OBJECT;
	.byte _flag_TKI[1];
	.global _flag_TKI;
	.type _flag_TKI,STT_OBJECT;
	.byte _flag_TNP[1];
	.global _flag_TNP;
	.type _flag_TNP,STT_OBJECT;
	.byte _flag_TKP[1];
	.global _flag_TKP;
	.type _flag_TKP,STT_OBJECT;
	.byte _flag_TOBM[1];
	.global _flag_TOBM;
	.type _flag_TOBM,STT_OBJECT;
	.byte _flag_TNC[1];
	.global _flag_TNC;
	.type _flag_TNC,STT_OBJECT;
	.byte _flag_TNO[1];
	.global _flag_TNO;
	.type _flag_TNO,STT_OBJECT;
	.byte _flag_TNO_1hz_UP[1];
	.global _flag_TNO_1hz_UP;
	.type _flag_TNO_1hz_UP,STT_OBJECT;
	.byte _Test_PPI_flag1[1];
	.global _Test_PPI_flag1;
	.type _Test_PPI_flag1,STT_OBJECT;
	.byte _Test_PPI_flag2[1];
	.global _Test_PPI_flag2;
	.type _Test_PPI_flag2,STT_OBJECT;
	.byte _Test_PPI_flag3[1];
	.global _Test_PPI_flag3;
	.type _Test_PPI_flag3,STT_OBJECT;
	.byte _RESET_SINTEZ_flag[1];
	.global _RESET_SINTEZ_flag;
	.type _RESET_SINTEZ_flag,STT_OBJECT;
	.byte _flag_PPI_sintez_unsihron_start[1];
	.global _flag_PPI_sintez_unsihron_start;
	.type _flag_PPI_sintez_unsihron_start,STT_OBJECT;
	.byte _flag_START_pachka_SINTEZ[1];
	.global _flag_START_pachka_SINTEZ;
	.type _flag_START_pachka_SINTEZ,STT_OBJECT;
	.byte _flag_sync_ETHERNET_DISP[1];
	.global _flag_sync_ETHERNET_DISP;
	.type _flag_sync_ETHERNET_DISP,STT_OBJECT;
	.byte _ERROR_sch_PPI_wait[4];
	.global _ERROR_sch_PPI_wait;
	.type _ERROR_sch_PPI_wait,STT_OBJECT;
	.byte _TNO_mem[4];
	.global _TNO_mem;
	.type _TNO_mem,STT_OBJECT;
	.byte _TNO_width[4];
	.global _TNO_width;
	.type _TNO_width,STT_OBJECT;
	.byte _NORM_PIT_2FT[1];
	.global _NORM_PIT_2FT;
	.type _NORM_PIT_2FT,STT_OBJECT;
	.byte _NORM_PIT_1FT[1];
	.global _NORM_PIT_1FT;
	.type _NORM_PIT_1FT,STT_OBJECT;
	.byte _AVARIYA_PIT_1_FT[1];
	.global _AVARIYA_PIT_1_FT;
	.type _AVARIYA_PIT_1_FT,STT_OBJECT;
	.byte _AVARIYA_PIT_2_FT[1];
	.global _AVARIYA_PIT_2_FT;
	.type _AVARIYA_PIT_2_FT,STT_OBJECT;
	.byte _RAB_KAN_1FT[1];
	.global _RAB_KAN_1FT;
	.type _RAB_KAN_1FT,STT_OBJECT;
	.byte _RAB_KAN_2FT[1];
	.global _RAB_KAN_2FT;
	.type _RAB_KAN_2FT,STT_OBJECT;
	.byte _RAB_KAN_3FT[1];
	.global _RAB_KAN_3FT;
	.type _RAB_KAN_3FT,STT_OBJECT;
	.byte _RAB_KAN_4FT[1];
	.global _RAB_KAN_4FT;
	.type _RAB_KAN_4FT,STT_OBJECT;
	.byte _AVARIYA_KAN_1_FT[1];
	.global _AVARIYA_KAN_1_FT;
	.type _AVARIYA_KAN_1_FT,STT_OBJECT;
	.byte _AVARIYA_KAN_2_FT[1];
	.global _AVARIYA_KAN_2_FT;
	.type _AVARIYA_KAN_2_FT,STT_OBJECT;
	.byte _AVARIYA_KAN_3_FT[1];
	.global _AVARIYA_KAN_3_FT;
	.type _AVARIYA_KAN_3_FT,STT_OBJECT;
	.byte _AVARIYA_KAN_4_FT[1];
	.global _AVARIYA_KAN_4_FT;
	.type _AVARIYA_KAN_4_FT,STT_OBJECT;
	.byte _NORMA_TEMP_1U07FI[1];
	.global _NORMA_TEMP_1U07FI;
	.type _NORMA_TEMP_1U07FI,STT_OBJECT;
	.byte _PA_1U07_FI[1];
	.global _PA_1U07_FI;
	.type _PA_1U07_FI,STT_OBJECT;
	.byte _TNC_sch[2];
	.global _TNC_sch;
	.type _TNC_sch,STT_OBJECT;
	.byte _TNC_sch_max[2];
	.global _TNC_sch_max;
	.type _TNC_sch_max,STT_OBJECT;
	.byte _FLAG_CONTROL[1];
	.global _FLAG_CONTROL;
	.type _FLAG_CONTROL,STT_OBJECT;
	.byte =
		0x00;
	.byte _tst_Kod_Dchi[4];
	.global _tst_Kod_Dchi;
	.type _tst_Kod_Dchi,STT_OBJECT;
	.byte _tst_Kod_Dchg[4];
	.global _tst_Kod_Dchg;
	.type _tst_Kod_Dchg,STT_OBJECT;
	.byte _tst_Kod_Dchp[4];
	.global _tst_Kod_Dchp;
	.type _tst_Kod_Dchp,STT_OBJECT;
	.byte _tst_Kod_Dchk[4];
	.global _tst_Kod_Dchk;
	.type _tst_Kod_Dchk,STT_OBJECT;
	.byte _tst_Kod_RAMRT_fi[4];
	.global _tst_Kod_RAMRT_fi;
	.type _tst_Kod_RAMRT_fi,STT_OBJECT;
	.byte _tst_Kod_Ddelta_fi[8];
	.global _tst_Kod_Ddelta_fi;
	.type _tst_Kod_Ddelta_fi,STT_OBJECT;
	.byte _tst_Kod_RAMRT_fg[4];
	.global _tst_Kod_RAMRT_fg;
	.type _tst_Kod_RAMRT_fg,STT_OBJECT;
	.byte _tst_Kod_Ddelta_fg[8];
	.global _tst_Kod_Ddelta_fg;
	.type _tst_Kod_Ddelta_fg,STT_OBJECT;
	.byte _tst_Kod_RAMRT_fp[4];
	.global _tst_Kod_RAMRT_fp;
	.type _tst_Kod_RAMRT_fp,STT_OBJECT;
	.byte _tst_Kod_Ddelta_fp[8];
	.global _tst_Kod_Ddelta_fp;
	.type _tst_Kod_Ddelta_fp,STT_OBJECT;
	.byte _AVARIYA_B610[1];
	.global _AVARIYA_B610;
	.type _AVARIYA_B610,STT_OBJECT;
	.byte _AVARIYA_B660[1];
	.global _AVARIYA_B660;
	.type _AVARIYA_B660,STT_OBJECT;
	.byte _KFK_610[1];
	.global _KFK_610;
	.type _KFK_610,STT_OBJECT;
	.byte _KFK_660[1];
	.global _KFK_660;
	.type _KFK_660,STT_OBJECT;
	.byte _TEMP_B610[1];
	.global _TEMP_B610;
	.type _TEMP_B610,STT_OBJECT;
	.byte _TEMP_B660[1];
	.global _TEMP_B660;
	.type _TEMP_B660,STT_OBJECT;
	.byte _FLG_RZV1[1];
	.global _FLG_RZV1;
	.type _FLG_RZV1,STT_OBJECT;
	.byte _FLG_RZV2[1];
	.global _FLG_RZV2;
	.type _FLG_RZV2,STT_OBJECT;
_FLAG_VCU_TST:
	.global _FLAG_VCU_TST;
	.type _FLAG_VCU_TST,STT_OBJECT;
	.byte =
		0x03;
_FLAG_MU_TST:
	.global _FLAG_MU_TST;
	.type _FLAG_MU_TST,STT_OBJECT;
	.byte =
		0x03;
_FLAG_BR_TST:
	.global _FLAG_BR_TST;
	.type _FLAG_BR_TST,STT_OBJECT;
	.byte =
		0x03;
_FLAG_GBR_TST:
	.global _FLAG_GBR_TST;
	.type _FLAG_GBR_TST,STT_OBJECT;
	.byte =
		0x03;
_FLAG_VIKL_TST:
	.global _FLAG_VIKL_TST;
	.type _FLAG_VIKL_TST,STT_OBJECT;
	.byte =
		0x03;
	.byte _FLAG_BLOCK_TST[1];
	.global _FLAG_BLOCK_TST;
	.type _FLAG_BLOCK_TST,STT_OBJECT;
	.byte =
		0x00,0x00;
	.byte _SCH_ERROR_delta_TNC[4];
	.global _SCH_ERROR_delta_TNC;
	.type _SCH_ERROR_delta_TNC,STT_OBJECT;
	.byte _SCH_ERROR_delta_TNC_max[4];
	.global _SCH_ERROR_delta_TNC_max;
	.type _SCH_ERROR_delta_TNC_max,STT_OBJECT;
	.byte _SCH_ERROR_delta_min_TNC[4];
	.global _SCH_ERROR_delta_min_TNC;
	.type _SCH_ERROR_delta_min_TNC,STT_OBJECT;
	.byte _SCH_ERROR_delta_min_TNC_max[4];
	.global _SCH_ERROR_delta_min_TNC_max;
	.type _SCH_ERROR_delta_min_TNC_max,STT_OBJECT;
	.byte _SCH_ERROR_delta_max_TNC[4];
	.global _SCH_ERROR_delta_max_TNC;
	.type _SCH_ERROR_delta_max_TNC,STT_OBJECT;
	.byte _SCH_ERROR_delta_max_TNC_max[4];
	.global _SCH_ERROR_delta_max_TNC_max;
	.type _SCH_ERROR_delta_max_TNC_max,STT_OBJECT;
	.byte _FLAG_Packet_FIND[1];
	.global _FLAG_Packet_FIND;
	.type _FLAG_Packet_FIND,STT_OBJECT;
	.byte _LSRZV[1];
	.global _LSRZV;
	.type _LSRZV,STT_OBJECT;
	.byte =
		0x00,0x00;
	.byte _TIME_OF_SYS[4];
	.global _TIME_OF_SYS;
	.type _TIME_OF_SYS,STT_OBJECT;
	.byte _TIME_OF_TNO[4];
	.global _TIME_OF_TNO;
	.type _TIME_OF_TNO,STT_OBJECT;
	.byte _RX_resive_MAX[4];
	.global _RX_resive_MAX;
	.type _RX_resive_MAX,STT_OBJECT;
	.byte _flag_packet_OK_for_read[1];
	.global _flag_packet_OK_for_read;
	.type _flag_packet_OK_for_read,STT_OBJECT;
	.byte =
		0x00,0x00,0x00;
	.byte _TNC_actual[4];
	.global _TNC_actual;
	.type _TNC_actual,STT_OBJECT;
	.byte _TNO_actual[4];
	.global _TNO_actual;
	.type _TNO_actual,STT_OBJECT;
	.byte _CEV_actual[4];
	.global _CEV_actual;
	.type _CEV_actual,STT_OBJECT;
	.byte _TNC_zad[4];
	.global _TNC_zad;
	.type _TNC_zad,STT_OBJECT;
	.byte _TNO_zad[4];
	.global _TNO_zad;
	.type _TNO_zad,STT_OBJECT;
	.byte _CEV_zad[4];
	.global _CEV_zad;
	.type _CEV_zad,STT_OBJECT;
	.byte _FLAG_EXTRA_PACKET[1];
	.global _FLAG_EXTRA_PACKET;
	.type _FLAG_EXTRA_PACKET,STT_OBJECT;
	.byte =
		0x00,0x00,0x00;
	.byte _Time_Preset[4];
	.global _Time_Preset;
	.type _Time_Preset,STT_OBJECT;
	.byte _flag_sync_ETHERNET[1];
	.global _flag_sync_ETHERNET;
	.type _flag_sync_ETHERNET,STT_OBJECT;
	.byte =
		0x00,0x00,0x00;
	.byte _F_izl[4];
	.global _F_izl;
	.type _F_izl,STT_OBJECT;
	.byte _delta_F_izl[4];
	.global _delta_F_izl;
	.type _delta_F_izl,STT_OBJECT;
	.byte _flag_error_fizl[1];
	.global _flag_error_fizl;
	.type _flag_error_fizl,STT_OBJECT;
	.byte _flag_error_k615[1];
	.global _flag_error_k615;
	.type _flag_error_k615,STT_OBJECT;
	.byte _flag_error_foch[1];
	.global _flag_error_foch;
	.type _flag_error_foch,STT_OBJECT;
	.byte _C_t_day[1];
	.global _C_t_day;
	.type _C_t_day,STT_OBJECT;
	.byte _C_t_hour[1];
	.global _C_t_hour;
	.type _C_t_hour,STT_OBJECT;
	.byte _C_t_min[1];
	.global _C_t_min;
	.type _C_t_min,STT_OBJECT;
	.byte _C_t_sec[1];
	.global _C_t_sec;
	.type _C_t_sec,STT_OBJECT;
	.byte =
		0x00;
	.byte _C_t_ms[2];
	.global _C_t_ms;
	.type _C_t_ms,STT_OBJECT;
	.byte =
		0x00,0x00;
	.byte _C_t_us[4];
	.global _C_t_us;
	.type _C_t_us,STT_OBJECT;
	.byte _C_t_dayX[1];
	.global _C_t_dayX;
	.type _C_t_dayX,STT_OBJECT;
	.byte _C_t_hourX[1];
	.global _C_t_hourX;
	.type _C_t_hourX,STT_OBJECT;
	.byte _C_t_minX[1];
	.global _C_t_minX;
	.type _C_t_minX,STT_OBJECT;
	.byte _C_t_secX[1];
	.global _C_t_secX;
	.type _C_t_secX,STT_OBJECT;
	.byte _C_t_msX[2];
	.global _C_t_msX;
	.type _C_t_msX,STT_OBJECT;
	.byte =
		0x00,0x00;
_C_t_usX:
	.global _C_t_usX;
	.type _C_t_usX,STT_OBJECT;
	.byte =
		0xC2,0x01,0x00,0x00;
	.byte _TEST_TKI[1];
	.global _TEST_TKI;
	.type _TEST_TKI,STT_OBJECT;
	.byte _sch_INT[1];
	.global _sch_INT;
	.type _sch_INT,STT_OBJECT;
	.byte _mz_rzv[1];
	.global _mz_rzv;
	.type _mz_rzv,STT_OBJECT;
	.byte _l.246[1];
	.type _l.246,STT_OBJECT;
.epcdata.end:

	.section/DOUBLE64 constdata;

	.align 4;
.epcrodata:
	.type .epcrodata,STT_OBJECT;
.static0:
	.type .static0,STT_OBJECT;
	.byte =
		0x3A,0x8C,0x30,0xE2,0x8E,0x79,0x25,0x40;
.static1:
	.type .static1,STT_OBJECT;
	.byte =
		0x00,0x84,0xD7,0x17,0x00,0x00,0x00,0x00;
.static2:
	.type .static2,STT_OBJECT;
	.byte =
		0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00;
.s.6:
	.type .s.6,STT_OBJECT;
	.byte =
		0x0D,0x0A,0x00;
	.byte =
		0x00;
.s0INF.7:
	.type .s0INF.7,STT_OBJECT;
	.byte =
		0x7E,0x30,0x20,0x49,0x4E,0x46,0x3B,0x00;
.s0B610.8:
	.type .s0B610.8,STT_OBJECT;
	.byte =
		0x7E,0x30,0x20,0xC2,0xCA,0xCB,0x5F,0x42,0x36,0x31,0x30,0x3B,
		0x0D,0x0A,0x00;
	.byte =
		0x00;
.s1POWER.11:
	.type .s1POWER.11,STT_OBJECT;
	.byte =
		0x7E,0x31,0x20,0x50,0x4F,0x57,0x45,0x52,0x5F,0x4F,0x4E,0x3B,
		0x00;
	.byte =
		0x00,0x00,0x00;
.s.12:
	.type .s.12,STT_OBJECT;
	.byte =
		0x20,0x00;
	.byte =
		0x00,0x00;
.sX.13:
	.type .sX.13,STT_OBJECT;
	.byte =
		0x25,0x58,0x00;
	.byte =
		0x00;
.sNORMPI.17:
	.type .sNORMPI.17,STT_OBJECT;
	.byte =
		0x4E,0x4F,0x52,0x4D,0x5F,0x50,0x49,0x54,0x5F,0x32,0x46,0x54,
		0x3A,0x00;
	.byte =
		0x00,0x00;
.sNORMPI.18:
	.type .sNORMPI.18,STT_OBJECT;
	.byte =
		0x4E,0x4F,0x52,0x4D,0x5F,0x50,0x49,0x54,0x5F,0x31,0x46,0x54,
		0x3A,0x00;
	.byte =
		0x00,0x00;
.sRABKAN.21:
	.type .sRABKAN.21,STT_OBJECT;
	.byte =
		0x52,0x41,0x42,0x5F,0x4B,0x41,0x4E,0x5F,0x31,0x46,0x54,0x3A,
		0x00;
	.byte =
		0x00,0x00,0x00;
.sRABKAN.22:
	.type .sRABKAN.22,STT_OBJECT;
	.byte =
		0x52,0x41,0x42,0x5F,0x4B,0x41,0x4E,0x5F,0x32,0x46,0x54,0x3A,
		0x00;
	.byte =
		0x00,0x00,0x00;
.sRABKAN.23:
	.type .sRABKAN.23,STT_OBJECT;
	.byte =
		0x52,0x41,0x42,0x5F,0x4B,0x41,0x4E,0x5F,0x33,0x46,0x54,0x3A,
		0x00;
	.byte =
		0x00,0x00,0x00;
.sRABKAN.24:
	.type .sRABKAN.24,STT_OBJECT;
	.byte =
		0x52,0x41,0x42,0x5F,0x4B,0x41,0x4E,0x5F,0x34,0x46,0x54,0x3A,
		0x00;
	.byte =
		0x00,0x00,0x00;
.sPA1U07.30:
	.type .sPA1U07.30,STT_OBJECT;
	.byte =
		0x50,0x41,0x5F,0x31,0x55,0x30,0x37,0x5F,0x46,0x49,0x3A,0x00;
.sERRORT.31:
	.type .sERRORT.31,STT_OBJECT;
	.byte =
		0x45,0x52,0x52,0x4F,0x52,0x5F,0x54,0x4E,0x5F,0x46,0x4C,0x41,
		0x47,0x3A,0x00;
	.byte =
		0x00;
.s.37:
	.type .s.37,STT_OBJECT;
	.byte =
		0xB9,0x20,0xF1,0xE5,0xEA,0xF6,0xE8,0xE8,0x3A,0x00;
	.byte =
		0x00,0x00;
.s.38:
	.type .s.38,STT_OBJECT;
	.byte =
		0x0D,0x0A,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x0D,0x0A,0x00;
.s.39:
	.type .s.39,STT_OBJECT;
	.byte =
		0xC1,0xD0,0x0D,0x0A,0x00;
	.byte =
		0x00,0x00,0x00;
.s.40:
	.type .s.40,STT_OBJECT;
	.byte =
		0xC3,0xC1,0xD0,0x0D,0x0A,0x00;
	.byte =
		0x00,0x00;
.s.41:
	.type .s.41,STT_OBJECT;
	.byte =
		0xD1,0xC5,0xC2,0x20,0x20,0x20,0x20,0x20,0x3A,0x00;
	.byte =
		0x00,0x00;
.sTNC.42:
	.type .sTNC.42,STT_OBJECT;
	.byte =
		0x54,0x4E,0x43,0x20,0x20,0x20,0x20,0x20,0x3A,0x00;
	.byte =
		0x00,0x00;
.sTNCmax.43:
	.type .sTNCmax.43,STT_OBJECT;
	.byte =
		0x54,0x4E,0x43,0x5F,0x6D,0x61,0x78,0x20,0x3A,0x00;
	.byte =
		0x00,0x00;
.sTNCmin.44:
	.type .sTNCmin.44,STT_OBJECT;
	.byte =
		0x54,0x4E,0x43,0x5F,0x6D,0x69,0x6E,0x20,0x3A,0x00;
	.byte =
		0x00,0x00;
.sT5min.45:
	.type .sT5min.45,STT_OBJECT;
	.byte =
		0x54,0x35,0x6D,0x69,0x6E,0x20,0x20,0x20,0x3A,0x00;
	.byte =
		0x00,0x00;
.sTNO.46:
	.type .sTNO.46,STT_OBJECT;
	.byte =
		0x54,0x4E,0x4F,0x20,0x20,0x20,0x20,0x20,0x3A,0x00;
	.byte =
		0x00,0x00;
.sTIME.47:
	.type .sTIME.47,STT_OBJECT;
	.byte =
		0x54,0x49,0x4D,0x45,0x20,0x20,0x20,0x20,0x3A,0x00;
	.byte =
		0x00,0x00;
.serrorI.48:
	.type .serrorI.48,STT_OBJECT;
	.byte =
		0x65,0x72,0x72,0x6F,0x72,0x20,0x49,0x6D,0x70,0x3A,0x00;
	.byte =
		0x00;
.serror.49:
	.type .serror.49,STT_OBJECT;
	.byte =
		0x65,0x72,0x72,0x6F,0x72,0x20,0xD2,0xCD,0xD6,0x3A,0x00;
	.byte =
		0x00;
.snsyncU.50:
	.type .snsyncU.50,STT_OBJECT;
	.byte =
		0x6E,0x73,0x79,0x6E,0x63,0x20,0x55,0x44,0x50,0x3A,0x00;
	.byte =
		0x00;
.ssyncUD.51:
	.type .ssyncUD.51,STT_OBJECT;
	.byte =
		0x20,0x73,0x79,0x6E,0x63,0x20,0x55,0x44,0x50,0x3A,0x00;
	.byte =
		0x00;
.sRS485.52:
	.type .sRS485.52,STT_OBJECT;
	.byte =
		0xCE,0xCA,0x20,0x20,0x52,0x53,0x34,0x38,0x35,0x3A,0x00;
	.byte =
		0x00;
.srsvUDP.53:
	.type .srsvUDP.53,STT_OBJECT;
	.byte =
		0x72,0x73,0x76,0x20,0x20,0x20,0x55,0x44,0x50,0x3A,0x00;
	.byte =
		0x00;
.s610.55:
	.type .s610.55,STT_OBJECT;
	.byte =
		0xC1,0x36,0x31,0x30,0x3A,0x00;
	.byte =
		0x00,0x00;
.sFT.56:
	.type .sFT.56,STT_OBJECT;
	.byte =
		0x20,0x20,0x20,0x20,0x46,0x54,0x3A,0x00;
.s.57:
	.type .s.57,STT_OBJECT;
	.byte =
		0xEF,0xE8,0xF2,0x2E,0xD4,0xD2,0x3A,0x00;
.sSYNCPI.60:
	.type .sSYNCPI.60,STT_OBJECT;
	.byte =
		0x53,0x59,0x4E,0x43,0x5F,0x50,0x49,0x4C,0x41,0x3A,0x00;
	.byte =
		0x00;
.sF.74:
	.type .sF.74,STT_OBJECT;
	.byte =
		0x46,0xEA,0x3A,0x00;
.sF.75:
	.type .sF.75,STT_OBJECT;
	.byte =
		0x46,0xEF,0x3A,0x00;
.sF.76:
	.type .sF.76,STT_OBJECT;
	.byte =
		0x46,0xE3,0x3A,0x00;
.sF.77:
	.type .sF.77,STT_OBJECT;
	.byte =
		0x46,0xE8,0x3A,0x00;
.sDdelta.78:
	.type .sDdelta.78,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0x44,0x64,0x65,0x6C,0x74,0x61,0xF7,0xEF,
		0x3A,0x00;
	.byte =
		0x00,0x00;
.sDdelta.79:
	.type .sDdelta.79,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0x44,0x64,0x65,0x6C,0x74,0x61,0xF7,0xE8,
		0x3A,0x00;
	.byte =
		0x00,0x00;
.sDdelta.80:
	.type .sDdelta.80,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0x44,0x64,0x65,0x6C,0x74,0x61,0xF7,0xE3,
		0x3A,0x00;
	.byte =
		0x00,0x00;
.sRAMRT.81:
	.type .sRAMRT.81,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0x52,0x41,0x4D,0x52,0x54,0xF7,0xEF,0x20,
		0x3A,0x00;
	.byte =
		0x00,0x00;
.sRAMRT.82:
	.type .sRAMRT.82,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0x52,0x41,0x4D,0x52,0x54,0xF7,0xE8,0x20,
		0x3A,0x00;
	.byte =
		0x00,0x00;
.sRAMRT.83:
	.type .sRAMRT.83,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0x52,0x41,0x4D,0x52,0x54,0xF7,0xE3,0x20,
		0x3A,0x00;
	.byte =
		0x00,0x00;
.sKodDch.84:
	.type .sKodDch.84,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0x4B,0x6F,0x64,0x5F,0x44,0x63,0x68,0x6B,
		0x3A,0x00;
	.byte =
		0x00,0x00;
.sKodDch.85:
	.type .sKodDch.85,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0x4B,0x6F,0x64,0x5F,0x44,0x63,0x68,0x70,
		0x3A,0x00;
	.byte =
		0x00,0x00;
.sKodDch.86:
	.type .sKodDch.86,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0x4B,0x6F,0x64,0x5F,0x44,0x63,0x68,0x67,
		0x3A,0x00;
	.byte =
		0x00,0x00;
.sKodDch.87:
	.type .sKodDch.87,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0x4B,0x6F,0x64,0x5F,0x44,0x63,0x68,0x69,
		0x3A,0x00;
	.byte =
		0x00,0x00;
.sD.88:
	.type .sD.88,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0x44,0xE8,0xE8,0x3A,0x00;
	.byte =
		0x00,0x00,0x00;
.sD.89:
	.type .sD.89,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0x44,0xED,0xE8,0x3A,0x00;
	.byte =
		0x00,0x00,0x00;
.sD.90:
	.type .sD.90,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0x44,0xED,0xEF,0x3A,0x00;
	.byte =
		0x00,0x00,0x00;
.sDN.91:
	.type .sDN.91,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0x44,0x4E,0x20,0x3A,0x00;
	.byte =
		0x00,0x00,0x00;
.sD.92:
	.type .sD.92,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0x44,0xE8,0xEF,0x3A,0x00;
	.byte =
		0x00,0x00,0x00;
.sD.93:
	.type .sD.93,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0x44,0xEC,0x20,0x3A,0x00;
	.byte =
		0x00,0x00,0x00;
.sD.94:
	.type .sD.94,STT_OBJECT;
	.byte =
		0xEE,0xE1,0xE7,0xEE,0xF0,0xE0,0x20,0x44,0xEE,0x3A,0x00;
	.byte =
		0x00;
.sD.95:
	.type .sD.95,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0x44,0xF0,0xF0,0x3A,0x20,0x00;
	.byte =
		0x00,0x00;
.s.97:
	.type .s.97,STT_OBJECT;
	.byte =
		0xE1,0xE5,0xE7,0x20,0xCB,0xD7,0xCC,0x0D,0x0A,0x00;
	.byte =
		0x00,0x00;
.s.99:
	.type .s.99,STT_OBJECT;
	.byte =
		0x2E,0x2E,0x2E,0x2E,0x2E,0x0D,0x0A,0x00;
.sD.108:
	.type .sD.108,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0x44,0xE8,0xE8,0x3A,0x20,0x00;
	.byte =
		0x00,0x00;
.sD.109:
	.type .sD.109,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0x44,0xED,0xE8,0x3A,0x20,0x00;
	.byte =
		0x00,0x00;
.sD.110:
	.type .sD.110,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0x44,0xED,0xEF,0x3A,0x20,0x00;
	.byte =
		0x00,0x00;
.sD.111:
	.type .sD.111,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0x44,0xF7,0xE8,0x3A,0x00;
	.byte =
		0x00,0x00,0x00;
.sD.112:
	.type .sD.112,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0x44,0xF7,0xE3,0x3A,0x00;
	.byte =
		0x00,0x00,0x00;
.sD.114:
	.type .sD.114,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0x44,0xF0,0xF0,0x20,0x3A,0x20,0x00;
	.byte =
		0x00;
.static3:
	.type .static3,STT_OBJECT;
	.byte =
		0x00,0x84,0xD7,0x17,0x00,0x00,0x00,0x00;
.static4:
	.type .static4,STT_OBJECT;
	.byte =
		0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00;
.static5:
	.type .static5,STT_OBJECT;
	.byte =
		0x00,0x84,0xD7,0x17,0x00,0x00,0x00,0x00;
.static6:
	.type .static6,STT_OBJECT;
	.byte =
		0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00;
.static7:
	.type .static7,STT_OBJECT;
	.byte =
		0x00,0x84,0xD7,0x17,0x00,0x00,0x00,0x00;
.static8:
	.type .static8,STT_OBJECT;
	.byte =
		0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00;
.static9:
	.type .static9,STT_OBJECT;
	.byte =
		0x00,0x84,0xD7,0x17,0x00,0x00,0x00,0x00;
.static10:
	.type .static10,STT_OBJECT;
	.byte =
		0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00;
.sAVARIY.139:
	.type .sAVARIY.139,STT_OBJECT;
	.byte =
		0x41,0x56,0x41,0x52,0x49,0x59,0x41,0x5F,0x66,0x6C,0x61,0x67,
		0x3A,0x00;
	.byte =
		0x00,0x00;
.s.144:
	.type .s.144,STT_OBJECT;
	.byte =
		0xD1,0xC5,0xC2,0x20,0xF2,0xE5,0xEA,0xF3,0xF9,0xE8,0xE9,0x3A,
		0x00;
	.byte =
		0x00,0x00,0x00;
.s.145:
	.type .s.145,STT_OBJECT;
	.byte =
		0xF2,0xE5,0xEA,0xF3,0xF9,0xE8,0xE9,0x20,0xD2,0xCD,0xD6,0x3A,
		0x00;
	.byte =
		0x00,0x00,0x00;
.s.154:
	.type .s.154,STT_OBJECT;
	.byte =
		0x2E,0x2E,0x00;
	.byte =
		0x00;
.s.155:
	.type .s.155,STT_OBJECT;
	.byte =
		0x2E,0x2E,0x2E,0x00;
.s.156:
	.type .s.156,STT_OBJECT;
	.byte =
		0xED,0xEE,0xEC,0xE5,0xF0,0x20,0xD2,0xCD,0xD6,0x3A,0x00;
	.byte =
		0x00;
.s.157:
	.type .s.157,STT_OBJECT;
	.byte =
		0xED,0xEE,0xEC,0xE5,0xF0,0x20,0xD2,0xCD,0xCE,0x3A,0x00;
	.byte =
		0x00;
.s.158:
	.type .s.158,STT_OBJECT;
	.byte =
		0xED,0xEE,0xEC,0xE5,0xF0,0x20,0xD1,0xC5,0xC2,0x3A,0x00;
	.byte =
		0x00;
.sindexr.159:
	.type .sindexr.159,STT_OBJECT;
	.byte =
		0x69,0x6E,0x64,0x65,0x78,0x5F,0x72,0x64,0x3A,0x00;
	.byte =
		0x00,0x00;
.s.160:
	.type .s.160,STT_OBJECT;
	.byte =
		0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,
		0x2D,0x0D,0x00;
	.byte =
		0x00;
.s6initK.161:
	.type .s6initK.161,STT_OBJECT;
	.byte =
		0x7E,0x36,0x20,0x69,0x6E,0x69,0x74,0x5F,0x4B,0x36,0x31,0x31,
		0x3B,0x00;
	.byte =
		0x00,0x00;
.s3.163:
	.type .s3.163,STT_OBJECT;
	.byte =
		0x7E,0x33,0x20,0xC2,0xEA,0xEB,0x5F,0xF1,0xE8,0xED,0xF2,0xE5,
		0xE7,0x3B,0x00;
	.byte =
		0x00;
.s3.164:
	.type .s3.164,STT_OBJECT;
	.byte =
		0x7E,0x33,0x20,0xF1,0xEE,0xF1,0xF2,0xEE,0xFF,0xED,0xE8,0xE5,
		0x3B,0x00;
	.byte =
		0x00,0x00;
.s4.165:
	.type .s4.165,STT_OBJECT;
	.byte =
		0x7E,0x34,0x20,0xC2,0xEA,0xEB,0x5F,0xF1,0xE8,0xED,0xF2,0xE5,
		0xE7,0x3B,0x00;
	.byte =
		0x00;
.s4.166:
	.type .s4.166,STT_OBJECT;
	.byte =
		0x7E,0x34,0x20,0xF1,0xEE,0xF1,0xF2,0xEE,0xFF,0xED,0xE8,0xE5,
		0x3B,0x00;
	.byte =
		0x00,0x00;
.s5INPOR.167:
	.type .s5INPOR.167,STT_OBJECT;
	.byte =
		0x7E,0x35,0x20,0x49,0x4E,0x50,0x4F,0x52,0x54,0x00;
	.byte =
		0x00,0x00;
.s.168:
	.type .s.168,STT_OBJECT;
	.byte =
		0x3B,0x00;
	.byte =
		0x00,0x00;
.s.169:
	.type .s.169,STT_OBJECT;
	.byte =
		0x0D,0x00;
	.byte =
		0x00,0x00;
.s5OUTPO.170:
	.type .s5OUTPO.170,STT_OBJECT;
	.byte =
		0x7E,0x35,0x20,0x4F,0x55,0x54,0x50,0x4F,0x52,0x54,0x3A,0x00;
.s.171:
	.type .s.171,STT_OBJECT;
	.byte =
		0x2E,0x00;
	.byte =
		0x00,0x00;
.sAlfa.175:
	.type .sAlfa.175,STT_OBJECT;
	.byte =
		0x41,0x6C,0x66,0x61,0x3A,0x00;
	.byte =
		0x00,0x00;
.sTNCact.176:
	.type .sTNCact.176,STT_OBJECT;
	.byte =
		0x54,0x4E,0x43,0x5F,0x61,0x63,0x74,0x75,0x61,0x6C,0x20,0x20,
		0x3A,0x00;
	.byte =
		0x00,0x00;
.sTNCsch.177:
	.type .sTNCsch.177,STT_OBJECT;
	.byte =
		0x54,0x4E,0x43,0x5F,0x73,0x63,0x68,0x20,0x20,0x3A,0x00;
	.byte =
		0x00;
.stimerT.180:
	.type .stimerT.180,STT_OBJECT;
	.byte =
		0x74,0x69,0x6D,0x65,0x72,0x5F,0x54,0x4F,0x42,0x4D,0x20,0x20,
		0x3A,0x00;
	.byte =
		0x00,0x00;
.sflag1H.181:
	.type .sflag1H.181,STT_OBJECT;
	.byte =
		0x66,0x6C,0x61,0x67,0x5F,0x31,0x48,0x5A,0x5F,0x73,0x79,0x6E,
		0x63,0x3A,0x00;
	.byte =
		0x00;
.sflagTO.183:
	.type .sflagTO.183,STT_OBJECT;
	.byte =
		0x66,0x6C,0x61,0x67,0x5F,0x54,0x4F,0x42,0x4D,0x3A,0x00;
	.byte =
		0x00;
.sflagTN.184:
	.type .sflagTN.184,STT_OBJECT;
	.byte =
		0x66,0x6C,0x61,0x67,0x5F,0x54,0x4E,0x43,0x5F,0x55,0x50,0x3A,
		0x00;
	.byte =
		0x00,0x00,0x00;
.sflagPP.185:
	.type .sflagPP.185,STT_OBJECT;
	.byte =
		0x66,0x6C,0x61,0x67,0x5F,0x50,0x50,0x49,0x5F,0x73,0x69,0x6E,
		0x63,0x3A,0x00;
	.byte =
		0x00;
.sflagFA.188:
	.type .sflagFA.188,STT_OBJECT;
	.byte =
		0x66,0x6C,0x61,0x67,0x5F,0x46,0x41,0x49,0x4C,0x5F,0x50,0x50,
		0x49,0x3A,0x00;
	.byte =
		0x00;
.sFLAGPP.189:
	.type .sFLAGPP.189,STT_OBJECT;
	.byte =
		0x46,0x4C,0x41,0x47,0x5F,0x50,0x50,0x49,0x5F,0x4F,0x4B,0x20,
		0x20,0x3A,0x00;
	.byte =
		0x00;
.sflagds.190:
	.type .sflagds.190,STT_OBJECT;
	.byte =
		0x66,0x6C,0x61,0x67,0x5F,0x64,0x73,0x70,0x5F,0x6F,0x6B,0x20,
		0x20,0x3A,0x00;
	.byte =
		0x00;
.sERRORT.192:
	.type .sERRORT.192,STT_OBJECT;
	.byte =
		0x45,0x52,0x52,0x4F,0x52,0x5F,0x54,0x69,0x6D,0x70,0x3A,0x00;
.static11:
	.type .static11,STT_OBJECT;
	.byte =
		0x00,0xD6,0x8A,0xEA,0xFF,0xFF,0xFF,0xFF;
.static12:
	.type .static12,STT_OBJECT;
	.byte =
		0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00;
.static13:
	.type .static13,STT_OBJECT;
	.byte =
		0x00,0x84,0xD7,0x17,0x00,0x00,0x00,0x00;
.static14:
	.type .static14,STT_OBJECT;
	.byte =
		0x00,0xD6,0x8A,0xEA,0xFF,0xFF,0xFF,0xFF;
.static15:
	.type .static15,STT_OBJECT;
	.byte =
		0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00;
.static16:
	.type .static16,STT_OBJECT;
	.byte =
		0x00,0x84,0xD7,0x17,0x00,0x00,0x00,0x00;
.static17:
	.type .static17,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x00,0xE9,0x40;
.static18:
	.type .static18,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0x3F;
.static19:
	.type .static19,STT_OBJECT;
	.byte =
		0x3A,0x8C,0x30,0xE2,0x8E,0x79,0x25,0x40;
.static20:
	.type .static20,STT_OBJECT;
	.byte =
		0x00,0x7C,0x28,0xE8,0xFF,0xFF,0xFF,0xFF;
.static21:
	.type .static21,STT_OBJECT;
	.byte =
		0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00;
.static22:
	.type .static22,STT_OBJECT;
	.byte =
		0x00,0x84,0xD7,0x17,0x00,0x00,0x00,0x00;
.static23:
	.type .static23,STT_OBJECT;
	.byte =
		0x00,0xD6,0x8A,0xEA,0xFF,0xFF,0xFF,0xFF;
.static24:
	.type .static24,STT_OBJECT;
	.byte =
		0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00;
.static25:
	.type .static25,STT_OBJECT;
	.byte =
		0x00,0x84,0xD7,0x17,0x00,0x00,0x00,0x00;
.static26:
	.type .static26,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0x3F;
.static27:
	.type .static27,STT_OBJECT;
	.byte =
		0x3A,0x8C,0x30,0xE2,0x8E,0x79,0x25,0x40;
.static28:
	.type .static28,STT_OBJECT;
	.byte =
		0x00,0x7C,0x28,0xE8,0xFF,0xFF,0xFF,0xFF;
.static29:
	.type .static29,STT_OBJECT;
	.byte =
		0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00;
.static30:
	.type .static30,STT_OBJECT;
	.byte =
		0x00,0x84,0xD7,0x17,0x00,0x00,0x00,0x00;
.static31:
	.type .static31,STT_OBJECT;
	.byte =
		0x00,0xD6,0x8A,0xEA,0xFF,0xFF,0xFF,0xFF;
.static32:
	.type .static32,STT_OBJECT;
	.byte =
		0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00;
.static33:
	.type .static33,STT_OBJECT;
	.byte =
		0x00,0x84,0xD7,0x17,0x00,0x00,0x00,0x00;
.static34:
	.type .static34,STT_OBJECT;
	.byte =
		0x00,0x7C,0x28,0xE8,0xFF,0xFF,0xFF,0xFF;
.static35:
	.type .static35,STT_OBJECT;
	.byte =
		0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00;
.static36:
	.type .static36,STT_OBJECT;
	.byte =
		0x00,0x84,0xD7,0x17,0x00,0x00,0x00,0x00;
.static37:
	.type .static37,STT_OBJECT;
	.byte =
		0x00,0xD6,0x8A,0xEA,0xFF,0xFF,0xFF,0xFF;
.static38:
	.type .static38,STT_OBJECT;
	.byte =
		0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00;
.static39:
	.type .static39,STT_OBJECT;
	.byte =
		0x00,0x84,0xD7,0x17,0x00,0x00,0x00,0x00;
.sTNCERR.203:
	.type .sTNCERR.203,STT_OBJECT;
	.byte =
		0x54,0x4E,0x43,0x5F,0x45,0x52,0x52,0x4F,0x52,0x3A,0x00;
	.byte =
		0x00;
.s.204:
	.type .s.204,STT_OBJECT;
	.byte =
		0x3E,0x3E,0x3E,0xD2,0xCD,0xD6,0x21,0x20,0x00;
	.byte =
		0x00,0x00,0x00;
.s.205:
	.type .s.205,STT_OBJECT;
	.byte =
		0xEC,0xEA,0xF1,0x0D,0x0A,0x00;
	.byte =
		0x00,0x00;
.s.206:
	.type .s.206,STT_OBJECT;
	.byte =
		0x3E,0x00;
	.byte =
		0x00,0x00;
	.byte .s.207[1];
	.type .s.207,STT_OBJECT;
	.byte =
		0x00,0x00,0x00;
.s.208:
	.type .s.208,STT_OBJECT;
	.byte =
		0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x0D,
		0x0A,0x00;
	.byte =
		0x00,0x00;
.s7INF.209:
	.type .s7INF.209,STT_OBJECT;
	.byte =
		0x7E,0x37,0x20,0x49,0x4E,0x46,0x24,0x00;
.s1INF.210:
	.type .s1INF.210,STT_OBJECT;
	.byte =
		0x7E,0x31,0x20,0x49,0x4E,0x46,0x24,0x00;
.s.211:
	.type .s.211,STT_OBJECT;
	.byte =
		0x3A,0x00;
	.byte =
		0x00,0x00;
.s.212:
	.type .s.212,STT_OBJECT;
	.byte =
		0x3B,0x0D,0x0A,0x00;
.sAVARIY.222:
	.type .sAVARIY.222,STT_OBJECT;
	.byte =
		0x41,0x56,0x41,0x52,0x49,0x59,0x41,0x5F,0x42,0x36,0x31,0x30,
		0x3A,0x00;
	.byte =
		0x00,0x00;
.sAVARIY.223:
	.type .sAVARIY.223,STT_OBJECT;
	.byte =
		0x41,0x56,0x41,0x52,0x49,0x59,0x41,0x5F,0x42,0x36,0x36,0x30,
		0x3A,0x00;
	.byte =
		0x00,0x00;
.sAlfa31.224:
	.type .sAlfa31.224,STT_OBJECT;
	.byte =
		0x41,0x6C,0x66,0x61,0x5B,0x33,0x31,0x3A,0x31,0x36,0x5D,0x20,
		0x3A,0x00;
	.byte =
		0x00,0x00;
.sAlfa15.225:
	.type .sAlfa15.225,STT_OBJECT;
	.byte =
		0x41,0x6C,0x66,0x61,0x5B,0x31,0x35,0x3A,0x20,0x30,0x5D,0x20,
		0x3A,0x00;
	.byte =
		0x00,0x00;
.s.226:
	.type .s.226,STT_OBJECT;
	.byte =
		0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x0D,0x0A,0x00;
	.byte =
		0x00;
.sK615wo.228:
	.type .sK615wo.228,STT_OBJECT;
	.byte =
		0x4B,0x36,0x31,0x35,0x5F,0x77,0x6F,0x72,0x6B,0x0D,0x0A,0x00;
.s615.232:
	.type .s615.232,STT_OBJECT;
	.byte =
		0xFD,0xE2,0xE5,0xED,0xF2,0x20,0xCA,0x36,0x31,0x35,0x21,0x0D,
		0x0A,0x00;
	.byte =
		0x00,0x00;
.s.233:
	.type .s.233,STT_OBJECT;
	.byte =
		0x0D,0x0A,0xD0,0xC5,0xD1,0xD2,0xC0,0xD0,0xD2,0x21,0x0D,0x0A,
		0x00;
	.byte =
		0x00,0x00,0x00;
.sTNCner.234:
	.type .sTNCner.234,STT_OBJECT;
	.byte =
		0x54,0x4E,0x43,0x6E,0x5F,0x65,0x72,0x72,0x6F,0x72,0x3A,0x20,
		0x00;
	.byte =
		0x00,0x00,0x00;
.sCEVner.235:
	.type .sCEVner.235,STT_OBJECT;
	.byte =
		0x43,0x45,0x56,0x6E,0x5F,0x65,0x72,0x72,0x6F,0x72,0x3A,0x20,
		0x00;
	.byte =
		0x00,0x00,0x00;
.s.237:
	.type .s.237,STT_OBJECT;
	.byte =
		0xF3,0xE4,0xE0,0xF7,0xED,0xE0,0xFF,0x20,0x3A,0x29,0x20,0x0D,
		0x00;
	.byte =
		0x00,0x00,0x00;
.sTNOact.239:
	.type .sTNOact.239,STT_OBJECT;
	.byte =
		0x54,0x4E,0x4F,0x5F,0x61,0x63,0x74,0x75,0x61,0x6C,0x3A,0x20,
		0x00;
	.byte =
		0x00,0x00,0x00;
.sTNCact.240:
	.type .sTNCact.240,STT_OBJECT;
	.byte =
		0x54,0x4E,0x43,0x5F,0x61,0x63,0x74,0x75,0x61,0x6C,0x3A,0x20,
		0x00;
	.byte =
		0x00,0x00,0x00;
.s.241:
	.type .s.241,STT_OBJECT;
	.byte =
		0xD1,0xC5,0xC2,0x3A,0x20,0x00;
	.byte =
		0x00,0x00;
.s.242:
	.type .s.242,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xEE,0xF0,0xE8,0xF2,0xE5,0xF2,0x3A,0x00;
	.byte =
		0x00;
.s1ERROR.247:
	.type .s1ERROR.247,STT_OBJECT;
	.byte =
		0x7E,0x31,0x20,0x45,0x52,0x52,0x4F,0x52,0x3A,0x30,0x3B,0x00;
.s.248:
	.type .s.248,STT_OBJECT;
	.byte =
		0xE2,0xF1,0xB8,0x20,0xCE,0xCA,0x2E,0x0D,0x0A,0x00;
	.byte =
		0x00,0x00;
.s.262:
	.type .s.262,STT_OBJECT;
	.byte =
		0xC7,0xE0,0xCD,0xEE,0xD1,0x21,0x0D,0x0A,0x00;
	.byte =
		0x00,0x00,0x00;
.sFOK.279:
	.type .sFOK.279,STT_OBJECT;
	.byte =
		0xF4,0xE0,0xE7,0xE0,0x20,0x46,0xE8,0x3A,0x4F,0x4B,0x21,0x0D,
		0x0A,0x00;
	.byte =
		0x00,0x00;
.sFOK.281:
	.type .sFOK.281,STT_OBJECT;
	.byte =
		0xF4,0xE0,0xE7,0xE0,0x20,0x46,0xE3,0x3A,0x4F,0x4B,0x21,0x0D,
		0x0A,0x00;
	.byte =
		0x00,0x00;
.sINPORT.283:
	.type .sINPORT.283,STT_OBJECT;
	.byte =
		0x49,0x4E,0x50,0x4F,0x52,0x54,0x00;
	.byte =
		0x00;
.sINF.284:
	.type .sINF.284,STT_OBJECT;
	.byte =
		0x49,0x4E,0x46,0x00;
.sinftos.285:
	.type .sinftos.285,STT_OBJECT;
	.byte =
		0x69,0x6E,0x66,0x5F,0x74,0x6F,0x5F,0x73,0x65,0x72,0x76,0x00;
.ssdramw.286:
	.type .ssdramw.286,STT_OBJECT;
	.byte =
		0x73,0x64,0x72,0x61,0x6D,0x5F,0x77,0x72,0x00;
	.byte =
		0x00,0x00,0x00;
.s.288:
	.type .s.288,STT_OBJECT;
	.byte =
		0xC0,0xE4,0xF0,0xE5,0xF1,0x3A,0x00;
	.byte =
		0x00;
.shelp.289:
	.type .shelp.289,STT_OBJECT;
	.byte =
		0x68,0x65,0x6C,0x70,0x00;
	.byte =
		0x00,0x00,0x00;
.shelp.290:
	.type .shelp.290,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0x68,0x65,0x6C,0x70,0x0D,
		0x00;
	.byte =
		0x00,0x00,0x00;
.shelp2.291:
	.type .shelp2.291,STT_OBJECT;
	.byte =
		0x68,0x65,0x6C,0x70,0x32,0x00;
	.byte =
		0x00,0x00;
.smenu.292:
	.type .smenu.292,STT_OBJECT;
	.byte =
		0x6D,0x65,0x6E,0x75,0x00;
	.byte =
		0x00,0x00,0x00;
.smenu.293:
	.type .smenu.293,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0x6D,0x65,0x6E,0x75,0x0D,
		0x00;
	.byte =
		0x00,0x00,0x00;
.sIDreze.294:
	.type .sIDreze.294,STT_OBJECT;
	.byte =
		0x49,0x44,0x5F,0x72,0x65,0x7A,0x65,0x72,0x76,0x00;
	.byte =
		0x00,0x00;
.sout.296:
	.type .sout.296,STT_OBJECT;
	.byte =
		0x6F,0x75,0x74,0x00;
.sout.297:
	.type .sout.297,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0x6F,0x75,0x74,0x3A,0x0D,
		0x0A,0x00;
	.byte =
		0x00,0x00;
.sUDPcon.298:
	.type .sUDPcon.298,STT_OBJECT;
	.byte =
		0x55,0x44,0x50,0x5F,0x63,0x6F,0x6E,0x74,0x72,0x6F,0x6C,0x00;
.sindexw.300:
	.type .sindexw.300,STT_OBJECT;
	.byte =
		0x69,0x6E,0x64,0x65,0x78,0x5F,0x77,0x72,0x3A,0x00;
	.byte =
		0x00,0x00;
.sextraU.301:
	.type .sextraU.301,STT_OBJECT;
	.byte =
		0x65,0x78,0x74,0x72,0x61,0x5F,0x55,0x44,0x50,0x00;
	.byte =
		0x00,0x00;
.sListUD.303:
	.type .sListUD.303,STT_OBJECT;
	.byte =
		0x4C,0x69,0x73,0x74,0x5F,0x55,0x44,0x50,0x00;
	.byte =
		0x00,0x00,0x00;
.sPachka.305:
	.type .sPachka.305,STT_OBJECT;
	.byte =
		0x50,0x61,0x63,0x68,0x6B,0x61,0x5F,0x63,0x6F,0x6E,0x74,0x72,
		0x6F,0x6C,0x00;
	.byte =
		0x00;
.sContro.307:
	.type .sContro.307,STT_OBJECT;
	.byte =
		0x43,0x6F,0x6E,0x74,0x72,0x6F,0x6C,0x5F,0x54,0x4E,0x43,0x00;
.sWORK.309:
	.type .sWORK.309,STT_OBJECT;
	.byte =
		0x57,0x4F,0x52,0x4B,0x00;
	.byte =
		0x00,0x00,0x00;
.sFAZA.311:
	.type .sFAZA.311,STT_OBJECT;
	.byte =
		0x46,0x41,0x5A,0x41,0x00;
	.byte =
		0x00,0x00,0x00;
.sFAZA.312:
	.type .sFAZA.312,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0x46,0x41,0x5A,0x41,0x0D,
		0x0A,0x00;
	.byte =
		0x00,0x00;
.s.313:
	.type .s.313,STT_OBJECT;
	.byte =
		0xC2,0xCA,0xCB,0x5F,0xD4,0xD2,0x00;
	.byte =
		0x00;
.s.314:
	.type .s.314,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0xC2,0xCA,0xCB,0x5F,0xD4,
		0xD2,0x3A,0x00;
	.byte =
		0x00;
.sFTsig.315:
	.type .sFTsig.315,STT_OBJECT;
	.byte =
		0x46,0x54,0x5F,0x73,0x69,0x67,0x00;
	.byte =
		0x00;
.s.317:
	.type .s.317,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x5F,0xCA,0xCD,0xD6,0x00;
.s.319:
	.type .s.319,STT_OBJECT;
	.byte =
		0x20,0x28,0xEC,0xEA,0xF1,0x29,0x0D,0x00;
.sTEST.320:
	.type .sTEST.320,STT_OBJECT;
	.byte =
		0x54,0x45,0x53,0x54,0x00;
	.byte =
		0x00,0x00,0x00;
.sDopINT.322:
	.type .sDopINT.322,STT_OBJECT;
	.byte =
		0x44,0x6F,0x70,0x5F,0x49,0x4E,0x54,0x52,0x00;
	.byte =
		0x00,0x00,0x00;
.sDobzor.324:
	.type .sDobzor.324,STT_OBJECT;
	.byte =
		0x44,0x5F,0x6F,0x62,0x7A,0x6F,0x72,0x00;
.s.326:
	.type .s.326,STT_OBJECT;
	.byte =
		0xC2,0xD6,0xD3,0x00;
.s.328:
	.type .s.328,STT_OBJECT;
	.byte =
		0xCC,0xD3,0x00;
	.byte =
		0x00;
.s.330:
	.type .s.330,STT_OBJECT;
	.byte =
		0xC1,0xD0,0x00;
	.byte =
		0x00;
.s.332:
	.type .s.332,STT_OBJECT;
	.byte =
		0xC3,0xC1,0xD0,0x00;
.s.334:
	.type .s.334,STT_OBJECT;
	.byte =
		0xC2,0xDB,0xCA,0xCB,0x00;
	.byte =
		0x00,0x00,0x00;
.s.336:
	.type .s.336,STT_OBJECT;
	.byte =
		0xC1,0xCB,0xCE,0xCA,0x5F,0xD3,0xCF,0xD0,0x00;
	.byte =
		0x00,0x00,0x00;
.sFS.338:
	.type .sFS.338,STT_OBJECT;
	.byte =
		0x46,0x53,0x00;
	.byte =
		0x00;
.sFG.340:
	.type .sFG.340,STT_OBJECT;
	.byte =
		0x46,0x47,0x00;
	.byte =
		0x00;
.smono.342:
	.type .smono.342,STT_OBJECT;
	.byte =
		0x6D,0x6F,0x6E,0x6F,0x00;
	.byte =
		0x00,0x00,0x00;
.sMONO.343:
	.type .sMONO.343,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0x4D,0x4F,0x4E,0x4F,0x3A,
		0x00;
	.byte =
		0x00,0x00,0x00;
.sdevF.344:
	.type .sdevF.344,STT_OBJECT;
	.byte =
		0x64,0x65,0x76,0x5F,0x46,0x00;
	.byte =
		0x00,0x00;
.sTimp.346:
	.type .sTimp.346,STT_OBJECT;
	.byte =
		0x54,0x69,0x6D,0x70,0x00;
	.byte =
		0x00,0x00,0x00;
.sDelayT.348:
	.type .sDelayT.348,STT_OBJECT;
	.byte =
		0x44,0x65,0x6C,0x61,0x79,0x5F,0x54,0x4E,0x50,0x00;
	.byte =
		0x00,0x00;
.sDelayT.350:
	.type .sDelayT.350,STT_OBJECT;
	.byte =
		0x44,0x65,0x6C,0x61,0x79,0x5F,0x54,0x4E,0x49,0x00;
	.byte =
		0x00,0x00;
.sNimpul.352:
	.type .sNimpul.352,STT_OBJECT;
	.byte =
		0x4E,0x5F,0x69,0x6D,0x70,0x75,0x6C,0x73,0x00;
	.byte =
		0x00,0x00,0x00;
.sNtempo.354:
	.type .sNtempo.354,STT_OBJECT;
	.byte =
		0x4E,0x5F,0x74,0x65,0x6D,0x70,0x6F,0x76,0x00;
	.byte =
		0x00,0x00,0x00;
.s.356:
	.type .s.356,STT_OBJECT;
	.byte =
		0xCB,0xD7,0xCC,0x00;
.s.357:
	.type .s.357,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0xCB,0xD7,0xCC,0x3A,0x00;
.sSYNCPI.358:
	.type .sSYNCPI.358,STT_OBJECT;
	.byte =
		0x53,0x59,0x4E,0x43,0x5F,0x50,0x49,0x4C,0x41,0x00;
	.byte =
		0x00,0x00;
.sTSTout.360:
	.type .sTSTout.360,STT_OBJECT;
	.byte =
		0x54,0x53,0x54,0x5F,0x6F,0x75,0x74,0x00;
.sERROR.362:
	.type .sERROR.362,STT_OBJECT;
	.byte =
		0x45,0x52,0x52,0x4F,0x52,0x00;
	.byte =
		0x00,0x00;
.sERROR.363:
	.type .sERROR.363,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0x45,0x52,0x52,0x4F,0x52,
		0x3A,0x00;
	.byte =
		0x00,0x00;
.sZapret.364:
	.type .sZapret.364,STT_OBJECT;
	.byte =
		0x5A,0x61,0x70,0x72,0x65,0x74,0x5F,0x52,0x45,0x5A,0x45,0x52,
		0x56,0x00;
	.byte =
		0x00,0x00;
.sSTOP.366:
	.type .sSTOP.366,STT_OBJECT;
	.byte =
		0x53,0x54,0x4F,0x50,0x00;
	.byte =
		0x00,0x00,0x00;
.sSTOP.367:
	.type .sSTOP.367,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0x53,0x54,0x4F,0x50,0x0D,
		0x0A,0x00;
	.byte =
		0x00,0x00;
.sOUTPOR.368:
	.type .sOUTPOR.368,STT_OBJECT;
	.byte =
		0x4F,0x55,0x54,0x50,0x4F,0x52,0x54,0x00;
.sTNC.369:
	.type .sTNC.369,STT_OBJECT;
	.byte =
		0x54,0x4E,0x43,0x00;
.sPOWERO.371:
	.type .sPOWERO.371,STT_OBJECT;
	.byte =
		0x50,0x4F,0x57,0x45,0x52,0x5F,0x4F,0x46,0x46,0x00;
	.byte =
		0x00,0x00;
.sPOWERO.373:
	.type .sPOWERO.373,STT_OBJECT;
	.byte =
		0x50,0x4F,0x57,0x45,0x52,0x5F,0x4F,0x4E,0x00;
	.byte =
		0x00,0x00,0x00;
.sERRORB.375:
	.type .sERRORB.375,STT_OBJECT;
	.byte =
		0x45,0x52,0x52,0x4F,0x52,0x5F,0x42,0x36,0x31,0x30,0x00;
	.byte =
		0x00;
.s.377:
	.type .s.377,STT_OBJECT;
	.byte =
		0xC0,0xC2,0xC0,0xD0,0xC8,0xDF,0x21,0x0D,0x0A,0x00;
	.byte =
		0x00,0x00;
.sOK.378:
	.type .sOK.378,STT_OBJECT;
	.byte =
		0x4F,0x4B,0x0D,0x0A,0x00;
	.byte =
		0x00,0x00,0x00;
.s.466:
	.type .s.466,STT_OBJECT;
	.byte =
		0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x0D,0x0A,0x00;
.static40:
	.type .static40,STT_OBJECT;
	.byte =
		0xC0,0x2F,0x4E,0x17,0x00,0x00,0x00,0x00;
.static41:
	.type .static41,STT_OBJECT;
	.byte =
		0x60,0x55,0x74,0x17,0x00,0x00,0x00,0x00;
.static42:
	.type .static42,STT_OBJECT;
	.byte =
		0x40,0x42,0x0F,0x00,0x00,0x00,0x00,0x00;
.static43:
	.type .static43,STT_OBJECT;
	.byte =
		0x80,0x59,0x1B,0x1A,0x00,0x00,0x00,0x00;
.static44:
	.type .static44,STT_OBJECT;
	.byte =
		0x00,0x72,0x5D,0x17,0x00,0x00,0x00,0x00;
.static45:
	.type .static45,STT_OBJECT;
	.byte =
		0xA0,0xFA,0x22,0x1A,0x00,0x00,0x00,0x00;
.static46:
	.type .static46,STT_OBJECT;
	.byte =
		0x20,0x13,0x65,0x17,0x00,0x00,0x00,0x00;
.static47:
	.type .static47,STT_OBJECT;
	.byte =
		0xC0,0x9B,0x2A,0x1A,0x00,0x00,0x00,0x00;
.static48:
	.type .static48,STT_OBJECT;
	.byte =
		0x40,0xB4,0x6C,0x17,0x00,0x00,0x00,0x00;
.s1TSTou.467:
	.type .s1TSTou.467,STT_OBJECT;
	.byte =
		0x7E,0x31,0x20,0x54,0x53,0x54,0x5F,0x6F,0x75,0x74,0x3A,0x30,
		0x3B,0x00;
.epcrodata.end:

	.section/ZERO_INIT/DOUBLE64 bsz;

	.align 4;
.epcbss:
	.type .epcbss,STT_OBJECT;
	.byte _lk[1];
	.global _lk;
	.type _lk,STT_OBJECT;
	.align 4;
	.byte _buf_sdram1[4];
	.global _buf_sdram1;
	.type _buf_sdram1,STT_OBJECT;
	.byte _buf_sdram2[4];
	.global _buf_sdram2;
	.type _buf_sdram2,STT_OBJECT;
	.byte _led_tick[4];
	.global _led_tick;
	.type _led_tick,STT_OBJECT;
	.byte _sch_uart[2];
	.global _sch_uart;
	.type _sch_uart,STT_OBJECT;
	.align 4;
	.byte _tested[4];
	.global _tested;
	.type _tested,STT_OBJECT;
	.byte _DDS_delay[4];
	.global _DDS_delay;
	.type _DDS_delay,STT_OBJECT;
	.byte _Inf_A1[4];
	.global _Inf_A1;
	.type _Inf_A1,STT_OBJECT;
	.byte _n1[1];
	.global _n1;
	.type _n1,STT_OBJECT;
	.byte _n2[1];
	.global _n2;
	.type _n2,STT_OBJECT;
	.byte _flag_Ethernet[1];
	.global _flag_Ethernet;
	.type _flag_Ethernet,STT_OBJECT;
	.byte _FLAG_SPORT1_TX[1];
	.global _FLAG_SPORT1_TX;
	.type _FLAG_SPORT1_TX,STT_OBJECT;
	.byte _tst_Kod_Dii[4];
	.global _tst_Kod_Dii;
	.type _tst_Kod_Dii,STT_OBJECT;
	.byte _tst_Kod_Dip[4];
	.global _tst_Kod_Dip;
	.type _tst_Kod_Dip,STT_OBJECT;
	.byte _Mem_K615[9];
	.global _Mem_K615;
	.type _Mem_K615,STT_OBJECT;
	.byte _K611[5];
	.global _K611;
	.type _K611,STT_OBJECT;
	.byte _K612[5];
	.global _K612;
	.type _K612,STT_OBJECT;
	.byte _K613[5];
	.global _K613;
	.type _K613,STT_OBJECT;
	.byte _K614[5];
	.global _K614;
	.type _K614,STT_OBJECT;
	.byte _K615[5];
	.global _K615;
	.type _K615,STT_OBJECT;
	.byte _B610[5];
	.global _B610;
	.type _B610,STT_OBJECT;
	.align 4;
	.byte _crc_outport[1];
	.global _crc_outport;
	.type _crc_outport,STT_OBJECT;
	.byte .epcpad0[3];
	.byte _str_command[6];
	.global _str_command;
	.type _str_command,STT_OBJECT;
	.byte .epcpad1[2];
	.byte _FLAG_INF_K607.0[4];
	.type _FLAG_INF_K607.0,STT_OBJECT;
	.byte _Zadano_off_ON.253[1];
	.type _Zadano_off_ON.253,STT_OBJECT;
	.byte _Zadano_off.255[1];
	.type _Zadano_off.255,STT_OBJECT;
	.byte _Zadano_GBR.256[1];
	.type _Zadano_GBR.256,STT_OBJECT;
	.byte _Zadano_BR.257[1];
	.type _Zadano_BR.257,STT_OBJECT;
	.byte _Zadano_CU_MU.258[1];
	.type _Zadano_CU_MU.258,STT_OBJECT;
	.byte _Zadano_VYKL.259[1];
	.type _Zadano_VYKL.259,STT_OBJECT;
	.byte _Zapret_REZERV.260[1];
	.type _Zapret_REZERV.260,STT_OBJECT;
	.byte _AVARIYA_NILS.261[1];
	.type _AVARIYA_NILS.261,STT_OBJECT;
	.byte _Zadano_off.265[1];
	.type _Zadano_off.265,STT_OBJECT;
	.byte _Zadano_GBR.266[1];
	.type _Zadano_GBR.266,STT_OBJECT;
	.byte _Zadano_BR.267[1];
	.type _Zadano_BR.267,STT_OBJECT;
	.byte _Zadano_CU_MU.268[1];
	.type _Zadano_CU_MU.268,STT_OBJECT;
	.byte _Zadano_VYKL.269[1];
	.type _Zadano_VYKL.269,STT_OBJECT;
	.byte _Zapret_REZERV.270[1];
	.type _Zapret_REZERV.270,STT_OBJECT;
	.byte _AVARIYA_NILS.271[1];
	.type _AVARIYA_NILS.271,STT_OBJECT;
	.byte _ERROR_B610.272[1];
	.type _ERROR_B610.272,STT_OBJECT;
	.byte _ERROR_B660.273[1];
	.type _ERROR_B660.273,STT_OBJECT;
	.byte _OBMEN_B610.274[1];
	.type _OBMEN_B610.274,STT_OBJECT;
.epcbss.end:

	.section .debug_abbrev SHT_DEBUGINFO;

	.align 1;
.epcabbrev:
	.type .epcabbrev,STT_OBJECT;
	.inc/binary ".\Release\main.sbn", 0, 285;
.epcabbrev.end:

	.section .debug_info SHT_DEBUGINFO;

	.align 1;
.epcdebug:
	.type .epcdebug,STT_OBJECT;
	.byte =
		0x9A,0x85,0x00,0x00,0x02,0x00;
	.byte4 = .epcabbrev;
	.byte =
		0x04,0x01,0x2E,0x2E,0x5C,0x42,0x46,0x63,0x6F,0x6D,0x5C,0x6D,
		0x61,0x69,0x6E,0x2E,0x63,0x00,0x01;
	.byte4 = .epcline;
	.inc/binary ".\Release\main.sbn", 285, 6539;
	.byte4 = .LN_IND_DFK;
	.byte4 = .LN._IND_DFK.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN0;
	.byte4 = .LN._IND_DFK.end;
	.byte =
		0x00,0x00,0x11,0xF6,0x19,0x00,0x00,0x55,0x44,0x50,0x5F,0x54,
		0x49,0x4D,0x45,0x4F,0x55,0x54,0x5F,0x54,0x53,0x54,0x00,0x01;
	.byte4 = .LN_UDP_TIMEOUT_TST;
	.byte4 = .LN._UDP_TIMEOUT_TST.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN1;
	.byte4 = .LN._UDP_TIMEOUT_TST.end;
	.byte =
		0x00,0x00,0x13,0x2D,0x1A,0x00,0x00,0x45,0x76,0x65,0x6E,0x74,
		0x5F,0x53,0x79,0x6E,0x68,0x72,0x6F,0x6E,0x5F,0x66,0x75,0x6E,
		0x63,0x00,0x01;
	.byte4 = .LN_Event_Synhron_func;
	.byte4 = .LN._Event_Synhron_func.end;
	.byte =
		0x01,0xE8,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN8;
	.byte4 = .LN._Event_Synhron_func.end;
	.byte =
		0x00,0x00,0x11,0x75,0x1A,0x00,0x00,0x49,0x4E,0x46,0x5F,0x4B,
		0x36,0x30,0x37,0x00,0x01;
	.byte4 = .LN_INF_K607;
	.byte4 = .LN._INF_K607.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN14;
	.byte4 = .LN._INF_K607.end;
	.byte =
		0x14,0x46,0x4C,0x41,0x47,0x5F,0x49,0x4E,0x46,0x5F,0x4B,0x36,
		0x30,0x37,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_INF_K607.0;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0xA8,0x1A,0x00,0x00,
		0x49,0x6E,0x66,0x6F,0x5F,0x62,0x61,0x63,0x6B,0x5F,0x45,0x74,
		0x68,0x65,0x72,0x6E,0x65,0x74,0x00,0x01;
	.byte4 = .LN_Info_back_Ethernet;
	.byte4 = .LN._Info_back_Ethernet.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN17;
	.byte4 = .LN._Info_back_Ethernet.end;
	.byte =
		0x00,0x00,0x13,0xD4,0x1A,0x00,0x00,0x43,0x45,0x56,0x5F,0x72,
		0x63,0x76,0x00,0x01;
	.byte4 = .LN_CEV_rcv;
	.byte4 = .LN._CEV_rcv.end;
	.byte =
		0x01,0xE8,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN203;
	.byte4 = .LN._CEV_rcv.end;
	.byte =
		0x00,0x00,0x13,0x00,0x1B,0x00,0x00,0x54,0x4E,0x43,0x5F,0x72,
		0x63,0x76,0x00,0x01;
	.byte4 = .LN_TNC_rcv;
	.byte4 = .LN._TNC_rcv.end;
	.byte =
		0x01,0xE8,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN207;
	.byte4 = .LN._TNC_rcv.end;
	.byte =
		0x00,0x00,0x11,0x2B,0x1B,0x00,0x00,0x54,0x49,0x4D,0x45,0x5F,
		0x63,0x6F,0x64,0x65,0x72,0x00,0x01;
	.byte4 = .LN_TIME_coder;
	.byte4 = .LN._TIME_coder.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN229;
	.byte4 = .LN._TIME_coder.end;
	.byte =
		0x00,0x00,0x13,0x58,0x1B,0x00,0x00,0x57,0x61,0x69,0x74,0x5F,
		0x50,0x50,0x49,0x00,0x01;
	.byte4 = .LN_Wait_PPI;
	.byte4 = .LN._Wait_PPI.end;
	.byte =
		0x01,0x80,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN230;
	.byte4 = .LN._Wait_PPI.end;
	.byte =
		0x00,0x00,0x11,0x82,0x1B,0x00,0x00,0x53,0x74,0x72,0x5F,0x70,
		0x72,0x69,0x6E,0x74,0x00,0x01;
	.byte4 = .LN_Str_print;
	.byte4 = .LN._Str_print.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN231;
	.byte4 = .LN._Str_print.end;
	.byte =
		0x00,0x00,0x11,0xAD,0x1B,0x00,0x00,0x70,0x61,0x63,0x6B,0x65,
		0x74,0x5F,0x55,0x50,0x52,0x00,0x01;
	.byte4 = .LN_packet_UPR;
	.byte4 = .LN._packet_UPR.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN232;
	.byte4 = .LN._packet_UPR.end;
	.byte =
		0x00,0x00,0x13,0xDE,0x1B,0x00,0x00,0x44,0x45,0x56,0x5F,0x63,
		0x6F,0x6D,0x70,0x5F,0x74,0x73,0x74,0x00,0x01;
	.byte4 = .LN_DEV_comp_tst;
	.byte4 = .LN._DEV_comp_tst.end;
	.byte =
		0x01,0xE8,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN271;
	.byte4 = .LN._DEV_comp_tst.end;
	.byte =
		0x00,0x00,0x13,0x0D,0x1C,0x00,0x00,0x46,0x5F,0x63,0x6F,0x6D,
		0x70,0x5F,0x74,0x73,0x74,0x00,0x01;
	.byte4 = .LN_F_comp_tst;
	.byte4 = .LN._F_comp_tst.end;
	.byte =
		0x01,0xE8,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN279;
	.byte4 = .LN._F_comp_tst.end;
	.byte =
		0x00,0x00,0x11,0x3A,0x1C,0x00,0x00,0x54,0x69,0x6D,0x65,0x5F,
		0x53,0x45,0x56,0x5F,0x49,0x4E,0x46,0x00,0x01;
	.byte4 = .LN_Time_SEV_INF;
	.byte4 = .LN._Time_SEV_INF.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN285;
	.byte4 = .LN._Time_SEV_INF.end;
	.byte =
		0x00,0x00,0x11,0x63,0x1C,0x00,0x00,0x5A,0x55,0x54,0x72,0x61,
		0x6E,0x73,0x66,0x00,0x01;
	.byte4 = .LN_ZUTransf;
	.byte4 = .LN._ZUTransf.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN292;
	.byte4 = .LN._ZUTransf.end;
	.byte =
		0x00,0x00,0x11,0x8B,0x1C,0x00,0x00,0x5A,0x54,0x72,0x61,0x6E,
		0x73,0x66,0x00,0x01;
	.byte4 = .LN_ZTransf;
	.byte4 = .LN._ZTransf.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN307;
	.byte4 = .LN._ZTransf.end;
	.byte =
		0x00,0x00,0x13,0xB4,0x1C,0x00,0x00,0x6C,0x65,0x6E,0x67,0x00,
		0x01;
	.byte4 = .LN_leng;
	.byte4 = .LN._leng.end;
	.byte =
		0x01,0xE8,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN322;
	.byte4 = .LN._leng.end;
	.byte =
		0x00,0x00,0x11,0xDA,0x1C,0x00,0x00,0x7A,0x70,0x75,0x74,0x73,
		0x00,0x01;
	.byte4 = .LN_zputs;
	.byte4 = .LN._zputs.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN326;
	.byte4 = .LN._zputs.end;
	.byte =
		0x00,0x00,0x13,0x07,0x1D,0x00,0x00,0x67,0x65,0x74,0x63,0x68,
		0x61,0x72,0x30,0x00,0x01;
	.byte4 = .LN_getchar0;
	.byte4 = .LN._getchar0.end;
	.byte =
		0x01,0x80,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN336;
	.byte4 = .LN._getchar0.end;
	.byte =
		0x00,0x00,0x13,0x33,0x1D,0x00,0x00,0x74,0x78,0x63,0x68,0x61,
		0x72,0x32,0x00,0x01;
	.byte4 = .LN_txchar2;
	.byte4 = .LN._txchar2.end;
	.byte =
		0x01,0x80,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN343;
	.byte4 = .LN._txchar2.end;
	.byte =
		0x00,0x00,0x13,0x5F,0x1D,0x00,0x00,0x74,0x78,0x63,0x68,0x61,
		0x72,0x30,0x00,0x01;
	.byte4 = .LN_txchar0;
	.byte4 = .LN._txchar0.end;
	.byte =
		0x01,0x80,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN348;
	.byte4 = .LN._txchar0.end;
	.byte =
		0x00,0x00,0x11,0x8E,0x1D,0x00,0x00,0x66,0x75,0x6E,0x63,0x5F,
		0x65,0x76,0x65,0x6E,0x74,0x5F,0x52,0x5A,0x56,0x00,0x01;
	.byte4 = .LN_func_event_RZV;
	.byte4 = .LN._func_event_RZV.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN353;
	.byte4 = .LN._func_event_RZV.end;
	.byte =
		0x00,0x00,0x11,0xBE,0x1D,0x00,0x00,0x66,0x75,0x6E,0x63,0x5F,
		0x65,0x76,0x65,0x6E,0x74,0x5F,0x6B,0x36,0x31,0x35,0x00,0x01;
	.byte4 = .LN_func_event_k615;
	.byte4 = .LN._func_event_k615.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN354;
	.byte4 = .LN._func_event_k615.end;
	.byte =
		0x00,0x00,0x11,0xE9,0x1D,0x00,0x00,0x53,0x44,0x52,0x41,0x4D,
		0x5F,0x77,0x6F,0x72,0x6B,0x00,0x01;
	.byte4 = .LN_SDRAM_work;
	.byte4 = .LN._SDRAM_work.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN363;
	.byte4 = .LN._SDRAM_work.end;
	.byte =
		0x00,0x00,0x13,0x17,0x1E,0x00,0x00,0x54,0x69,0x6D,0x65,0x5F,
		0x72,0x65,0x61,0x6C,0x00,0x01;
	.byte4 = .LN_Time_real;
	.byte4 = .LN._Time_real.end;
	.byte =
		0x01,0xE8,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN364;
	.byte4 = .LN._Time_real.end;
	.byte =
		0x00,0x00,0x13,0x46,0x1E,0x00,0x00,0x54,0x69,0x6D,0x65,0x72,
		0x5F,0x49,0x4E,0x54,0x32,0x00,0x01;
	.byte4 = .LN_Timer_INT2;
	.byte4 = .LN._Timer_INT2.end;
	.byte =
		0x01,0xE8,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN368;
	.byte4 = .LN._Timer_INT2.end;
	.byte =
		0x00,0x00,0x11,0x72,0x1E,0x00,0x00,0x74,0x73,0x74,0x5F,0x53,
		0x50,0x49,0x5F,0x42,0x55,0x46,0x00,0x01;
	.byte4 = .LN_tst_SPI_BUF;
	.byte4 = .LN._tst_SPI_BUF.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN381;
	.byte4 = .LN._tst_SPI_BUF.end;
	.byte =
		0x00,0x00,0x11,0x97,0x1E,0x00,0x00,0x4D,0x45,0x4E,0x55,0x00,
		0x01;
	.byte4 = .LN_MENU;
	.byte4 = .LN._MENU.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN382;
	.byte4 = .LN._MENU.end;
	.byte =
		0x00,0x00,0x11,0xC2,0x1E,0x00,0x00,0x46,0x54,0x5F,0x63,0x6F,
		0x6E,0x74,0x72,0x6F,0x6C,0x00,0x01;
	.byte4 = .LN_FT_control;
	.byte4 = .LN._FT_control.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN383;
	.byte4 = .LN._FT_control.end;
	.byte =
		0x00,0x00,0x11,0xEC,0x1E,0x00,0x00,0x42,0x55,0x46,0x5F,0x63,
		0x6C,0x65,0x61,0x72,0x00,0x01;
	.byte4 = .LN_BUF_clear;
	.byte4 = .LN._BUF_clear.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN460;
	.byte4 = .LN._BUF_clear.end;
	.byte =
		0x00,0x00,0x11,0x13,0x1F,0x00,0x00,0x73,0x70,0x69,0x5F,0x63,
		0x73,0x00,0x01;
	.byte4 = .LN_spi_cs;
	.byte4 = .LN._spi_cs.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN469;
	.byte4 = .LN._spi_cs.end;
	.byte =
		0x00,0x00,0x11,0x3E,0x1F,0x00,0x00,0x73,0x70,0x69,0x5F,0x63,
		0x73,0x5F,0x53,0x50,0x49,0x00,0x01;
	.byte4 = .LN_spi_cs_SPI;
	.byte4 = .LN._spi_cs_SPI.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN475;
	.byte4 = .LN._spi_cs_SPI.end;
	.byte =
		0x00,0x00,0x13,0x6D,0x1F,0x00,0x00,0x53,0x50,0x49,0x52,0x78,
		0x52,0x65,0x61,0x64,0x79,0x00,0x01;
	.byte4 = .LN_SPIRxReady;
	.byte4 = .LN._SPIRxReady.end;
	.byte =
		0x01,0xC1,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN486;
	.byte4 = .LN._SPIRxReady.end;
	.byte =
		0x00,0x00,0x13,0x9B,0x1F,0x00,0x00,0x53,0x50,0x49,0x54,0x78,
		0x46,0x75,0x6C,0x6C,0x00,0x01;
	.byte4 = .LN_SPITxFull;
	.byte4 = .LN._SPITxFull.end;
	.byte =
		0x01,0xC1,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN487;
	.byte4 = .LN._SPITxFull.end;
	.byte =
		0x00,0x00,0x13,0xCF,0x1F,0x00,0x00,0x53,0x50,0x49,0x54,0x78,
		0x49,0x6E,0x50,0x72,0x6F,0x67,0x72,0x65,0x73,0x73,0x00,0x01;
	.byte4 = .LN_SPITxInProgress;
	.byte4 = .LN._SPITxInProgress.end;
	.byte =
		0x01,0xC1,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN488;
	.byte4 = .LN._SPITxInProgress.end;
	.byte =
		0x00,0x00,0x11,0xF5,0x1F,0x00,0x00,0x73,0x73,0x79,0x6E,0x63,
		0x00,0x01;
	.byte4 = .LN_ssync;
	.byte4 = .LN._ssync.end;
	.byte =
		0x01,0x00,0x02,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN489;
	.byte4 = .LN._ssync.end;
	.byte =
		0x00,0x00,0x11,0x1C,0x20,0x00,0x00,0x53,0x50,0x49,0x50,0x75,
		0x74,0x00,0x01;
	.byte4 = .LN_SPIPut;
	.byte4 = .LN._SPIPut.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN491;
	.byte4 = .LN._SPIPut.end;
	.byte =
		0x00,0x00,0x13,0x47,0x20,0x00,0x00,0x53,0x50,0x49,0x47,0x65,
		0x74,0x00,0x01;
	.byte4 = .LN_SPIGet;
	.byte4 = .LN._SPIGet.end;
	.byte =
		0x01,0xC1,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN495;
	.byte4 = .LN._SPIGet.end;
	.byte =
		0x00,0x00,0x13,0x6F,0x20,0x00,0x00,0x53,0x50,0x49,0x00,0x01;
	.byte4 = .LN_SPI;
	.byte4 = .LN._SPI.end;
	.byte =
		0x01,0x97,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN498;
	.byte4 = .LN._SPI.end;
	.byte =
		0x00,0x00,0x11,0x9A,0x20,0x00,0x00,0x73,0x70,0x69,0x5F,0x74,
		0x72,0x61,0x6E,0x73,0x66,0x00,0x01;
	.byte4 = .LN_spi_transf;
	.byte4 = .LN._spi_transf.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN503;
	.byte4 = .LN._spi_transf.end;
	.byte =
		0x00,0x00,0x11,0xC8,0x20,0x00,0x00,0x53,0x50,0x4F,0x52,0x54,
		0x30,0x5F,0x65,0x6E,0x61,0x62,0x6C,0x65,0x00,0x01;
	.byte4 = .LN_SPORT0_enable;
	.byte4 = .LN._SPORT0_enable.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN512;
	.byte4 = .LN._SPORT0_enable.end;
	.byte =
		0x00,0x00,0x11,0xF7,0x20,0x00,0x00,0x53,0x50,0x4F,0x52,0x54,
		0x30,0x5F,0x64,0x69,0x73,0x61,0x62,0x6C,0x65,0x00,0x01;
	.byte4 = .LN_SPORT0_disable;
	.byte4 = .LN._SPORT0_disable.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN518;
	.byte4 = .LN._SPORT0_disable.end;
	.byte =
		0x00,0x00,0x11,0x25,0x21,0x00,0x00,0x53,0x50,0x4F,0x52,0x54,
		0x31,0x5F,0x65,0x6E,0x61,0x62,0x6C,0x65,0x00,0x01;
	.byte4 = .LN_SPORT1_enable;
	.byte4 = .LN._SPORT1_enable.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN524;
	.byte4 = .LN._SPORT1_enable.end;
	.byte =
		0x00,0x00,0x11,0x54,0x21,0x00,0x00,0x53,0x50,0x4F,0x52,0x54,
		0x31,0x5F,0x64,0x69,0x73,0x61,0x62,0x6C,0x65,0x00,0x01;
	.byte4 = .LN_SPORT1_disable;
	.byte4 = .LN._SPORT1_disable.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN531;
	.byte4 = .LN._SPORT1_disable.end;
	.byte =
		0x00,0x00,0x13,0x9D,0x21,0x00,0x00,0x53,0x50,0x4F,0x52,0x54,
		0x30,0x5F,0x77,0x72,0x69,0x74,0x65,0x5F,0x72,0x65,0x61,0x64,
		0x00,0x01;
	.byte4 = .LN_SPORT0_write_read;
	.byte4 = .LN._SPORT0_write_read.end;
	.byte =
		0x01,0xE8,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN537;
	.byte4 = .LN._SPORT0_write_read.end;
	.byte =
		0x14,0x77,0x6F,0x72,0x64,0x00,0x01,0x9D,0x21,0x00,0x00,0x02,
		0x7F,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x09,0xE8,0x01,
		0x00,0x00,0x13,0xE6,0x21,0x00,0x00,0x53,0x50,0x4F,0x52,0x54,
		0x31,0x5F,0x77,0x72,0x69,0x74,0x65,0x00,0x01;
	.byte4 = .LN_SPORT1_write;
	.byte4 = .LN._SPORT1_write.end;
	.byte =
		0x01,0xE8,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN548;
	.byte4 = .LN._SPORT1_write.end;
	.byte =
		0x14,0x77,0x6F,0x72,0x64,0x00,0x01,0x9D,0x21,0x00,0x00,0x02,
		0x7F,0x0C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0x10,0x22,
		0x00,0x00,0x70,0x75,0x74,0x5F,0x63,0x68,0x61,0x72,0x31,0x00,
		0x01;
	.byte4 = .LN_put_char1;
	.byte4 = .LN._put_char1.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN552;
	.byte4 = .LN._put_char1.end;
	.byte =
		0x00,0x00,0x11,0x3A,0x22,0x00,0x00,0x5A,0x70,0x75,0x74,0x5F,
		0x73,0x74,0x72,0x31,0x00,0x01;
	.byte4 = .LN_Zput_str1;
	.byte4 = .LN._Zput_str1.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN571;
	.byte4 = .LN._Zput_str1.end;
	.byte =
		0x00,0x00,0x11,0x64,0x22,0x00,0x00,0x72,0x65,0x61,0x64,0x5F,
		0x73,0x74,0x72,0x31,0x00,0x01;
	.byte4 = .LN_read_str1;
	.byte4 = .LN._read_str1.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN580;
	.byte4 = .LN._read_str1.end;
	.byte =
		0x00,0x00,0x11,0x8C,0x22,0x00,0x00,0x72,0x65,0x76,0x65,0x72,
		0x73,0x65,0x00,0x01;
	.byte4 = .LN_reverse;
	.byte4 = .LN._reverse.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN587;
	.byte4 = .LN._reverse.end;
	.byte =
		0x00,0x00,0x11,0xB1,0x22,0x00,0x00,0x69,0x74,0x6F,0x61,0x00,
		0x01;
	.byte4 = .LN_itoa;
	.byte4 = .LN._itoa.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN596;
	.byte4 = .LN._itoa.end;
	.byte =
		0x00,0x00,0x11,0xD8,0x22,0x00,0x00,0x75,0x5F,0x69,0x74,0x6F,
		0x61,0x00,0x01;
	.byte4 = .LN_u_itoa;
	.byte4 = .LN._u_itoa.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN607;
	.byte4 = .LN._u_itoa.end;
	.byte =
		0x00,0x00,0x11,0x08,0x23,0x00,0x00,0x45,0x76,0x65,0x6E,0x74,
		0x5F,0x53,0x50,0x4F,0x52,0x54,0x5F,0x52,0x55,0x4E,0x00,0x01;
	.byte4 = .LN_Event_SPORT_RUN;
	.byte4 = .LN._Event_SPORT_RUN.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN616;
	.byte4 = .LN._Event_SPORT_RUN.end;
	.byte =
		0x00,0x00,0x11,0x35,0x23,0x00,0x00,0x54,0x69,0x6D,0x65,0x5F,
		0x63,0x6F,0x6E,0x74,0x72,0x6F,0x6C,0x00,0x01;
	.byte4 = .LN_Time_control;
	.byte4 = .LN._Time_control.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN619;
	.byte4 = .LN._Time_control.end;
	.byte =
		0x00,0x00,0x11,0x62,0x23,0x00,0x00,0x55,0x41,0x52,0x54,0x5F,
		0x63,0x6F,0x6E,0x74,0x72,0x6F,0x6C,0x00,0x01;
	.byte4 = .LN_UART_control;
	.byte4 = .LN._UART_control.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN621;
	.byte4 = .LN._UART_control.end;
	.byte =
		0x00,0x00,0x13,0x8F,0x23,0x00,0x00,0x55,0x44,0x50,0x5F,0x74,
		0x65,0x73,0x74,0x00,0x01;
	.byte4 = .LN_UDP_test;
	.byte4 = .LN._UDP_test.end;
	.byte =
		0x01,0xD3,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN641;
	.byte4 = .LN._UDP_test.end;
	.byte =
		0x00,0x00,0x11,0xB5,0x23,0x00,0x00,0x73,0x65,0x6E,0x64,0x54,
		0x00,0x01;
	.byte4 = .LN_sendT;
	.byte4 = .LN._sendT.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN644;
	.byte4 = .LN._sendT.end;
	.byte =
		0x00,0x00,0x11,0xE1,0x23,0x00,0x00,0x55,0x41,0x52,0x54,0x5F,
		0x44,0x4D,0x41,0x5F,0x54,0x58,0x00,0x01;
	.byte4 = .LN_UART_DMA_TX;
	.byte4 = .LN._UART_DMA_TX.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN647;
	.byte4 = .LN._UART_DMA_TX.end;
	.byte =
		0x00,0x00,0x11,0x0E,0x24,0x00,0x00,0x55,0x41,0x52,0x54,0x5F,
		0x44,0x4D,0x41,0x5F,0x54,0x58,0x32,0x00,0x01;
	.byte4 = .LN_UART_DMA_TX2;
	.byte4 = .LN._UART_DMA_TX2.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN674;
	.byte4 = .LN._UART_DMA_TX2.end;
	.byte =
		0x00,0x00,0x11,0x36,0x24,0x00,0x00,0x54,0x72,0x61,0x6E,0x73,
		0x66,0x32,0x00,0x01;
	.byte4 = .LN_Transf2;
	.byte4 = .LN._Transf2.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN701;
	.byte4 = .LN._Transf2.end;
	.byte =
		0x00,0x00,0x13,0x67,0x24,0x00,0x00,0x63,0x6F,0x6E,0x74,0x72,
		0x6F,0x6C,0x5F,0x42,0x36,0x31,0x30,0x00,0x01;
	.byte4 = .LN_control_B610;
	.byte4 = .LN._control_B610.end;
	.byte =
		0x01,0x80,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN715;
	.byte4 = .LN._control_B610.end;
	.byte =
		0x00,0x00,0x11,0x92,0x24,0x00,0x00,0x43,0x4F,0x4D,0x4D,0x41,
		0x4E,0x44,0x5F,0x4F,0x4E,0x00,0x01;
	.byte4 = .LN_COMMAND_ON;
	.byte4 = .LN._COMMAND_ON.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN719;
	.byte4 = .LN._COMMAND_ON.end;
	.byte =
		0x00,0x00,0x11,0xBE,0x24,0x00,0x00,0x4F,0x46,0x46,0x5F,0x73,
		0x65,0x63,0x74,0x69,0x6F,0x6E,0x00,0x01;
	.byte4 = .LN_OFF_section;
	.byte4 = .LN._OFF_section.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN722;
	.byte4 = .LN._OFF_section.end;
	.byte =
		0x00,0x00,0x11,0xE5,0x24,0x00,0x00,0x54,0x72,0x61,0x6E,0x73,
		0x66,0x00,0x01;
	.byte4 = .LN_Transf;
	.byte4 = .LN._Transf.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN736;
	.byte4 = .LN._Transf.end;
	.byte =
		0x00,0x00,0x11,0x0E,0x25,0x00,0x00,0x70,0x75,0x74,0x5F,0x73,
		0x74,0x72,0x31,0x00,0x01;
	.byte4 = .LN_put_str1;
	.byte4 = .LN._put_str1.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN750;
	.byte4 = .LN._put_str1.end;
	.byte =
		0x00,0x00,0x11,0x34,0x25,0x00,0x00,0x75,0x5F,0x6F,0x75,0x74,
		0x00,0x01;
	.byte4 = .LN_u_out;
	.byte4 = .LN._u_out.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN752;
	.byte4 = .LN._u_out.end;
	.byte =
		0x00,0x00,0x11,0x5F,0x25,0x00,0x00,0x53,0x44,0x52,0x41,0x4D,
		0x5F,0x74,0x65,0x73,0x74,0x00,0x01;
	.byte4 = .LN_SDRAM_test;
	.byte4 = .LN._SDRAM_test.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN757;
	.byte4 = .LN._SDRAM_test.end;
	.byte =
		0x00,0x00,0x11,0x85,0x25,0x00,0x00,0x78,0x5F,0x6F,0x75,0x74,
		0x00,0x01;
	.byte4 = .LN_x_out;
	.byte4 = .LN._x_out.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN765;
	.byte4 = .LN._x_out.end;
	.byte =
		0x00,0x00,0x11,0xAC,0x25,0x00,0x00,0x78,0x6E,0x5F,0x6F,0x75,
		0x74,0x00,0x01;
	.byte4 = .LN_xn_out;
	.byte4 = .LN._xn_out.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN770;
	.byte4 = .LN._xn_out.end;
	.byte =
		0x00,0x00,0x11,0xD2,0x25,0x00,0x00,0x64,0x5F,0x6F,0x75,0x74,
		0x00,0x01;
	.byte4 = .LN_d_out;
	.byte4 = .LN._d_out.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN774;
	.byte4 = .LN._d_out.end;
	.byte =
		0x00,0x00,0x11,0x03,0x26,0x00,0x00,0x66,0x75,0x6E,0x63,0x5F,
		0x53,0x54,0x41,0x54,0x55,0x53,0x5F,0x42,0x36,0x31,0x30,0x00,
		0x01;
	.byte4 = .LN_func_STATUS_B610;
	.byte4 = .LN._func_STATUS_B610.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN778;
	.byte4 = .LN._func_STATUS_B610.end;
	.byte =
		0x00,0x00,0x11,0x2B,0x26,0x00,0x00,0x47,0x42,0x52,0x5F,0x7A,
		0x61,0x64,0x00,0x01;
	.byte4 = .LN_GBR_zad;
	.byte4 = .LN._GBR_zad.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN803;
	.byte4 = .LN._GBR_zad.end;
	.byte =
		0x00,0x00,0x11,0x52,0x26,0x00,0x00,0x42,0x52,0x5F,0x7A,0x61,
		0x64,0x00,0x01;
	.byte4 = .LN_BR_zad;
	.byte4 = .LN._BR_zad.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN833;
	.byte4 = .LN._BR_zad.end;
	.byte =
		0x00,0x00,0x11,0x7C,0x26,0x00,0x00,0x53,0x49,0x47,0x5F,0x46,
		0x54,0x5F,0x49,0x4E,0x00,0x01;
	.byte4 = .LN_SIG_FT_IN;
	.byte4 = .LN._SIG_FT_IN.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN859;
	.byte4 = .LN._SIG_FT_IN.end;
	.byte =
		0x00,0x00,0x11,0xAC,0x26,0x00,0x00,0x63,0x6F,0x6E,0x74,0x72,
		0x6F,0x6C,0x5F,0x54,0x4E,0x43,0x5F,0x54,0x4E,0x4F,0x00,0x01;
	.byte4 = .LN_control_TNC_TNO;
	.byte4 = .LN._control_TNC_TNO.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN902;
	.byte4 = .LN._control_TNC_TNO.end;
	.byte =
		0x00,0x00,0x11,0xDB,0x26,0x00,0x00,0x70,0x61,0x63,0x68,0x6B,
		0x61,0x5F,0x6D,0x6F,0x6E,0x69,0x74,0x6F,0x72,0x00,0x01;
	.byte4 = .LN_pachka_monitor;
	.byte4 = .LN._pachka_monitor.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN996;
	.byte4 = .LN._pachka_monitor.end;
	.byte =
		0x00,0x00,0x11,0x00,0x27,0x00,0x00,0x68,0x65,0x6C,0x70,0x00,
		0x01;
	.byte4 = .LN_help;
	.byte4 = .LN._help.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN1212;
	.byte4 = .LN._help.end;
	.byte =
		0x00,0x00,0x11,0x2A,0x27,0x00,0x00,0x74,0x61,0x62,0x6C,0x5F,
		0x76,0x69,0x65,0x77,0x00,0x01;
	.byte4 = .LN_tabl_view;
	.byte4 = .LN._tabl_view.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN1306;
	.byte4 = .LN._tabl_view.end;
	.byte =
		0x00,0x00,0x13,0x58,0x27,0x00,0x00,0x69,0x6E,0x69,0x74,0x5F,
		0x4B,0x36,0x31,0x31,0x00,0x01;
	.byte4 = .LN_init_K611;
	.byte4 = .LN._init_K611.end;
	.byte =
		0x01,0x80,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN1365;
	.byte4 = .LN._init_K611.end;
	.byte =
		0x00,0x00,0x13,0x89,0x27,0x00,0x00,0x63,0x6F,0x6E,0x74,0x72,
		0x6F,0x6C,0x5F,0x4B,0x36,0x31,0x31,0x00,0x01;
	.byte4 = .LN_control_K611;
	.byte4 = .LN._control_K611.end;
	.byte =
		0x01,0x80,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN1369;
	.byte4 = .LN._control_K611.end;
	.byte =
		0x00,0x00,0x13,0xB7,0x27,0x00,0x00,0x69,0x6E,0x69,0x74,0x5F,
		0x4B,0x36,0x31,0x32,0x00,0x01;
	.byte4 = .LN_init_K612;
	.byte4 = .LN._init_K612.end;
	.byte =
		0x01,0x80,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN1373;
	.byte4 = .LN._init_K612.end;
	.byte =
		0x00,0x00,0x13,0xE8,0x27,0x00,0x00,0x63,0x6F,0x6E,0x74,0x72,
		0x6F,0x6C,0x5F,0x4B,0x36,0x31,0x32,0x00,0x01;
	.byte4 = .LN_control_K612;
	.byte4 = .LN._control_K612.end;
	.byte =
		0x01,0x80,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN1377;
	.byte4 = .LN._control_K612.end;
	.byte =
		0x00,0x00,0x13,0x16,0x28,0x00,0x00,0x69,0x6E,0x69,0x74,0x5F,
		0x4B,0x36,0x31,0x33,0x00,0x01;
	.byte4 = .LN_init_K613;
	.byte4 = .LN._init_K613.end;
	.byte =
		0x01,0x80,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN1381;
	.byte4 = .LN._init_K613.end;
	.byte =
		0x00,0x00,0x13,0x47,0x28,0x00,0x00,0x63,0x6F,0x6E,0x74,0x72,
		0x6F,0x6C,0x5F,0x4B,0x36,0x31,0x33,0x00,0x01;
	.byte4 = .LN_control_K613;
	.byte4 = .LN._control_K613.end;
	.byte =
		0x01,0x80,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN1385;
	.byte4 = .LN._control_K613.end;
	.byte =
		0x00,0x00,0x13,0x78,0x28,0x00,0x00,0x63,0x6F,0x6E,0x74,0x72,
		0x6F,0x6C,0x5F,0x4B,0x36,0x31,0x35,0x00,0x01;
	.byte4 = .LN_control_K615;
	.byte4 = .LN._control_K615.end;
	.byte =
		0x01,0x80,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN1389;
	.byte4 = .LN._control_K615.end;
	.byte =
		0x00,0x00,0x11,0xA1,0x28,0x00,0x00,0x4B,0x36,0x31,0x35,0x5F,
		0x6F,0x75,0x74,0x00,0x01;
	.byte4 = .LN_K615_out;
	.byte4 = .LN._K615_out.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN1396;
	.byte4 = .LN._K615_out.end;
	.byte =
		0x00,0x00,0x11,0xF2,0x28,0x00,0x00,0x4B,0x36,0x31,0x35,0x5F,
		0x74,0x65,0x73,0x74,0x5F,0x69,0x6E,0x64,0x69,0x00,0x01;
	.byte4 = .LN_K615_test_indi;
	.byte4 = .LN._K615_test_indi.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN1406;
	.byte4 = .LN._K615_test_indi.end;
	.byte =
		0x14,0x73,0x00,0x01,0x00,0x29,0x00,0x00,0x02,0x7F,0x78;
	.byte4 = .LN1436-.LN_K615_test_indi;
	.byte =
		0x00,0x14,0x63,0x72,0x63,0x00,0x01,0xF2,0x28,0x00,0x00,0x02,
		0x7F,0x0C;
	.byte4 = .LN1436-.LN_K615_test_indi;
	.byte =
		0x00,0x00,0x00,0x0F,0x00,0x29,0x00,0x00,0x80,0x01,0x00,0x00,
		0x10,0x01,0x00,0x00,0x00,0x0F,0x0E,0x29,0x00,0x00,0x80,0x01,
		0x00,0x00,0x10,0x06,0x00,0x05,0x00,0x11,0x58,0x29,0x00,0x00,
		0x74,0x73,0x74,0x5F,0x6F,0x75,0x74,0x00,0x01;
	.byte4 = .LN_tst_out;
	.byte4 = .LN._tst_out.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN1443;
	.byte4 = .LN._tst_out.end;
	.byte =
		0x14,0x73,0x00,0x01,0x66,0x29,0x00,0x00,0x02,0x7F,0x78;
	.byte4 = .LN1469-.LN_tst_out;
	.byte =
		0x00,0x14,0x63,0x72,0x63,0x00,0x01,0x58,0x29,0x00,0x00,0x02,
		0x7F,0x08;
	.byte4 = .LN1469-.LN_tst_out;
	.byte =
		0x00,0x00,0x00,0x0F,0x66,0x29,0x00,0x00,0x80,0x01,0x00,0x00,
		0x10,0x01,0x00,0x00,0x00,0x0F,0x74,0x29,0x00,0x00,0x80,0x01,
		0x00,0x00,0x10,0x06,0x00,0x05,0x00,0x11,0xA2,0x29,0x00,0x00,
		0x55,0x44,0x50,0x5F,0x54,0x43,0x50,0x5F,0x73,0x65,0x74,0x75,
		0x70,0x00,0x01;
	.byte4 = .LN_UDP_TCP_setup;
	.byte4 = .LN._UDP_TCP_setup.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN1476;
	.byte4 = .LN._UDP_TCP_setup.end;
	.byte =
		0x00,0x00,0x11,0xC8,0x29,0x00,0x00,0x6E,0x5F,0x6F,0x75,0x74,
		0x00,0x01;
	.byte4 = .LN_n_out;
	.byte4 = .LN._n_out.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN1479;
	.byte4 = .LN._n_out.end;
	.byte =
		0x00,0x00,0x11,0xF4,0x29,0x00,0x00,0x70,0x61,0x63,0x6B,0x65,
		0x74,0x5F,0x54,0x52,0x53,0x4C,0x00,0x01;
	.byte4 = .LN_packet_TRSL;
	.byte4 = .LN._packet_TRSL.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN1484;
	.byte4 = .LN._packet_TRSL.end;
	.byte =
		0x00,0x00,0x11,0x1E,0x2A,0x00,0x00,0x53,0x50,0x4F,0x52,0x54,
		0x5F,0x43,0x4F,0x4D,0x00,0x01;
	.byte4 = .LN_SPORT_COM;
	.byte4 = .LN._SPORT_COM.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN1818;
	.byte4 = .LN._SPORT_COM.end;
	.byte =
		0x00,0x00,0x11,0x48,0x2A,0x00,0x00,0x45,0x52,0x52,0x4F,0x52,
		0x5F,0x49,0x4D,0x50,0x00,0x01;
	.byte4 = .LN_ERROR_IMP;
	.byte4 = .LN._ERROR_IMP.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN1865;
	.byte4 = .LN._ERROR_IMP.end;
	.byte =
		0x00,0x00,0x13,0x7B,0x2A,0x00,0x00,0x43,0x6F,0x6E,0x74,0x72,
		0x6F,0x6C,0x5F,0x49,0x6D,0x70,0x75,0x6C,0x73,0x00,0x01;
	.byte4 = .LN_Control_Impuls;
	.byte4 = .LN._Control_Impuls.end;
	.byte =
		0x01,0x97,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN1869;
	.byte4 = .LN._Control_Impuls.end;
	.byte =
		0x00,0x00,0x11,0xA6,0x2A,0x00,0x00,0x50,0x50,0x49,0x5F,0x6D,
		0x61,0x73,0x73,0x69,0x76,0x00,0x01;
	.byte4 = .LN_PPI_massiv;
	.byte4 = .LN._PPI_massiv.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN2106;
	.byte4 = .LN._PPI_massiv.end;
	.byte =
		0x00,0x00,0x11,0xD8,0x2A,0x00,0x00,0x6D,0x61,0x73,0x73,0x69,
		0x76,0x5F,0x74,0x69,0x6D,0x65,0x5F,0x73,0x65,0x74,0x6B,0x61,
		0x00,0x01;
	.byte4 = .LN_massiv_time_setka;
	.byte4 = .LN._massiv_time_setka.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN2221;
	.byte4 = .LN._massiv_time_setka.end;
	.byte =
		0x00,0x00,0x11,0x91,0x2B,0x00,0x00,0x50,0x61,0x63,0x6B,0x65,
		0x74,0x5F,0x54,0x4E,0x43,0x31,0x00,0x01;
	.byte4 = .LN_Packet_TNC1;
	.byte4 = .LN._Packet_TNC1.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN2377;
	.byte4 = .LN._Packet_TNC1.end;
	.byte =
		0x14,0x74,0x69,0x6E,0x5F,0x6B,0x00,0x01,0x9D,0x21,0x00,0x00,
		0x02,0x7F,0x70;
	.byte4 = .LN2382-.LN_Packet_TNC1;
	.byte =
		0x00,0x14,0x74,0x69,0x6B,0x5F,0x6B,0x00,0x01,0x9D,0x21,0x00,
		0x00,0x02,0x7F,0x74;
	.byte4 = .LN2382-.LN_Packet_TNC1;
	.byte =
		0x00,0x14,0x74,0x70,0x6E,0x5F,0x6B,0x00,0x01,0x9D,0x21,0x00,
		0x00,0x02,0x7F,0x78;
	.byte4 = .LN2382-.LN_Packet_TNC1;
	.byte =
		0x00,0x14,0x74,0x70,0x6B,0x5F,0x6B,0x00,0x01,0x9D,0x21,0x00,
		0x00,0x02,0x7F,0x7C;
	.byte4 = .LN2382-.LN_Packet_TNC1;
	.byte =
		0x00,0x14,0x74,0x64,0x64,0x73,0x5F,0x6B,0x00,0x01,0x9D,0x21,
		0x00,0x00,0x02,0x7F,0x10;
	.byte4 = .LN2382-.LN_Packet_TNC1;
	.byte =
		0x00,0x14,0x74,0x6E,0x6F,0x5F,0x6B,0x00,0x01,0x9D,0x21,0x00,
		0x00,0x02,0x7F,0x0C;
	.byte4 = .LN2383-.LN_Packet_TNC1;
	.byte =
		0x00,0x14,0x74,0x6E,0x63,0x5F,0x6B,0x00,0x01,0x9D,0x21,0x00,
		0x00,0x02,0x7F,0x08;
	.byte4 = .LN2384-.LN_Packet_TNC1;
	.byte =
		0x00,0x00,0x00,0x11,0xB9,0x2B,0x00,0x00,0x4D,0x55,0x5F,0x54,
		0x45,0x53,0x54,0x00,0x01;
	.byte4 = .LN_MU_TEST;
	.byte4 = .LN._MU_TEST.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN2738;
	.byte4 = .LN._MU_TEST.end;
	.byte =
		0x00,0x00,0x11,0xE3,0x2B,0x00,0x00,0x54,0x4E,0x43,0x5F,0x45,
		0x52,0x52,0x4F,0x52,0x00,0x01;
	.byte4 = .LN_TNC_ERROR;
	.byte4 = .LN._TNC_ERROR.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN2928;
	.byte4 = .LN._TNC_ERROR.end;
	.byte =
		0x00,0x00,0x11,0x10,0x2C,0x00,0x00,0x41,0x76,0x61,0x72,0x69,
		0x79,0x61,0x5F,0x74,0x65,0x73,0x74,0x00,0x01;
	.byte4 = .LN_Avariya_test;
	.byte4 = .LN._Avariya_test.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN2970;
	.byte4 = .LN._Avariya_test.end;
	.byte =
		0x00,0x00,0x11,0x38,0x2C,0x00,0x00,0x62,0x75,0x66,0x5F,0x74,
		0x78,0x74,0x00,0x01;
	.byte4 = .LN_buf_txt;
	.byte4 = .LN._buf_txt.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN2984;
	.byte4 = .LN._buf_txt.end;
	.byte =
		0x00,0x00,0x11,0x86,0x2C,0x00,0x00,0x49,0x4E,0x46,0x5F,0x55,
		0x41,0x52,0x54,0x5F,0x53,0x52,0x56,0x32,0x00,0x01;
	.byte4 = .LN_INF_UART_SRV2;
	.byte4 = .LN._INF_UART_SRV2.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN2993;
	.byte4 = .LN._INF_UART_SRV2.end;
	.byte =
		0x14,0x61,0x00,0x01,0x94,0x2C,0x00,0x00,0x02,0x7F,0x0C;
	.byte4 = .LN3007-.LN_INF_UART_SRV2;
	.byte =
		0x00,0x14,0x62,0x00,0x01,0x86,0x2C,0x00,0x00,0x02,0x7F,0x08;
	.byte4 = .LN3007-.LN_INF_UART_SRV2;
	.byte =
		0x00,0x00,0x00,0x0F,0x94,0x2C,0x00,0x00,0x80,0x01,0x00,0x00,
		0x10,0x01,0x00,0x00,0x00,0x0F,0xA2,0x2C,0x00,0x00,0x80,0x01,
		0x00,0x00,0x10,0x01,0x00,0x00,0x00,0x11,0xCB,0x2C,0x00,0x00,
		0x74,0x65,0x73,0x74,0x5F,0x69,0x6E,0x66,0x00,0x01;
	.byte4 = .LN_test_inf;
	.byte4 = .LN._test_inf.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3012;
	.byte4 = .LN._test_inf.end;
	.byte =
		0x00,0x00,0x11,0xFD,0x2C,0x00,0x00,0x49,0x4E,0x49,0x54,0x5F,
		0x53,0x54,0x41,0x52,0x54,0x5F,0x50,0x41,0x43,0x48,0x4B,0x41,
		0x00,0x01;
	.byte4 = .LN_INIT_START_PACHKA;
	.byte4 = .LN._INIT_START_PACHKA.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3047;
	.byte4 = .LN._INIT_START_PACHKA.end;
	.byte =
		0x00,0x00,0x11,0x29,0x2D,0x00,0x00,0x54,0x65,0x73,0x74,0x5F,
		0x70,0x61,0x63,0x68,0x6B,0x61,0x00,0x01;
	.byte4 = .LN_Test_pachka;
	.byte4 = .LN._Test_pachka.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3151;
	.byte4 = .LN._Test_pachka.end;
	.byte =
		0x00,0x00,0x11,0x63,0x2D,0x00,0x00,0x4B,0x36,0x31,0x35,0x5F,
		0x77,0x6F,0x72,0x6B,0x00,0x01;
	.byte4 = .LN_K615_work;
	.byte4 = .LN._K615_work.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3245;
	.byte4 = .LN._K615_work.end;
	.byte =
		0x14,0x73,0x00,0x01,0x63,0x2D,0x00,0x00,0x02,0x7F,0x78,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x71,0x2D,0x00,0x00,0x80,
		0x01,0x00,0x00,0x10,0x06,0x00,0x05,0x00,0x11,0xA2,0x2D,0x00,
		0x00,0x54,0x4E,0x4F,0x5F,0x53,0x54,0x41,0x52,0x54,0x5F,0x50,
		0x41,0x43,0x48,0x4B,0x41,0x00,0x01;
	.byte4 = .LN_TNO_START_PACHKA;
	.byte4 = .LN._TNO_START_PACHKA.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3388;
	.byte4 = .LN._TNO_START_PACHKA.end;
	.byte =
		0x00,0x00,0x11,0xCB,0x2D,0x00,0x00,0x50,0x50,0x49,0x5F,0x73,
		0x79,0x6E,0x63,0x00,0x01;
	.byte4 = .LN_PPI_sync;
	.byte4 = .LN._PPI_sync.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3465;
	.byte4 = .LN._PPI_sync.end;
	.byte =
		0x00,0x00,0x11,0xF3,0x2D,0x00,0x00,0x50,0x50,0x49,0x5F,0x73,
		0x7A,0x31,0x00,0x01;
	.byte4 = .LN_PPI_sz1;
	.byte4 = .LN._PPI_sz1.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3470;
	.byte4 = .LN._PPI_sz1.end;
	.byte =
		0x00,0x00,0x11,0x1B,0x2E,0x00,0x00,0x50,0x50,0x49,0x5F,0x73,
		0x7A,0x32,0x00,0x01;
	.byte4 = .LN_PPI_sz2;
	.byte4 = .LN._PPI_sz2.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3474;
	.byte4 = .LN._PPI_sz2.end;
	.byte =
		0x00,0x00,0x11,0x49,0x2E,0x00,0x00,0x43,0x6F,0x6E,0x74,0x72,
		0x6F,0x6C,0x5F,0x62,0x6C,0x6F,0x6B,0x61,0x00,0x01;
	.byte4 = .LN_Control_bloka;
	.byte4 = .LN._Control_bloka.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3478;
	.byte4 = .LN._Control_bloka.end;
	.byte =
		0x00,0x00,0x13,0x78,0x2E,0x00,0x00,0x45,0x76,0x65,0x6E,0x74,
		0x5F,0x4B,0x36,0x31,0x35,0x00,0x01;
	.byte4 = .LN_Event_K615;
	.byte4 = .LN._Event_K615.end;
	.byte =
		0x01,0x80,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3480;
	.byte4 = .LN._Event_K615.end;
	.byte =
		0x00,0x00,0x11,0xA5,0x2E,0x00,0x00,0x52,0x45,0x53,0x54,0x41,
		0x52,0x54,0x5F,0x53,0x59,0x4E,0x43,0x00,0x01;
	.byte4 = .LN_RESTART_SYNC;
	.byte4 = .LN._RESTART_SYNC.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3485;
	.byte4 = .LN._RESTART_SYNC.end;
	.byte =
		0x00,0x00,0x11,0xCE,0x2E,0x00,0x00,0x54,0x4E,0x4F,0x5F,0x53,
		0x59,0x4E,0x43,0x00,0x01;
	.byte4 = .LN_TNO_SYNC;
	.byte4 = .LN._TNO_SYNC.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3499;
	.byte4 = .LN._TNO_SYNC.end;
	.byte =
		0x00,0x00,0x11,0xFA,0x2E,0x00,0x00,0x50,0x61,0x63,0x6B,0x65,
		0x74,0x5F,0x46,0x4F,0x52,0x4D,0x00,0x01;
	.byte4 = .LN_Packet_FORM;
	.byte4 = .LN._Packet_FORM.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3555;
	.byte4 = .LN._Packet_FORM.end;
	.byte =
		0x00,0x00,0x11,0x2A,0x2F,0x00,0x00,0x53,0x79,0x6E,0x68,0x72,
		0x6F,0x6E,0x5F,0x73,0x65,0x63,0x74,0x69,0x6F,0x6E,0x00,0x01;
	.byte4 = .LN_Synhron_section;
	.byte4 = .LN._Synhron_section.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3562;
	.byte4 = .LN._Synhron_section.end;
	.byte =
		0x00,0x00,0x11,0x58,0x2F,0x00,0x00,0x45,0x76,0x65,0x6E,0x74,
		0x5F,0x53,0x79,0x6E,0x68,0x72,0x6F,0x6E,0x00,0x01;
	.byte4 = .LN_Event_Synhron;
	.byte4 = .LN._Event_Synhron.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3587;
	.byte4 = .LN._Event_Synhron.end;
	.byte =
		0x00,0x00,0x13,0x87,0x2F,0x00,0x00,0x42,0x55,0x46,0x5F,0x53,
		0x45,0x41,0x52,0x43,0x48,0x00,0x01;
	.byte4 = .LN_BUF_SEARCH;
	.byte4 = .LN._BUF_SEARCH.end;
	.byte =
		0x01,0xE8,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3591;
	.byte4 = .LN._BUF_SEARCH.end;
	.byte =
		0x00,0x00,0x11,0xAE,0x2F,0x00,0x00,0x4B,0x55,0x4B,0x5F,0x49,
		0x4F,0x00,0x01;
	.byte4 = .LN_KUK_IO;
	.byte4 = .LN._KUK_IO.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3603;
	.byte4 = .LN._KUK_IO.end;
	.byte =
		0x00,0x00,0x11,0xD9,0x2F,0x00,0x00,0x49,0x4E,0x46,0x5F,0x41,
		0x4E,0x41,0x4C,0x49,0x5A,0x00,0x01;
	.byte4 = .LN_INF_ANALIZ;
	.byte4 = .LN._INF_ANALIZ.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3683;
	.byte4 = .LN._INF_ANALIZ.end;
	.byte =
		0x00,0x00,0x11,0x04,0x30,0x00,0x00,0x62,0x75,0x66,0x66,0x5F,
		0x53,0x50,0x4F,0x52,0x54,0x00,0x01;
	.byte4 = .LN_buff_SPORT;
	.byte4 = .LN._buff_SPORT.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3706;
	.byte4 = .LN._buff_SPORT.end;
	.byte =
		0x00,0x00,0x11,0x30,0x30,0x00,0x00,0x45,0x74,0x68,0x65,0x72,
		0x6E,0x65,0x74,0x5F,0x4D,0x55,0x00,0x01;
	.byte4 = .LN_Ethernet_MU;
	.byte4 = .LN._Ethernet_MU.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3735;
	.byte4 = .LN._Ethernet_MU.end;
	.byte =
		0x00,0x00,0x11,0x5F,0x30,0x00,0x00,0x45,0x74,0x68,0x65,0x72,
		0x6E,0x65,0x74,0x5F,0x4F,0x42,0x4D,0x45,0x4E,0x00,0x01;
	.byte4 = .LN_Ethernet_OBMEN;
	.byte4 = .LN._Ethernet_OBMEN.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3750;
	.byte4 = .LN._Ethernet_OBMEN.end;
	.byte =
		0x00,0x00,0x13,0x8F,0x30,0x00,0x00,0x70,0x61,0x63,0x6B,0x65,
		0x74,0x5F,0x53,0x4F,0x52,0x54,0x00,0x01;
	.byte4 = .LN_packet_SORT;
	.byte4 = .LN._packet_SORT.end;
	.byte =
		0x01,0xE8,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3754;
	.byte4 = .LN._packet_SORT.end;
	.byte =
		0x00,0x00,0x11,0xBD,0x30,0x00,0x00,0x56,0x43,0x55,0x5F,0x73,
		0x69,0x6E,0x68,0x5F,0x66,0x6F,0x72,0x6D,0x00,0x01;
	.byte4 = .LN_VCU_sinh_form;
	.byte4 = .LN._VCU_sinh_form.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3790;
	.byte4 = .LN._VCU_sinh_form.end;
	.byte =
		0x00,0x00,0x11,0xE6,0x30,0x00,0x00,0x66,0x75,0x6E,0x63,0x5F,
		0x54,0x4E,0x4F,0x00,0x01;
	.byte4 = .LN_func_TNO;
	.byte4 = .LN._func_TNO.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3809;
	.byte4 = .LN._func_TNO.end;
	.byte =
		0x00,0x00,0x11,0x14,0x31,0x00,0x00,0x50,0x61,0x63,0x6B,0x65,
		0x74,0x5F,0x46,0x49,0x4E,0x44,0x45,0x52,0x00,0x01;
	.byte4 = .LN_Packet_FINDER;
	.byte4 = .LN._Packet_FINDER.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3858;
	.byte4 = .LN._Packet_FINDER.end;
	.byte =
		0x00,0x00,0x11,0x47,0x31,0x00,0x00,0x54,0x45,0x53,0x54,0x5F,
		0x49,0x4E,0x54,0x45,0x52,0x56,0x41,0x4C,0x5F,0x44,0x49,0x53,
		0x50,0x00,0x01;
	.byte4 = .LN_TEST_INTERVAL_DISP;
	.byte4 = .LN._TEST_INTERVAL_DISP.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3867;
	.byte4 = .LN._TEST_INTERVAL_DISP.end;
	.byte =
		0x00,0x00,0x11,0x71,0x31,0x00,0x00,0x52,0x5A,0x56,0x5F,0x70,
		0x72,0x6F,0x69,0x72,0x00,0x01;
	.byte4 = .LN_RZV_proir;
	.byte4 = .LN._RZV_proir.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3868;
	.byte4 = .LN._RZV_proir.end;
	.byte =
		0x00,0x00,0x11,0xAE,0x31,0x00,0x00,0x4C,0x45,0x44,0x5F,0x45,
		0x52,0x52,0x4F,0x52,0x00,0x01;
	.byte4 = .LN_LED_ERROR;
	.byte4 = .LN._LED_ERROR.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3900;
	.byte4 = .LN._LED_ERROR.end;
	.byte =
		0x14,0x6C,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _l.246;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0xF6,0x31,0x00,0x00,
		0x62,0x6C,0x6F,0x63,0x6B,0x5F,0x4F,0x4E,0x00,0x01;
	.byte4 = .LN_block_ON;
	.byte4 = .LN._block_ON.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN3981;
	.byte4 = .LN._block_ON.end;
	.byte =
		0x14,0x5A,0x61,0x64,0x61,0x6E,0x6F,0x5F,0x6F,0x66,0x66,0x5F,
		0x4F,0x4E,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Zadano_off_ON.253;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0x43,0x33,0x00,0x00,
		0x62,0x6C,0x6F,0x63,0x6B,0x5F,0x4F,0x46,0x46,0x5F,0x75,0x70,
		0x72,0x00,0x01;
	.byte4 = .LN_block_OFF_upr;
	.byte4 = .LN._block_OFF_upr.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN4012;
	.byte4 = .LN._block_OFF_upr.end;
	.byte =
		0x14,0x5A,0x61,0x64,0x61,0x6E,0x6F,0x5F,0x6F,0x66,0x66,0x00,
		0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Zadano_off.255;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x5A,0x61,0x64,0x61,0x6E,0x6F,
		0x5F,0x47,0x42,0x52,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Zadano_GBR.256;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x5A,0x61,0x64,0x61,0x6E,0x6F,
		0x5F,0x42,0x52,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Zadano_BR.257;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x5A,0x61,0x64,0x61,0x6E,0x6F,
		0x5F,0x43,0x55,0x5F,0x4D,0x55,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _Zadano_CU_MU.258;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x5A,0x61,0x64,0x61,0x6E,0x6F,
		0x5F,0x56,0x59,0x4B,0x4C,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _Zadano_VYKL.259;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x15,0x52,0x45,0x5A,0x45,0x52,0x56,
		0x00,0x01,0x97,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x14,
		0x5A,0x61,0x70,0x72,0x65,0x74,0x5F,0x52,0x45,0x5A,0x45,0x52,
		0x56,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Zapret_REZERV.260;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x41,0x56,0x41,0x52,0x49,0x59,
		0x41,0x5F,0x4E,0x49,0x4C,0x53,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _AVARIYA_NILS.261;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x15,0x45,0x52,0x52,0x4F,0x52,0x5F,
		0x42,0x36,0x31,0x30,0x00,0x01,0x97,0x01,0x00,0x00,0x00,0x00,
		0x00,0x00,0x01,0x15,0x45,0x52,0x52,0x4F,0x52,0x5F,0x42,0x36,
		0x36,0x30,0x00,0x01,0x97,0x01,0x00,0x00,0x00,0x00,0x00,0x00,
		0x01,0x15,0x4F,0x42,0x4D,0x45,0x4E,0x5F,0x42,0x36,0x31,0x30,
		0x00,0x01,0x97,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,
		0x00,0x11,0x9E,0x34,0x00,0x00,0x62,0x6C,0x6F,0x63,0x6B,0x5F,
		0x75,0x70,0x72,0x00,0x01;
	.byte4 = .LN_block_upr;
	.byte4 = .LN._block_upr.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN4064;
	.byte4 = .LN._block_upr.end;
	.byte =
		0x14,0x5A,0x61,0x64,0x61,0x6E,0x6F,0x5F,0x6F,0x66,0x66,0x00,
		0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Zadano_off.265;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x5A,0x61,0x64,0x61,0x6E,0x6F,
		0x5F,0x47,0x42,0x52,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Zadano_GBR.266;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x5A,0x61,0x64,0x61,0x6E,0x6F,
		0x5F,0x42,0x52,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Zadano_BR.267;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x5A,0x61,0x64,0x61,0x6E,0x6F,
		0x5F,0x43,0x55,0x5F,0x4D,0x55,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _Zadano_CU_MU.268;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x5A,0x61,0x64,0x61,0x6E,0x6F,
		0x5F,0x56,0x59,0x4B,0x4C,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _Zadano_VYKL.269;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x15,0x52,0x45,0x5A,0x45,0x52,0x56,
		0x00,0x01,0x97,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x14,
		0x5A,0x61,0x70,0x72,0x65,0x74,0x5F,0x52,0x45,0x5A,0x45,0x52,
		0x56,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Zapret_REZERV.270;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x41,0x56,0x41,0x52,0x49,0x59,
		0x41,0x5F,0x4E,0x49,0x4C,0x53,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _AVARIYA_NILS.271;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x45,0x52,0x52,0x4F,0x52,0x5F,
		0x42,0x36,0x31,0x30,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _ERROR_B610.272;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x45,0x52,0x52,0x4F,0x52,0x5F,
		0x42,0x36,0x36,0x30,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _ERROR_B660.273;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4F,0x42,0x4D,0x45,0x4E,0x5F,
		0x42,0x36,0x31,0x30,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _OBMEN_B610.274;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0xC9,0x34,0x00,0x00,
		0x53,0x59,0x4E,0x43,0x5F,0x6F,0x62,0x6D,0x65,0x6E,0x00,0x01;
	.byte4 = .LN_SYNC_obmen;
	.byte4 = .LN._SYNC_obmen.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN4236;
	.byte4 = .LN._SYNC_obmen.end;
	.byte =
		0x00,0x00,0x11,0xF4,0x34,0x00,0x00,0x57,0x4F,0x52,0x4B,0x5F,
		0x52,0x45,0x47,0x49,0x4D,0x00,0x01;
	.byte4 = .LN_WORK_REGIM;
	.byte4 = .LN._WORK_REGIM.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN4263;
	.byte4 = .LN._WORK_REGIM.end;
	.byte =
		0x00,0x00,0x11,0x19,0x35,0x00,0x00,0x46,0x41,0x5A,0x41,0x00,
		0x01;
	.byte4 = .LN_FAZA;
	.byte4 = .LN._FAZA.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN4317;
	.byte4 = .LN._FAZA.end;
	.byte =
		0x00,0x00,0x11,0x3C,0x35,0x00,0x00,0x49,0x4F,0x00,0x01;
	.byte4 = .LN_IO;
	.byte4 = .LN._IO.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN4324;
	.byte4 = .LN._IO.end;
	.byte =
		0x00,0x00,0x11,0x67,0x35,0x00,0x00,0x73,0x74,0x61,0x72,0x74,
		0x5F,0x69,0x6E,0x69,0x74,0x00,0x01;
	.byte4 = .LN_start_init;
	.byte4 = .LN._start_init.end;
	.byte =
		0x01,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN4833;
	.byte4 = .LN._start_init.end;
	.byte =
		0x00,0x00,0x13,0x90,0x35,0x00,0x00,0x6D,0x61,0x69,0x6E,0x00,
		0x01;
	.byte4 = .LN_main;
	.byte4 = .LN._main.end;
	.byte =
		0x01,0xD3,0x01,0x00,0x00,0x01,0x00,0x12,0x00,0x00,0x00,0x00;
	.byte4 = .LN4941;
	.byte4 = .LN._main.end;
	.byte =
		0x00,0x00,0x14,0x41,0x64,0x72,0x65,0x73,0x73,0x00,0x01,0x80,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Adress;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4D,0x61,0x73,0x74,0x65,0x72,
		0x5F,0x66,0x6C,0x61,0x67,0x00,0x01,0x80,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _Master_flag;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x72,0x78,0x5F,0x77,0x72,0x5F,
		0x69,0x6E,0x64,0x65,0x78,0x30,0x00,0x01,0x9D,0x21,0x00,0x00,
		0x05,0x03;
	.byte4 = _rx_wr_index0;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x14,0x72,0x78,0x5F,0x72,0x64,0x5F,
		0x69,0x6E,0x64,0x65,0x78,0x30,0x00,0x01,0x9D,0x21,0x00,0x00,
		0x05,0x03;
	.byte4 = _rx_rd_index0;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x14,0x72,0x78,0x5F,0x63,0x6F,0x75,
		0x6E,0x74,0x65,0x72,0x30,0x00,0x01,0x9D,0x21,0x00,0x00,0x05,
		0x03;
	.byte4 = _rx_counter0;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x14,0x72,0x78,0x5F,0x62,0x75,0x66,
		0x66,0x65,0x72,0x30,0x00,0x01,0x8C,0x85,0x00,0x00,0x05,0x03;
	.byte4 = _rx_buffer0;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x14,0x72,0x78,0x5F,0x77,0x72,0x5F,
		0x69,0x6E,0x64,0x65,0x78,0x31,0x00,0x01,0x9D,0x21,0x00,0x00,
		0x05,0x03;
	.byte4 = _rx_wr_index1;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x14,0x72,0x78,0x5F,0x72,0x64,0x5F,
		0x69,0x6E,0x64,0x65,0x78,0x31,0x00,0x01,0x9D,0x21,0x00,0x00,
		0x05,0x03;
	.byte4 = _rx_rd_index1;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x14,0x72,0x78,0x5F,0x63,0x6F,0x75,
		0x6E,0x74,0x65,0x72,0x31,0x00,0x01,0x9D,0x21,0x00,0x00,0x05,
		0x03;
	.byte4 = _rx_counter1;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x14,0x72,0x78,0x5F,0x62,0x75,0x66,
		0x66,0x65,0x72,0x31,0x00,0x01,0x7C,0x85,0x00,0x00,0x05,0x03;
	.byte4 = _rx_buffer1;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x14,0x46,0x4C,0x41,0x47,0x5F,0x53,
		0x50,0x4F,0x52,0x54,0x31,0x5F,0x52,0x58,0x00,0x01,0x80,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_SPORT1_RX;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x72,0x78,0x5F,0x62,0x75,0x66,
		0x66,0x65,0x72,0x5F,0x6F,0x76,0x65,0x72,0x66,0x6C,0x6F,0x77,
		0x30,0x00,0x01,0x80,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _rx_buffer_overflow0;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x14,0x74,0x78,0x5F,0x62,0x75,0x66,
		0x66,0x65,0x72,0x30,0x00,0x01,0x6C,0x85,0x00,0x00,0x05,0x03;
	.byte4 = _tx_buffer0;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x78,0x5F,0x62,0x75,0x66,
		0x66,0x65,0x72,0x32,0x00,0x01,0x5E,0x85,0x00,0x00,0x05,0x03;
	.byte4 = _tx_buffer2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x78,0x5F,0x77,0x72,0x5F,
		0x69,0x6E,0x64,0x65,0x78,0x30,0x00,0x01,0x72,0x05,0x00,0x00,
		0x05,0x03;
	.byte4 = _tx_wr_index0;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x78,0x5F,0x63,0x6F,0x75,
		0x6E,0x74,0x65,0x72,0x30,0x00,0x01,0x72,0x05,0x00,0x00,0x05,
		0x03;
	.byte4 = _tx_counter0;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x78,0x5F,0x62,0x75,0x66,
		0x66,0x65,0x72,0x5F,0x6F,0x76,0x65,0x72,0x66,0x6C,0x6F,0x77,
		0x30,0x00,0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _tx_buffer_overflow0;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x78,0x5F,0x72,0x64,0x5F,
		0x69,0x6E,0x64,0x65,0x78,0x30,0x00,0x01,0x72,0x05,0x00,0x00,
		0x05,0x03;
	.byte4 = _tx_rd_index0;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x78,0x5F,0x77,0x72,0x5F,
		0x69,0x6E,0x64,0x65,0x78,0x32,0x00,0x01,0x72,0x05,0x00,0x00,
		0x05,0x03;
	.byte4 = _tx_wr_index2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x78,0x5F,0x63,0x6F,0x75,
		0x6E,0x74,0x65,0x72,0x32,0x00,0x01,0x72,0x05,0x00,0x00,0x05,
		0x03;
	.byte4 = _tx_counter2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x78,0x5F,0x62,0x75,0x66,
		0x66,0x65,0x72,0x5F,0x6F,0x76,0x65,0x72,0x66,0x6C,0x6F,0x77,
		0x32,0x00,0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _tx_buffer_overflow2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x78,0x5F,0x72,0x64,0x5F,
		0x69,0x6E,0x64,0x65,0x78,0x32,0x00,0x01,0x72,0x05,0x00,0x00,
		0x05,0x03;
	.byte4 = _tx_rd_index2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x43,0x50,0x5F,0x74,0x78,
		0x5F,0x77,0x72,0x5F,0x69,0x6E,0x64,0x65,0x78,0x00,0x01,0x72,
		0x05,0x00,0x00,0x05,0x03;
	.byte4 = _TCP_tx_wr_index;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x43,0x50,0x5F,0x74,0x78,
		0x5F,0x63,0x6F,0x75,0x6E,0x74,0x65,0x72,0x00,0x01,0x72,0x05,
		0x00,0x00,0x05,0x03;
	.byte4 = _TCP_tx_counter;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x43,0x50,0x5F,0x74,0x78,
		0x5F,0x62,0x75,0x66,0x66,0x65,0x72,0x5F,0x6F,0x76,0x65,0x72,
		0x66,0x6C,0x6F,0x77,0x00,0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _TCP_tx_buffer_overflow;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x43,0x50,0x5F,0x74,0x78,
		0x5F,0x72,0x64,0x5F,0x69,0x6E,0x64,0x65,0x78,0x00,0x01,0x72,
		0x05,0x00,0x00,0x05,0x03;
	.byte4 = _TCP_tx_rd_index;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x78,0x5F,0x62,0x75,0x66,
		0x66,0x65,0x72,0x31,0x00,0x01,0x50,0x85,0x00,0x00,0x05,0x03;
	.byte4 = _tx_buffer1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x78,0x5F,0x77,0x72,0x5F,
		0x69,0x6E,0x64,0x65,0x78,0x31,0x00,0x01,0x9D,0x21,0x00,0x00,
		0x05,0x03;
	.byte4 = _tx_wr_index1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x78,0x5F,0x72,0x64,0x5F,
		0x69,0x6E,0x64,0x65,0x78,0x31,0x00,0x01,0x9D,0x21,0x00,0x00,
		0x05,0x03;
	.byte4 = _tx_rd_index1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x78,0x5F,0x63,0x6F,0x75,
		0x6E,0x74,0x65,0x72,0x31,0x00,0x01,0x9D,0x21,0x00,0x00,0x05,
		0x03;
	.byte4 = _tx_counter1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x44,0x61,0x74,0x61,0x54,0x72,
		0x5F,0x66,0x6C,0x61,0x67,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _DataTr_flag;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x44,0x61,0x74,0x61,0x5F,0x69,
		0x6E,0x5F,0x70,0x6F,0x72,0x74,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _Data_in_port;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x44,0x6F,0x6E,0x74,0x43,0x6F,
		0x6E,0x6E,0x65,0x63,0x74,0x5F,0x66,0x6C,0x61,0x67,0x00,0x01,
		0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _DontConnect_flag;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x43,0x6E,0x74,0x44,0x6F,0x77,
		0x6E,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _CntDown;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x43,0x79,0x63,0x6C,0x45,0x6E,
		0x64,0x5F,0x66,0x6C,0x61,0x67,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _CyclEnd_flag;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x42,0x75,0x66,0x49,0x73,0x52,
		0x65,0x61,0x64,0x5F,0x66,0x6C,0x61,0x67,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _BufIsRead_flag;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x69,0x6D,0x65,0x5F,0x73,
		0x65,0x6B,0x75,0x6E,0x64,0x00,0x01,0x31,0x03,0x00,0x00,0x05,
		0x03;
	.byte4 = _time_sekund;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x14,0x73,0x72,0x74,0x00,0x01,0x40,
		0x85,0x00,0x00,0x05,0x03;
	.byte4 = _srt;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x74,0x72,0x6E,0x67,0x00,
		0x01,0x32,0x85,0x00,0x00,0x05,0x03;
	.byte4 = _strng;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x6C,0x65,0x6E,0x67,0x68,0x74,
		0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _lenght;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x49,0x6E,0x4F,0x75,0x74,0x00,
		0x01,0x22,0x85,0x00,0x00,0x05,0x03;
	.byte4 = _InOut;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x57,0x6F,0x72,0x64,0x00,0x01,
		0x14,0x85,0x00,0x00,0x05,0x03;
	.byte4 = _Word;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x44,0x41,0x54,0x41,0x5F,0x57,
		0x6F,0x72,0x64,0x00,0x01,0x04,0x85,0x00,0x00,0x05,0x03;
	.byte4 = _DATA_Word;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x44,0x41,0x54,0x41,0x5F,0x57,
		0x6F,0x72,0x64,0x32,0x00,0x01,0xF4,0x84,0x00,0x00,0x05,0x03;
	.byte4 = _DATA_Word2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x69,0x6E,0x64,0x65,0x78,0x31,
		0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _index1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x63,0x72,0x63,0x5F,0x6F,0x6B,
		0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _crc_ok;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x70,0x61,0x63,0x6B,0x65,0x74,
		0x5F,0x6F,0x6B,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _packet_ok;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x70,0x61,0x63,0x6B,0x65,0x74,
		0x5F,0x66,0x6C,0x61,0x67,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _packet_flag;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x69,0x6E,0x64,0x65,0x78,0x00,
		0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _index;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x69,0x6E,0x64,0x65,0x78,0x5F,
		0x77,0x6F,0x72,0x64,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _index_word;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x69,0x6E,0x64,0x65,0x78,0x5F,
		0x64,0x61,0x74,0x61,0x5F,0x77,0x6F,0x72,0x64,0x00,0x01,0xE8,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _index_data_word;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x69,0x6E,0x64,0x65,0x78,0x5F,
		0x64,0x61,0x74,0x61,0x5F,0x77,0x6F,0x72,0x64,0x32,0x00,0x01,
		0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _index_data_word2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x6C,0x65,0x6E,0x67,0x68,0x74,
		0x5F,0x64,0x61,0x74,0x61,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _lenght_data;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x64,0x61,0x74,0x61,0x5F,0x66,
		0x6C,0x61,0x67,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _data_flag;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x64,0x61,0x74,0x61,0x5F,0x66,
		0x6C,0x61,0x67,0x32,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _data_flag2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x6C,
		0x65,0x6E,0x67,0x68,0x74,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _FLAG_lenght;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x63,0x68,0x5F,0x6C,0x65,
		0x6E,0x67,0x68,0x74,0x5F,0x64,0x61,0x74,0x61,0x00,0x01,0xE8,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _sch_lenght_data;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x44,
		0x41,0x54,0x41,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_DATA;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x43,0x48,0x5F,0x4C,0x45,
		0x4E,0x47,0x48,0x54,0x5F,0x50,0x41,0x43,0x4B,0x45,0x54,0x00,
		0x01,0xC1,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _SCH_LENGHT_PACKET;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x43,
		0x57,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_CW;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x63,0x72,0x63,0x5F,0x69,0x6E,
		0x70,0x75,0x74,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _crc_input;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x63,0x72,0x63,0x5F,0x63,0x6F,
		0x6D,0x70,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _crc_comp;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x52,
		0x53,0x34,0x38,0x35,0x5F,0x4F,0x42,0x4D,0x45,0x4E,0x00,0x01,
		0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_RS485_OBMEN;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x52,
		0x53,0x34,0x38,0x35,0x5F,0x4F,0x42,0x4D,0x45,0x4E,0x31,0x00,
		0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_RS485_OBMEN1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x53,
		0x43,0x48,0x5F,0x52,0x53,0x34,0x38,0x35,0x5F,0x50,0x41,0x43,
		0x4B,0x45,0x54,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_SCH_RS485_PACKET;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x53,
		0x43,0x48,0x5F,0x52,0x53,0x34,0x38,0x35,0x5F,0x50,0x41,0x43,
		0x4B,0x45,0x54,0x5F,0x4D,0x41,0x58,0x00,0x01,0xE8,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _FLAG_SCH_RS485_PACKET_MAX;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x43,
		0x52,0x43,0x5F,0x4F,0x4B,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _FLAG_CRC_OK;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x53,
		0x43,0x48,0x5F,0x52,0x53,0x34,0x38,0x35,0x5F,0x4F,0x4B,0x5F,
		0x50,0x41,0x43,0x4B,0x45,0x54,0x00,0x01,0xE8,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _FLAG_SCH_RS485_OK_PACKET;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x53,
		0x43,0x48,0x5F,0x52,0x53,0x34,0x38,0x35,0x5F,0x4F,0x4B,0x5F,
		0x50,0x41,0x43,0x4B,0x45,0x54,0x5F,0x4D,0x41,0x58,0x00,0x01,
		0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_SCH_RS485_OK_PACKET_MAX;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x45,
		0x56,0x45,0x4E,0x54,0x5F,0x4B,0x36,0x31,0x35,0x5F,0x55,0x50,
		0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_EVENT_K615_UP;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x50,
		0x46,0x31,0x30,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_PF10;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x53,
		0x43,0x48,0x5F,0x43,0x52,0x43,0x34,0x38,0x35,0x5F,0x42,0x41,
		0x44,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_SCH_CRC485_BAD;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x53,
		0x43,0x48,0x5F,0x43,0x52,0x43,0x34,0x38,0x35,0x5F,0x42,0x41,
		0x44,0x5F,0x4D,0x41,0x58,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _FLAG_SCH_CRC485_BAD_MAX;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x43,0x48,0x5F,0x37,0x45,
		0x5F,0x50,0x41,0x4B,0x45,0x54,0x00,0x01,0xE8,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _SCH_7E_PAKET;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x43,0x48,0x5F,0x37,0x45,
		0x5F,0x50,0x41,0x4B,0x45,0x54,0x5F,0x4D,0x41,0x58,0x00,0x01,
		0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _SCH_7E_PAKET_MAX;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x43,0x48,0x5F,0x37,0x6B,
		0x5F,0x50,0x41,0x4B,0x45,0x54,0x00,0x01,0xE8,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _SCH_7k_PAKET;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x43,0x48,0x5F,0x37,0x6B,
		0x5F,0x50,0x41,0x4B,0x45,0x54,0x5F,0x4D,0x41,0x58,0x00,0x01,
		0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _SCH_7k_PAKET_MAX;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x43,0x48,0x5F,0x37,0x6F,
		0x6B,0x5F,0x50,0x41,0x4B,0x45,0x54,0x00,0x01,0xE8,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _SCH_7ok_PAKET;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x43,0x48,0x5F,0x37,0x6F,
		0x6B,0x5F,0x50,0x41,0x4B,0x45,0x54,0x5F,0x4D,0x41,0x58,0x00,
		0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _SCH_7ok_PAKET_MAX;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x54,
		0x4E,0x4F,0x5F,0x43,0x4F,0x4E,0x54,0x52,0x5F,0x31,0x00,0x01,
		0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_TNO_CONTR_1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4E,0x75,0x6D,0x62,0x65,0x72,
		0x5F,0x54,0x4E,0x43,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Number_TNC;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x49,0x4D,0x45,0x52,0x5F,
		0x52,0x53,0x34,0x38,0x35,0x5F,0x4F,0x42,0x4D,0x45,0x4E,0x00,
		0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TIMER_RS485_OBMEN;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x63,0x61,0x6C,0x69,0x62,
		0x72,0x6F,0x76,0x6B,0x61,0x00,0x01,0x41,0x02,0x00,0x00,0x05,
		0x03;
	.byte4 = _Fcalibrovka;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x70,0x6F,0x6D,0x65,0x68,
		0x69,0x00,0x01,0x41,0x02,0x00,0x00,0x05,0x03;
	.byte4 = _Fpomehi;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x44,0x65,0x76,0x46,0x70,0x6F,
		0x6D,0x65,0x68,0x69,0x00,0x01,0x41,0x02,0x00,0x00,0x05,0x03;
	.byte4 = _DevFpomehi;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x65,0x73,0x74,0x5F,0x54,
		0x4E,0x43,0x00,0x01,0xC1,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _test_TNC;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x4F,
		0x55,0x54,0x50,0x4F,0x52,0x54,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _FLAG_OUTPORT;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x45,
		0x56,0x45,0x4E,0x54,0x5F,0x4B,0x36,0x31,0x35,0x5F,0x52,0x5A,
		0x52,0x56,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_EVENT_K615_RZRV;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x52,0x45,0x5A,0x45,0x52,0x56,
		0x5F,0x4D,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _REZERV_M;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x45,
		0x52,0x52,0x4F,0x52,0x5F,0x49,0x4E,0x54,0x45,0x52,0x56,0x41,
		0x4C,0x57,0x4F,0x52,0x4B,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _FLAG_ERROR_INTERVALWORK;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x53,
		0x45,0x4E,0x44,0x31,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_SEND1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x53,
		0x45,0x4E,0x44,0x32,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_SEND2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x49,0x4D,0x45,0x5F,0x57,
		0x4F,0x52,0x4B,0x5F,0x43,0x4F,0x4E,0x54,0x52,0x4F,0x4C,0x00,
		0x01,0x9D,0x21,0x00,0x00,0x05,0x03;
	.byte4 = _TIME_WORK_CONTROL;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x55,
		0x50,0x52,0x5F,0x54,0x4B,0x49,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _FLAG_UPR_TKI;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x54,0x5F,0x70,0x69,0x74,
		0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FT_pit;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x54,0x5F,0x70,0x69,0x74,
		0x5F,0x6C,0x6F,0x67,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FT_pit_log;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x54,0x5F,0x70,0x69,0x74,
		0x5F,0x6C,0x6F,0x67,0x32,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _FT_pit_log2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x46,
		0x54,0x5F,0x70,0x69,0x74,0x00,0x01,0xC1,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _FLAG_FT_pit;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x54,0x5F,0x72,0x65,0x67,
		0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FT_reg;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x54,0x5F,0x72,0x65,0x67,
		0x5F,0x6C,0x6F,0x67,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FT_reg_log;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x54,0x5F,0x72,0x65,0x67,
		0x5F,0x6C,0x6F,0x67,0x32,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _FT_reg_log2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x46,
		0x54,0x5F,0x72,0x65,0x67,0x00,0x01,0xC1,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _FLAG_FT_reg;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x6C,0x6B,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _lk;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x62,0x75,0x66,0x5F,0x73,0x64,
		0x72,0x61,0x6D,0x31,0x00,0x01,0xEE,0x84,0x00,0x00,0x05,0x03;
	.byte4 = _buf_sdram1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x62,0x75,0x66,0x5F,0x73,0x64,
		0x72,0x61,0x6D,0x32,0x00,0x01,0xEE,0x84,0x00,0x00,0x05,0x03;
	.byte4 = _buf_sdram2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x6A,0x5F,0x70,0x61,0x63,0x6B,
		0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _j_pack;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x70,0x61,0x63,0x6B,0x65,0x74,
		0x00,0x01,0xE0,0x84,0x00,0x00,0x05,0x03;
	.byte4 = _packet;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x6C,0x73,0x72,0x5F,0x72,0x61,
		0x7A,0x6D,0x65,0x72,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _lsr_razmer;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x14,0x52,0x58,0x5F,0x42,0x55,0x46,
		0x00,0x01,0xC2,0x84,0x00,0x00,0x05,0x03;
	.byte4 = _RX_BUF;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x14,0x54,0x58,0x5F,0x42,0x55,0x46,
		0x00,0x01,0xB2,0x84,0x00,0x00,0x05,0x03;
	.byte4 = _TX_BUF;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x14,0x5A,0x58,0x5F,0x42,0x55,0x46,
		0x00,0x01,0xA2,0x84,0x00,0x00,0x05,0x03;
	.byte4 = _ZX_BUF;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x63,
		0x6C,0x65,0x61,0x72,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _flag_clear;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x6C,0x65,0x64,0x5F,0x74,0x69,
		0x63,0x6B,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _led_tick;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x63,0x68,0x5F,0x75,0x61,
		0x72,0x74,0x00,0x01,0xA8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _sch_uart;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x65,0x73,0x74,0x65,0x64,
		0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _tested;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x63,0x68,0x5F,0x70,0x6C,
		0x69,0x73,0x5F,0x70,0x70,0x69,0x00,0x01,0x80,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _sch_plis_ppi;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x74,
		0x65,0x73,0x74,0x5F,0x73,0x79,0x6E,0x63,0x00,0x01,0x80,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _flag_test_sync;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4D,0x41,0x53,0x54,0x45,0x52,
		0x5F,0x43,0x4F,0x44,0x45,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _MASTER_CODE;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x63,0x68,0x5F,0x70,0x61,
		0x63,0x6B,0x65,0x74,0x5F,0x55,0x44,0x50,0x5F,0x72,0x65,0x63,
		0x69,0x76,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _sch_packet_UDP_reciv;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x63,0x68,0x5F,0x70,0x61,
		0x63,0x6B,0x65,0x74,0x5F,0x55,0x44,0x50,0x5F,0x72,0x65,0x63,
		0x69,0x76,0x5F,0x6D,0x61,0x78,0x00,0x01,0xE8,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _sch_packet_UDP_reciv_max;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x45,0x52,0x52,0x4F,0x52,0x5F,
		0x73,0x74,0x61,0x74,0x75,0x73,0x5F,0x44,0x4D,0x41,0x00,0x01,
		0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _ERROR_status_DMA;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x14,0x46,0x4C,0x41,0x47,0x5F,0x54,
		0x53,0x54,0x5F,0x55,0x44,0x50,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _FLAG_TST_UDP;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x50,0x49,0x5F,0x72,0x65,
		0x67,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _PPI_reg;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x52,
		0x45,0x47,0x49,0x4D,0x00,0x01,0x8E,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_REGIM;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x52,
		0x45,0x47,0x49,0x4D,0x5F,0x69,0x6E,0x69,0x74,0x00,0x01,0x97,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_REGIM_init;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x63,0x68,0x5F,0x74,0x78,
		0x5F,0x70,0x61,0x63,0x6B,0x65,0x74,0x00,0x01,0xC1,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _sch_tx_packet;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x14,0x73,0x63,0x68,0x5F,0x74,0x78,
		0x5F,0x70,0x61,0x63,0x6B,0x65,0x74,0x5F,0x6D,0x61,0x78,0x00,
		0x01,0xC1,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _sch_tx_packet_max;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x44,0x45,0x4C,0x41,0x59,0x5F,
		0x52,0x5A,0x56,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _DELAY_RZV;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x4D,
		0x41,0x53,0x54,0x45,0x52,0x5F,0x52,0x45,0x5A,0x45,0x52,0x56,
		0x5F,0x44,0x45,0x4C,0x41,0x59,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _FLAG_MASTER_REZERV_DELAY;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x4D,
		0x41,0x53,0x54,0x45,0x52,0x5F,0x42,0x52,0x5F,0x4F,0x4B,0x00,
		0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_MASTER_BR_OK;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x42,
		0x52,0x5F,0x52,0x45,0x4D,0x5F,0x4F,0x4B,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_BR_REM_OK;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x52,
		0x41,0x4D,0x5F,0x42,0x52,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _FLAG_RAM_BR;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x45,
		0x52,0x52,0x5F,0x54,0x4E,0x49,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _FLAG_ERR_TNI;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x45,
		0x52,0x52,0x5F,0x54,0x4B,0x49,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _FLAG_ERR_TKI;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x45,
		0x52,0x52,0x5F,0x54,0x4E,0x50,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _FLAG_ERR_TNP;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x45,
		0x52,0x52,0x5F,0x54,0x4B,0x50,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _FLAG_ERR_TKP;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x42,
		0x52,0x5F,0x47,0x42,0x52,0x5F,0x50,0x52,0x4F,0x43,0x45,0x53,
		0x53,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_BR_GBR_PROCESS;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x49,0x4D,0x45,0x52,0x5F,
		0x52,0x45,0x5A,0x45,0x52,0x56,0x00,0x01,0xE8,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _TIMER_REZERV;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x42,
		0x52,0x5F,0x47,0x42,0x52,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _FLAG_BR_GBR;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x46,
		0x49,0x5A,0x4C,0x5F,0x4F,0x4E,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _FLAG_FIZL_ON;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4D,0x65,0x74,0x6B,0x61,0x5F,
		0x46,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Metka_F;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x56,0x43,0x55,0x5F,0x42,0x4F,
		0x54,0x54,0x4F,0x4E,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _VCU_BOTTON;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x63,0x68,0x5F,0x6F,0x62,
		0x6D,0x65,0x6E,0x00,0x01,0x80,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _sch_obmen;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x72,0x6F,0x63,0x65,0x73,
		0x73,0x5F,0x63,0x6F,0x64,0x65,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _Process_code;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x65,0x73,0x74,0x5F,0x66,
		0x5F,0x6D,0x6F,0x6E,0x6F,0x00,0x01,0x80,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _Test_f_mono;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x45,
		0x52,0x52,0x4F,0x52,0x5F,0x54,0x69,0x6D,0x70,0x00,0x01,0xD3,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _flag_ERROR_Timp;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x44,0x49,0x53,0x50,0x5F,0x66,
		0x6C,0x61,0x67,0x5F,0x45,0x52,0x52,0x4F,0x52,0x5F,0x54,0x69,
		0x6D,0x70,0x00,0x01,0xD3,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _DISP_flag_ERROR_Timp;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x63,0x68,0x5F,0x61,0x76,
		0x61,0x72,0x69,0x79,0x61,0x00,0x01,0x9D,0x21,0x00,0x00,0x05,
		0x03;
	.byte4 = _sch_avariya;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x69,0x6D,0x65,0x5F,0x75,
		0x61,0x72,0x74,0x00,0x01,0x9D,0x21,0x00,0x00,0x05,0x03;
	.byte4 = _time_uart;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x14,0x55,0x44,0x50,0x5F,0x54,0x43,
		0x50,0x5F,0x66,0x6C,0x61,0x67,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _UDP_TCP_flag;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x43,0x52,0x43,0x5F,0x6D,0x00,
		0x01,0x94,0x84,0x00,0x00,0x05,0x03;
	.byte4 = _CRC_m;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4B,0x36,0x31,0x35,0x5F,0x69,
		0x6E,0x64,0x69,0x6B,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _K615_indik;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4B,0x36,0x31,0x35,0x5F,0x63,
		0x72,0x63,0x5F,0x73,0x63,0x68,0x00,0x01,0x9A,0x0B,0x00,0x00,
		0x05,0x03;
	.byte4 = _K615_crc_sch;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4B,0x36,0x31,0x35,0x5F,0x63,
		0x72,0x63,0x5F,0x73,0x63,0x68,0x32,0x00,0x01,0x9A,0x0B,0x00,
		0x00,0x05,0x03;
	.byte4 = _K615_crc_sch2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x45,0x72,0x72,0x6F,0x72,0x5F,
		0x65,0x74,0x68,0x65,0x72,0x6E,0x65,0x74,0x5F,0x6F,0x62,0x6D,
		0x65,0x6E,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Error_ethernet_obmen;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x65,
		0x76,0x65,0x6E,0x74,0x5F,0x73,0x69,0x6E,0x68,0x72,0x6F,0x6E,
		0x00,0x01,0x7D,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _flag_event_sinhron;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x70,
		0x61,0x63,0x68,0x6B,0x61,0x5F,0x54,0x58,0x54,0x00,0x01,0x9A,
		0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _flag_pachka_TXT;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x63,0x68,0x5F,0x70,0x61,
		0x63,0x68,0x65,0x6B,0x5F,0x74,0x65,0x73,0x74,0x00,0x01,0x57,
		0x84,0x00,0x00,0x05,0x03;
	.byte4 = _sch_pachek_test;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x63,0x68,0x5F,0x65,0x76,
		0x65,0x6E,0x74,0x5F,0x73,0x69,0x6E,0x68,0x72,0x6F,0x6E,0x00,
		0x01,0x57,0x84,0x00,0x00,0x05,0x03;
	.byte4 = _sch_event_sinhron;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x63,0x68,0x5F,0x65,0x76,
		0x65,0x6E,0x74,0x5F,0x73,0x69,0x6E,0x68,0x72,0x6F,0x6E,0x5F,
		0x6D,0x61,0x78,0x00,0x01,0xD3,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _sch_event_sinhron_max;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x63,0x68,0x5F,0x65,0x76,
		0x65,0x6E,0x74,0x5F,0x73,0x69,0x6E,0x68,0x72,0x6F,0x6E,0x5F,
		0x6D,0x69,0x6E,0x00,0x01,0xD3,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _sch_event_sinhron_min;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x63,0x68,0x5F,0x54,0x4E,
		0x43,0x5F,0x74,0x65,0x73,0x74,0x00,0x01,0xE8,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _sch_TNC_test;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x4B,
		0x36,0x31,0x35,0x5F,0x65,0x76,0x65,0x6E,0x74,0x00,0x01,0x9A,
		0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _flag_K615_event;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x45,
		0x74,0x68,0x65,0x72,0x6E,0x65,0x74,0x5F,0x70,0x61,0x63,0x6B,
		0x65,0x74,0x5F,0x72,0x63,0x76,0x00,0x01,0x9A,0x0B,0x00,0x00,
		0x05,0x03;
	.byte4 = _flag_Ethernet_packet_rcv;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x63,0x68,0x5F,0x55,0x44,
		0x50,0x5F,0x70,0x61,0x6B,0x65,0x74,0x73,0x00,0x01,0x57,0x84,
		0x00,0x00,0x05,0x03;
	.byte4 = _sch_UDP_pakets;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x70,
		0x72,0x6F,0x63,0x65,0x73,0x73,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _flag_process;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x65,
		0x76,0x65,0x6E,0x74,0x5F,0x4B,0x36,0x31,0x35,0x5F,0x72,0x75,
		0x6E,0x00,0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _flag_event_K615_run;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x64,0x65,0x6C,0x61,0x79,0x5F,
		0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x00,0x01,0xE8,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _delay_process;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x75,
		0x61,0x72,0x74,0x5F,0x74,0x72,0x63,0x76,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _flag_uart_trcv;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x79,0x6E,0x63,0x5F,0x66,
		0x6C,0x61,0x67,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _sync_flag;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x69,0x6E,0x63,0x5F,0x74,
		0x79,0x70,0x65,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _sinc_type;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x4E,0x43,0x5F,0x6E,0x75,
		0x6D,0x62,0x65,0x72,0x5F,0x72,0x75,0x6E,0x00,0x01,0x9D,0x21,
		0x00,0x00,0x05,0x03;
	.byte4 = _TNC_number_run;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x63,0x68,0x5F,0x73,0x79,
		0x6E,0x63,0x5F,0x65,0x74,0x68,0x65,0x72,0x6E,0x65,0x74,0x00,
		0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _sch_sync_ethernet;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x63,0x68,0x5F,0x73,0x79,
		0x6E,0x63,0x5F,0x65,0x74,0x68,0x65,0x72,0x6E,0x65,0x74,0x5F,
		0x6D,0x61,0x78,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _sch_sync_ethernet_max;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x66,
		0x6F,0x72,0x6D,0x5F,0x70,0x61,0x63,0x6B,0x65,0x74,0x5F,0x53,
		0x44,0x52,0x41,0x4D,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _flag_form_packet_SDRAM;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x74,0x69,
		0x6D,0x65,0x31,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _tst_time1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x74,0x69,
		0x6D,0x65,0x32,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _tst_time2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x74,0x69,
		0x6D,0x65,0x33,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _tst_time3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x74,0x69,
		0x6D,0x65,0x34,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _tst_time4;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x74,0x69,
		0x6D,0x65,0x35,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _tst_time5;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x74,0x69,
		0x6D,0x65,0x36,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _tst_time6;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x74,0x69,
		0x6D,0x65,0x37,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _tst_time7;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x74,0x69,
		0x6D,0x65,0x38,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _tst_time8;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x74,0x69,
		0x6D,0x65,0x39,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _tst_time9;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x74,0x69,
		0x6D,0x65,0x41,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _tst_timeA;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x74,0x69,
		0x6D,0x65,0x42,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _tst_timeB;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x69,0x6D,0x65,0x72,0x5F,
		0x54,0x4E,0x43,0x31,0x00,0x01,0x9D,0x21,0x00,0x00,0x05,0x03;
	.byte4 = _timer_TNC1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x69,0x6D,0x65,0x72,0x5F,
		0x54,0x4E,0x43,0x32,0x00,0x01,0x9D,0x21,0x00,0x00,0x05,0x03;
	.byte4 = _timer_TNC2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x49,0x6E,0x74,0x65,0x72,0x76,
		0x61,0x6C,0x5F,0x54,0x4E,0x43,0x00,0x01,0x9D,0x21,0x00,0x00,
		0x05,0x03;
	.byte4 = _Interval_TNC;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x69,0x6D,0x65,0x72,0x5F,
		0x54,0x4F,0x42,0x4D,0x00,0x01,0x9D,0x21,0x00,0x00,0x05,0x03;
	.byte4 = _timer_TOBM;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x65,0x73,0x74,0x5F,0x4E,
		0x74,0x69,0x6E,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _test_Ntin;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x65,0x73,0x74,0x5F,0x4E,
		0x74,0x69,0x6B,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _test_Ntik;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x65,0x73,0x74,0x5F,0x4E,
		0x74,0x70,0x6E,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _test_Ntpn;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x65,0x73,0x74,0x5F,0x4E,
		0x74,0x70,0x6B,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _test_Ntpk;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x4E,0x43,0x5F,0x74,0x65,
		0x73,0x74,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TNC_test;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x74,0x69,
		0x6D,0x65,0x5F,0x6D,0x61,0x78,0x00,0x01,0xE8,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _tst_time_max;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x74,0x69,
		0x6D,0x65,0x5F,0x64,0x65,0x6C,0x74,0x61,0x00,0x01,0xE8,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _tst_time_delta;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x49,0x4D,0x45,0x52,0x5F,
		0x41,0x56,0x41,0x52,0x49,0x59,0x41,0x00,0x01,0xE8,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _TIMER_AVARIYA;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x49,0x4D,0x45,0x52,0x5F,
		0x55,0x44,0x50,0x5F,0x4C,0x53,0x5F,0x44,0x4F,0x57,0x4E,0x00,
		0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TIMER_UDP_LS_DOWN;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x45,
		0x52,0x52,0x4F,0x52,0x5F,0x43,0x52,0x43,0x5F,0x63,0x6F,0x6E,
		0x74,0x72,0x6F,0x6C,0x5F,0x77,0x6F,0x72,0x64,0x00,0x01,0x80,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _flag_ERROR_CRC_control_word;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x45,
		0x52,0x52,0x4F,0x52,0x5F,0x45,0x4E,0x44,0x5F,0x70,0x61,0x63,
		0x6B,0x65,0x74,0x00,0x01,0x80,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _flag_ERROR_END_packet;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x63,0x68,0x5F,0x45,0x52,
		0x52,0x4F,0x52,0x5F,0x43,0x52,0x43,0x5F,0x63,0x6F,0x6E,0x74,
		0x72,0x6F,0x6C,0x5F,0x77,0x6F,0x72,0x64,0x00,0x01,0xD3,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _sch_ERROR_CRC_control_word;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x43,0x4F,0x44,0x45,0x5F,0x52,
		0x45,0x5A,0x45,0x52,0x56,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _CODE_REZERV;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x43,0x4F,0x44,0x45,0x5F,0x52,
		0x45,0x5A,0x45,0x52,0x56,0x5F,0x73,0x6F,0x66,0x74,0x00,0x01,
		0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _CODE_REZERV_soft;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x49,0x4D,0x45,0x52,0x5F,
		0x47,0x42,0x52,0x5F,0x4F,0x4B,0x00,0x01,0xE8,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _TIMER_GBR_OK;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x45,0x56,0x45,0x4E,0x54,0x5F,
		0x52,0x45,0x5A,0x45,0x52,0x56,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _EVENT_REZERV;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x53,
		0x43,0x48,0x5F,0x4E,0x45,0x57,0x5F,0x42,0x55,0x46,0x00,0x01,
		0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_SCH_NEW_BUF;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x53,
		0x43,0x48,0x5F,0x4E,0x45,0x57,0x5F,0x42,0x55,0x46,0x5F,0x4D,
		0x41,0x58,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_SCH_NEW_BUF_MAX;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x74,0x69,
		0x6D,0x65,0x5F,0x4B,0x55,0x4B,0x31,0x00,0x01,0xE8,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _tst_time_KUK1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x74,0x69,
		0x6D,0x65,0x5F,0x4B,0x55,0x4B,0x32,0x00,0x01,0xE8,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _tst_time_KUK2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x45,
		0x52,0x52,0x4F,0x52,0x5F,0x4E,0x69,0x6D,0x70,0x00,0x01,0xE8,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_ERROR_Nimp;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x45,
		0x52,0x52,0x4F,0x52,0x5F,0x43,0x52,0x43,0x5F,0x63,0x6F,0x6E,
		0x74,0x72,0x6F,0x6C,0x5F,0x77,0x6F,0x72,0x64,0x32,0x00,0x01,
		0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _flag_ERROR_CRC_control_word2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x46,
		0x41,0x49,0x4C,0x5F,0x50,0x50,0x49,0x00,0x01,0xE8,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _flag_FAIL_PPI;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x41,
		0x76,0x61,0x72,0x69,0x79,0x61,0x5F,0x54,0x4E,0x43,0x00,0x01,
		0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _flag_Avariya_TNC;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x4E,0x43,0x30,0x5F,0x70,
		0x61,0x63,0x6B,0x65,0x74,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _TNC0_packet;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x50,
		0x41,0x43,0x48,0x4B,0x41,0x5F,0x44,0x45,0x4C,0x41,0x59,0x00,
		0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_PACHKA_DELAY;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x52,0x45,0x53,0x45,0x54,0x5F,
		0x70,0x61,0x63,0x6B,0x65,0x74,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _RESET_packet;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x66,
		0x69,0x72,0x73,0x74,0x5F,0x54,0x4E,0x4F,0x00,0x01,0x9A,0x0B,
		0x00,0x00,0x05,0x03;
	.byte4 = _flag_first_TNO;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x53,
		0x59,0x4E,0x43,0x5F,0x50,0x46,0x38,0x00,0x01,0x9A,0x0B,0x00,
		0x00,0x05,0x03;
	.byte4 = _FLAG_SYNC_PF8;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x53,
		0x59,0x4E,0x43,0x5F,0x50,0x46,0x31,0x31,0x00,0x01,0x9A,0x0B,
		0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_SYNC_PF11;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x49,0x4D,0x45,0x31,0x5F,
		0x50,0x50,0x49,0x5F,0x53,0x54,0x41,0x52,0x54,0x00,0x01,0x9D,
		0x21,0x00,0x00,0x05,0x03;
	.byte4 = _TIME1_PPI_START;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x49,0x4D,0x45,0x32,0x5F,
		0x50,0x50,0x49,0x5F,0x53,0x54,0x41,0x52,0x54,0x00,0x01,0x9D,
		0x21,0x00,0x00,0x05,0x03;
	.byte4 = _TIME2_PPI_START;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x49,0x4D,0x45,0x33,0x5F,
		0x50,0x50,0x49,0x5F,0x53,0x54,0x41,0x52,0x54,0x00,0x01,0x9D,
		0x21,0x00,0x00,0x05,0x03;
	.byte4 = _TIME3_PPI_START;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x49,0x4D,0x45,0x5F,0x50,
		0x50,0x49,0x5F,0x45,0x4E,0x44,0x00,0x01,0x9D,0x21,0x00,0x00,
		0x05,0x03;
	.byte4 = _TIME_PPI_END;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x49,0x4D,0x45,0x5F,0x50,
		0x41,0x43,0x4B,0x45,0x54,0x5F,0x46,0x4F,0x52,0x4D,0x00,0x01,
		0x9D,0x21,0x00,0x00,0x05,0x03;
	.byte4 = _TIME_PACKET_FORM;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x50,
		0x50,0x49,0x5F,0x4F,0x4B,0x00,0x01,0x9A,0x0B,0x00,0x00,0x05,
		0x03;
	.byte4 = _FLAG_PPI_OK;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x50,
		0x50,0x49,0x5F,0x73,0x69,0x6E,0x63,0x5F,0x44,0x32,0x00,0x01,
		0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _flag_PPI_sinc_D2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x50,
		0x50,0x49,0x5F,0x73,0x7A,0x31,0x5F,0x44,0x32,0x00,0x01,0x9A,
		0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _flag_PPI_sz1_D2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x50,
		0x50,0x49,0x5F,0x73,0x7A,0x32,0x5F,0x44,0x32,0x00,0x01,0x9A,
		0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _flag_PPI_sz2_D2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x50,0x4F,0x52,0x54,0x5F,
		0x56,0x41,0x52,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _SPORT_VAR;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x45,0x52,0x52,0x4F,0x52,0x5F,
		0x46,0x4C,0x41,0x47,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _ERROR_FLAG;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x42,0x52,0x5F,0x47,0x42,0x52,
		0x5F,0x46,0x4C,0x41,0x47,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _BR_GBR_FLAG;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x57,0x4F,0x52,0x4B,0x5F,0x54,
		0x55,0x5F,0x46,0x4C,0x41,0x47,0x00,0x01,0x80,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _WORK_TU_FLAG;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x55,
		0x41,0x52,0x54,0x5F,0x4B,0x36,0x30,0x37,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_UART_K607;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x56,0x4B,0x4C,0x5F,0x43,0x4F,
		0x4D,0x5F,0x46,0x54,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _VKL_COM_FT;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x52,0x45,0x5A,0x45,0x52,0x56,
		0x5F,0x49,0x4E,0x54,0x31,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _REZERV_INT1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x55,
		0x44,0x50,0x5F,0x45,0x56,0x45,0x4E,0x54,0x00,0x01,0xB8,0x0B,
		0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_UDP_EVENT;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x14,0x46,0x4C,0x41,0x47,0x5F,0x56,
		0x43,0x55,0x5F,0x53,0x59,0x4E,0x43,0x5F,0x45,0x52,0x52,0x4F,
		0x52,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_VCU_SYNC_ERROR;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x56,
		0x43,0x55,0x5F,0x53,0x59,0x4E,0x43,0x5F,0x45,0x52,0x52,0x4F,
		0x52,0x5F,0x6D,0x61,0x78,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _FLAG_VCU_SYNC_ERROR_max;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x44,0x44,0x53,0x5F,0x64,0x65,
		0x6C,0x61,0x79,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _DDS_delay;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x55,
		0x44,0x50,0x5F,0x4F,0x42,0x4D,0x45,0x4E,0x00,0x01,0xE8,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _flag_UDP_OBMEN;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x54,
		0x53,0x54,0x5F,0x55,0x44,0x50,0x5F,0x42,0x55,0x46,0x00,0x01,
		0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_TST_UDP_BUF;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x4E,0x43,0x5F,0x61,0x63,
		0x74,0x75,0x61,0x6C,0x5F,0x6F,0x6C,0x64,0x00,0x01,0xE8,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _TNC_actual_old;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x56,
		0x43,0x55,0x5F,0x53,0x59,0x4E,0x43,0x5F,0x55,0x50,0x00,0x01,
		0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_VCU_SYNC_UP;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x54,
		0x45,0x53,0x54,0x5F,0x53,0x45,0x56,0x00,0x01,0x97,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _FLAG_TEST_SEV;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x45,
		0x52,0x52,0x4F,0x52,0x5F,0x53,0x59,0x4E,0x43,0x5F,0x56,0x49,
		0x45,0x56,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_ERROR_SYNC_VIEV;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x54,0x41,0x54,0x55,0x53,
		0x5F,0x42,0x36,0x31,0x30,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _STATUS_B610;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x54,0x41,0x54,0x55,0x53,
		0x5F,0x42,0x36,0x31,0x30,0x5F,0x49,0x4E,0x46,0x00,0x01,0x97,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _STATUS_B610_INF;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x59,0x53,0x5F,0x48,0x45,
		0x4C,0x54,0x48,0x5F,0x42,0x36,0x31,0x30,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _SYS_HELTH_B610;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x57,
		0x4F,0x52,0x4B,0x5F,0x42,0x36,0x31,0x30,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_WORK_B610;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x54,
		0x4B,0x50,0x5F,0x54,0x4E,0x4F,0x5F,0x54,0x52,0x55,0x45,0x00,
		0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_TKP_TNO_TRUE;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x54,
		0x49,0x4D,0x45,0x52,0x5F,0x55,0x41,0x52,0x54,0x5F,0x4B,0x36,
		0x31,0x34,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_TIMER_UART_K614;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x49,
		0x4E,0x49,0x54,0x5F,0x55,0x41,0x52,0x54,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_INIT_UART;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x53,
		0x43,0x48,0x5F,0x54,0x58,0x34,0x38,0x35,0x00,0x01,0xE8,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_SCH_TX485;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x53,
		0x43,0x48,0x5F,0x54,0x58,0x34,0x38,0x35,0x5F,0x4D,0x41,0x58,
		0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_SCH_TX485_MAX;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x49,0x4D,0x45,0x33,0x5F,
		0x50,0x50,0x49,0x5F,0x53,0x54,0x41,0x52,0x54,0x5F,0x4D,0x41,
		0x58,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TIME3_PPI_START_MAX;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x45,
		0x54,0x48,0x45,0x52,0x4E,0x45,0x54,0x5F,0x49,0x4E,0x49,0x54,
		0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_ETHERNET_INIT;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x4D,
		0x41,0x53,0x54,0x45,0x52,0x5F,0x52,0x45,0x5A,0x45,0x52,0x56,
		0x5F,0x64,0x69,0x73,0x70,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _FLAG_MASTER_REZERV_disp;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x53,
		0x54,0x41,0x52,0x54,0x5F,0x4F,0x42,0x5A,0x4F,0x52,0x00,0x01,
		0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_START_OBZOR;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x49,0x4D,0x45,0x5F,0x50,
		0x50,0x49,0x5F,0x4F,0x4B,0x00,0x01,0x9D,0x21,0x00,0x00,0x05,
		0x03;
	.byte4 = _TIME_PPI_OK;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x49,0x4D,0x45,0x5F,0x50,
		0x50,0x49,0x5F,0x52,0x55,0x4E,0x00,0x01,0x9D,0x21,0x00,0x00,
		0x05,0x03;
	.byte4 = _TIME_PPI_RUN;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x44,0x45,0x4C,0x54,0x41,0x5F,
		0x54,0x49,0x4D,0x45,0x5F,0x50,0x50,0x49,0x00,0x01,0x9D,0x21,
		0x00,0x00,0x05,0x03;
	.byte4 = _DELTA_TIME_PPI;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x41,0x6C,0x66,0x61,0x00,0x01,
		0x9D,0x21,0x00,0x00,0x05,0x03;
	.byte4 = _Alfa;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x42,0x65,0x74,0x61,0x00,0x01,
		0x9D,0x21,0x00,0x00,0x05,0x03;
	.byte4 = _Beta;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x47,0x61,0x6D,0x6D,0x61,0x00,
		0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Gamma;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x45,
		0x4E,0x44,0x5F,0x73,0x79,0x6E,0x63,0x5F,0x70,0x61,0x63,0x6B,
		0x65,0x74,0x00,0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _flag_END_sync_packet;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x50,
		0x41,0x43,0x4B,0x45,0x54,0x5F,0x53,0x45,0x4E,0x44,0x00,0x01,
		0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_PACKET_SEND;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x45,
		0x4E,0x44,0x5F,0x73,0x79,0x6E,0x63,0x5F,0x70,0x61,0x63,0x6B,
		0x65,0x74,0x5F,0x76,0x73,0x70,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _flag_END_sync_packet_vsp;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x54,
		0x4E,0x4F,0x5F,0x54,0x52,0x55,0x45,0x00,0x01,0x97,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _flag_TNO_TRUE;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x54,0x41,0x52,0x54,0x5F,
		0x70,0x61,0x63,0x6B,0x65,0x74,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _START_packet;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x4E,
		0x55,0x4D,0x42,0x45,0x52,0x5F,0x70,0x61,0x63,0x68,0x6B,0x69,
		0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _flag_NUMBER_pachki;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x54,
		0x4E,0x43,0x5F,0x55,0x50,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _flag_TNC_UP;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x74,
		0x69,0x6D,0x65,0x5F,0x74,0x65,0x73,0x74,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _flag_time_test;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x53,
		0x54,0x4F,0x50,0x5F,0x41,0x4C,0x4C,0x5F,0x57,0x4F,0x52,0x4B,
		0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _flag_STOP_ALL_WORK;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x69,0x6E,0x64,0x65,0x78,0x5F,
		0x50,0x61,0x63,0x6B,0x65,0x74,0x5F,0x66,0x6F,0x72,0x6D,0x00,
		0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _index_Packet_form;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x69,0x6E,0x64,0x65,0x78,0x5F,
		0x45,0x4E,0x44,0x5F,0x54,0x4B,0x50,0x5F,0x66,0x6F,0x72,0x6D,
		0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _index_END_TKP_form;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x69,0x6E,0x64,0x65,0x78,0x5F,
		0x45,0x4E,0x44,0x5F,0x54,0x4B,0x49,0x5F,0x66,0x6F,0x72,0x6D,
		0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _index_END_TKI_form;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x4E,0x4F,0x5F,0x77,0x6F,
		0x72,0x6B,0x31,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TNO_work1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x4E,0x4F,0x5F,0x77,0x6F,
		0x72,0x6B,0x32,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TNO_work2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x63,0x68,0x5F,0x74,0x73,
		0x74,0x5F,0x70,0x61,0x63,0x68,0x65,0x6B,0x00,0x01,0xE8,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _sch_tst_pachek;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x63,0x68,0x5F,0x74,0x73,
		0x74,0x5F,0x70,0x61,0x63,0x68,0x65,0x6B,0x5F,0x6D,0x61,0x78,
		0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _sch_tst_pachek_max;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x63,0x68,0x5F,0x74,0x73,
		0x74,0x5F,0x70,0x61,0x63,0x68,0x65,0x6B,0x5F,0x6D,0x69,0x6E,
		0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _sch_tst_pachek_min;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x45,0x76,0x65,0x6E,0x74,0x5F,
		0x77,0x6F,0x72,0x64,0x00,0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _Event_word;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x44,0x65,0x6C,0x74,0x61,0x5F,
		0x54,0x4E,0x43,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Delta_TNC;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x44,0x65,0x6C,0x74,0x61,0x5F,
		0x54,0x4E,0x43,0x5F,0x6F,0x6C,0x64,0x00,0x01,0xE8,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _Delta_TNC_old;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x44,0x65,0x6C,0x74,0x61,0x5F,
		0x54,0x4E,0x43,0x5F,0x6F,0x6C,0x64,0x32,0x00,0x01,0xE8,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _Delta_TNC_old2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x44,0x65,0x6C,0x74,0x61,0x5F,
		0x54,0x4E,0x43,0x5F,0x77,0x6F,0x72,0x6B,0x00,0x01,0xE8,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _Delta_TNC_work;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x64,0x69,0x73,0x70,0x6C,0x65,
		0x79,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _displey;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x45,
		0x56,0x45,0x4E,0x54,0x5F,0x74,0x6F,0x5F,0x4B,0x36,0x30,0x37,
		0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_EVENT_to_K607;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x53,
		0x59,0x4E,0x43,0x5F,0x53,0x45,0x56,0x00,0x01,0x97,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _FLAG_SYNC_SEV;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x44,
		0x45,0x4C,0x41,0x59,0x5F,0x54,0x4E,0x4F,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_DELAY_TNO;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x4B,
		0x36,0x31,0x35,0x5F,0x4C,0x45,0x44,0x00,0x01,0x97,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _FLAG_K615_LED;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x74,0x69,
		0x6D,0x65,0x5F,0x73,0x65,0x76,0x31,0x00,0x01,0xE8,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _tst_time_sev1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x74,0x69,
		0x6D,0x65,0x5F,0x73,0x65,0x76,0x32,0x00,0x01,0xE8,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _tst_time_sev2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x74,0x69,
		0x6D,0x65,0x5F,0x73,0x65,0x76,0x33,0x00,0x01,0xE8,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _tst_time_sev3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x74,0x69,
		0x6D,0x65,0x5F,0x73,0x65,0x76,0x34,0x00,0x01,0xE8,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _tst_time_sev4;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x4E,0x49,0x5F,0x54,0x69,
		0x6D,0x70,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TNI_Timp;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x4B,0x49,0x5F,0x54,0x69,
		0x6D,0x70,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TKI_Timp;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x4E,0x50,0x5F,0x54,0x69,
		0x6D,0x70,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TNP_Timp;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x4B,0x50,0x5F,0x54,0x69,
		0x6D,0x70,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TKP_Timp;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x4E,0x43,0x5F,0x54,0x69,
		0x6D,0x70,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TNC_Timp;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x4E,0x4F,0x5F,0x54,0x69,
		0x6D,0x70,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TNO_Timp;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x53,0x54,0x5F,0x44,0x6E,
		0x69,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TST_Dni;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x53,0x54,0x5F,0x44,0x6E,
		0x70,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TST_Dnp;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x45,0x52,0x52,0x4F,0x52,0x5F,
		0x54,0x4E,0x5F,0x46,0x4C,0x41,0x47,0x00,0x01,0x97,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _ERROR_TN_FLAG;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x45,
		0x52,0x52,0x4F,0x52,0x5F,0x50,0x50,0x49,0x00,0x01,0xC1,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_ERROR_PPI;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x69,0x6D,0x65,0x5F,0x62,
		0x65,0x66,0x6F,0x72,0x65,0x5F,0x54,0x4F,0x42,0x4D,0x5F,0x31,
		0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Time_before_TOBM_1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x69,0x6D,0x65,0x5F,0x62,
		0x65,0x66,0x6F,0x72,0x65,0x5F,0x54,0x4F,0x42,0x4D,0x5F,0x32,
		0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Time_before_TOBM_2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x49,0x4D,0x45,0x52,0x31,
		0x5F,0x49,0x5A,0x4C,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TIMER1_IZL;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x49,0x4D,0x45,0x52,0x32,
		0x5F,0x49,0x5A,0x4C,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TIMER2_IZL;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x49,0x4D,0x45,0x52,0x31,
		0x5F,0x50,0x52,0x49,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TIMER1_PRI;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x49,0x4D,0x45,0x52,0x32,
		0x5F,0x50,0x52,0x49,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TIMER2_PRI;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x49,0x4E,0x54,0x45,0x52,0x56,
		0x41,0x4C,0x5F,0x49,0x5A,0x4C,0x00,0x01,0xE8,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _INTERVAL_IZL;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x49,0x4E,0x54,0x45,0x52,0x56,
		0x41,0x4C,0x5F,0x50,0x52,0x49,0x00,0x01,0xE8,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _INTERVAL_PRI;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x49,0x4E,0x54,0x45,0x52,0x56,
		0x41,0x4C,0x5F,0x49,0x5A,0x4C,0x5F,0x7A,0x61,0x64,0x00,0x01,
		0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _INTERVAL_IZL_zad;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x49,0x4E,0x54,0x45,0x52,0x56,
		0x41,0x4C,0x5F,0x50,0x52,0x49,0x5F,0x7A,0x61,0x64,0x00,0x01,
		0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _INTERVAL_PRI_zad;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x45,0x52,0x52,0x4F,0x52,0x5F,
		0x53,0x43,0x48,0x5F,0x49,0x5A,0x4C,0x00,0x01,0xE8,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _ERROR_SCH_IZL;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x45,0x52,0x52,0x4F,0x52,0x5F,
		0x53,0x43,0x48,0x5F,0x47,0x45,0x54,0x00,0x01,0xE8,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _ERROR_SCH_GET;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x4F,
		0x4B,0x5F,0x44,0x45,0x4C,0x41,0x59,0x00,0x01,0x97,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _FLAG_OK_DELAY;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x44,
		0x53,0x50,0x5F,0x74,0x65,0x78,0x74,0x5F,0x43,0x49,0x4B,0x4C,
		0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_DSP_text_CIKL;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x44,0x45,0x4C,0x41,0x59,0x5F,
		0x43,0x4F,0x4E,0x54,0x52,0x4F,0x4C,0x00,0x01,0xE8,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _DELAY_CONTROL;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x69,0x63,0x6B,0x5F,0x50,
		0x50,0x49,0x5F,0x77,0x61,0x69,0x74,0x00,0x01,0x57,0x84,0x00,
		0x00,0x05,0x03;
	.byte4 = _tick_PPI_wait;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x44,0x5F,0x6F,0x62,0x7A,0x6F,
		0x72,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _D_obzor;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x30,0x5F,0x46,0x53,0x5F,
		0x54,0x53,0x54,0x00,0x01,0x41,0x02,0x00,0x00,0x05,0x03;
	.byte4 = _F0_FS_TST;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x30,0x5F,0x46,0x47,0x5F,
		0x54,0x53,0x54,0x00,0x01,0x41,0x02,0x00,0x00,0x05,0x03;
	.byte4 = _F0_FG_TST;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x31,0x5F,0x46,0x53,0x5F,
		0x54,0x53,0x54,0x00,0x01,0x41,0x02,0x00,0x00,0x05,0x03;
	.byte4 = _F1_FS_TST;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x31,0x5F,0x46,0x47,0x5F,
		0x54,0x53,0x54,0x00,0x01,0x41,0x02,0x00,0x00,0x05,0x03;
	.byte4 = _F1_FG_TST;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x32,0x5F,0x46,0x53,0x5F,
		0x54,0x53,0x54,0x00,0x01,0x41,0x02,0x00,0x00,0x05,0x03;
	.byte4 = _F2_FS_TST;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x32,0x5F,0x46,0x47,0x5F,
		0x54,0x53,0x54,0x00,0x01,0x41,0x02,0x00,0x00,0x05,0x03;
	.byte4 = _F2_FG_TST;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x6D,0x61,0x78,0x5F,0x74,
		0x73,0x74,0x00,0x01,0x41,0x02,0x00,0x00,0x05,0x03;
	.byte4 = _Fmax_tst;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x5F,0x74,0x73,0x74,0x00,
		0x01,0x41,0x02,0x00,0x00,0x05,0x03;
	.byte4 = _F_tst;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x44,0x45,0x56,0x6D,0x61,0x78,
		0x5F,0x74,0x73,0x74,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _DEVmax_tst;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x44,0x45,0x56,0x5F,0x74,0x73,
		0x74,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _DEV_tst;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x44,0x6E,0x69,0x5F,0x4D,0x49,
		0x4E,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Dni_MIN;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x44,0x6E,0x70,0x5F,0x4D,0x49,
		0x4E,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Dnp_MIN;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x59,0x4E,0x43,0x5F,0x50,
		0x49,0x4C,0x41,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _SYNC_PILA;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x59,0x4E,0x43,0x5F,0x50,
		0x49,0x4C,0x41,0x32,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _SYNC_PILA2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x59,0x4E,0x43,0x5F,0x50,
		0x49,0x4C,0x41,0x33,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _SYNC_PILA3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x59,0x4E,0x43,0x5F,0x50,
		0x49,0x4C,0x41,0x5F,0x54,0x53,0x54,0x00,0x01,0xE8,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _SYNC_PILA_TST;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4E,0x5F,0x74,0x65,0x6D,0x70,
		0x6F,0x76,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _N_tempov;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x44,0x65,0x76,0x46,0x5F,0x54,
		0x53,0x54,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _DevF_TST;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x69,0x6D,0x70,0x5F,0x54,
		0x53,0x54,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Timp_TST;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x69,0x6D,0x70,0x49,0x5A,
		0x5F,0x54,0x53,0x54,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TimpIZ_TST;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x69,0x6D,0x70,0x50,0x52,
		0x5F,0x54,0x53,0x54,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TimpPR_TST;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4E,0x69,0x6D,0x70,0x5F,0x54,
		0x53,0x54,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Nimp_TST;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x69,0x6E,0x74,0x65,0x72,
		0x76,0x5F,0x54,0x53,0x54,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _Tinterv_TST;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x69,0x6E,0x74,0x65,0x7A,
		0x31,0x5F,0x45,0x52,0x52,0x4F,0x52,0x00,0x01,0x97,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _Sintez1_ERROR;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x69,0x6E,0x74,0x65,0x7A,
		0x32,0x5F,0x45,0x52,0x52,0x4F,0x52,0x00,0x01,0x97,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _Sintez2_ERROR;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4F,0x43,0x48,0x5F,0x45,
		0x52,0x52,0x4F,0x52,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FOCH_ERROR;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x45,0x52,0x52,0x4F,0x52,0x36,
		0x34,0x5F,0x46,0x4C,0x41,0x47,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _ERROR64_FLAG;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x4D,
		0x41,0x53,0x54,0x45,0x52,0x5F,0x52,0x45,0x5A,0x45,0x52,0x56,
		0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_MASTER_REZERV;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x53,0x54,0x5F,0x4F,0x55,
		0x54,0x5F,0x43,0x4F,0x44,0x45,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _TST_OUT_CODE;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x69,0x63,0x6B,0x5F,0x77,
		0x61,0x69,0x74,0x5F,0x4C,0x45,0x44,0x5F,0x45,0x52,0x52,0x4F,
		0x52,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _tick_wait_LED_ERROR;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x45,
		0x52,0x52,0x4F,0x52,0x5F,0x55,0x50,0x00,0x01,0x97,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _FLAG_ERROR_UP;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x4F,
		0x4B,0x5F,0x55,0x50,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_OK_UP;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x55,
		0x44,0x50,0x5F,0x49,0x4E,0x53,0x54,0x41,0x4C,0x4C,0x00,0x01,
		0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_UDP_INSTALL;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x14,0x44,0x45,0x4C,0x41,0x59,0x5F,
		0x41,0x44,0x52,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _DELAY_ADR;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x53,
		0x43,0x48,0x5F,0x53,0x45,0x56,0x5F,0x70,0x61,0x63,0x68,0x6B,
		0x61,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_SCH_SEV_pachka;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x53,
		0x43,0x48,0x5F,0x4B,0x55,0x4B,0x5F,0x70,0x61,0x63,0x68,0x6B,
		0x61,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_SCH_KUK_pachka;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x53,0x54,0x5F,0x52,0x58,
		0x38,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TST_RX8;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x43,0x52,0x43,0x5F,0x52,0x58,
		0x38,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _CRC_RX8;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x47,0x5F,0x42,0x36,
		0x31,0x30,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLG_B610;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x47,0x5F,0x4B,0x36,
		0x30,0x31,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLG_K601;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x47,0x5F,0x4B,0x36,
		0x30,0x32,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLG_K602;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x47,0x5F,0x4B,0x36,
		0x30,0x33,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLG_K603;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x47,0x5F,0x4B,0x36,
		0x30,0x34,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLG_K604;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x47,0x5F,0x4B,0x36,
		0x30,0x35,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLG_K605;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x47,0x5F,0x4B,0x36,
		0x30,0x37,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLG_K607;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x47,0x5F,0x4B,0x36,
		0x30,0x38,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLG_K608;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x47,0x5F,0x4B,0x36,
		0x31,0x31,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLG_K611;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x47,0x5F,0x4B,0x36,
		0x31,0x32,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLG_K612;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x47,0x5F,0x4B,0x36,
		0x31,0x33,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLG_K613;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x47,0x5F,0x4B,0x36,
		0x31,0x34,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLG_K614;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x47,0x5F,0x4B,0x36,
		0x31,0x34,0x5F,0x31,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLG_K614_1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x47,0x5F,0x4B,0x36,
		0x31,0x35,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLG_K615;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x47,0x5F,0x4B,0x36,
		0x31,0x36,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLG_K616;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x47,0x5F,0x43,0x4C,
		0x4B,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLG_CLK;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x53,
		0x54,0x41,0x52,0x54,0x5F,0x57,0x4F,0x52,0x4B,0x00,0x01,0x97,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_START_WORK;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x49,0x4D,0x45,0x5F,0x4C,
		0x4F,0x43,0x41,0x4C,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TIME_LOCAL;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x44,0x53,0x50,0x5F,0x69,0x6E,
		0x31,0x00,0x01,0x78,0x84,0x00,0x00,0x05,0x03;
	.byte4 = _DSP_in1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x49,0x6E,0x66,0x5F,0x41,0x31,
		0x00,0x01,0x6A,0x84,0x00,0x00,0x05,0x03;
	.byte4 = _Inf_A1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x49,0x6E,0x66,0x5F,0x41,0x32,
		0x00,0x01,0x5C,0x84,0x00,0x00,0x05,0x03;
	.byte4 = _Inf_A2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x43,0x6F,0x64,0x65,0x5F,0x65,
		0x72,0x72,0x6F,0x72,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Code_error;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4E,0x6F,0x72,0x6D,0x5F,0x6F,
		0x68,0x6C,0x61,0x67,0x64,0x65,0x6E,0x69,0x79,0x61,0x00,0x01,
		0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Norm_ohlagdeniya;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x72,0x69,0x65,0x6D,0x4E,
		0x69,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _PriemNi;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x56,0x69,0x6B,0x6C,0x00,0x01,
		0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Vikl;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x47,0x42,0x52,0x00,0x01,0x97,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _GBR;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x42,0x52,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _BR;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x43,0x55,0x5F,0x4D,0x55,0x00,
		0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _CU_MU;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x5F,0x6E,0x6F,0x72,0x6D,
		0x61,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _T_norma;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x72,0x65,0x64,0x5F,0x61,
		0x76,0x61,0x72,0x69,0x79,0x61,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _Pred_avariya;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4E,0x6F,0x72,0x6D,0x61,0x5F,
		0x61,0x6D,0x70,0x6C,0x69,0x66,0x65,0x72,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _Norma_amplifer;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4E,0x6F,0x72,0x6D,0x61,0x5F,
		0x70,0x69,0x74,0x61,0x6E,0x69,0x79,0x61,0x46,0x54,0x00,0x01,
		0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Norma_pitaniyaFT;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x41,0x76,0x61,0x72,0x69,0x79,
		0x61,0x5F,0x62,0x6C,0x6F,0x6B,0x6F,0x76,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _Avariya_blokov;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x52,0x65,0x7A,0x65,0x72,0x76,
		0x31,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Rezerv1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4E,0x6F,0x72,0x6D,0x61,0x5F,
		0x49,0x56,0x45,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Norma_IVE;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x52,0x65,0x7A,0x65,0x72,0x76,
		0x32,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Rezerv2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x52,0x65,0x7A,0x65,0x72,0x76,
		0x33,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Rezerv3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x52,0x65,0x7A,0x65,0x72,0x76,
		0x34,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Rezerv4;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x52,0x65,0x7A,0x65,0x72,0x76,
		0x35,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Rezerv5;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4E,0x6F,0x6D,0x65,0x72,0x5F,
		0x72,0x65,0x7A,0x65,0x72,0x5F,0x61,0x6D,0x70,0x6C,0x69,0x66,
		0x65,0x72,0x5F,0x46,0x54,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _Nomer_rezer_amplifer_FT;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4B,0x6E,0x63,0x5F,0x6D,0x69,
		0x6E,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Knc_min;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4B,0x6E,0x63,0x5F,0x31,0x30,
		0x73,0x65,0x63,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Knc_10sec;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4B,0x6E,0x63,0x5F,0x73,0x65,
		0x63,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Knc_sec;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4B,0x6E,0x63,0x5F,0x31,0x30,
		0x30,0x6D,0x73,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Knc_100ms;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4B,0x6E,0x63,0x5F,0x31,0x30,
		0x6D,0x73,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Knc_10ms;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4B,0x6E,0x63,0x5F,0x6D,0x73,
		0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Knc_ms;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4B,0x6E,0x63,0x5F,0x31,0x30,
		0x30,0x75,0x73,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Knc_100us;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4B,0x6E,0x63,0x5F,0x31,0x30,
		0x75,0x73,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Knc_10us;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4B,0x6E,0x63,0x5F,0x75,0x73,
		0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Knc_us;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4D,0x79,0x70,0x72,0x5F,0x6D,
		0x69,0x6E,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Mypr_min;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4D,0x79,0x70,0x72,0x5F,0x68,
		0x6F,0x75,0x72,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Mypr_hour;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4D,0x79,0x70,0x72,0x5F,0x64,
		0x61,0x79,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Mypr_day;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x43,0x4F,0x4E,0x54,0x52,0x4F,
		0x4C,0x5F,0x43,0x52,0x43,0x00,0x01,0xC1,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _CONTROL_CRC;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4D,0x73,0x67,0x5F,0x5A,0x41,
		0x50,0x52,0x45,0x54,0x5F,0x52,0x45,0x5A,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _Msg_ZAPRET_REZ;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4C,0x6F,0x4B,0x5F,0x57,0x45,
		0x42,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _LoK_WEB;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4E,0x49,0x4C,0x53,0x5F,0x52,
		0x45,0x5A,0x45,0x52,0x56,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _NILS_REZERV;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x52,0x5A,0x56,0x5F,0x4C,0x53,
		0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _RZV_LS;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4B,0x46,0x4B,0x00,0x01,0xC1,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _KFK;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4E,0x4E,0x49,0x00,0x01,0x97,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _NNI;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x52,0x43,0x5F,0x4B,0x54,0x56,
		0x5F,0x54,0x35,0x4D,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _RC_KTV_T5M;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x63,0x5F,0x32,0x73,0x65,
		0x63,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Tc_2sec;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x69,0x6E,0x74,0x56,0x5F,
		0x6E,0x65,0x73,0x6F,0x6F,0x74,0x76,0x5F,0x7A,0x61,0x64,0x61,
		0x6E,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _SintV_nesootv_zadan;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x49,0x6E,0x5F,0x73,0x79,0x73,
		0x5F,0x4F,0x62,0x6D,0x65,0x6E,0x5F,0x65,0x72,0x72,0x6F,0x72,
		0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _In_sys_Obmen_error;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x62,0x6F,0x79,0x5F,0x66,
		0x6F,0x72,0x6D,0x5F,0x69,0x6E,0x74,0x65,0x72,0x76,0x61,0x6C,
		0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Sboy_form_interval;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x62,0x6F,0x79,0x5F,0x6F,
		0x62,0x6D,0x65,0x6E,0x61,0x5F,0x69,0x6E,0x66,0x6F,0x72,0x6D,
		0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Sboy_obmena_inform;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x41,0x50,0x43,0x48,0x5F,
		0x31,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FAPCH_1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x41,0x50,0x43,0x48,0x5F,
		0x32,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FAPCH_2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x5A,0x61,0x6B,0x6F,0x6E,0x5F,
		0x6D,0x6F,0x64,0x75,0x6C,0x61,0x63,0x5F,0x6B,0x6F,0x6E,0x74,
		0x72,0x6F,0x6C,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Zakon_modulac_kontrol;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x41,0x50,0x43,0x48,0x5F,
		0x33,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FAPCH_3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4C,0x43,0x48,0x4D,0x5F,0x6F,
		0x73,0x6E,0x76,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _LCHM_osnv;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4C,0x43,0x48,0x4D,0x5F,0x49,
		0x5F,0x74,0x79,0x70,0x65,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _LCHM_I_type;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4C,0x43,0x48,0x4D,0x5F,0x49,
		0x5F,0x74,0x79,0x70,0x65,0x32,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _LCHM_I_type2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4C,0x43,0x48,0x4D,0x5F,0x49,
		0x5F,0x74,0x79,0x70,0x65,0x33,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _LCHM_I_type3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4C,0x43,0x48,0x4D,0x5F,0x47,
		0x5F,0x74,0x79,0x70,0x65,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _LCHM_G_type;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4C,0x43,0x48,0x4D,0x5F,0x47,
		0x5F,0x74,0x79,0x70,0x65,0x32,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _LCHM_G_type2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4C,0x43,0x48,0x4D,0x5F,0x47,
		0x5F,0x74,0x79,0x70,0x65,0x33,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _LCHM_G_type3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x44,0x6F,0x70,0x5F,0x69,0x6E,
		0x74,0x65,0x72,0x76,0x61,0x6C,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _Dop_interval;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x79,0x70,0x65,0x5F,0x70,
		0x61,0x63,0x68,0x6B,0x69,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _Type_pachki;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4C,0x43,0x48,0x4D,0x5F,0x70,
		0x6F,0x6D,0x65,0x68,0x61,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _LCHM_pomeha;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x59,0x4E,0x43,0x5F,0x54,
		0x30,0x54,0x6E,0x63,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _SYNC_T0Tnc;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4C,0x43,0x48,0x4D,0x5F,0x6F,
		0x73,0x6E,0x76,0x32,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _LCHM_osnv2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x44,0x6F,0x70,0x5F,0x69,0x6E,
		0x74,0x65,0x72,0x76,0x61,0x6C,0x32,0x00,0x01,0x97,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _Dop_interval2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x79,0x70,0x65,0x5F,0x70,
		0x61,0x63,0x68,0x6B,0x69,0x32,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _Type_pachki2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4C,0x43,0x48,0x4D,0x5F,0x70,
		0x6F,0x6D,0x65,0x68,0x61,0x32,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _LCHM_pomeha2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x59,0x4E,0x43,0x5F,0x54,
		0x30,0x54,0x6E,0x63,0x32,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _SYNC_T0Tnc2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4C,0x43,0x48,0x4D,0x5F,0x6F,
		0x73,0x6E,0x76,0x33,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _LCHM_osnv3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x44,0x6F,0x70,0x5F,0x69,0x6E,
		0x74,0x65,0x72,0x76,0x61,0x6C,0x33,0x00,0x01,0x97,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _Dop_interval3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x79,0x70,0x65,0x5F,0x70,
		0x61,0x63,0x68,0x6B,0x69,0x33,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _Type_pachki3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4C,0x43,0x48,0x4D,0x5F,0x70,
		0x6F,0x6D,0x65,0x68,0x61,0x33,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _LCHM_pomeha3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x59,0x4E,0x43,0x5F,0x54,
		0x30,0x54,0x6E,0x63,0x33,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _SYNC_T0Tnc3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x4E,0x4F,0x5F,0x72,0x65,
		0x67,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TNO_reg;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x30,0x00,0x01,0xE8,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _P0;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x6E,0x69,0x75,0x00,0x01,
		0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pniu;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x6E,0x69,0x00,0x01,0xE8,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pni;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x69,0x69,0x00,0x01,0xE8,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pii;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x6E,0x70,0x75,0x00,0x01,
		0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pnpu;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x6E,0x70,0x00,0x01,0xE8,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pnp;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x69,0x70,0x00,0x01,0xE8,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pip;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x64,0x6F,0x70,0x00,0x01,
		0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pdop;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x6E,0x70,0x6B,0x00,0x01,
		0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pnpk;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x6B,0x00,0x01,0xE8,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _Pk;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x6E,0x70,0x70,0x00,0x01,
		0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pnpp;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x70,0x00,0x01,0xE8,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _Pp;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4E,0x74,0x70,0x00,0x01,0x97,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Ntp;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4E,0x74,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _Nt;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4E,0x74,0x63,0x00,0x01,0x97,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Ntc;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x6E,0x31,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _n1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x6E,0x32,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _n2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x6E,0x33,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _n3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x6E,0x69,0x75,0x32,0x00,
		0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pniu2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x6E,0x69,0x32,0x00,0x01,
		0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pni2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x69,0x69,0x32,0x00,0x01,
		0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pii2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x6E,0x70,0x75,0x32,0x00,
		0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pnpu2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x6E,0x70,0x32,0x00,0x01,
		0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pnp2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x69,0x70,0x32,0x00,0x01,
		0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pip2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x64,0x6F,0x70,0x32,0x00,
		0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pdop2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x6E,0x70,0x6B,0x32,0x00,
		0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pnpk2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x6B,0x32,0x00,0x01,0xE8,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pk2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x6E,0x70,0x70,0x32,0x00,
		0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pnpp2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x70,0x32,0x00,0x01,0xE8,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pp2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4E,0x74,0x70,0x32,0x00,0x01,
		0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Ntp2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4E,0x74,0x32,0x00,0x01,0x97,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Nt2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4E,0x74,0x63,0x32,0x00,0x01,
		0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Ntc2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x6E,0x69,0x75,0x33,0x00,
		0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pniu3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x6E,0x69,0x33,0x00,0x01,
		0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pni3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x69,0x69,0x33,0x00,0x01,
		0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pii3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x6E,0x70,0x75,0x33,0x00,
		0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pnpu3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x6E,0x70,0x33,0x00,0x01,
		0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pnp3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x69,0x70,0x33,0x00,0x01,
		0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pip3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x64,0x6F,0x70,0x33,0x00,
		0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pdop3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x6E,0x70,0x6B,0x33,0x00,
		0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pnpk3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x6B,0x33,0x00,0x01,0xE8,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pk3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x6E,0x70,0x70,0x33,0x00,
		0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pnpp3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x70,0x33,0x00,0x01,0xE8,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Pp3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4E,0x74,0x70,0x33,0x00,0x01,
		0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Ntp3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4E,0x74,0x33,0x00,0x01,0x97,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Nt3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4E,0x74,0x63,0x33,0x00,0x01,
		0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Ntc3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x6C,0x61,0x67,0x5F,0x4B,
		0x36,0x31,0x31,0x00,0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _Flag_K611;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x6C,0x61,0x67,0x5F,0x69,
		0x6E,0x69,0x74,0x5F,0x4B,0x36,0x31,0x31,0x00,0x01,0x9A,0x0B,
		0x00,0x00,0x05,0x03;
	.byte4 = _Flag_init_K611;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x6C,0x61,0x67,0x5F,0x63,
		0x6F,0x6E,0x74,0x72,0x6F,0x6C,0x5F,0x4B,0x36,0x31,0x31,0x00,
		0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _Flag_control_K611;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x6C,0x61,0x67,0x5F,0x63,
		0x6F,0x6E,0x74,0x72,0x6F,0x6C,0x5F,0x73,0x69,0x67,0x5F,0x4B,
		0x36,0x31,0x31,0x00,0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _Flag_control_sig_K611;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x6C,0x61,0x67,0x5F,0x63,
		0x6F,0x6E,0x74,0x72,0x6F,0x6C,0x5F,0x65,0x6E,0x64,0x5F,0x4B,
		0x36,0x31,0x31,0x00,0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _Flag_control_end_K611;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x6C,0x61,0x67,0x5F,0x7A,
		0x61,0x68,0x76,0x61,0x74,0x5F,0x73,0x69,0x67,0x5F,0x4B,0x36,
		0x31,0x31,0x00,0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _Flag_zahvat_sig_K611;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x6C,0x61,0x67,0x5F,0x7A,
		0x61,0x68,0x76,0x61,0x74,0x5F,0x65,0x6E,0x64,0x5F,0x4B,0x36,
		0x31,0x31,0x00,0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _Flag_zahvat_end_K611;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x51,0x77,0x61,0x6E,0x74,0x5F,
		0x4B,0x36,0x31,0x31,0x00,0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _Qwant_K611;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x6C,0x61,0x67,0x5F,0x7A,
		0x61,0x68,0x76,0x61,0x74,0x5F,0x4F,0x4B,0x5F,0x4B,0x36,0x31,
		0x31,0x00,0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _Flag_zahvat_OK_K611;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x6C,0x61,0x67,0x5F,0x73,
		0x69,0x67,0x6E,0x61,0x6C,0x5F,0x4F,0x4B,0x5F,0x4B,0x36,0x31,
		0x31,0x00,0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _Flag_signal_OK_K611;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x6C,0x61,0x67,0x5F,0x4B,
		0x36,0x31,0x32,0x00,0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _Flag_K612;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x6C,0x61,0x67,0x5F,0x69,
		0x6E,0x69,0x74,0x5F,0x4B,0x36,0x31,0x32,0x00,0x01,0x9A,0x0B,
		0x00,0x00,0x05,0x03;
	.byte4 = _Flag_init_K612;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x6C,0x61,0x67,0x5F,0x63,
		0x6F,0x6E,0x74,0x72,0x6F,0x6C,0x5F,0x4B,0x36,0x31,0x32,0x00,
		0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _Flag_control_K612;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x6C,0x61,0x67,0x5F,0x4B,
		0x36,0x31,0x33,0x00,0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _Flag_K613;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x6C,0x61,0x67,0x5F,0x69,
		0x6E,0x69,0x74,0x5F,0x4B,0x36,0x31,0x33,0x00,0x01,0x9A,0x0B,
		0x00,0x00,0x05,0x03;
	.byte4 = _Flag_init_K613;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x6C,0x61,0x67,0x5F,0x63,
		0x6F,0x6E,0x74,0x72,0x6F,0x6C,0x5F,0x4B,0x36,0x31,0x33,0x00,
		0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _Flag_control_K613;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x6C,0x61,0x67,0x5F,0x4B,
		0x36,0x31,0x35,0x00,0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _Flag_K615;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x6C,0x61,0x67,0x5F,0x69,
		0x6E,0x69,0x74,0x5F,0x4B,0x36,0x31,0x35,0x00,0x01,0x9A,0x0B,
		0x00,0x00,0x05,0x03;
	.byte4 = _Flag_init_K615;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x6C,0x61,0x67,0x5F,0x63,
		0x6F,0x6E,0x74,0x72,0x6F,0x6C,0x5F,0x4B,0x36,0x31,0x35,0x00,
		0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _Flag_control_K615;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x51,0x77,0x61,0x6E,0x74,0x5F,
		0x4B,0x36,0x31,0x35,0x00,0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _Qwant_K615;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x6C,0x61,0x67,0x5F,0x4B,
		0x36,0x31,0x34,0x00,0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _Flag_K614;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x6C,0x61,0x67,0x5F,0x69,
		0x6E,0x69,0x74,0x5F,0x4B,0x36,0x31,0x34,0x00,0x01,0x9A,0x0B,
		0x00,0x00,0x05,0x03;
	.byte4 = _Flag_init_K614;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x6C,0x61,0x67,0x5F,0x63,
		0x6F,0x6E,0x74,0x72,0x6F,0x6C,0x5F,0x4B,0x36,0x31,0x34,0x00,
		0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _Flag_control_K614;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x51,0x77,0x61,0x6E,0x74,0x5F,
		0x4B,0x36,0x31,0x34,0x00,0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _Qwant_K614;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x65,
		0x76,0x65,0x6E,0x74,0x5F,0x4B,0x36,0x31,0x34,0x00,0x01,0x9A,
		0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _flag_event_K614;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x6C,0x61,0x67,0x5F,0x69,
		0x6E,0x69,0x74,0x5F,0x42,0x36,0x31,0x30,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _Flag_init_B610;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x6C,0x61,0x67,0x5F,0x42,
		0x36,0x31,0x30,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _Flag_B610;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x52,0x4F,0x43,0x45,0x53,
		0x53,0x00,0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _PROCESS;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x65,0x73,0x74,0x31,0x00,
		0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _test1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x65,0x73,0x74,0x32,0x00,
		0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _test2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x79,0x73,0x5F,0x6C,0x69,
		0x66,0x65,0x5F,0x6B,0x36,0x31,0x32,0x00,0x01,0x9A,0x0B,0x00,
		0x00,0x05,0x03;
	.byte4 = _sys_life_k612;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x79,0x73,0x5F,0x6C,0x69,
		0x66,0x65,0x5F,0x6B,0x36,0x31,0x33,0x00,0x01,0x9A,0x0B,0x00,
		0x00,0x05,0x03;
	.byte4 = _sys_life_k613;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x41,0x56,0x41,0x52,0x49,0x59,
		0x41,0x5F,0x66,0x6C,0x61,0x67,0x00,0x01,0x9D,0x21,0x00,0x00,
		0x05,0x03;
	.byte4 = _AVARIYA_flag;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x69,0x63,0x6B,0x5F,0x70,
		0x72,0x6F,0x63,0x65,0x73,0x73,0x00,0x01,0x57,0x84,0x00,0x00,
		0x05,0x03;
	.byte4 = _tick_process;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x14,0x74,0x69,0x63,0x6B,0x5F,0x70,
		0x72,0x6F,0x63,0x65,0x73,0x73,0x5F,0x4B,0x36,0x31,0x35,0x00,
		0x01,0x57,0x84,0x00,0x00,0x05,0x03;
	.byte4 = _tick_process_K615;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x14,0x54,0x49,0x4D,0x45,0x5F,0x42,
		0x52,0x00,0x01,0x57,0x84,0x00,0x00,0x05,0x03;
	.byte4 = _TIME_BR;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x45,
		0x74,0x68,0x65,0x72,0x6E,0x65,0x74,0x00,0x01,0x97,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _flag_Ethernet;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x45,
		0x74,0x68,0x65,0x72,0x6E,0x65,0x74,0x5F,0x54,0x65,0x72,0x6D,
		0x69,0x6E,0x61,0x6C,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _flag_Ethernet_Terminal;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x50,
		0x50,0x49,0x5F,0x73,0x7A,0x31,0x00,0x01,0x9A,0x0B,0x00,0x00,
		0x05,0x03;
	.byte4 = _flag_PPI_sz1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x50,
		0x50,0x49,0x5F,0x73,0x7A,0x32,0x00,0x01,0x9A,0x0B,0x00,0x00,
		0x05,0x03;
	.byte4 = _flag_PPI_sz2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x50,
		0x50,0x49,0x5F,0x73,0x69,0x6E,0x63,0x00,0x01,0x9A,0x0B,0x00,
		0x00,0x05,0x03;
	.byte4 = _flag_PPI_sinc;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x50,
		0x61,0x63,0x6B,0x65,0x74,0x5F,0x66,0x6F,0x72,0x6D,0x00,0x01,
		0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _flag_Packet_form;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x63,0x6F,
		0x6E,0x74,0x72,0x6F,0x6C,0x5F,0x69,0x6D,0x70,0x75,0x6C,0x73,
		0x5F,0x73,0x63,0x68,0x00,0x01,0x80,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _tst_control_impuls_sch;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x63,0x6F,
		0x6E,0x74,0x72,0x6F,0x6C,0x5F,0x69,0x6D,0x70,0x75,0x6C,0x73,
		0x5F,0x66,0x6C,0x61,0x67,0x5F,0x31,0x00,0x01,0x80,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _tst_control_impuls_flag_1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x63,0x6F,
		0x6E,0x74,0x72,0x6F,0x6C,0x5F,0x69,0x6D,0x70,0x75,0x6C,0x73,
		0x5F,0x66,0x6C,0x61,0x67,0x5F,0x32,0x00,0x01,0x80,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _tst_control_impuls_flag_2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x43,0x6F,0x6D,0x6D,0x61,0x6E,
		0x64,0x5F,0x53,0x79,0x6E,0x63,0x00,0x01,0xD3,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _Command_Sync;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x53,
		0x54,0x41,0x52,0x54,0x5F,0x50,0x52,0x4F,0x43,0x45,0x53,0x53,
		0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _flag_START_PROCESS;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x54,
		0x4E,0x49,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _flag_TNI;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x54,
		0x4B,0x49,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _flag_TKI;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x54,
		0x4E,0x50,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _flag_TNP;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x54,
		0x4B,0x50,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _flag_TKP;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x54,
		0x4F,0x42,0x4D,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _flag_TOBM;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x54,
		0x4E,0x43,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _flag_TNC;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x54,
		0x4E,0x4F,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _flag_TNO;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x54,
		0x4E,0x4F,0x5F,0x31,0x68,0x7A,0x5F,0x55,0x50,0x00,0x01,0x97,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _flag_TNO_1hz_UP;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x65,0x73,0x74,0x5F,0x50,
		0x50,0x49,0x5F,0x66,0x6C,0x61,0x67,0x31,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _Test_PPI_flag1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x65,0x73,0x74,0x5F,0x50,
		0x50,0x49,0x5F,0x66,0x6C,0x61,0x67,0x32,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _Test_PPI_flag2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x65,0x73,0x74,0x5F,0x50,
		0x50,0x49,0x5F,0x66,0x6C,0x61,0x67,0x33,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _Test_PPI_flag3;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x52,0x45,0x53,0x45,0x54,0x5F,
		0x53,0x49,0x4E,0x54,0x45,0x5A,0x5F,0x66,0x6C,0x61,0x67,0x00,
		0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _RESET_SINTEZ_flag;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x50,
		0x50,0x49,0x5F,0x73,0x69,0x6E,0x74,0x65,0x7A,0x5F,0x75,0x6E,
		0x73,0x69,0x68,0x72,0x6F,0x6E,0x5F,0x73,0x74,0x61,0x72,0x74,
		0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _flag_PPI_sintez_unsihron_start;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x69,0x6D,0x65,0x5F,0x54,
		0x4E,0x4F,0x00,0x01,0x9D,0x21,0x00,0x00,0x05,0x03;
	.byte4 = _time_TNO;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x69,0x6D,0x65,0x5F,0x54,
		0x4E,0x43,0x00,0x01,0x9D,0x21,0x00,0x00,0x05,0x03;
	.byte4 = _time_TNC;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x69,0x6D,0x65,0x5F,0x54,
		0x4E,0x4F,0x5F,0x6D,0x69,0x6E,0x00,0x01,0x9D,0x21,0x00,0x00,
		0x05,0x03;
	.byte4 = _time_TNO_min;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x69,0x6D,0x65,0x5F,0x54,
		0x4E,0x43,0x5F,0x6D,0x69,0x6E,0x00,0x01,0x9D,0x21,0x00,0x00,
		0x05,0x03;
	.byte4 = _time_TNC_min;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x69,0x6D,0x65,0x5F,0x54,
		0x4E,0x4F,0x5F,0x6D,0x61,0x78,0x00,0x01,0x9D,0x21,0x00,0x00,
		0x05,0x03;
	.byte4 = _time_TNO_max;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x69,0x6D,0x65,0x5F,0x54,
		0x4E,0x43,0x5F,0x6D,0x61,0x78,0x00,0x01,0x9D,0x21,0x00,0x00,
		0x05,0x03;
	.byte4 = _time_TNC_max;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x31,
		0x48,0x5A,0x5F,0x73,0x79,0x6E,0x63,0x00,0x01,0x9A,0x0B,0x00,
		0x00,0x05,0x03;
	.byte4 = _flag_1HZ_sync;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x53,
		0x54,0x41,0x52,0x54,0x5F,0x70,0x61,0x63,0x68,0x6B,0x61,0x5F,
		0x53,0x49,0x4E,0x54,0x45,0x5A,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _flag_START_pachka_SINTEZ;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x73,
		0x79,0x6E,0x63,0x5F,0x45,0x54,0x48,0x45,0x52,0x4E,0x45,0x54,
		0x5F,0x44,0x49,0x53,0x50,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _flag_sync_ETHERNET_DISP;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x45,0x52,0x52,0x4F,0x52,0x5F,
		0x73,0x63,0x68,0x5F,0x50,0x50,0x49,0x5F,0x77,0x61,0x69,0x74,
		0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _ERROR_sch_PPI_wait;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x4E,0x4F,0x5F,0x6D,0x65,
		0x6D,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TNO_mem;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x4E,0x4F,0x5F,0x77,0x69,
		0x64,0x74,0x68,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TNO_width;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x52,
		0x58,0x5F,0x55,0x44,0x50,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _flag_RX_UDP;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x14,0x46,0x4C,0x41,0x47,0x5F,0x53,
		0x50,0x4F,0x52,0x54,0x31,0x5F,0x54,0x58,0x00,0x01,0x80,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_SPORT1_TX;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4E,0x4F,0x52,0x4D,0x5F,0x50,
		0x49,0x54,0x5F,0x32,0x46,0x54,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _NORM_PIT_2FT;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4E,0x4F,0x52,0x4D,0x5F,0x50,
		0x49,0x54,0x5F,0x31,0x46,0x54,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _NORM_PIT_1FT;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x41,0x56,0x41,0x52,0x49,0x59,
		0x41,0x5F,0x50,0x49,0x54,0x5F,0x31,0x5F,0x46,0x54,0x00,0x01,
		0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _AVARIYA_PIT_1_FT;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x41,0x56,0x41,0x52,0x49,0x59,
		0x41,0x5F,0x50,0x49,0x54,0x5F,0x32,0x5F,0x46,0x54,0x00,0x01,
		0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _AVARIYA_PIT_2_FT;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x52,0x41,0x42,0x5F,0x4B,0x41,
		0x4E,0x5F,0x31,0x46,0x54,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _RAB_KAN_1FT;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x52,0x41,0x42,0x5F,0x4B,0x41,
		0x4E,0x5F,0x32,0x46,0x54,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _RAB_KAN_2FT;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x52,0x41,0x42,0x5F,0x4B,0x41,
		0x4E,0x5F,0x33,0x46,0x54,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _RAB_KAN_3FT;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x52,0x41,0x42,0x5F,0x4B,0x41,
		0x4E,0x5F,0x34,0x46,0x54,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _RAB_KAN_4FT;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x41,0x56,0x41,0x52,0x49,0x59,
		0x41,0x5F,0x4B,0x41,0x4E,0x5F,0x31,0x5F,0x46,0x54,0x00,0x01,
		0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _AVARIYA_KAN_1_FT;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x41,0x56,0x41,0x52,0x49,0x59,
		0x41,0x5F,0x4B,0x41,0x4E,0x5F,0x32,0x5F,0x46,0x54,0x00,0x01,
		0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _AVARIYA_KAN_2_FT;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x41,0x56,0x41,0x52,0x49,0x59,
		0x41,0x5F,0x4B,0x41,0x4E,0x5F,0x33,0x5F,0x46,0x54,0x00,0x01,
		0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _AVARIYA_KAN_3_FT;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x41,0x56,0x41,0x52,0x49,0x59,
		0x41,0x5F,0x4B,0x41,0x4E,0x5F,0x34,0x5F,0x46,0x54,0x00,0x01,
		0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _AVARIYA_KAN_4_FT;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4E,0x4F,0x52,0x4D,0x41,0x5F,
		0x54,0x45,0x4D,0x50,0x5F,0x31,0x55,0x30,0x37,0x46,0x49,0x00,
		0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _NORMA_TEMP_1U07FI;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x41,0x5F,0x31,0x55,0x30,
		0x37,0x5F,0x46,0x49,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _PA_1U07_FI;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x4E,0x43,0x5F,0x73,0x63,
		0x68,0x00,0x01,0xC1,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TNC_sch;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x4E,0x43,0x5F,0x73,0x63,
		0x68,0x5F,0x6D,0x61,0x78,0x00,0x01,0xC1,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _TNC_sch_max;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x43,
		0x4F,0x4E,0x54,0x52,0x4F,0x4C,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _FLAG_CONTROL;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x4B,0x6F,
		0x64,0x5F,0x44,0x63,0x68,0x69,0x00,0x01,0xE8,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _tst_Kod_Dchi;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x4B,0x6F,
		0x64,0x5F,0x44,0x63,0x68,0x67,0x00,0x01,0xE8,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _tst_Kod_Dchg;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x4B,0x6F,
		0x64,0x5F,0x44,0x63,0x68,0x70,0x00,0x01,0xE8,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _tst_Kod_Dchp;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x4B,0x6F,
		0x64,0x5F,0x44,0x63,0x68,0x6B,0x00,0x01,0xE8,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _tst_Kod_Dchk;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x4B,0x6F,
		0x64,0x5F,0x52,0x41,0x4D,0x52,0x54,0x5F,0x66,0x69,0x00,0x01,
		0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _tst_Kod_RAMRT_fi;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x4B,0x6F,
		0x64,0x5F,0x44,0x64,0x65,0x6C,0x74,0x61,0x5F,0x66,0x69,0x00,
		0x01,0x41,0x02,0x00,0x00,0x05,0x03;
	.byte4 = _tst_Kod_Ddelta_fi;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x4B,0x6F,
		0x64,0x5F,0x52,0x41,0x4D,0x52,0x54,0x5F,0x66,0x67,0x00,0x01,
		0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _tst_Kod_RAMRT_fg;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x4B,0x6F,
		0x64,0x5F,0x44,0x64,0x65,0x6C,0x74,0x61,0x5F,0x66,0x67,0x00,
		0x01,0x41,0x02,0x00,0x00,0x05,0x03;
	.byte4 = _tst_Kod_Ddelta_fg;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x4B,0x6F,
		0x64,0x5F,0x52,0x41,0x4D,0x52,0x54,0x5F,0x66,0x70,0x00,0x01,
		0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _tst_Kod_RAMRT_fp;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x4B,0x6F,
		0x64,0x5F,0x44,0x64,0x65,0x6C,0x74,0x61,0x5F,0x66,0x70,0x00,
		0x01,0x41,0x02,0x00,0x00,0x05,0x03;
	.byte4 = _tst_Kod_Ddelta_fp;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x4B,0x6F,
		0x64,0x5F,0x44,0x69,0x69,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _tst_Kod_Dii;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x74,0x73,0x74,0x5F,0x4B,0x6F,
		0x64,0x5F,0x44,0x69,0x70,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _tst_Kod_Dip;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x41,0x56,0x41,0x52,0x49,0x59,
		0x41,0x5F,0x42,0x36,0x31,0x30,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _AVARIYA_B610;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x41,0x56,0x41,0x52,0x49,0x59,
		0x41,0x5F,0x42,0x36,0x36,0x30,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _AVARIYA_B660;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4B,0x46,0x4B,0x5F,0x36,0x31,
		0x30,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _KFK_610;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4B,0x46,0x4B,0x5F,0x36,0x36,
		0x30,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _KFK_660;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x45,0x4D,0x50,0x5F,0x42,
		0x36,0x31,0x30,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TEMP_B610;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x45,0x4D,0x50,0x5F,0x42,
		0x36,0x36,0x30,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TEMP_B660;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x47,0x5F,0x52,0x5A,
		0x56,0x31,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLG_RZV1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x47,0x5F,0x52,0x5A,
		0x56,0x32,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLG_RZV2;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x56,
		0x43,0x55,0x5F,0x54,0x53,0x54,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _FLAG_VCU_TST;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x4D,
		0x55,0x5F,0x54,0x53,0x54,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _FLAG_MU_TST;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x42,
		0x52,0x5F,0x54,0x53,0x54,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _FLAG_BR_TST;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x47,
		0x42,0x52,0x5F,0x54,0x53,0x54,0x00,0x01,0x97,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _FLAG_GBR_TST;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x56,
		0x49,0x4B,0x4C,0x5F,0x54,0x53,0x54,0x00,0x01,0x97,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _FLAG_VIKL_TST;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x42,
		0x4C,0x4F,0x43,0x4B,0x5F,0x54,0x53,0x54,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_BLOCK_TST;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x43,0x48,0x5F,0x45,0x52,
		0x52,0x4F,0x52,0x5F,0x64,0x65,0x6C,0x74,0x61,0x5F,0x54,0x4E,
		0x43,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _SCH_ERROR_delta_TNC;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x43,0x48,0x5F,0x45,0x52,
		0x52,0x4F,0x52,0x5F,0x64,0x65,0x6C,0x74,0x61,0x5F,0x54,0x4E,
		0x43,0x5F,0x6D,0x61,0x78,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _SCH_ERROR_delta_TNC_max;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x43,0x48,0x5F,0x45,0x52,
		0x52,0x4F,0x52,0x5F,0x64,0x65,0x6C,0x74,0x61,0x5F,0x6D,0x69,
		0x6E,0x5F,0x54,0x4E,0x43,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _SCH_ERROR_delta_min_TNC;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x43,0x48,0x5F,0x45,0x52,
		0x52,0x4F,0x52,0x5F,0x64,0x65,0x6C,0x74,0x61,0x5F,0x6D,0x69,
		0x6E,0x5F,0x54,0x4E,0x43,0x5F,0x6D,0x61,0x78,0x00,0x01,0xE8,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _SCH_ERROR_delta_min_TNC_max;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x43,0x48,0x5F,0x45,0x52,
		0x52,0x4F,0x52,0x5F,0x64,0x65,0x6C,0x74,0x61,0x5F,0x6D,0x61,
		0x78,0x5F,0x54,0x4E,0x43,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _SCH_ERROR_delta_max_TNC;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x43,0x48,0x5F,0x45,0x52,
		0x52,0x4F,0x52,0x5F,0x64,0x65,0x6C,0x74,0x61,0x5F,0x6D,0x61,
		0x78,0x5F,0x54,0x4E,0x43,0x5F,0x6D,0x61,0x78,0x00,0x01,0xE8,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _SCH_ERROR_delta_max_TNC_max;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x50,
		0x61,0x63,0x6B,0x65,0x74,0x5F,0x46,0x49,0x4E,0x44,0x00,0x01,
		0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_Packet_FIND;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4C,0x53,0x52,0x5A,0x56,0x00,
		0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _LSRZV;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x49,0x4D,0x45,0x52,0x5F,
		0x46,0x49,0x4E,0x44,0x45,0x52,0x00,0x01,0x9D,0x21,0x00,0x00,
		0x05,0x03;
	.byte4 = _TIMER_FINDER;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x49,0x4D,0x45,0x5F,0x4F,
		0x46,0x5F,0x53,0x59,0x53,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _TIME_OF_SYS;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x49,0x4D,0x45,0x5F,0x4F,
		0x46,0x5F,0x54,0x4E,0x4F,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _TIME_OF_TNO;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x52,0x58,0x5F,0x72,0x65,0x73,
		0x69,0x76,0x65,0x5F,0x4D,0x41,0x58,0x00,0x01,0xE8,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _RX_resive_MAX;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4E,0x55,0x4D,0x42,0x45,0x52,
		0x5F,0x42,0x4C,0x4F,0x4B,0x00,0x01,0x97,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _NUMBER_BLOK;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x14,0x52,0x53,0x34,0x38,0x35,0x00,
		0x01,0x9A,0x0B,0x00,0x00,0x05,0x03;
	.byte4 = _RS485;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x74,0x72,0x75,0x6B,0x30,
		0x00,0x01,0x55,0x17,0x00,0x00,0x05,0x03;
	.byte4 = _Struk0;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x53,0x74,0x72,0x75,0x6B,0x52,
		0x45,0x5A,0x00,0x01,0x55,0x17,0x00,0x00,0x05,0x03;
	.byte4 = _StrukREZ;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4D,0x65,0x6D,0x31,0x00,0x01,
		0x65,0x12,0x00,0x00,0x05,0x03;
	.byte4 = _Mem1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4D,0x65,0x6D,0x5F,0x73,0x79,
		0x73,0x00,0x01,0x45,0x13,0x00,0x00,0x05,0x03;
	.byte4 = _Mem_sys;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4D,0x65,0x6D,0x5F,0x4B,0x36,
		0x31,0x35,0x00,0x01,0xA8,0x14,0x00,0x00,0x05,0x03;
	.byte4 = _Mem_K615;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x6B,0x74,0x00,0x01,0x49,
		0x84,0x00,0x00,0x05,0x03;
	.byte4 = _Pkt;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x50,0x6B,0x74,0x5F,0x30,0x00,
		0x01,0x3B,0x84,0x00,0x00,0x05,0x03;
	.byte4 = _Pkt_0;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x69,0x6E,0x64,0x65,0x78,0x5F,
		0x77,0x72,0x5F,0x6F,0x6C,0x64,0x00,0x01,0x9D,0x21,0x00,0x00,
		0x05,0x03;
	.byte4 = _index_wr_old;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x69,0x6E,0x64,0x65,0x78,0x5F,
		0x77,0x72,0x00,0x01,0x9D,0x21,0x00,0x00,0x05,0x03;
	.byte4 = _index_wr;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x69,0x6E,0x64,0x65,0x78,0x5F,
		0x72,0x64,0x00,0x01,0x9D,0x21,0x00,0x00,0x05,0x03;
	.byte4 = _index_rd;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x70,
		0x61,0x63,0x6B,0x65,0x74,0x5F,0x4F,0x4B,0x5F,0x66,0x6F,0x72,
		0x5F,0x72,0x65,0x61,0x64,0x00,0x01,0x80,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _flag_packet_OK_for_read;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x4E,0x43,0x5F,0x61,0x63,
		0x74,0x75,0x61,0x6C,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TNC_actual;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x4E,0x4F,0x5F,0x61,0x63,
		0x74,0x75,0x61,0x6C,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TNO_actual;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x43,0x45,0x56,0x5F,0x61,0x63,
		0x74,0x75,0x61,0x6C,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _CEV_actual;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x4E,0x43,0x5F,0x7A,0x61,
		0x64,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TNC_zad;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x4E,0x4F,0x5F,0x7A,0x61,
		0x64,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TNO_zad;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x43,0x45,0x56,0x5F,0x7A,0x61,
		0x64,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _CEV_zad;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x4C,0x41,0x47,0x5F,0x45,
		0x58,0x54,0x52,0x41,0x5F,0x50,0x41,0x43,0x4B,0x45,0x54,0x00,
		0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_EXTRA_PACKET;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x69,0x6D,0x65,0x5F,0x50,
		0x72,0x65,0x73,0x65,0x74,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _Time_Preset;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x64,
		0x73,0x70,0x5F,0x6F,0x6B,0x00,0x01,0x9A,0x0B,0x00,0x00,0x05,
		0x03;
	.byte4 = _flag_dsp_ok;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x73,
		0x79,0x6E,0x63,0x5F,0x45,0x54,0x48,0x45,0x52,0x4E,0x45,0x54,
		0x00,0x01,0x80,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _flag_sync_ETHERNET;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x46,0x5F,0x69,0x7A,0x6C,0x00,
		0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _F_izl;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x64,0x65,0x6C,0x74,0x61,0x5F,
		0x46,0x5F,0x69,0x7A,0x6C,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,
		0x03;
	.byte4 = _delta_F_izl;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x65,
		0x72,0x72,0x6F,0x72,0x5F,0x66,0x69,0x7A,0x6C,0x00,0x01,0x97,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _flag_error_fizl;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x65,
		0x72,0x72,0x6F,0x72,0x5F,0x6B,0x36,0x31,0x35,0x00,0x01,0x97,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _flag_error_k615;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x66,0x6C,0x61,0x67,0x5F,0x65,
		0x72,0x72,0x6F,0x72,0x5F,0x66,0x6F,0x63,0x68,0x00,0x01,0x97,
		0x01,0x00,0x00,0x05,0x03;
	.byte4 = _flag_error_foch;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4B,0x36,0x31,0x31,0x00,0x01,
		0x30,0x18,0x00,0x00,0x05,0x03;
	.byte4 = _K611;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4B,0x36,0x31,0x32,0x00,0x01,
		0x30,0x18,0x00,0x00,0x05,0x03;
	.byte4 = _K612;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4B,0x36,0x31,0x33,0x00,0x01,
		0x30,0x18,0x00,0x00,0x05,0x03;
	.byte4 = _K613;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4B,0x36,0x31,0x34,0x00,0x01,
		0x30,0x18,0x00,0x00,0x05,0x03;
	.byte4 = _K614;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x4B,0x36,0x31,0x35,0x00,0x01,
		0x30,0x18,0x00,0x00,0x05,0x03;
	.byte4 = _K615;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x42,0x36,0x31,0x30,0x00,0x01,
		0x30,0x18,0x00,0x00,0x05,0x03;
	.byte4 = _B610;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x43,0x5F,0x74,0x5F,0x64,0x61,
		0x79,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _C_t_day;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x43,0x5F,0x74,0x5F,0x68,0x6F,
		0x75,0x72,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _C_t_hour;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x43,0x5F,0x74,0x5F,0x6D,0x69,
		0x6E,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _C_t_min;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x43,0x5F,0x74,0x5F,0x73,0x65,
		0x63,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _C_t_sec;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x43,0x5F,0x74,0x5F,0x6D,0x73,
		0x00,0x01,0xC1,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _C_t_ms;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x43,0x5F,0x74,0x5F,0x75,0x73,
		0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _C_t_us;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x43,0x5F,0x74,0x5F,0x64,0x61,
		0x79,0x58,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _C_t_dayX;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x43,0x5F,0x74,0x5F,0x68,0x6F,
		0x75,0x72,0x58,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _C_t_hourX;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x43,0x5F,0x74,0x5F,0x6D,0x69,
		0x6E,0x58,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _C_t_minX;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x43,0x5F,0x74,0x5F,0x73,0x65,
		0x63,0x58,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _C_t_secX;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x43,0x5F,0x74,0x5F,0x6D,0x73,
		0x58,0x00,0x01,0xC1,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _C_t_msX;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x43,0x5F,0x74,0x5F,0x75,0x73,
		0x58,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _C_t_usX;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x63,0x72,0x63,0x5F,0x6F,0x75,
		0x74,0x70,0x6F,0x72,0x74,0x00,0x01,0x2D,0x84,0x00,0x00,0x05,
		0x03;
	.byte4 = _crc_outport;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x74,0x72,0x5F,0x63,0x6F,
		0x6D,0x6D,0x61,0x6E,0x64,0x00,0x01,0x1F,0x84,0x00,0x00,0x05,
		0x03;
	.byte4 = _str_command;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x61,0x00,0x01,0x0F,0x84,0x00,
		0x00,0x05,0x03;
	.byte4 = _a;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x7A,0x00,0x01,0xFF,0x83,0x00,
		0x00,0x05,0x03;
	.byte4 = _z;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x62,0x75,0x66,0x5F,0x44,0x4D,
		0x41,0x5F,0x75,0x61,0x72,0x74,0x00,0x01,0xEF,0x83,0x00,0x00,
		0x05,0x03;
	.byte4 = _buf_DMA_uart;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x54,0x45,0x53,0x54,0x5F,0x54,
		0x4B,0x49,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TEST_TKI;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x73,0x63,0x68,0x5F,0x49,0x4E,
		0x54,0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _sch_INT;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x14,0x6D,0x7A,0x5F,0x72,0x7A,0x76,
		0x00,0x01,0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _mz_rzv;
	.inc/binary ".\Release\main.sbn", 6824, 436;
.epcdebug.end:

	.section .debug_line SHT_DEBUGINFO;

	.align 1;
.epcline:
	.type .epcline,STT_OBJECT;
	.inc/binary ".\Release\main.sbn", 7260, 821;
	.byte4 = .LN_IND_DFK;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xF5,0xC3,0x00,0x01,0x00,0x05,0x02;
	.byte4 = .LN0;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN._IND_DFK.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_UDP_TIMEOUT_TST;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xCE,0x3F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2;
	.byte =
		0x05,0x01,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4;
	.byte =
		0x05,0x05,0x0D,0x00,0x05,0x02;
	.byte4 = .LN5;
	.byte =
		0x05,0x08,0x0F,0x00,0x05,0x02;
	.byte4 = .LN6;
	.byte =
		0x05,0x05,0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN7;
	.byte =
		0x05,0x01,0x11,0x00,0x05,0x02;
	.byte4 = .LN._UDP_TIMEOUT_TST.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_Event_Synhron_func;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xF7,0x3D,0x01,0x00,0x05,0x02;
	.byte4 = .LN8;
	.byte =
		0x05,0x02,0x0C,0x00,0x05,0x02;
	.byte4 = .LN9;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN10;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN11;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN12;
	.byte =
		0x05,0x34,0x01,0x00,0x05,0x02;
	.byte4 = .LN13;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._Event_Synhron_func.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_INF_K607;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xBD,0x3D,0x01,0x00,0x05,0x02;
	.byte4 = .LN14;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN15;
	.byte =
		0x05,0x03,0x0F,0x00,0x05,0x02;
	.byte4 = .LN16;
	.byte =
		0x05,0x01,0x0C,0x00,0x05,0x02;
	.byte4 = .LN._INF_K607.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_Info_back_Ethernet;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xC2,0x37,0x01,0x00,0x05,0x02;
	.byte4 = .LN17;
	.byte =
		0x05,0x03,0x11,0x00,0x05,0x02;
	.byte4 = .LN18;
	.byte =
		0x05,0x02,0x57,0x00,0x05,0x02;
	.byte4 = .LN19;
	.byte =
		0x05,0x03,0x03,0xB4,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN20;
	.byte =
		0x05,0x02,0x55,0x00,0x05,0x02;
	.byte4 = .LN21;
	.byte =
		0x05,0x03,0x03,0xB4,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN22;
	.byte =
		0x05,0x02,0x55,0x00,0x05,0x02;
	.byte4 = .LN23;
	.byte =
		0x05,0x03,0x03,0xB5,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN24;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN25;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN26;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN27;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN28;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN29;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN30;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN31;
	.byte =
		0x03,0x73,0x01,0x00,0x05,0x02;
	.byte4 = .LN32;
	.byte =
		0x17,0x00,0x05,0x02;
	.byte4 = .LN33;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN34;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN35;
	.byte =
		0x03,0x6E,0x01,0x00,0x05,0x02;
	.byte4 = .LN36;
	.byte =
		0x1D,0x00,0x05,0x02;
	.byte4 = .LN37;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN38;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN39;
	.byte =
		0x05,0x01,0x1A,0x00,0x05,0x02;
	.byte4 = .LN40;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN41;
	.byte =
		0x05,0x03,0x03,0x6F,0x01,0x00,0x05,0x02;
	.byte4 = .LN42;
	.byte =
		0x05,0x01,0x19,0x00,0x05,0x02;
	.byte4 = .LN43;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN44;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN45;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN46;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN47;
	.byte =
		0x05,0x01,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN48;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN49;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN50;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN51;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN52;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN53;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN54;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN55;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN56;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN57;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN58;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN59;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN60;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN61;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN62;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN63;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN64;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN65;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN66;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN67;
	.byte =
		0x05,0x02,0x12,0x00,0x05,0x02;
	.byte4 = .LN68;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN69;
	.byte =
		0x05,0x03,0x03,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN70;
	.byte =
		0x05,0x02,0x29,0x00,0x05,0x02;
	.byte4 = .LN71;
	.byte =
		0x05,0x05,0x03,0x6B,0x01,0x00,0x05,0x02;
	.byte4 = .LN72;
	.byte =
		0x05,0x02,0x1E,0x00,0x05,0x02;
	.byte4 = .LN73;
	.byte =
		0x05,0x05,0x03,0x62,0x01,0x00,0x05,0x02;
	.byte4 = .LN74;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN75;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN76;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN77;
	.byte =
		0x05,0x02,0x21,0x00,0x05,0x02;
	.byte4 = .LN78;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN79;
	.byte =
		0x05,0x27,0x03,0x6A,0x01,0x00,0x05,0x02;
	.byte4 = .LN80;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN81;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN82;
	.byte =
		0x05,0x02,0x1E,0x00,0x05,0x02;
	.byte4 = .LN83;
	.byte =
		0x05,0x12,0x0F,0x00,0x05,0x02;
	.byte4 = .LN84;
	.byte =
		0x05,0x23,0x01,0x00,0x05,0x02;
	.byte4 = .LN85;
	.byte =
		0x05,0x02,0x0D,0x00,0x05,0x02;
	.byte4 = .LN86;
	.byte =
		0x12,0x00,0x05,0x02;
	.byte4 = .LN87;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN88;
	.byte =
		0x05,0x02,0x0D,0x00,0x05,0x02;
	.byte4 = .LN89;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN90;
	.byte =
		0x16,0x00,0x05,0x02;
	.byte4 = .LN91;
	.byte =
		0x03,0x73,0x01,0x00,0x05,0x02;
	.byte4 = .LN92;
	.byte =
		0x13,0x00,0x05,0x02;
	.byte4 = .LN93;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN94;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN95;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN96;
	.byte =
		0x05,0x02,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN97;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN98;
	.byte =
		0x05,0x03,0x11,0x00,0x05,0x02;
	.byte4 = .LN99;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN100;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN101;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN102;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN103;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN104;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN105;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN106;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN107;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN108;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN109;
	.byte =
		0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN110;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN111;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN112;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN113;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN114;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN115;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN116;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN117;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN118;
	.byte =
		0x3B,0x00,0x05,0x02;
	.byte4 = .LN119;
	.byte =
		0x03,0x6C,0x01,0x00,0x05,0x02;
	.byte4 = .LN120;
	.byte =
		0x1D,0x00,0x05,0x02;
	.byte4 = .LN121;
	.byte =
		0x03,0x4E,0x01,0x00,0x05,0x02;
	.byte4 = .LN122;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN123;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN124;
	.byte =
		0x27,0x00,0x05,0x02;
	.byte4 = .LN125;
	.byte =
		0x15,0x00,0x05,0x02;
	.byte4 = .LN126;
	.byte =
		0x03,0x74,0x01,0x00,0x05,0x02;
	.byte4 = .LN127;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN128;
	.byte =
		0x11,0x00,0x05,0x02;
	.byte4 = .LN129;
	.byte =
		0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN130;
	.byte =
		0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN131;
	.byte =
		0x2D,0x00,0x05,0x02;
	.byte4 = .LN132;
	.byte =
		0x03,0x5C,0x01,0x00,0x05,0x02;
	.byte4 = .LN133;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN134;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN135;
	.byte =
		0x29,0x00,0x05,0x02;
	.byte4 = .LN136;
	.byte =
		0x03,0x62,0x01,0x00,0x05,0x02;
	.byte4 = .LN137;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN138;
	.byte =
		0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN139;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN140;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN141;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN142;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN143;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN144;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN145;
	.byte =
		0x19,0x00,0x05,0x02;
	.byte4 = .LN146;
	.byte =
		0x03,0x70,0x01,0x00,0x05,0x02;
	.byte4 = .LN147;
	.byte =
		0x19,0x00,0x05,0x02;
	.byte4 = .LN148;
	.byte =
		0x03,0x72,0x01,0x00,0x05,0x02;
	.byte4 = .LN149;
	.byte =
		0x17,0x00,0x05,0x02;
	.byte4 = .LN150;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN151;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN152;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN153;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN154;
	.byte =
		0x03,0x71,0x01,0x00,0x05,0x02;
	.byte4 = .LN155;
	.byte =
		0x19,0x00,0x05,0x02;
	.byte4 = .LN156;
	.byte =
		0x03,0x72,0x01,0x00,0x05,0x02;
	.byte4 = .LN157;
	.byte =
		0x18,0x00,0x05,0x02;
	.byte4 = .LN158;
	.byte =
		0x03,0x73,0x01,0x00,0x05,0x02;
	.byte4 = .LN159;
	.byte =
		0x17,0x00,0x05,0x02;
	.byte4 = .LN160;
	.byte =
		0x03,0x74,0x01,0x00,0x05,0x02;
	.byte4 = .LN161;
	.byte =
		0x16,0x00,0x05,0x02;
	.byte4 = .LN162;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN163;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN164;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN165;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN166;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN167;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN168;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN169;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN170;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN171;
	.byte =
		0x1A,0x00,0x05,0x02;
	.byte4 = .LN172;
	.byte =
		0x05,0x0E,0x01,0x00,0x05,0x02;
	.byte4 = .LN173;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN174;
	.byte =
		0x05,0x0E,0x01,0x00,0x05,0x02;
	.byte4 = .LN175;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN176;
	.byte =
		0x05,0x0E,0x01,0x00,0x05,0x02;
	.byte4 = .LN177;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN178;
	.byte =
		0x05,0x0E,0x01,0x00,0x05,0x02;
	.byte4 = .LN179;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN180;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN181;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN182;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN183;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN184;
	.byte =
		0x05,0x03,0x03,0x72,0x01,0x00,0x05,0x02;
	.byte4 = .LN185;
	.byte =
		0x05,0x0F,0x29,0x00,0x05,0x02;
	.byte4 = .LN186;
	.byte =
		0x05,0x04,0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN187;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN188;
	.byte =
		0x05,0x0F,0x01,0x00,0x05,0x02;
	.byte4 = .LN189;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN190;
	.byte =
		0x05,0x0F,0x01,0x00,0x05,0x02;
	.byte4 = .LN191;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN192;
	.byte =
		0x05,0x0F,0x01,0x00,0x05,0x02;
	.byte4 = .LN193;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN194;
	.byte =
		0x05,0x0F,0x01,0x00,0x05,0x02;
	.byte4 = .LN195;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN196;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN197;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN198;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN199;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN200;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN201;
	.byte =
		0x05,0x03,0x03,0x6F,0x01,0x00,0x05,0x02;
	.byte4 = .LN202;
	.byte =
		0x05,0x02,0x1F,0x00,0x05,0x02;
	.byte4 = .LN._Info_back_Ethernet.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_CEV_rcv;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xD7,0x36,0x01,0x00,0x05,0x02;
	.byte4 = .LN203;
	.byte =
		0x05,0x05,0x0F,0x00,0x05,0x02;
	.byte4 = .LN204;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN205;
	.byte =
		0x05,0x05,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN206;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._CEV_rcv.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_TNC_rcv;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0x9F,0x36,0x01,0x00,0x05,0x02;
	.byte4 = .LN207;
	.byte =
		0x05,0x02,0x0F,0x00,0x05,0x02;
	.byte4 = .LN208;
	.byte =
		0x05,0x01,0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN209;
	.byte =
		0x05,0x02,0x0F,0x00,0x05,0x02;
	.byte4 = .LN210;
	.byte =
		0x05,0x01,0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN211;
	.byte =
		0x05,0x05,0x11,0x00,0x05,0x02;
	.byte4 = .LN212;
	.byte =
		0x05,0x11,0x0B,0x00,0x05,0x02;
	.byte4 = .LN213;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN214;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN215;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN216;
	.byte =
		0x05,0x02,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN217;
	.byte =
		0x05,0x0B,0x13,0x00,0x05,0x02;
	.byte4 = .LN218;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN219;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN220;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN221;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN222;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN223;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN224;
	.byte =
		0x05,0x03,0x03,0x77,0x01,0x00,0x05,0x02;
	.byte4 = .LN225;
	.byte =
		0x05,0x05,0x18,0x00,0x05,0x02;
	.byte4 = .LN226;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN227;
	.byte =
		0x05,0x05,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN228;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._TNC_rcv.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_TIME_coder;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0x98,0x36,0x01,0x00,0x05,0x02;
	.byte4 = .LN229;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN._TIME_coder.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_Wait_PPI;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0x83,0x2C,0x01,0x00,0x05,0x02;
	.byte4 = .LN230;
	.byte =
		0x05,0x04,0x0D,0x00,0x05,0x02;
	.byte4 = .LN._Wait_PPI.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_Str_print;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xDF,0x2B,0x01,0x00,0x05,0x02;
	.byte4 = .LN231;
	.byte =
		0x2A,0x00,0x05,0x02;
	.byte4 = .LN._Str_print.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_packet_UPR;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xC7,0x28,0x01,0x00,0x05,0x02;
	.byte4 = .LN232;
	.byte =
		0x05,0x0A,0x12,0x00,0x05,0x02;
	.byte4 = .LN233;
	.byte =
		0x05,0x01,0x03,0x77,0x01,0x00,0x05,0x02;
	.byte4 = .LN234;
	.byte =
		0x05,0x0A,0x12,0x00,0x05,0x02;
	.byte4 = .LN235;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN236;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN237;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN238;
	.byte =
		0x05,0x01,0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN239;
	.byte =
		0x05,0x07,0x14,0x00,0x05,0x02;
	.byte4 = .LN240;
	.byte =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.byte4 = .LN241;
	.byte =
		0x05,0x07,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN242;
	.byte =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.byte4 = .LN243;
	.byte =
		0x05,0x07,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN244;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN245;
	.byte =
		0x05,0x07,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN246;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN247;
	.byte =
		0x05,0x07,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN248;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN249;
	.byte =
		0x05,0x26,0x01,0x00,0x05,0x02;
	.byte4 = .LN250;
	.byte =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.byte4 = .LN251;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN252;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN253;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN254;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN255;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN256;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN257;
	.byte =
		0x05,0x04,0x0D,0x00,0x05,0x02;
	.byte4 = .LN258;
	.byte =
		0x05,0x07,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN259;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN260;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN261;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN262;
	.byte =
		0x05,0x26,0x01,0x00,0x05,0x02;
	.byte4 = .LN263;
	.byte =
		0x05,0x07,0x0C,0x00,0x05,0x02;
	.byte4 = .LN264;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN265;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN266;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN267;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN268;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN269;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN270;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._packet_UPR.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_DEV_comp_tst;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xA4,0x27,0x01,0x00,0x05,0x02;
	.byte4 = .LN271;
	.byte =
		0x05,0x03,0x0E,0x00,0x05,0x02;
	.byte4 = .LN272;
	.byte =
		0x05,0x01,0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN273;
	.byte =
		0x05,0x03,0x0E,0x00,0x05,0x02;
	.byte4 = .LN274;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN275;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN276;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN277;
	.byte =
		0x05,0x1B,0x01,0x00,0x05,0x02;
	.byte4 = .LN278;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._DEV_comp_tst.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_F_comp_tst;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0x96,0x27,0x01,0x00,0x05,0x02;
	.byte4 = .LN279;
	.byte =
		0x05,0x02,0x0E,0x00,0x05,0x02;
	.byte4 = .LN280;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN281;
	.byte =
		0x05,0x01,0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN282;
	.byte =
		0x05,0x02,0x11,0x00,0x05,0x02;
	.byte4 = .LN283;
	.byte =
		0x05,0x16,0x01,0x00,0x05,0x02;
	.byte4 = .LN284;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._F_comp_tst.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_Time_SEV_INF;
	.byte =
		0x04,0x01,0x05,0x02,0x03,0xDF,0x25,0x01,0x00,0x05,0x02;
	.byte4 = .LN285;
	.byte =
		0x15,0x00,0x05,0x02;
	.byte4 = .LN286;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN287;
	.byte =
		0x13,0x00,0x05,0x02;
	.byte4 = .LN288;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN289;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN290;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN291;
	.byte =
		0x05,0x02,0x0E,0x00,0x05,0x02;
	.byte4 = .LN._Time_SEV_INF.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_ZUTransf;
	.byte =
		0x04,0x01,0x05,0x02,0x03,0xC5,0x25,0x01,0x00,0x05,0x02;
	.byte4 = .LN292;
	.byte =
		0x05,0x0B,0x0D,0x00,0x05,0x02;
	.byte4 = .LN293;
	.byte =
		0x05,0x02,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN294;
	.byte =
		0x05,0x0B,0x0D,0x00,0x05,0x02;
	.byte4 = .LN295;
	.byte =
		0x05,0x2B,0x0C,0x00,0x05,0x02;
	.byte4 = .LN296;
	.byte =
		0x05,0x04,0x01,0x00,0x05,0x02;
	.byte4 = .LN297;
	.byte =
		0x05,0x07,0x0D,0x00,0x05,0x02;
	.byte4 = .LN298;
	.byte =
		0x05,0x02,0x03,0x75,0x01,0x00,0x05,0x02;
	.byte4 = .LN299;
	.byte =
		0x05,0x06,0x0F,0x00,0x05,0x02;
	.byte4 = .LN300;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN301;
	.byte =
		0x05,0x2B,0x01,0x00,0x05,0x02;
	.byte4 = .LN302;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN303;
	.byte =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.byte4 = .LN304;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN305;
	.byte =
		0x05,0x0B,0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN306;
	.byte =
		0x05,0x02,0x14,0x00,0x05,0x02;
	.byte4 = .LN._ZUTransf.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_ZTransf;
	.byte =
		0x04,0x01,0x05,0x02,0x03,0xB2,0x25,0x01,0x00,0x05,0x02;
	.byte4 = .LN307;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN308;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN309;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN310;
	.byte =
		0x05,0x2B,0x0C,0x00,0x05,0x02;
	.byte4 = .LN311;
	.byte =
		0x05,0x04,0x01,0x00,0x05,0x02;
	.byte4 = .LN312;
	.byte =
		0x05,0x07,0x0D,0x00,0x05,0x02;
	.byte4 = .LN313;
	.byte =
		0x05,0x02,0x03,0x74,0x01,0x00,0x05,0x02;
	.byte4 = .LN314;
	.byte =
		0x05,0x06,0x10,0x00,0x05,0x02;
	.byte4 = .LN315;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN316;
	.byte =
		0x05,0x2B,0x01,0x00,0x05,0x02;
	.byte4 = .LN317;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN318;
	.byte =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.byte4 = .LN319;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN320;
	.byte =
		0x05,0x02,0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN321;
	.byte =
		0x14,0x00,0x05,0x02;
	.byte4 = .LN._ZTransf.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_leng;
	.byte =
		0x04,0x01,0x05,0x03,0x03,0x96,0x24,0x01,0x00,0x05,0x02;
	.byte4 = .LN322;
	.byte =
		0x05,0x06,0x0C,0x00,0x05,0x02;
	.byte4 = .LN323;
	.byte =
		0x05,0x26,0x01,0x00,0x05,0x02;
	.byte4 = .LN324;
	.byte =
		0x05,0x06,0x01,0x00,0x05,0x02;
	.byte4 = .LN325;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN._leng.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_zputs;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0x86,0x24,0x01,0x00,0x05,0x02;
	.byte4 = .LN326;
	.byte =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.byte4 = .LN327;
	.byte =
		0x05,0x01,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN328;
	.byte =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.byte4 = .LN329;
	.byte =
		0x05,0x01,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN330;
	.byte =
		0x05,0x09,0x0C,0x00,0x05,0x02;
	.byte4 = .LN331;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN332;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN333;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN334;
	.byte =
		0x05,0x07,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN335;
	.byte =
		0x05,0x01,0x11,0x00,0x05,0x02;
	.byte4 = .LN._zputs.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_getchar0;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xCB,0x23,0x01,0x00,0x05,0x02;
	.byte4 = .LN336;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN337;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN338;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN339;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN340;
	.byte =
		0x05,0x2A,0x01,0x00,0x05,0x02;
	.byte4 = .LN341;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN342;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._getchar0.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_txchar2;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xC0,0x23,0x01,0x00,0x05,0x02;
	.byte4 = .LN343;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN344;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN345;
	.byte =
		0x05,0x2A,0x01,0x00,0x05,0x02;
	.byte4 = .LN346;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN347;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._txchar2.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_txchar0;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xB6,0x23,0x01,0x00,0x05,0x02;
	.byte4 = .LN348;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN349;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN350;
	.byte =
		0x05,0x2A,0x01,0x00,0x05,0x02;
	.byte4 = .LN351;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN352;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._txchar0.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_func_event_RZV;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xAB,0x23,0x01,0x00,0x05,0x02;
	.byte4 = .LN353;
	.byte =
		0x10,0x00,0x05,0x02;
	.byte4 = .LN._func_event_RZV.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_func_event_k615;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0x9C,0x23,0x01,0x00,0x05,0x02;
	.byte4 = .LN354;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN355;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN356;
	.byte =
		0x05,0x0B,0x0B,0x00,0x05,0x02;
	.byte4 = .LN357;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN358;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN359;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN360;
	.byte =
		0x05,0x02,0x0D,0x00,0x05,0x02;
	.byte4 = .LN361;
	.byte =
		0x05,0x0B,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN362;
	.byte =
		0x05,0x39,0x01,0x00,0x05,0x02;
	.byte4 = .LN._func_event_k615.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_SDRAM_work;
	.byte =
		0x04,0x01,0x05,0x02,0x03,0xD1,0x1F,0x01,0x00,0x05,0x02;
	.byte4 = .LN363;
	.byte =
		0x05,0x04,0x01,0x00,0x05,0x02;
	.byte4 = .LN._SDRAM_work.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_Time_real;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xF2,0x1D,0x01,0x00,0x05,0x02;
	.byte4 = .LN364;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN365;
	.byte =
		0x05,0x02,0x0C,0x00,0x05,0x02;
	.byte4 = .LN366;
	.byte =
		0x05,0x03,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN367;
	.byte =
		0x05,0x02,0x0C,0x00,0x05,0x02;
	.byte4 = .LN._Time_real.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_Timer_INT2;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xDC,0x1D,0x01,0x00,0x05,0x02;
	.byte4 = .LN368;
	.byte =
		0x05,0x03,0x0E,0x00,0x05,0x02;
	.byte4 = .LN369;
	.byte =
		0x05,0x01,0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN370;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN371;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN372;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN373;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN374;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN375;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN376;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN377;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN378;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN379;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN380;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._Timer_INT2.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_tst_SPI_BUF;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xD6,0x1D,0x01,0x00,0x05,0x02;
	.byte4 = .LN381;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN._tst_SPI_BUF.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_MENU;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0x9E,0x16,0x01,0x00,0x05,0x02;
	.byte4 = .LN382;
	.byte =
		0x24,0x00,0x05,0x02;
	.byte4 = .LN._MENU.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_FT_control;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xBB,0x13,0x01,0x00,0x05,0x02;
	.byte4 = .LN383;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN384;
	.byte =
		0x05,0x02,0x0C,0x00,0x05,0x02;
	.byte4 = .LN385;
	.byte =
		0x05,0x03,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN386;
	.byte =
		0x05,0x02,0x17,0x00,0x05,0x02;
	.byte4 = .LN387;
	.byte =
		0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN388;
	.byte =
		0x13,0x00,0x05,0x02;
	.byte4 = .LN389;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN390;
	.byte =
		0x03,0x70,0x01,0x00,0x05,0x02;
	.byte4 = .LN391;
	.byte =
		0x05,0x03,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN392;
	.byte =
		0x05,0x02,0x19,0x00,0x05,0x02;
	.byte4 = .LN393;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN394;
	.byte =
		0x03,0x6E,0x01,0x00,0x05,0x02;
	.byte4 = .LN395;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN396;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN397;
	.byte =
		0x1D,0x00,0x05,0x02;
	.byte4 = .LN398;
	.byte =
		0x03,0x6F,0x01,0x00,0x05,0x02;
	.byte4 = .LN399;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN400;
	.byte =
		0x11,0x00,0x05,0x02;
	.byte4 = .LN401;
	.byte =
		0x13,0x00,0x05,0x02;
	.byte4 = .LN402;
	.byte =
		0x03,0x6F,0x01,0x00,0x05,0x02;
	.byte4 = .LN403;
	.byte =
		0x1A,0x00,0x05,0x02;
	.byte4 = .LN404;
	.byte =
		0x03,0x71,0x01,0x00,0x05,0x02;
	.byte4 = .LN405;
	.byte =
		0x18,0x00,0x05,0x02;
	.byte4 = .LN406;
	.byte =
		0x03,0x74,0x01,0x00,0x05,0x02;
	.byte4 = .LN407;
	.byte =
		0x13,0x00,0x05,0x02;
	.byte4 = .LN408;
	.byte =
		0x03,0x73,0x01,0x00,0x05,0x02;
	.byte4 = .LN409;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN410;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN411;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN412;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN413;
	.byte =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN414;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN415;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN416;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN417;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN418;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN419;
	.byte =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN420;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN421;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN422;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN423;
	.byte =
		0x18,0x00,0x05,0x02;
	.byte4 = .LN424;
	.byte =
		0x03,0x72,0x01,0x00,0x05,0x02;
	.byte4 = .LN425;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN426;
	.byte =
		0x16,0x00,0x05,0x02;
	.byte4 = .LN427;
	.byte =
		0x03,0x73,0x01,0x00,0x05,0x02;
	.byte4 = .LN428;
	.byte =
		0x16,0x00,0x05,0x02;
	.byte4 = .LN429;
	.byte =
		0x03,0x74,0x01,0x00,0x05,0x02;
	.byte4 = .LN430;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN431;
	.byte =
		0x13,0x00,0x05,0x02;
	.byte4 = .LN432;
	.byte =
		0x03,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN433;
	.byte =
		0x13,0x00,0x05,0x02;
	.byte4 = .LN434;
	.byte =
		0x03,0x77,0x01,0x00,0x05,0x02;
	.byte4 = .LN435;
	.byte =
		0x12,0x00,0x05,0x02;
	.byte4 = .LN436;
	.byte =
		0x03,0x77,0x01,0x00,0x05,0x02;
	.byte4 = .LN437;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN438;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN439;
	.byte =
		0x05,0x01,0x14,0x00,0x05,0x02;
	.byte4 = .LN440;
	.byte =
		0x05,0x02,0x03,0x70,0x01,0x00,0x05,0x02;
	.byte4 = .LN441;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN442;
	.byte =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN443;
	.byte =
		0x05,0x01,0x1B,0x00,0x05,0x02;
	.byte4 = .LN444;
	.byte =
		0x05,0x02,0x03,0x70,0x01,0x00,0x05,0x02;
	.byte4 = .LN445;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN446;
	.byte =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN447;
	.byte =
		0x05,0x01,0x1B,0x00,0x05,0x02;
	.byte4 = .LN448;
	.byte =
		0x05,0x1A,0x01,0x00,0x05,0x02;
	.byte4 = .LN449;
	.byte =
		0x05,0x2C,0x01,0x00,0x05,0x02;
	.byte4 = .LN450;
	.byte =
		0x05,0x43,0x01,0x00,0x05,0x02;
	.byte4 = .LN451;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN452;
	.byte =
		0x05,0x17,0x01,0x00,0x05,0x02;
	.byte4 = .LN453;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN454;
	.byte =
		0x05,0x1A,0x01,0x00,0x05,0x02;
	.byte4 = .LN455;
	.byte =
		0x05,0x2C,0x01,0x00,0x05,0x02;
	.byte4 = .LN456;
	.byte =
		0x05,0x41,0x01,0x00,0x05,0x02;
	.byte4 = .LN457;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN458;
	.byte =
		0x05,0x17,0x01,0x00,0x05,0x02;
	.byte4 = .LN459;
	.byte =
		0x05,0x01,0x0E,0x00,0x05,0x02;
	.byte4 = .LN._FT_control.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_BUF_clear;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xE6,0x12,0x01,0x00,0x05,0x02;
	.byte4 = .LN460;
	.byte =
		0x05,0x08,0x10,0x00,0x05,0x02;
	.byte4 = .LN461;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN462;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN463;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN464;
	.byte =
		0x05,0x0C,0x0D,0x00,0x05,0x02;
	.byte4 = .LN465;
	.byte =
		0x05,0x09,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN466;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN467;
	.byte =
		0x05,0x08,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN468;
	.byte =
		0x05,0x01,0x0D,0x00,0x05,0x02;
	.byte4 = .LN._BUF_clear.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_spi_cs;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xB2,0x0F,0x01,0x00,0x05,0x02;
	.byte4 = .LN469;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN470;
	.byte =
		0x05,0x01,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN471;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN472;
	.byte =
		0x05,0x0A,0x0C,0x00,0x05,0x02;
	.byte4 = .LN473;
	.byte =
		0x05,0x01,0x0F,0x00,0x05,0x02;
	.byte4 = .LN474;
	.byte =
		0x05,0x0A,0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN._spi_cs.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_spi_cs_SPI;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0x9E,0x0F,0x01,0x00,0x05,0x02;
	.byte4 = .LN475;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN476;
	.byte =
		0x05,0x01,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN477;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN478;
	.byte =
		0x05,0x0A,0x0B,0x00,0x05,0x02;
	.byte4 = .LN479;
	.byte =
		0x05,0x01,0x14,0x00,0x05,0x02;
	.byte4 = .LN480;
	.byte =
		0x05,0x0A,0x03,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN481;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN482;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN483;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN484;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN485;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN._spi_cs_SPI.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_SPIRxReady;
	.byte =
		0x04,0x01,0x05,0x15,0x03,0xF7,0x0E,0x01,0x00,0x05,0x02;
	.byte4 = .LN486;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._SPIRxReady.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_SPITxFull;
	.byte =
		0x04,0x01,0x05,0x14,0x03,0xF3,0x0E,0x01,0x00,0x05,0x02;
	.byte4 = .LN487;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._SPITxFull.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_SPITxInProgress;
	.byte =
		0x04,0x01,0x05,0x1A,0x03,0xEF,0x0E,0x01,0x00,0x05,0x02;
	.byte4 = .LN488;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._SPITxInProgress.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_ssync;
	.byte =
		0x04,0x0A,0x05,0x1A,0x03,0xEB,0x14,0x01,0x00,0x05,0x02;
	.byte4 = .LN489;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN490;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._ssync.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_SPIPut;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xFC,0x0E,0x01,0x00,0x05,0x02;
	.byte4 = .LN491;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN492;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN493;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN494;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._SPIPut.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_SPIGet;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0x83,0x0F,0x01,0x00,0x05,0x02;
	.byte4 = .LN495;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN496;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN497;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._SPIGet.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_SPI;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0x93,0x0F,0x01,0x00,0x05,0x02;
	.byte4 = .LN498;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN499;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN500;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN501;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN502;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN._SPI.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_spi_transf;
	.byte =
		0x04,0x01,0x05,0x02,0x03,0xC2,0x0F,0x01,0x00,0x05,0x02;
	.byte4 = .LN503;
	.byte =
		0x05,0x07,0x0E,0x00,0x05,0x02;
	.byte4 = .LN504;
	.byte =
		0x05,0x02,0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN505;
	.byte =
		0x05,0x07,0x0E,0x00,0x05,0x02;
	.byte4 = .LN506;
	.byte =
		0x05,0x04,0x0C,0x00,0x05,0x02;
	.byte4 = .LN507;
	.byte =
		0x05,0x02,0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN508;
	.byte =
		0x05,0x04,0x11,0x00,0x05,0x02;
	.byte4 = .LN509;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN510;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN511;
	.byte =
		0x05,0x04,0x0F,0x00,0x05,0x02;
	.byte4 = .LN._spi_transf.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_SPORT0_enable;
	.byte =
		0x04,0x01,0x05,0x03,0x03,0xD0,0x0F,0x01,0x00,0x05,0x02;
	.byte4 = .LN512;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN513;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN514;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN515;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN516;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN517;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._SPORT0_enable.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_SPORT0_disable;
	.byte =
		0x04,0x01,0x05,0x03,0x03,0xD9,0x0F,0x01,0x00,0x05,0x02;
	.byte4 = .LN518;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN519;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN520;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN521;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN522;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN523;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._SPORT0_disable.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_SPORT1_enable;
	.byte =
		0x04,0x01,0x05,0x03,0x03,0xE2,0x0F,0x01,0x00,0x05,0x02;
	.byte4 = .LN524;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN525;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN526;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN527;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN528;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN529;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN530;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._SPORT1_enable.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_SPORT1_disable;
	.byte =
		0x04,0x01,0x05,0x03,0x03,0xEC,0x0F,0x01,0x00,0x05,0x02;
	.byte4 = .LN531;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN532;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN533;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN534;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN535;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN536;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._SPORT1_disable.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_SPORT0_write_read;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xF6,0x0F,0x01,0x00,0x05,0x02;
	.byte4 = .LN537;
	.byte =
		0x05,0x12,0x0D,0x00,0x05,0x02;
	.byte4 = .LN538;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN539;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN540;
	.byte =
		0x05,0x09,0x0B,0x00,0x05,0x02;
	.byte4 = .LN541;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN542;
	.byte =
		0x05,0x16,0x0B,0x00,0x05,0x02;
	.byte4 = .LN543;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN544;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN545;
	.byte =
		0x05,0x0B,0x0B,0x00,0x05,0x02;
	.byte4 = .LN546;
	.byte =
		0x05,0x13,0x0B,0x00,0x05,0x02;
	.byte4 = .LN547;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._SPORT0_write_read.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_SPORT1_write;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0x91,0x10,0x01,0x00,0x05,0x02;
	.byte4 = .LN548;
	.byte =
		0x05,0x10,0x10,0x00,0x05,0x02;
	.byte4 = .LN549;
	.byte =
		0x05,0x03,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN550;
	.byte =
		0x05,0x05,0x0E,0x00,0x05,0x02;
	.byte4 = .LN551;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._SPORT1_write.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_put_char1;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xA4,0x10,0x01,0x00,0x05,0x02;
	.byte4 = .LN552;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN553;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN554;
	.byte =
		0x05,0x0A,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN555;
	.byte =
		0x05,0x11,0x0A,0x00,0x05,0x02;
	.byte4 = .LN556;
	.byte =
		0x05,0x04,0x01,0x00,0x05,0x02;
	.byte4 = .LN557;
	.byte =
		0x05,0x11,0x01,0x00,0x05,0x02;
	.byte4 = .LN558;
	.byte =
		0x05,0x24,0x01,0x00,0x05,0x02;
	.byte4 = .LN559;
	.byte =
		0x05,0x0A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN560;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN561;
	.byte =
		0x05,0x0A,0x0B,0x00,0x05,0x02;
	.byte4 = .LN562;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN563;
	.byte =
		0x05,0x2F,0x01,0x00,0x05,0x02;
	.byte4 = .LN564;
	.byte =
		0x05,0x0A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN565;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN566;
	.byte =
		0x05,0x0A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN567;
	.byte =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.byte4 = .LN568;
	.byte =
		0x05,0x01,0x10,0x00,0x05,0x02;
	.byte4 = .LN569;
	.byte =
		0x03,0x6B,0x01,0x00,0x05,0x02;
	.byte4 = .LN570;
	.byte =
		0x05,0x18,0x1B,0x00,0x05,0x02;
	.byte4 = .LN._put_char1.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_Zput_str1;
	.byte =
		0x04,0x01,0x05,0x04,0x03,0xBC,0x10,0x01,0x00,0x05,0x02;
	.byte4 = .LN571;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN572;
	.byte =
		0x05,0x04,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN573;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN574;
	.byte =
		0x05,0x18,0x01,0x00,0x05,0x02;
	.byte4 = .LN575;
	.byte =
		0x05,0x04,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN576;
	.byte =
		0x05,0x18,0x0B,0x00,0x05,0x02;
	.byte4 = .LN577;
	.byte =
		0x05,0x21,0x01,0x00,0x05,0x02;
	.byte4 = .LN578;
	.byte =
		0x05,0x06,0x01,0x00,0x05,0x02;
	.byte4 = .LN579;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._Zput_str1.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_read_str1;
	.byte =
		0x04,0x01,0x05,0x04,0x03,0xC9,0x10,0x01,0x00,0x05,0x02;
	.byte4 = .LN580;
	.byte =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.byte4 = .LN581;
	.byte =
		0x05,0x04,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN582;
	.byte =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.byte4 = .LN583;
	.byte =
		0x05,0x04,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN584;
	.byte =
		0x05,0x10,0x0C,0x00,0x05,0x02;
	.byte4 = .LN585;
	.byte =
		0x05,0x07,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN586;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._read_str1.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_reverse;
	.byte =
		0x04,0x01,0x05,0x02,0x03,0xD3,0x10,0x01,0x00,0x05,0x02;
	.byte4 = .LN587;
	.byte =
		0x05,0x1C,0x0D,0x00,0x05,0x02;
	.byte4 = .LN588;
	.byte =
		0x05,0x06,0x01,0x00,0x05,0x02;
	.byte4 = .LN589;
	.byte =
		0x05,0x02,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN590;
	.byte =
		0x05,0x06,0x0D,0x00,0x05,0x02;
	.byte4 = .LN591;
	.byte =
		0x05,0x0A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN592;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN593;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN594;
	.byte =
		0x05,0x06,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN595;
	.byte =
		0x05,0x02,0x0E,0x00,0x05,0x02;
	.byte4 = .LN._reverse.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_itoa;
	.byte =
		0x04,0x01,0x05,0x02,0x03,0xE0,0x10,0x01,0x00,0x05,0x02;
	.byte4 = .LN596;
	.byte =
		0x05,0x0A,0x10,0x00,0x05,0x02;
	.byte4 = .LN597;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN598;
	.byte =
		0x05,0x0A,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN599;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN600;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN601;
	.byte =
		0x05,0x0A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN602;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN603;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN604;
	.byte =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN605;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN606;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._itoa.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_u_itoa;
	.byte =
		0x04,0x01,0x05,0x02,0x03,0xF1,0x10,0x01,0x00,0x05,0x02;
	.byte4 = .LN607;
	.byte =
		0x05,0x0A,0x0E,0x00,0x05,0x02;
	.byte4 = .LN608;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN609;
	.byte =
		0x05,0x0A,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN610;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN611;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN612;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN613;
	.byte =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN614;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN615;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._u_itoa.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_Event_SPORT_RUN;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xF9,0x12,0x01,0x00,0x05,0x02;
	.byte4 = .LN616;
	.byte =
		0x05,0x14,0x0A,0x00,0x05,0x02;
	.byte4 = .LN617;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN618;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._Event_SPORT_RUN.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_Time_control;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xFE,0x1D,0x01,0x00,0x05,0x02;
	.byte4 = .LN619;
	.byte =
		0x05,0x15,0x0C,0x00,0x05,0x02;
	.byte4 = .LN620;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._Time_control.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_UART_control;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xD7,0x23,0x01,0x00,0x05,0x02;
	.byte4 = .LN621;
	.byte =
		0x05,0x02,0x0E,0x00,0x05,0x02;
	.byte4 = .LN622;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN623;
	.byte =
		0x05,0x20,0x01,0x00,0x05,0x02;
	.byte4 = .LN624;
	.byte =
		0x05,0x05,0x0D,0x00,0x05,0x02;
	.byte4 = .LN625;
	.byte =
		0x05,0x07,0x0D,0x00,0x05,0x02;
	.byte4 = .LN626;
	.byte =
		0x05,0x05,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN627;
	.byte =
		0x05,0x14,0x01,0x00,0x05,0x02;
	.byte4 = .LN628;
	.byte =
		0x05,0x05,0x01,0x00,0x05,0x02;
	.byte4 = .LN629;
	.byte =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.byte4 = .LN630;
	.byte =
		0x05,0x16,0x01,0x00,0x05,0x02;
	.byte4 = .LN631;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN632;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN633;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN634;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN635;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN636;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN637;
	.byte =
		0x05,0x02,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN638;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN639;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN640;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._UART_control.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_UDP_test;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xEF,0x23,0x01,0x00,0x05,0x02;
	.byte4 = .LN641;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN642;
	.byte =
		0x05,0x14,0x0C,0x00,0x05,0x02;
	.byte4 = .LN643;
	.byte =
		0x05,0x07,0x15,0x00,0x05,0x02;
	.byte4 = .LN._UDP_test.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_sendT;
	.byte =
		0x04,0x01,0x05,0x02,0x03,0xA2,0x24,0x01,0x00,0x05,0x02;
	.byte4 = .LN644;
	.byte =
		0x05,0x11,0x0A,0x00,0x05,0x02;
	.byte4 = .LN645;
	.byte =
		0x05,0x0A,0x01,0x00,0x05,0x02;
	.byte4 = .LN646;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._sendT.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_UART_DMA_TX;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xAA,0x24,0x01,0x00,0x05,0x02;
	.byte4 = .LN647;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN648;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN649;
	.byte =
		0x05,0x0C,0x0C,0x00,0x05,0x02;
	.byte4 = .LN650;
	.byte =
		0x05,0x0B,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN651;
	.byte =
		0x05,0x22,0x01,0x00,0x05,0x02;
	.byte4 = .LN652;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN653;
	.byte =
		0x05,0x0B,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN654;
	.byte =
		0x05,0x01,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN655;
	.byte =
		0x05,0x06,0x10,0x00,0x05,0x02;
	.byte4 = .LN656;
	.byte =
		0x05,0x08,0x0F,0x00,0x05,0x02;
	.byte4 = .LN657;
	.byte =
		0x05,0x09,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN658;
	.byte =
		0x05,0x08,0x0D,0x00,0x05,0x02;
	.byte4 = .LN659;
	.byte =
		0x05,0x09,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN660;
	.byte =
		0x05,0x0E,0x0A,0x00,0x05,0x02;
	.byte4 = .LN661;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN662;
	.byte =
		0x05,0x08,0x0B,0x00,0x05,0x02;
	.byte4 = .LN663;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN664;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN665;
	.byte =
		0x05,0x0C,0x11,0x00,0x05,0x02;
	.byte4 = .LN666;
	.byte =
		0x05,0x16,0x0A,0x00,0x05,0x02;
	.byte4 = .LN667;
	.byte =
		0x05,0x08,0x03,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN668;
	.byte =
		0x05,0x16,0x13,0x00,0x05,0x02;
	.byte4 = .LN669;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN670;
	.byte =
		0x05,0x10,0x0A,0x00,0x05,0x02;
	.byte4 = .LN671;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN672;
	.byte =
		0x05,0x0B,0x0B,0x00,0x05,0x02;
	.byte4 = .LN673;
	.byte =
		0x05,0x01,0x0E,0x00,0x05,0x02;
	.byte4 = .LN._UART_DMA_TX.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_UART_DMA_TX2;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xDA,0x24,0x01,0x00,0x05,0x02;
	.byte4 = .LN674;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN675;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN676;
	.byte =
		0x05,0x0C,0x0C,0x00,0x05,0x02;
	.byte4 = .LN677;
	.byte =
		0x05,0x0B,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN678;
	.byte =
		0x05,0x22,0x01,0x00,0x05,0x02;
	.byte4 = .LN679;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN680;
	.byte =
		0x05,0x0B,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN681;
	.byte =
		0x05,0x01,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN682;
	.byte =
		0x05,0x06,0x10,0x00,0x05,0x02;
	.byte4 = .LN683;
	.byte =
		0x05,0x08,0x0E,0x00,0x05,0x02;
	.byte4 = .LN684;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN685;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN686;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN687;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN688;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN689;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN690;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN691;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN692;
	.byte =
		0x05,0x0C,0x11,0x00,0x05,0x02;
	.byte4 = .LN693;
	.byte =
		0x05,0x16,0x0A,0x00,0x05,0x02;
	.byte4 = .LN694;
	.byte =
		0x05,0x08,0x03,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN695;
	.byte =
		0x05,0x16,0x13,0x00,0x05,0x02;
	.byte4 = .LN696;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN697;
	.byte =
		0x05,0x10,0x0A,0x00,0x05,0x02;
	.byte4 = .LN698;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN699;
	.byte =
		0x05,0x0B,0x0B,0x00,0x05,0x02;
	.byte4 = .LN700;
	.byte =
		0x05,0x01,0x0E,0x00,0x05,0x02;
	.byte4 = .LN._UART_DMA_TX2.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_Transf2;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0x88,0x25,0x01,0x00,0x05,0x02;
	.byte4 = .LN701;
	.byte =
		0x05,0x0D,0x0D,0x00,0x05,0x02;
	.byte4 = .LN702;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN703;
	.byte =
		0x05,0x2B,0x0D,0x00,0x05,0x02;
	.byte4 = .LN704;
	.byte =
		0x05,0x04,0x01,0x00,0x05,0x02;
	.byte4 = .LN705;
	.byte =
		0x05,0x07,0x0D,0x00,0x05,0x02;
	.byte4 = .LN706;
	.byte =
		0x05,0x0D,0x03,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN707;
	.byte =
		0x05,0x08,0x0D,0x00,0x05,0x02;
	.byte4 = .LN708;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN709;
	.byte =
		0x05,0x2B,0x01,0x00,0x05,0x02;
	.byte4 = .LN710;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN711;
	.byte =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.byte4 = .LN712;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN713;
	.byte =
		0x05,0x03,0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN714;
	.byte =
		0x05,0x01,0x14,0x00,0x05,0x02;
	.byte4 = .LN._Transf2.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_control_B610;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xE0,0x11,0x01,0x00,0x05,0x02;
	.byte4 = .LN715;
	.byte =
		0x05,0x0A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN716;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN717;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN718;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._control_B610.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_COMMAND_ON;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xAC,0x22,0x01,0x00,0x05,0x02;
	.byte4 = .LN719;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN720;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN721;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._COMMAND_ON.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_OFF_section;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xB2,0x22,0x01,0x00,0x05,0x02;
	.byte4 = .LN722;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN723;
	.byte =
		0x05,0x21,0x01,0x00,0x05,0x02;
	.byte4 = .LN724;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN725;
	.byte =
		0x05,0x03,0x1C,0x00,0x05,0x02;
	.byte4 = .LN726;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN727;
	.byte =
		0x05,0x0E,0x0B,0x00,0x05,0x02;
	.byte4 = .LN728;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN729;
	.byte =
		0x05,0x01,0x0E,0x00,0x05,0x02;
	.byte4 = .LN730;
	.byte =
		0x05,0x03,0x03,0x64,0x01,0x00,0x05,0x02;
	.byte4 = .LN731;
	.byte =
		0x05,0x13,0x0A,0x00,0x05,0x02;
	.byte4 = .LN732;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN733;
	.byte =
		0x05,0x0A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN734;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN735;
	.byte =
		0x05,0x07,0x12,0x00,0x05,0x02;
	.byte4 = .LN._OFF_section.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_Transf;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0x9D,0x25,0x01,0x00,0x05,0x02;
	.byte4 = .LN736;
	.byte =
		0x05,0x0D,0x0D,0x00,0x05,0x02;
	.byte4 = .LN737;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN738;
	.byte =
		0x05,0x2B,0x0D,0x00,0x05,0x02;
	.byte4 = .LN739;
	.byte =
		0x05,0x04,0x01,0x00,0x05,0x02;
	.byte4 = .LN740;
	.byte =
		0x05,0x07,0x0D,0x00,0x05,0x02;
	.byte4 = .LN741;
	.byte =
		0x05,0x0D,0x03,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN742;
	.byte =
		0x05,0x08,0x0D,0x00,0x05,0x02;
	.byte4 = .LN743;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN744;
	.byte =
		0x05,0x2B,0x01,0x00,0x05,0x02;
	.byte4 = .LN745;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN746;
	.byte =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.byte4 = .LN747;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN748;
	.byte =
		0x05,0x03,0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN749;
	.byte =
		0x05,0x01,0x14,0x00,0x05,0x02;
	.byte4 = .LN._Transf.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_put_str1;
	.byte =
		0x04,0x01,0x05,0x04,0x03,0xC2,0x10,0x01,0x00,0x05,0x02;
	.byte4 = .LN750;
	.byte =
		0x05,0x0A,0x0C,0x00,0x05,0x02;
	.byte4 = .LN751;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._put_str1.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_u_out;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xFE,0x10,0x01,0x00,0x05,0x02;
	.byte4 = .LN752;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN753;
	.byte =
		0x05,0x0B,0x0A,0x00,0x05,0x02;
	.byte4 = .LN754;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN755;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN756;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._u_out.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_SDRAM_test;
	.byte =
		0x04,0x01,0x05,0x02,0x03,0xBC,0x1F,0x01,0x00,0x05,0x02;
	.byte4 = .LN757;
	.byte =
		0x05,0x05,0x0F,0x00,0x05,0x02;
	.byte4 = .LN758;
	.byte =
		0x05,0x03,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN759;
	.byte =
		0x05,0x05,0x11,0x00,0x05,0x02;
	.byte4 = .LN760;
	.byte =
		0x05,0x0A,0x01,0x00,0x05,0x02;
	.byte4 = .LN761;
	.byte =
		0x05,0x05,0x01,0x00,0x05,0x02;
	.byte4 = .LN762;
	.byte =
		0x05,0x0A,0x01,0x00,0x05,0x02;
	.byte4 = .LN763;
	.byte =
		0x05,0x05,0x01,0x00,0x05,0x02;
	.byte4 = .LN764;
	.byte =
		0x05,0x02,0x0D,0x00,0x05,0x02;
	.byte4 = .LN._SDRAM_test.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_x_out;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0x86,0x11,0x01,0x00,0x05,0x02;
	.byte4 = .LN765;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN766;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN767;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN768;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN769;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._x_out.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_xn_out;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0x8E,0x11,0x01,0x00,0x05,0x02;
	.byte4 = .LN770;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN771;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN772;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN773;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._xn_out.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_d_out;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0x96,0x11,0x01,0x00,0x05,0x02;
	.byte4 = .LN774;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN775;
	.byte =
		0x05,0x0C,0x0B,0x00,0x05,0x02;
	.byte4 = .LN776;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN777;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._d_out.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_func_STATUS_B610;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xE8,0x11,0x01,0x00,0x05,0x02;
	.byte4 = .LN778;
	.byte =
		0x05,0x03,0x14,0x00,0x05,0x02;
	.byte4 = .LN779;
	.byte =
		0x05,0x05,0x11,0x00,0x05,0x02;
	.byte4 = .LN780;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN781;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN782;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN783;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN784;
	.byte =
		0x05,0x33,0x01,0x00,0x05,0x02;
	.byte4 = .LN785;
	.byte =
		0x05,0x05,0x13,0x00,0x05,0x02;
	.byte4 = .LN786;
	.byte =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN787;
	.byte =
		0x11,0x00,0x05,0x02;
	.byte4 = .LN788;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN789;
	.byte =
		0x05,0x05,0x03,0x75,0x01,0x00,0x05,0x02;
	.byte4 = .LN790;
	.byte =
		0x05,0x03,0x14,0x00,0x05,0x02;
	.byte4 = .LN791;
	.byte =
		0x05,0x04,0x13,0x00,0x05,0x02;
	.byte4 = .LN792;
	.byte =
		0x05,0x0E,0x12,0x00,0x05,0x02;
	.byte4 = .LN793;
	.byte =
		0x05,0x01,0x0C,0x00,0x05,0x02;
	.byte4 = .LN794;
	.byte =
		0x05,0x08,0x03,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN795;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN796;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN797;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN798;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN799;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN800;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN801;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN802;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._func_STATUS_B610.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_GBR_zad;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xFF,0x12,0x01,0x00,0x05,0x02;
	.byte4 = .LN803;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN804;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN805;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN806;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN807;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN808;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN809;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN810;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN811;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN812;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN813;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN814;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN815;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN816;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN817;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN818;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN819;
	.byte =
		0x05,0x13,0x0A,0x00,0x05,0x02;
	.byte4 = .LN820;
	.byte =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.byte4 = .LN821;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN822;
	.byte =
		0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN823;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN824;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN825;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN826;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN827;
	.byte =
		0x05,0x0F,0x0C,0x00,0x05,0x02;
	.byte4 = .LN828;
	.byte =
		0x05,0x0B,0x0A,0x00,0x05,0x02;
	.byte4 = .LN829;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN830;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN831;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN832;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._GBR_zad.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_BR_zad;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0x9E,0x13,0x01,0x00,0x05,0x02;
	.byte4 = .LN833;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN834;
	.byte =
		0x10,0x00,0x05,0x02;
	.byte4 = .LN835;
	.byte =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN836;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN837;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN838;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN839;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN840;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN841;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN842;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN843;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN844;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN845;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN846;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN847;
	.byte =
		0x05,0x13,0x0F,0x00,0x05,0x02;
	.byte4 = .LN848;
	.byte =
		0x05,0x03,0x0F,0x00,0x05,0x02;
	.byte4 = .LN849;
	.byte =
		0x05,0x04,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN850;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN851;
	.byte =
		0x05,0x03,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN852;
	.byte =
		0x05,0x0F,0x0E,0x00,0x05,0x02;
	.byte4 = .LN853;
	.byte =
		0x05,0x0B,0x0A,0x00,0x05,0x02;
	.byte4 = .LN854;
	.byte =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.byte4 = .LN855;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN856;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN857;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN858;
	.byte =
		0x05,0x01,0x0C,0x00,0x05,0x02;
	.byte4 = .LN._BR_zad.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_SIG_FT_IN;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xC4,0x15,0x01,0x00,0x05,0x02;
	.byte4 = .LN859;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN860;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN861;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN862;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN863;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN864;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN865;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN866;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN867;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN868;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN869;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN870;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN871;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN872;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN873;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN874;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN875;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN876;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN877;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN878;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN879;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN880;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN881;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN882;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN883;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN884;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN885;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN886;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN887;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN888;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN889;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN890;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN891;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN892;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN893;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN894;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN895;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN896;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN897;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN898;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN899;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN900;
	.byte =
		0x05,0x0E,0x0A,0x00,0x05,0x02;
	.byte4 = .LN901;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._SIG_FT_IN.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_control_TNC_TNO;
	.byte =
		0x04,0x01,0x05,0x02,0x03,0x87,0x1E,0x01,0x00,0x05,0x02;
	.byte4 = .LN902;
	.byte =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.byte4 = .LN903;
	.byte =
		0x05,0x01,0x62,0x00,0x05,0x02;
	.byte4 = .LN904;
	.byte =
		0x05,0x0B,0x03,0xA9,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN905;
	.byte =
		0x05,0x06,0x01,0x00,0x05,0x02;
	.byte4 = .LN906;
	.byte =
		0x05,0x0B,0x01,0x00,0x05,0x02;
	.byte4 = .LN907;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN908;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN909;
	.byte =
		0x05,0x27,0x01,0x00,0x05,0x02;
	.byte4 = .LN910;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN911;
	.byte =
		0x05,0x0B,0x01,0x00,0x05,0x02;
	.byte4 = .LN912;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN913;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN914;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN915;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN916;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN917;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN918;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN919;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN920;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN921;
	.byte =
		0x05,0x0B,0x01,0x00,0x05,0x02;
	.byte4 = .LN922;
	.byte =
		0x05,0x0A,0x0C,0x00,0x05,0x02;
	.byte4 = .LN923;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN924;
	.byte =
		0x05,0x0B,0x01,0x00,0x05,0x02;
	.byte4 = .LN925;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN926;
	.byte =
		0x05,0x26,0x01,0x00,0x05,0x02;
	.byte4 = .LN927;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN928;
	.byte =
		0x05,0x05,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN929;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN930;
	.byte =
		0x05,0x26,0x01,0x00,0x05,0x02;
	.byte4 = .LN931;
	.byte =
		0x05,0x02,0x0D,0x00,0x05,0x02;
	.byte4 = .LN932;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN933;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN934;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN935;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN936;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN937;
	.byte =
		0x05,0x02,0x0C,0x00,0x05,0x02;
	.byte4 = .LN938;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN939;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN940;
	.byte =
		0x05,0x21,0x01,0x00,0x05,0x02;
	.byte4 = .LN941;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN942;
	.byte =
		0x05,0x21,0x01,0x00,0x05,0x02;
	.byte4 = .LN943;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN944;
	.byte =
		0x05,0x1D,0x01,0x00,0x05,0x02;
	.byte4 = .LN945;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN946;
	.byte =
		0x05,0x1D,0x01,0x00,0x05,0x02;
	.byte4 = .LN947;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN948;
	.byte =
		0x05,0x1F,0x01,0x00,0x05,0x02;
	.byte4 = .LN949;
	.byte =
		0x05,0x01,0x13,0x00,0x05,0x02;
	.byte4 = .LN950;
	.byte =
		0x05,0x22,0x01,0x00,0x05,0x02;
	.byte4 = .LN951;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN952;
	.byte =
		0x05,0x1C,0x01,0x00,0x05,0x02;
	.byte4 = .LN953;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN954;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN955;
	.byte =
		0x05,0x1D,0x01,0x00,0x05,0x02;
	.byte4 = .LN956;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN957;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN958;
	.byte =
		0x05,0x2C,0x01,0x00,0x05,0x02;
	.byte4 = .LN959;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN960;
	.byte =
		0x05,0x02,0x0D,0x00,0x05,0x02;
	.byte4 = .LN961;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN962;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN963;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN964;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN965;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN966;
	.byte =
		0x05,0x26,0x01,0x00,0x05,0x02;
	.byte4 = .LN967;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN968;
	.byte =
		0x05,0x26,0x01,0x00,0x05,0x02;
	.byte4 = .LN969;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN970;
	.byte =
		0x05,0x26,0x01,0x00,0x05,0x02;
	.byte4 = .LN971;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN972;
	.byte =
		0x05,0x26,0x01,0x00,0x05,0x02;
	.byte4 = .LN973;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN974;
	.byte =
		0x05,0x26,0x01,0x00,0x05,0x02;
	.byte4 = .LN975;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN976;
	.byte =
		0x05,0x26,0x01,0x00,0x05,0x02;
	.byte4 = .LN977;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN978;
	.byte =
		0x05,0x26,0x01,0x00,0x05,0x02;
	.byte4 = .LN979;
	.byte =
		0x05,0x02,0x0C,0x00,0x05,0x02;
	.byte4 = .LN980;
	.byte =
		0x05,0x1C,0x01,0x00,0x05,0x02;
	.byte4 = .LN981;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN982;
	.byte =
		0x05,0x1C,0x01,0x00,0x05,0x02;
	.byte4 = .LN983;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN984;
	.byte =
		0x05,0x1C,0x01,0x00,0x05,0x02;
	.byte4 = .LN985;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN986;
	.byte =
		0x05,0x1C,0x01,0x00,0x05,0x02;
	.byte4 = .LN987;
	.byte =
		0x05,0x0A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN988;
	.byte =
		0x05,0x02,0x0C,0x00,0x05,0x02;
	.byte4 = .LN989;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN990;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN991;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN992;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN993;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN994;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN995;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN._control_TNC_TNO.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_pachka_monitor;
	.byte =
		0x04,0x01,0x05,0x02,0x03,0xD5,0x1F,0x01,0x00,0x05,0x02;
	.byte4 = .LN996;
	.byte =
		0x20,0x00,0x05,0x02;
	.byte4 = .LN997;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN998;
	.byte =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN999;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN1000;
	.byte =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1001;
	.byte =
		0x17,0x00,0x05,0x02;
	.byte4 = .LN1002;
	.byte =
		0x03,0x72,0x01,0x00,0x05,0x02;
	.byte4 = .LN1003;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1004;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1005;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1006;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1007;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1008;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1009;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1010;
	.byte =
		0x05,0x0A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1011;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1012;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1013;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1014;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1015;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1016;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1017;
	.byte =
		0x05,0x0A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1018;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1019;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1020;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1021;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1022;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1023;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1024;
	.byte =
		0x05,0x0A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1025;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1026;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1027;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1028;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1029;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1030;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1031;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1032;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1033;
	.byte =
		0x05,0x0A,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1034;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1035;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1036;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1037;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1038;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1039;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1040;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1041;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1042;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1043;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1044;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1045;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1046;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1047;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1048;
	.byte =
		0x05,0x02,0x0D,0x00,0x05,0x02;
	.byte4 = .LN1049;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1050;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1051;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1052;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1053;
	.byte =
		0x05,0x2A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1054;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1055;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1056;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1057;
	.byte =
		0x05,0x2A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1058;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1059;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1060;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1061;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1062;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1063;
	.byte =
		0x05,0x2A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1064;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1065;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1066;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1067;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1068;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1069;
	.byte =
		0x05,0x2A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1070;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1071;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1072;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1073;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1074;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1075;
	.byte =
		0x05,0x2A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1076;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1077;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1078;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1079;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1080;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1081;
	.byte =
		0x05,0x2A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1082;
	.byte =
		0x05,0x0A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1083;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1084;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1085;
	.byte =
		0x05,0x0B,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1086;
	.byte =
		0x05,0x07,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1087;
	.byte =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.byte4 = .LN1088;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1089;
	.byte =
		0x05,0x02,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1090;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1091;
	.byte =
		0x05,0x02,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1092;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1093;
	.byte =
		0x05,0x02,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1094;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1095;
	.byte =
		0x05,0x0A,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1096;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1097;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1098;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1099;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1100;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1101;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1102;
	.byte =
		0x05,0x04,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1103;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1104;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1105;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1106;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1107;
	.byte =
		0x05,0x2A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1108;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1109;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1110;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1111;
	.byte =
		0x05,0x2A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1112;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1113;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1114;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1115;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1116;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1117;
	.byte =
		0x05,0x2A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1118;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1119;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1120;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1121;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1122;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1123;
	.byte =
		0x05,0x2A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1124;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1125;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1126;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1127;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1128;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1129;
	.byte =
		0x05,0x2A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1130;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1131;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1132;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1133;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1134;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1135;
	.byte =
		0x05,0x2A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1136;
	.byte =
		0x05,0x02,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1137;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1138;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1139;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1140;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1141;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1142;
	.byte =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.byte4 = .LN1143;
	.byte =
		0x05,0x0C,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1144;
	.byte =
		0x05,0x07,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1145;
	.byte =
		0x05,0x02,0x01,0x00,0x05,0x02;
	.byte4 = .LN1146;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1147;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1148;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1149;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1150;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1151;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1152;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1153;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1154;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1155;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1156;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1157;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1158;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1159;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1160;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN1161;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1162;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1163;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1164;
	.byte =
		0x05,0x2B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1165;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1166;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1167;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1168;
	.byte =
		0x05,0x2B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1169;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1170;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1171;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1172;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1173;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1174;
	.byte =
		0x05,0x2B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1175;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1176;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1177;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1178;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1179;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1180;
	.byte =
		0x05,0x2B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1181;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1182;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1183;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1184;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1185;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1186;
	.byte =
		0x05,0x2B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1187;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1188;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1189;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1190;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1191;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1192;
	.byte =
		0x05,0x2D,0x01,0x00,0x05,0x02;
	.byte4 = .LN1193;
	.byte =
		0x05,0x02,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1194;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1195;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1196;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1197;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1198;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1199;
	.byte =
		0x05,0x0A,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1200;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1201;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN1202;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1203;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1204;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1205;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1206;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1207;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1208;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1209;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1210;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1211;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._pachka_monitor.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_help;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xA7,0x21,0x01,0x00,0x05,0x02;
	.byte4 = .LN1212;
	.byte =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.byte4 = .LN1213;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN1214;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1215;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN1216;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1217;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN1218;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1219;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN1220;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1221;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN1222;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1223;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN1224;
	.byte =
		0x05,0x0A,0x15,0x00,0x05,0x02;
	.byte4 = .LN1225;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1226;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1227;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1228;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1229;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1230;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1231;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1232;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1233;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1234;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1235;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1236;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1237;
	.byte =
		0x05,0x02,0x10,0x00,0x05,0x02;
	.byte4 = .LN1238;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1239;
	.byte =
		0x05,0x03,0x0E,0x00,0x05,0x02;
	.byte4 = .LN1240;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1241;
	.byte =
		0x05,0x0B,0x13,0x00,0x05,0x02;
	.byte4 = .LN1242;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1243;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN1244;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1245;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN1246;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1247;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN1248;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1249;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN1250;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1251;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN1252;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1253;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN1254;
	.byte =
		0x05,0x0B,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1255;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1256;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN1257;
	.byte =
		0x05,0x0B,0x0E,0x00,0x05,0x02;
	.byte4 = .LN1258;
	.byte =
		0x15,0x00,0x05,0x02;
	.byte4 = .LN1259;
	.byte =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.byte4 = .LN1260;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN1261;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN1262;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1263;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN1264;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1265;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN1266;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1267;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN1268;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1269;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN1270;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1271;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN1272;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1273;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN1274;
	.byte =
		0x05,0x0B,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1275;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1276;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1277;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN1278;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1279;
	.byte =
		0x05,0x08,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1280;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1281;
	.byte =
		0x05,0x2E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1282;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1283;
	.byte =
		0x05,0x34,0x01,0x00,0x05,0x02;
	.byte4 = .LN1284;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1285;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN1286;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1287;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN1288;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN1289;
	.byte =
		0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN1290;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1291;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN1292;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1293;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN1294;
	.byte =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1295;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1296;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1297;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1298;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1299;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1300;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1301;
	.byte =
		0x05,0x0A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1302;
	.byte =
		0x05,0x02,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1303;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN1304;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1305;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._help.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_tabl_view;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xD7,0x22,0x01,0x00,0x05,0x02;
	.byte4 = .LN1306;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1307;
	.byte =
		0x05,0x01,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1308;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1309;
	.byte =
		0x05,0x0D,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1310;
	.byte =
		0x05,0x09,0x0F,0x00,0x05,0x02;
	.byte4 = .LN1311;
	.byte =
		0x05,0x10,0x01,0x00,0x05,0x02;
	.byte4 = .LN1312;
	.byte =
		0x05,0x11,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1313;
	.byte =
		0x05,0x08,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1314;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1315;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1316;
	.byte =
		0x05,0x2A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1317;
	.byte =
		0x05,0x08,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1318;
	.byte =
		0x05,0x1C,0x01,0x00,0x05,0x02;
	.byte4 = .LN1319;
	.byte =
		0x05,0x16,0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN1320;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN1321;
	.byte =
		0x05,0x03,0x16,0x00,0x05,0x02;
	.byte4 = .LN1322;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN1323;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1324;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN1325;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1326;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN1327;
	.byte =
		0x05,0x04,0x0D,0x00,0x05,0x02;
	.byte4 = .LN1328;
	.byte =
		0x05,0x01,0x03,0x65,0x01,0x00,0x05,0x02;
	.byte4 = .LN1329;
	.byte =
		0x05,0x0D,0x26,0x00,0x05,0x02;
	.byte4 = .LN1330;
	.byte =
		0x05,0x09,0x0F,0x00,0x05,0x02;
	.byte4 = .LN1331;
	.byte =
		0x05,0x10,0x01,0x00,0x05,0x02;
	.byte4 = .LN1332;
	.byte =
		0x05,0x11,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1333;
	.byte =
		0x05,0x08,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1334;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1335;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1336;
	.byte =
		0x05,0x2C,0x01,0x00,0x05,0x02;
	.byte4 = .LN1337;
	.byte =
		0x05,0x08,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1338;
	.byte =
		0x05,0x1C,0x01,0x00,0x05,0x02;
	.byte4 = .LN1339;
	.byte =
		0x05,0x16,0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN1340;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN1341;
	.byte =
		0x05,0x04,0x16,0x00,0x05,0x02;
	.byte4 = .LN1342;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1343;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1344;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1345;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1346;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1347;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1348;
	.byte =
		0x05,0x04,0x01,0x00,0x05,0x02;
	.byte4 = .LN1349;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1350;
	.byte =
		0x05,0x02,0x0E,0x00,0x05,0x02;
	.byte4 = .LN1351;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1352;
	.byte =
		0x05,0x01,0x03,0x48,0x01,0x00,0x05,0x02;
	.byte4 = .LN1353;
	.byte =
		0x05,0x05,0x48,0x00,0x05,0x02;
	.byte4 = .LN1354;
	.byte =
		0x05,0x0E,0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1355;
	.byte =
		0x05,0x0A,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1356;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1357;
	.byte =
		0x05,0x0A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1358;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1359;
	.byte =
		0x05,0x0A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1360;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1361;
	.byte =
		0x05,0x0A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1362;
	.byte =
		0x05,0x1C,0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN1363;
	.byte =
		0x05,0x03,0x01,0x00,0x05,0x02;
	.byte4 = .LN1364;
	.byte =
		0x05,0x02,0x13,0x00,0x05,0x02;
	.byte4 = .LN._tabl_view.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_init_K611;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xA0,0x11,0x01,0x00,0x05,0x02;
	.byte4 = .LN1365;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1366;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1367;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1368;
	.byte =
		0x05,0x02,0x0C,0x00,0x05,0x02;
	.byte4 = .LN._init_K611.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_control_K611;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xAB,0x11,0x01,0x00,0x05,0x02;
	.byte4 = .LN1369;
	.byte =
		0x05,0x0B,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1370;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1371;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1372;
	.byte =
		0x05,0x01,0x0C,0x00,0x05,0x02;
	.byte4 = .LN._control_K611.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_init_K612;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xB7,0x11,0x01,0x00,0x05,0x02;
	.byte4 = .LN1373;
	.byte =
		0x05,0x0B,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1374;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1375;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1376;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._init_K612.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_control_K612;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xC2,0x11,0x01,0x00,0x05,0x02;
	.byte4 = .LN1377;
	.byte =
		0x05,0x0B,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1378;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1379;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1380;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._control_K612.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_init_K613;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xCC,0x11,0x01,0x00,0x05,0x02;
	.byte4 = .LN1381;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1382;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1383;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1384;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._init_K613.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_control_K613;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xD6,0x11,0x01,0x00,0x05,0x02;
	.byte4 = .LN1385;
	.byte =
		0x05,0x0B,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1386;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1387;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1388;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._control_K613.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_control_K615;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xD9,0x12,0x01,0x00,0x05,0x02;
	.byte4 = .LN1389;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1390;
	.byte =
		0x05,0x0B,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1391;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1392;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN1393;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1394;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1395;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._control_K615.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_K615_out;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xF1,0x13,0x01,0x00,0x05,0x02;
	.byte4 = .LN1396;
	.byte =
		0x05,0x03,0x0E,0x00,0x05,0x02;
	.byte4 = .LN1397;
	.byte =
		0x05,0x09,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1398;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1399;
	.byte =
		0x05,0x0A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1400;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1401;
	.byte =
		0x05,0x0A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1402;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1403;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1404;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1405;
	.byte =
		0x05,0x01,0x14,0x00,0x05,0x02;
	.byte4 = .LN._K615_out.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_K615_test_indi;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xA3,0x12,0x01,0x00,0x05,0x02;
	.byte4 = .LN1406;
	.byte =
		0x05,0x03,0x15,0x00,0x05,0x02;
	.byte4 = .LN1407;
	.byte =
		0x05,0x01,0x03,0x74,0x01,0x00,0x05,0x02;
	.byte4 = .LN1408;
	.byte =
		0x05,0x03,0x0E,0x00,0x05,0x02;
	.byte4 = .LN1409;
	.byte =
		0x10,0x00,0x05,0x02;
	.byte4 = .LN1410;
	.byte =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN1411;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1412;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN1413;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1414;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN1415;
	.byte =
		0x05,0x17,0x01,0x00,0x05,0x02;
	.byte4 = .LN1416;
	.byte =
		0x05,0x24,0x01,0x00,0x05,0x02;
	.byte4 = .LN1417;
	.byte =
		0x05,0x3A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1418;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1419;
	.byte =
		0x05,0x17,0x01,0x00,0x05,0x02;
	.byte4 = .LN1420;
	.byte =
		0x05,0x28,0x01,0x00,0x05,0x02;
	.byte4 = .LN1421;
	.byte =
		0x05,0x3A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1422;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1423;
	.byte =
		0x05,0x1B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1424;
	.byte =
		0x05,0x0D,0x01,0x00,0x05,0x02;
	.byte4 = .LN1425;
	.byte =
		0x05,0x05,0x11,0x00,0x05,0x02;
	.byte4 = .LN1426;
	.byte =
		0x05,0x23,0x01,0x00,0x05,0x02;
	.byte4 = .LN1427;
	.byte =
		0x05,0x01,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1428;
	.byte =
		0x05,0x02,0x0E,0x00,0x05,0x02;
	.byte4 = .LN1429;
	.byte =
		0x05,0x09,0x0D,0x00,0x05,0x02;
	.byte4 = .LN1430;
	.byte =
		0x05,0x08,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1431;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1432;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1433;
	.byte =
		0x05,0x01,0x03,0x62,0x01,0x00,0x05,0x02;
	.byte4 = .LN1434;
	.byte =
		0x05,0x0A,0x28,0x00,0x05,0x02;
	.byte4 = .LN1435;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1436;
	.byte =
		0x05,0x01,0x03,0x60,0x01,0x00,0x05,0x02;
	.byte4 = .LN1437;
	.byte =
		0x05,0x0A,0x2A,0x00,0x05,0x02;
	.byte4 = .LN1438;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1439;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1440;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1441;
	.byte =
		0x05,0x0E,0x16,0x00,0x05,0x02;
	.byte4 = .LN1442;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._K615_test_indi.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_tst_out;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xE0,0x15,0x01,0x00,0x05,0x02;
	.byte4 = .LN1443;
	.byte =
		0x05,0x16,0x19,0x00,0x05,0x02;
	.byte4 = .LN1444;
	.byte =
		0x05,0x04,0x01,0x00,0x05,0x02;
	.byte4 = .LN1445;
	.byte =
		0x05,0x05,0x10,0x00,0x05,0x02;
	.byte4 = .LN1446;
	.byte =
		0x05,0x22,0x01,0x00,0x05,0x02;
	.byte4 = .LN1447;
	.byte =
		0x05,0x3F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1448;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1449;
	.byte =
		0x05,0x22,0x01,0x00,0x05,0x02;
	.byte4 = .LN1450;
	.byte =
		0x05,0x3F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1451;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1452;
	.byte =
		0x05,0x22,0x01,0x00,0x05,0x02;
	.byte4 = .LN1453;
	.byte =
		0x05,0x3F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1454;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1455;
	.byte =
		0x05,0x1F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1456;
	.byte =
		0x05,0x3C,0x01,0x00,0x05,0x02;
	.byte4 = .LN1457;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1458;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1459;
	.byte =
		0x05,0x11,0x0D,0x00,0x05,0x02;
	.byte4 = .LN1460;
	.byte =
		0x05,0x2F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1461;
	.byte =
		0x05,0x0B,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1462;
	.byte =
		0x05,0x04,0x0F,0x00,0x05,0x02;
	.byte4 = .LN1463;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1464;
	.byte =
		0x05,0x13,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1465;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1466;
	.byte =
		0x05,0x01,0x03,0x57,0x01,0x00,0x05,0x02;
	.byte4 = .LN1467;
	.byte =
		0x05,0x14,0x33,0x00,0x05,0x02;
	.byte4 = .LN1468;
	.byte =
		0x05,0x13,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1469;
	.byte =
		0x05,0x01,0x03,0x55,0x01,0x00,0x05,0x02;
	.byte4 = .LN1470;
	.byte =
		0x05,0x14,0x35,0x00,0x05,0x02;
	.byte4 = .LN1471;
	.byte =
		0x05,0x13,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1472;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1473;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1474;
	.byte =
		0x05,0x0D,0x14,0x00,0x05,0x02;
	.byte4 = .LN1475;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._tst_out.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_UDP_TCP_setup;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xD7,0x25,0x01,0x00,0x05,0x02;
	.byte4 = .LN1476;
	.byte =
		0x05,0x0E,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1477;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1478;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._UDP_TCP_setup.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_n_out;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xFD,0x25,0x01,0x00,0x05,0x02;
	.byte4 = .LN1479;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1480;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1481;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1482;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1483;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._n_out.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_packet_TRSL;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xB6,0x27,0x01,0x00,0x05,0x02;
	.byte4 = .LN1484;
	.byte =
		0x05,0x06,0x14,0x00,0x05,0x02;
	.byte4 = .LN1485;
	.byte =
		0x05,0x01,0x03,0x75,0x01,0x00,0x05,0x02;
	.byte4 = .LN1486;
	.byte =
		0x05,0x02,0x10,0x00,0x05,0x02;
	.byte4 = .LN1487;
	.byte =
		0x05,0x06,0x0D,0x00,0x05,0x02;
	.byte4 = .LN1488;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1489;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1490;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1491;
	.byte =
		0x05,0x01,0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1492;
	.byte =
		0x05,0x04,0x16,0x00,0x05,0x02;
	.byte4 = .LN1493;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1494;
	.byte =
		0x05,0x04,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1495;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN1496;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN1497;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN1498;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN1499;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN1500;
	.byte =
		0x05,0x26,0x01,0x00,0x05,0x02;
	.byte4 = .LN1501;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1502;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1503;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN1504;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1505;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1506;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1507;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1508;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1509;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1510;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1511;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1512;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN1513;
	.byte =
		0x05,0x26,0x01,0x00,0x05,0x02;
	.byte4 = .LN1514;
	.byte =
		0x05,0x04,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1515;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN1516;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1517;
	.byte =
		0x24,0x00,0x05,0x02;
	.byte4 = .LN1518;
	.byte =
		0x03,0x65,0x01,0x00,0x05,0x02;
	.byte4 = .LN1519;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN1520;
	.byte =
		0x20,0x00,0x05,0x02;
	.byte4 = .LN1521;
	.byte =
		0x03,0x6A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1522;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN1523;
	.byte =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN1524;
	.byte =
		0x24,0x00,0x05,0x02;
	.byte4 = .LN1525;
	.byte =
		0x03,0x65,0x01,0x00,0x05,0x02;
	.byte4 = .LN1526;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1527;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN1528;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN1529;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN1530;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN1531;
	.byte =
		0x15,0x00,0x05,0x02;
	.byte4 = .LN1532;
	.byte =
		0x03,0x74,0x01,0x00,0x05,0x02;
	.byte4 = .LN1533;
	.byte =
		0x15,0x00,0x05,0x02;
	.byte4 = .LN1534;
	.byte =
		0x05,0x07,0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1535;
	.byte =
		0x05,0x04,0x0E,0x00,0x05,0x02;
	.byte4 = .LN1536;
	.byte =
		0x05,0x07,0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1537;
	.byte =
		0x05,0x04,0x0E,0x00,0x05,0x02;
	.byte4 = .LN1538;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1539;
	.byte =
		0x05,0x07,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN1540;
	.byte =
		0x05,0x04,0x0F,0x00,0x05,0x02;
	.byte4 = .LN1541;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1542;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1543;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1544;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN1545;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1546;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1547;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1548;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1549;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN1550;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1551;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN1552;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1553;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1554;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN1555;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN1556;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1557;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1558;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1559;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN1560;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1561;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN1562;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1563;
	.byte =
		0x03,0x72,0x01,0x00,0x05,0x02;
	.byte4 = .LN1564;
	.byte =
		0x17,0x00,0x05,0x02;
	.byte4 = .LN1565;
	.byte =
		0x03,0x72,0x01,0x00,0x05,0x02;
	.byte4 = .LN1566;
	.byte =
		0x14,0x00,0x05,0x02;
	.byte4 = .LN1567;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN1568;
	.byte =
		0x03,0x6F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1569;
	.byte =
		0x17,0x00,0x05,0x02;
	.byte4 = .LN1570;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN1571;
	.byte =
		0x03,0x6F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1572;
	.byte =
		0x17,0x00,0x05,0x02;
	.byte4 = .LN1573;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN1574;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN1575;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN1576;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1577;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1578;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1579;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN1580;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1581;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1582;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1583;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN1584;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN1585;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN1586;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN1587;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN1588;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN1589;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1590;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1591;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1592;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN1593;
	.byte =
		0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN1594;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN1595;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN1596;
	.byte =
		0x10,0x00,0x05,0x02;
	.byte4 = .LN1597;
	.byte =
		0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN1598;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN1599;
	.byte =
		0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN1600;
	.byte =
		0x11,0x00,0x05,0x02;
	.byte4 = .LN1601;
	.byte =
		0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN1602;
	.byte =
		0x03,0x74,0x01,0x00,0x05,0x02;
	.byte4 = .LN1603;
	.byte =
		0x19,0x00,0x05,0x02;
	.byte4 = .LN1604;
	.byte =
		0x05,0x1E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1605;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1606;
	.byte =
		0x05,0x21,0x01,0x00,0x05,0x02;
	.byte4 = .LN1607;
	.byte =
		0x05,0x04,0x0F,0x00,0x05,0x02;
	.byte4 = .LN1608;
	.byte =
		0x05,0x0C,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1609;
	.byte =
		0x05,0x04,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1610;
	.byte =
		0x13,0x00,0x05,0x02;
	.byte4 = .LN1611;
	.byte =
		0x05,0x0C,0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN1612;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1613;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN1614;
	.byte =
		0x05,0x0C,0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN1615;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1616;
	.byte =
		0x05,0x0C,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1617;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1618;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1619;
	.byte =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1620;
	.byte =
		0x10,0x00,0x05,0x02;
	.byte4 = .LN1621;
	.byte =
		0x05,0x0C,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN1622;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1623;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1624;
	.byte =
		0x10,0x00,0x05,0x02;
	.byte4 = .LN1625;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1626;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1627;
	.byte =
		0x10,0x00,0x05,0x02;
	.byte4 = .LN1628;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN1629;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1630;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1631;
	.byte =
		0x10,0x00,0x05,0x02;
	.byte4 = .LN1632;
	.byte =
		0x05,0x0C,0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN1633;
	.byte =
		0x05,0x04,0x0E,0x00,0x05,0x02;
	.byte4 = .LN1634;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1635;
	.byte =
		0x05,0x0C,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN1636;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1637;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN1638;
	.byte =
		0x05,0x0C,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN1639;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1640;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1641;
	.byte =
		0x05,0x0C,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1642;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1643;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1644;
	.byte =
		0x05,0x0C,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1645;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1646;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1647;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1648;
	.byte =
		0x05,0x0C,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1649;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1650;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN1651;
	.byte =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1652;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN1653;
	.byte =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1654;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1655;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN1656;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN1657;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN1658;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1659;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1660;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1661;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN1662;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1663;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN1664;
	.byte =
		0x03,0x75,0x01,0x00,0x05,0x02;
	.byte4 = .LN1665;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN1666;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN1667;
	.byte =
		0x03,0x75,0x01,0x00,0x05,0x02;
	.byte4 = .LN1668;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1669;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1670;
	.byte =
		0x14,0x00,0x05,0x02;
	.byte4 = .LN1671;
	.byte =
		0x03,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN1672;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1673;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1674;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1675;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN1676;
	.byte =
		0x19,0x00,0x05,0x02;
	.byte4 = .LN1677;
	.byte =
		0x03,0x72,0x01,0x00,0x05,0x02;
	.byte4 = .LN1678;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1679;
	.byte =
		0x16,0x00,0x05,0x02;
	.byte4 = .LN1680;
	.byte =
		0x03,0x72,0x01,0x00,0x05,0x02;
	.byte4 = .LN1681;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1682;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN1683;
	.byte =
		0x16,0x00,0x05,0x02;
	.byte4 = .LN1684;
	.byte =
		0x05,0x1F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1685;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1686;
	.byte =
		0x05,0x22,0x01,0x00,0x05,0x02;
	.byte4 = .LN1687;
	.byte =
		0x05,0x0C,0x10,0x00,0x05,0x02;
	.byte4 = .LN1688;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1689;
	.byte =
		0x05,0x0C,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1690;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1691;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1692;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1693;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1694;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1695;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1696;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1697;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1698;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1699;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1700;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN1701;
	.byte =
		0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN1702;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN1703;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1704;
	.byte =
		0x05,0x0C,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1705;
	.byte =
		0x05,0x04,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1706;
	.byte =
		0x05,0x0C,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN1707;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1708;
	.byte =
		0x05,0x0C,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1709;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1710;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1711;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1712;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1713;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1714;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN1715;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1716;
	.byte =
		0x05,0x0C,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1717;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1718;
	.byte =
		0x05,0x0C,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1719;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1720;
	.byte =
		0x05,0x0C,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1721;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1722;
	.byte =
		0x13,0x00,0x05,0x02;
	.byte4 = .LN1723;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1724;
	.byte =
		0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN1725;
	.byte =
		0x12,0x00,0x05,0x02;
	.byte4 = .LN1726;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1727;
	.byte =
		0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN1728;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1729;
	.byte =
		0x05,0x06,0x17,0x00,0x05,0x02;
	.byte4 = .LN1730;
	.byte =
		0x05,0x0C,0x03,0x70,0x01,0x00,0x05,0x02;
	.byte4 = .LN1731;
	.byte =
		0x05,0x04,0x15,0x00,0x05,0x02;
	.byte4 = .LN1732;
	.byte =
		0x03,0x77,0x01,0x00,0x05,0x02;
	.byte4 = .LN1733;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN1734;
	.byte =
		0x05,0x06,0x10,0x00,0x05,0x02;
	.byte4 = .LN1735;
	.byte =
		0x05,0x04,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN1736;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN1737;
	.byte =
		0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN1738;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN1739;
	.byte =
		0x05,0x06,0x16,0x00,0x05,0x02;
	.byte4 = .LN1740;
	.byte =
		0x05,0x21,0x01,0x00,0x05,0x02;
	.byte4 = .LN1741;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1742;
	.byte =
		0x05,0x1E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1743;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1744;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1745;
	.byte =
		0x05,0x04,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1746;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1747;
	.byte =
		0x05,0x25,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1748;
	.byte =
		0x05,0x0C,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1749;
	.byte =
		0x05,0x2D,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1750;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1751;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1752;
	.byte =
		0x05,0x2D,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1753;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1754;
	.byte =
		0x05,0x2D,0x01,0x00,0x05,0x02;
	.byte4 = .LN1755;
	.byte =
		0x05,0x0C,0x15,0x00,0x05,0x02;
	.byte4 = .LN1756;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1757;
	.byte =
		0x03,0x74,0x01,0x00,0x05,0x02;
	.byte4 = .LN1758;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1759;
	.byte =
		0x14,0x00,0x05,0x02;
	.byte4 = .LN1760;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN1761;
	.byte =
		0x03,0x74,0x01,0x00,0x05,0x02;
	.byte4 = .LN1762;
	.byte =
		0x13,0x00,0x05,0x02;
	.byte4 = .LN1763;
	.byte =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1764;
	.byte =
		0x05,0x0D,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1765;
	.byte =
		0x05,0x0C,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN1766;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1767;
	.byte =
		0x05,0x0C,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1768;
	.byte =
		0x05,0x04,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN1769;
	.byte =
		0x05,0x0C,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1770;
	.byte =
		0x12,0x00,0x05,0x02;
	.byte4 = .LN1771;
	.byte =
		0x05,0x04,0x03,0x74,0x01,0x00,0x05,0x02;
	.byte4 = .LN1772;
	.byte =
		0x05,0x0C,0x15,0x00,0x05,0x02;
	.byte4 = .LN1773;
	.byte =
		0x05,0x25,0x03,0x74,0x01,0x00,0x05,0x02;
	.byte4 = .LN1774;
	.byte =
		0x05,0x0D,0x16,0x00,0x05,0x02;
	.byte4 = .LN1775;
	.byte =
		0x03,0x75,0x01,0x00,0x05,0x02;
	.byte4 = .LN1776;
	.byte =
		0x14,0x00,0x05,0x02;
	.byte4 = .LN1777;
	.byte =
		0x03,0x75,0x01,0x00,0x05,0x02;
	.byte4 = .LN1778;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1779;
	.byte =
		0x05,0x04,0x14,0x00,0x05,0x02;
	.byte4 = .LN1780;
	.byte =
		0x05,0x0C,0x03,0x75,0x01,0x00,0x05,0x02;
	.byte4 = .LN1781;
	.byte =
		0x05,0x04,0x14,0x00,0x05,0x02;
	.byte4 = .LN1782;
	.byte =
		0x05,0x0C,0x03,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN1783;
	.byte =
		0x05,0x2D,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1784;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1785;
	.byte =
		0x05,0x2E,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1786;
	.byte =
		0x05,0x0C,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1787;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1788;
	.byte =
		0x05,0x2D,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1789;
	.byte =
		0x05,0x04,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1790;
	.byte =
		0x05,0x2D,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1791;
	.byte =
		0x05,0x0C,0x0D,0x00,0x05,0x02;
	.byte4 = .LN1792;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1793;
	.byte =
		0x05,0x2D,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN1794;
	.byte =
		0x05,0x25,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1795;
	.byte =
		0x05,0x0C,0x0D,0x00,0x05,0x02;
	.byte4 = .LN1796;
	.byte =
		0x05,0x2D,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1797;
	.byte =
		0x05,0x0C,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1798;
	.byte =
		0x05,0x2D,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1799;
	.byte =
		0x05,0x0D,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1800;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1801;
	.byte =
		0x05,0x01,0x0D,0x00,0x05,0x02;
	.byte4 = .LN1802;
	.byte =
		0x05,0x2D,0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN1803;
	.byte =
		0x05,0x01,0x10,0x00,0x05,0x02;
	.byte4 = .LN1804;
	.byte =
		0x05,0x2D,0x03,0x6D,0x01,0x00,0x05,0x02;
	.byte4 = .LN1805;
	.byte =
		0x16,0x00,0x05,0x02;
	.byte4 = .LN1806;
	.byte =
		0x05,0x2E,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1807;
	.byte =
		0x05,0x25,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1808;
	.byte =
		0x05,0x01,0x0D,0x00,0x05,0x02;
	.byte4 = .LN1809;
	.byte =
		0x05,0x13,0x01,0x00,0x05,0x02;
	.byte4 = .LN1810;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1811;
	.byte =
		0x05,0x1E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1812;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1813;
	.byte =
		0x05,0x1E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1814;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1815;
	.byte =
		0x05,0x1E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1816;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1817;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._packet_TRSL.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_SPORT_COM;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xEB,0x28,0x01,0x00,0x05,0x02;
	.byte4 = .LN1818;
	.byte =
		0x05,0x0C,0x16,0x00,0x05,0x02;
	.byte4 = .LN1819;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1820;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1821;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1822;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1823;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1824;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1825;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1826;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1827;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1828;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1829;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1830;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1831;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1832;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1833;
	.byte =
		0x05,0x04,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1834;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1835;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1836;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1837;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1838;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1839;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1840;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1841;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1842;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1843;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1844;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1845;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1846;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1847;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1848;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1849;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1850;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1851;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1852;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1853;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1854;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1855;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1856;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN1857;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1858;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1859;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1860;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1861;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1862;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1863;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1864;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._SPORT_COM.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_ERROR_IMP;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0x9B,0x29,0x01,0x00,0x05,0x02;
	.byte4 = .LN1865;
	.byte =
		0x05,0x02,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1866;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN1867;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1868;
	.byte =
		0x05,0x01,0x13,0x00,0x05,0x02;
	.byte4 = .LN._ERROR_IMP.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_Control_Impuls;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xB0,0x29,0x01,0x00,0x05,0x02;
	.byte4 = .LN1869;
	.byte =
		0x05,0x03,0x18,0x00,0x05,0x02;
	.byte4 = .LN1870;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1871;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1872;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1873;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN1874;
	.byte =
		0x05,0x1A,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1875;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1876;
	.byte =
		0x1A,0x00,0x05,0x02;
	.byte4 = .LN1877;
	.byte =
		0x03,0x6F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1878;
	.byte =
		0x19,0x00,0x05,0x02;
	.byte4 = .LN1879;
	.byte =
		0x03,0x70,0x01,0x00,0x05,0x02;
	.byte4 = .LN1880;
	.byte =
		0x12,0x00,0x05,0x02;
	.byte4 = .LN1881;
	.byte =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1882;
	.byte =
		0x05,0x16,0x1D,0x00,0x05,0x02;
	.byte4 = .LN1883;
	.byte =
		0x05,0x03,0x03,0x73,0x01,0x00,0x05,0x02;
	.byte4 = .LN1884;
	.byte =
		0x05,0x16,0x15,0x00,0x05,0x02;
	.byte4 = .LN1885;
	.byte =
		0x05,0x03,0x03,0x73,0x01,0x00,0x05,0x02;
	.byte4 = .LN1886;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1887;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1888;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1889;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1890;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN1891;
	.byte =
		0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN1892;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN1893;
	.byte =
		0x05,0x02,0x10,0x00,0x05,0x02;
	.byte4 = .LN1894;
	.byte =
		0x05,0x03,0x03,0x74,0x01,0x00,0x05,0x02;
	.byte4 = .LN1895;
	.byte =
		0x05,0x02,0x15,0x00,0x05,0x02;
	.byte4 = .LN1896;
	.byte =
		0x05,0x03,0x03,0x74,0x01,0x00,0x05,0x02;
	.byte4 = .LN1897;
	.byte =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1898;
	.byte =
		0x05,0x03,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1899;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN1900;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN1901;
	.byte =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN1902;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1903;
	.byte =
		0x05,0x03,0x0F,0x00,0x05,0x02;
	.byte4 = .LN1904;
	.byte =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN1905;
	.byte =
		0x10,0x00,0x05,0x02;
	.byte4 = .LN1906;
	.byte =
		0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN1907;
	.byte =
		0x11,0x00,0x05,0x02;
	.byte4 = .LN1908;
	.byte =
		0x03,0x77,0x01,0x00,0x05,0x02;
	.byte4 = .LN1909;
	.byte =
		0x12,0x00,0x05,0x02;
	.byte4 = .LN1910;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN1911;
	.byte =
		0x03,0x74,0x01,0x00,0x05,0x02;
	.byte4 = .LN1912;
	.byte =
		0x12,0x00,0x05,0x02;
	.byte4 = .LN1913;
	.byte =
		0x05,0x02,0x15,0x00,0x05,0x02;
	.byte4 = .LN1914;
	.byte =
		0x05,0x19,0x01,0x00,0x05,0x02;
	.byte4 = .LN1915;
	.byte =
		0x05,0x2A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1916;
	.byte =
		0x05,0x42,0x01,0x00,0x05,0x02;
	.byte4 = .LN1917;
	.byte =
		0x05,0x03,0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1918;
	.byte =
		0x05,0x02,0x10,0x00,0x05,0x02;
	.byte4 = .LN1919;
	.byte =
		0x05,0x17,0x01,0x00,0x05,0x02;
	.byte4 = .LN1920;
	.byte =
		0x05,0x2A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1921;
	.byte =
		0x05,0x42,0x01,0x00,0x05,0x02;
	.byte4 = .LN1922;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1923;
	.byte =
		0x05,0x45,0x01,0x00,0x05,0x02;
	.byte4 = .LN1924;
	.byte =
		0x05,0x5B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1925;
	.byte =
		0x05,0x02,0x10,0x00,0x05,0x02;
	.byte4 = .LN1926;
	.byte =
		0x05,0x18,0x01,0x00,0x05,0x02;
	.byte4 = .LN1927;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1928;
	.byte =
		0x05,0x18,0x01,0x00,0x05,0x02;
	.byte4 = .LN1929;
	.byte =
		0x05,0x02,0x0E,0x00,0x05,0x02;
	.byte4 = .LN1930;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1931;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1932;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1933;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1934;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN1935;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN1936;
	.byte =
		0x05,0x2B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1937;
	.byte =
		0x05,0x3E,0x01,0x00,0x05,0x02;
	.byte4 = .LN1938;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1939;
	.byte =
		0x05,0x20,0x01,0x00,0x05,0x02;
	.byte4 = .LN1940;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1941;
	.byte =
		0x05,0x20,0x01,0x00,0x05,0x02;
	.byte4 = .LN1942;
	.byte =
		0x05,0x06,0x0D,0x00,0x05,0x02;
	.byte4 = .LN1943;
	.byte =
		0x05,0x1D,0x01,0x00,0x05,0x02;
	.byte4 = .LN1944;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1945;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1946;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1947;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1948;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1949;
	.byte =
		0x05,0x1D,0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1950;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1951;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1952;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1953;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1954;
	.byte =
		0x05,0x06,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN1955;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1956;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1957;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1958;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1959;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN1960;
	.byte =
		0x05,0x02,0x11,0x00,0x05,0x02;
	.byte4 = .LN1961;
	.byte =
		0x05,0x03,0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN1962;
	.byte =
		0x05,0x02,0x11,0x00,0x05,0x02;
	.byte4 = .LN1963;
	.byte =
		0x05,0x03,0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN1964;
	.byte =
		0x05,0x02,0x11,0x00,0x05,0x02;
	.byte4 = .LN1965;
	.byte =
		0x05,0x1F,0x01,0x00,0x05,0x02;
	.byte4 = .LN1966;
	.byte =
		0x05,0x3D,0x01,0x00,0x05,0x02;
	.byte4 = .LN1967;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1968;
	.byte =
		0x05,0x1A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1969;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1970;
	.byte =
		0x05,0x1A,0x01,0x00,0x05,0x02;
	.byte4 = .LN1971;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1972;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN1973;
	.byte =
		0x05,0x27,0x01,0x00,0x05,0x02;
	.byte4 = .LN1974;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1975;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1976;
	.byte =
		0x05,0x09,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1977;
	.byte =
		0x05,0x24,0x01,0x00,0x05,0x02;
	.byte4 = .LN1978;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1979;
	.byte =
		0x05,0x24,0x01,0x00,0x05,0x02;
	.byte4 = .LN1980;
	.byte =
		0x05,0x02,0x0D,0x00,0x05,0x02;
	.byte4 = .LN1981;
	.byte =
		0x05,0x1B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1982;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1983;
	.byte =
		0x05,0x1B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1984;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1985;
	.byte =
		0x05,0x1B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1986;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1987;
	.byte =
		0x05,0x1B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1988;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1989;
	.byte =
		0x05,0x1B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1990;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1991;
	.byte =
		0x05,0x1B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1992;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1993;
	.byte =
		0x05,0x1B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1994;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN1995;
	.byte =
		0x05,0x1B,0x01,0x00,0x05,0x02;
	.byte4 = .LN1996;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN1997;
	.byte =
		0x05,0x04,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1998;
	.byte =
		0x05,0x1C,0x01,0x00,0x05,0x02;
	.byte4 = .LN1999;
	.byte =
		0x05,0x0F,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2000;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2001;
	.byte =
		0x17,0x00,0x05,0x02;
	.byte4 = .LN2002;
	.byte =
		0x05,0x1B,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2003;
	.byte =
		0x05,0x04,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2004;
	.byte =
		0x05,0x1C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2005;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2006;
	.byte =
		0x05,0x31,0x01,0x00,0x05,0x02;
	.byte4 = .LN2007;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2008;
	.byte =
		0x05,0x31,0x01,0x00,0x05,0x02;
	.byte4 = .LN2009;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2010;
	.byte =
		0x05,0x37,0x01,0x00,0x05,0x02;
	.byte4 = .LN2011;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2012;
	.byte =
		0x05,0x37,0x01,0x00,0x05,0x02;
	.byte4 = .LN2013;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2014;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2015;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2016;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2017;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2018;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2019;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2020;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2021;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2022;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2023;
	.byte =
		0x05,0x06,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2024;
	.byte =
		0x05,0x17,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2025;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2026;
	.byte =
		0x05,0x11,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2027;
	.byte =
		0x05,0x04,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2028;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN2029;
	.byte =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2030;
	.byte =
		0x05,0x04,0x35,0x00,0x05,0x02;
	.byte4 = .LN2031;
	.byte =
		0x05,0x1C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2032;
	.byte =
		0x05,0x0E,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2033;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2034;
	.byte =
		0x05,0x0F,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2035;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2036;
	.byte =
		0x05,0x10,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2037;
	.byte =
		0x05,0x29,0x01,0x00,0x05,0x02;
	.byte4 = .LN2038;
	.byte =
		0x05,0x10,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2039;
	.byte =
		0x05,0x0F,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2040;
	.byte =
		0x05,0x2C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2041;
	.byte =
		0x05,0x05,0x0E,0x00,0x05,0x02;
	.byte4 = .LN2042;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN2043;
	.byte =
		0x05,0x1D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2044;
	.byte =
		0x05,0x0E,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2045;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2046;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2047;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2048;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2049;
	.byte =
		0x05,0x05,0x11,0x00,0x05,0x02;
	.byte4 = .LN2050;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN2051;
	.byte =
		0x05,0x1D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2052;
	.byte =
		0x05,0x0E,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2053;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2054;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2055;
	.byte =
		0x05,0x10,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2056;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2057;
	.byte =
		0x05,0x07,0x0F,0x00,0x05,0x02;
	.byte4 = .LN2058;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN2059;
	.byte =
		0x05,0x1F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2060;
	.byte =
		0x05,0x1B,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2061;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2062;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2063;
	.byte =
		0x05,0x1B,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2064;
	.byte =
		0x05,0x1C,0x12,0x00,0x05,0x02;
	.byte4 = .LN2065;
	.byte =
		0x05,0x20,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2066;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2067;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2068;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2069;
	.byte =
		0x05,0x0C,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2070;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2071;
	.byte =
		0x05,0x26,0x01,0x00,0x05,0x02;
	.byte4 = .LN2072;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2073;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2074;
	.byte =
		0x05,0x02,0x16,0x00,0x05,0x02;
	.byte4 = .LN2075;
	.byte =
		0x05,0x0D,0x03,0xFE,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2076;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2077;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2078;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2079;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2080;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2081;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2082;
	.byte =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN2083;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2084;
	.byte =
		0x10,0x00,0x05,0x02;
	.byte4 = .LN2085;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2086;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2087;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2088;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2089;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2090;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2091;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2092;
	.byte =
		0x05,0x0E,0x0E,0x00,0x05,0x02;
	.byte4 = .LN2093;
	.byte =
		0x05,0x10,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2094;
	.byte =
		0x05,0x0E,0x0E,0x00,0x05,0x02;
	.byte4 = .LN2095;
	.byte =
		0x05,0x32,0x01,0x00,0x05,0x02;
	.byte4 = .LN2096;
	.byte =
		0x05,0x0D,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2097;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2098;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2099;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2100;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2101;
	.byte =
		0x05,0x25,0x01,0x00,0x05,0x02;
	.byte4 = .LN2102;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2103;
	.byte =
		0x05,0x25,0x01,0x00,0x05,0x02;
	.byte4 = .LN2104;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN2105;
	.byte =
		0x05,0x0D,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._Control_Impuls.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_PPI_massiv;
	.byte =
		0x04,0x01,0x05,0x02,0x03,0x8D,0x2C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2106;
	.byte =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2107;
	.byte =
		0x05,0x02,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2108;
	.byte =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2109;
	.byte =
		0x05,0x06,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2110;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2111;
	.byte =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2112;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2113;
	.byte =
		0x05,0x09,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2114;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2115;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2116;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2117;
	.byte =
		0x05,0x01,0x11,0x00,0x05,0x02;
	.byte4 = .LN2118;
	.byte =
		0x05,0x0B,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2119;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2120;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2121;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2122;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2123;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2124;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2125;
	.byte =
		0x05,0x07,0x1F,0x00,0x05,0x02;
	.byte4 = .LN2126;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2127;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2128;
	.byte =
		0x05,0x15,0x01,0x00,0x05,0x02;
	.byte4 = .LN2129;
	.byte =
		0x05,0x07,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2130;
	.byte =
		0x05,0x0C,0x0F,0x00,0x05,0x02;
	.byte4 = .LN2131;
	.byte =
		0x05,0x0B,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2132;
	.byte =
		0x05,0x0C,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2133;
	.byte =
		0x05,0x06,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2134;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2135;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2136;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2137;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2138;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2139;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2140;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2141;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2142;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2143;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2144;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2145;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2146;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2147;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2148;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2149;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2150;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2151;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2152;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2153;
	.byte =
		0x05,0x07,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2154;
	.byte =
		0x05,0x0B,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2155;
	.byte =
		0x05,0x0C,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2156;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2157;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN2158;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN2159;
	.byte =
		0x03,0x71,0x01,0x00,0x05,0x02;
	.byte4 = .LN2160;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2161;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2162;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2163;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2164;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2165;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2166;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2167;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2168;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2169;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2170;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2171;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2172;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2173;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2174;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2175;
	.byte =
		0x05,0x09,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2176;
	.byte =
		0x05,0x1D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2177;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2178;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN2179;
	.byte =
		0x05,0x0B,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2180;
	.byte =
		0x05,0x09,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2181;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2182;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2183;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2184;
	.byte =
		0x05,0x0E,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2185;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2186;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2187;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2188;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2189;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2190;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2191;
	.byte =
		0x05,0x13,0x0E,0x00,0x05,0x02;
	.byte4 = .LN2192;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2193;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2194;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2195;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2196;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2197;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2198;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2199;
	.byte =
		0x05,0x13,0x20,0x00,0x05,0x02;
	.byte4 = .LN2200;
	.byte =
		0x05,0x0E,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2201;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2202;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2203;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2204;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2205;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2206;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2207;
	.byte =
		0x05,0x09,0x1F,0x00,0x05,0x02;
	.byte4 = .LN2208;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2209;
	.byte =
		0x05,0x0E,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2210;
	.byte =
		0x05,0x0F,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2211;
	.byte =
		0x05,0x07,0x0F,0x00,0x05,0x02;
	.byte4 = .LN2212;
	.byte =
		0x05,0x0F,0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN2213;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2214;
	.byte =
		0x05,0x07,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2215;
	.byte =
		0x05,0x13,0x01,0x00,0x05,0x02;
	.byte4 = .LN2216;
	.byte =
		0x05,0x02,0x0E,0x00,0x05,0x02;
	.byte4 = .LN2217;
	.byte =
		0x05,0x07,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2218;
	.byte =
		0x05,0x13,0x01,0x00,0x05,0x02;
	.byte4 = .LN2219;
	.byte =
		0x05,0x07,0x03,0xEA,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2220;
	.byte =
		0x05,0x15,0x01,0x00,0x05,0x02;
	.byte4 = .LN._PPI_massiv.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_massiv_time_setka;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xE3,0x2D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2221;
	.byte =
		0x05,0x03,0x1A,0x00,0x05,0x02;
	.byte4 = .LN2222;
	.byte =
		0x05,0x05,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2223;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2224;
	.byte =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2225;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2226;
	.byte =
		0x05,0x09,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2227;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2228;
	.byte =
		0x05,0x01,0x12,0x00,0x05,0x02;
	.byte4 = .LN2229;
	.byte =
		0x05,0x09,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2230;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2231;
	.byte =
		0x05,0x1D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2232;
	.byte =
		0x05,0x35,0x01,0x00,0x05,0x02;
	.byte4 = .LN2233;
	.byte =
		0x05,0x1D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2234;
	.byte =
		0x05,0x35,0x01,0x00,0x05,0x02;
	.byte4 = .LN2235;
	.byte =
		0x05,0x44,0x01,0x00,0x05,0x02;
	.byte4 = .LN2236;
	.byte =
		0x05,0x53,0x01,0x00,0x05,0x02;
	.byte4 = .LN2237;
	.byte =
		0x05,0x0D,0x1E,0x00,0x05,0x02;
	.byte4 = .LN2238;
	.byte =
		0x05,0x07,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2239;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2240;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2241;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN2242;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2243;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2244;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2245;
	.byte =
		0x16,0x00,0x05,0x02;
	.byte4 = .LN2246;
	.byte =
		0x03,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN2247;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2248;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2249;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2250;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2251;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2252;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2253;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2254;
	.byte =
		0x12,0x00,0x05,0x02;
	.byte4 = .LN2255;
	.byte =
		0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN2256;
	.byte =
		0x18,0x00,0x05,0x02;
	.byte4 = .LN2257;
	.byte =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN2258;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN2259;
	.byte =
		0x15,0x00,0x05,0x02;
	.byte4 = .LN2260;
	.byte =
		0x03,0x74,0x01,0x00,0x05,0x02;
	.byte4 = .LN2261;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2262;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2263;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2264;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2265;
	.byte =
		0x28,0x00,0x05,0x02;
	.byte4 = .LN2266;
	.byte =
		0x03,0x6B,0x01,0x00,0x05,0x02;
	.byte4 = .LN2267;
	.byte =
		0x03,0x74,0x01,0x00,0x05,0x02;
	.byte4 = .LN2268;
	.byte =
		0x2B,0x00,0x05,0x02;
	.byte4 = .LN2269;
	.byte =
		0x03,0x5F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2270;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2271;
	.byte =
		0x1A,0x00,0x05,0x02;
	.byte4 = .LN2272;
	.byte =
		0x03,0x70,0x01,0x00,0x05,0x02;
	.byte4 = .LN2273;
	.byte =
		0x27,0x00,0x05,0x02;
	.byte4 = .LN2274;
	.byte =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN2275;
	.byte =
		0x03,0x72,0x01,0x00,0x05,0x02;
	.byte4 = .LN2276;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN2277;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN2278;
	.byte =
		0x10,0x00,0x05,0x02;
	.byte4 = .LN2279;
	.byte =
		0x03,0x74,0x01,0x00,0x05,0x02;
	.byte4 = .LN2280;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2281;
	.byte =
		0x14,0x00,0x05,0x02;
	.byte4 = .LN2282;
	.byte =
		0x03,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN2283;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2284;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2285;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN2286;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN2287;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2288;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN2289;
	.byte =
		0x10,0x00,0x05,0x02;
	.byte4 = .LN2290;
	.byte =
		0x03,0x74,0x01,0x00,0x05,0x02;
	.byte4 = .LN2291;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2292;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2293;
	.byte =
		0x10,0x00,0x05,0x02;
	.byte4 = .LN2294;
	.byte =
		0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2295;
	.byte =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN2296;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN2297;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN2298;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2299;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN2300;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2301;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN2302;
	.byte =
		0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2303;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2304;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2305;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2306;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2307;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2308;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2309;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN2310;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN2311;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2312;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2313;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2314;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2315;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2316;
	.byte =
		0x05,0x1C,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2317;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN2318;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2319;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2320;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2321;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2322;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2323;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2324;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2325;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2326;
	.byte =
		0x05,0x0E,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2327;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2328;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2329;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2330;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2331;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2332;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2333;
	.byte =
		0x05,0x11,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2334;
	.byte =
		0x05,0x0B,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2335;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2336;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2337;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2338;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2339;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2340;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2341;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2342;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2343;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2344;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2345;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2346;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2347;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2348;
	.byte =
		0x05,0x11,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2349;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2350;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2351;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2352;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2353;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2354;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2355;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2356;
	.byte =
		0x05,0x12,0x0E,0x00,0x05,0x02;
	.byte4 = .LN2357;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2358;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2359;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN2360;
	.byte =
		0x05,0x12,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2361;
	.byte =
		0x05,0x09,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2362;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2363;
	.byte =
		0x05,0x0B,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2364;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2365;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2366;
	.byte =
		0x05,0x1C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2367;
	.byte =
		0x05,0x02,0x0F,0x00,0x05,0x02;
	.byte4 = .LN2368;
	.byte =
		0x05,0x07,0x03,0xEF,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2369;
	.byte =
		0x05,0x0B,0x13,0x00,0x05,0x02;
	.byte4 = .LN2370;
	.byte =
		0x05,0x0A,0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN2371;
	.byte =
		0x05,0x0B,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2372;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2373;
	.byte =
		0x05,0x1D,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2374;
	.byte =
		0x05,0x0B,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2375;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2376;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN._massiv_time_setka.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_Packet_TNC1;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xA4,0x30,0x01,0x00,0x05,0x02;
	.byte4 = .LN2377;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2378;
	.byte =
		0x05,0x1E,0x17,0x00,0x05,0x02;
	.byte4 = .LN2379;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2380;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2381;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2382;
	.byte =
		0x05,0x01,0x03,0x6E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2383;
	.byte =
		0x05,0x1E,0x1C,0x00,0x05,0x02;
	.byte4 = .LN2384;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2385;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2386;
	.byte =
		0x05,0x02,0x17,0x00,0x05,0x02;
	.byte4 = .LN2387;
	.byte =
		0x05,0x05,0x11,0x00,0x05,0x02;
	.byte4 = .LN2388;
	.byte =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN2389;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2390;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2391;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2392;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2393;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2394;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2395;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2396;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2397;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2398;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2399;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2400;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2401;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2402;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2403;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN2404;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2405;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2406;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2407;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2408;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2409;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2410;
	.byte =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2411;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2412;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2413;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2414;
	.byte =
		0x05,0x04,0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN2415;
	.byte =
		0x05,0x01,0x13,0x00,0x05,0x02;
	.byte4 = .LN2416;
	.byte =
		0x05,0x09,0x11,0x00,0x05,0x02;
	.byte4 = .LN2417;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2418;
	.byte =
		0x05,0x22,0x01,0x00,0x05,0x02;
	.byte4 = .LN2419;
	.byte =
		0x05,0x02,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2420;
	.byte =
		0x05,0x04,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2421;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2422;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2423;
	.byte =
		0x05,0x01,0x0E,0x00,0x05,0x02;
	.byte4 = .LN2424;
	.byte =
		0x05,0x18,0x01,0x00,0x05,0x02;
	.byte4 = .LN2425;
	.byte =
		0x05,0x37,0x01,0x00,0x05,0x02;
	.byte4 = .LN2426;
	.byte =
		0x05,0x52,0x01,0x00,0x05,0x02;
	.byte4 = .LN2427;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2428;
	.byte =
		0x05,0x17,0x01,0x00,0x05,0x02;
	.byte4 = .LN2429;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2430;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN2431;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2432;
	.byte =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN2433;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN2434;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2435;
	.byte =
		0x13,0x00,0x05,0x02;
	.byte4 = .LN2436;
	.byte =
		0x03,0x74,0x01,0x00,0x05,0x02;
	.byte4 = .LN2437;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2438;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2439;
	.byte =
		0x13,0x00,0x05,0x02;
	.byte4 = .LN2440;
	.byte =
		0x03,0x74,0x01,0x00,0x05,0x02;
	.byte4 = .LN2441;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2442;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2443;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2444;
	.byte =
		0x10,0x00,0x05,0x02;
	.byte4 = .LN2445;
	.byte =
		0x03,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN2446;
	.byte =
		0x14,0x00,0x05,0x02;
	.byte4 = .LN2447;
	.byte =
		0x03,0x75,0x01,0x00,0x05,0x02;
	.byte4 = .LN2448;
	.byte =
		0x05,0x03,0x18,0x00,0x05,0x02;
	.byte4 = .LN2449;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN2450;
	.byte =
		0x05,0x02,0x03,0x77,0x01,0x00,0x05,0x02;
	.byte4 = .LN2451;
	.byte =
		0x05,0x03,0x10,0x00,0x05,0x02;
	.byte4 = .LN2452;
	.byte =
		0x05,0x02,0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN2453;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2454;
	.byte =
		0x05,0x03,0x10,0x00,0x05,0x02;
	.byte4 = .LN2455;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2456;
	.byte =
		0x05,0x0B,0x45,0x00,0x05,0x02;
	.byte4 = .LN2457;
	.byte =
		0x05,0x07,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2458;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2459;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2460;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2461;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2462;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2463;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2464;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2465;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2466;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN2467;
	.byte =
		0x05,0x04,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2468;
	.byte =
		0x05,0x07,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2469;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2470;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2471;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2472;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2473;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2474;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2475;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2476;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2477;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2478;
	.byte =
		0x05,0x3C,0x28,0x00,0x05,0x02;
	.byte4 = .LN2479;
	.byte =
		0x05,0x09,0x03,0x66,0x01,0x00,0x05,0x02;
	.byte4 = .LN2480;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN2481;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN2482;
	.byte =
		0x05,0x38,0x01,0x00,0x05,0x02;
	.byte4 = .LN2483;
	.byte =
		0x05,0x4B,0x01,0x00,0x05,0x02;
	.byte4 = .LN2484;
	.byte =
		0x05,0x03,0x21,0x00,0x05,0x02;
	.byte4 = .LN2485;
	.byte =
		0x05,0x09,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2486;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2487;
	.byte =
		0x05,0x05,0x0E,0x00,0x05,0x02;
	.byte4 = .LN2488;
	.byte =
		0x05,0x09,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2489;
	.byte =
		0x05,0x05,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2490;
	.byte =
		0x05,0x1E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2491;
	.byte =
		0x05,0x3C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2492;
	.byte =
		0x05,0x57,0x01,0x00,0x05,0x02;
	.byte4 = .LN2493;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2494;
	.byte =
		0x05,0x1E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2495;
	.byte =
		0x05,0x3C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2496;
	.byte =
		0x05,0x57,0x01,0x00,0x05,0x02;
	.byte4 = .LN2497;
	.byte =
		0x05,0x0A,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2498;
	.byte =
		0x05,0x20,0x01,0x00,0x05,0x02;
	.byte4 = .LN2499;
	.byte =
		0x05,0x2E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2500;
	.byte =
		0x05,0x0A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2501;
	.byte =
		0x05,0x20,0x01,0x00,0x05,0x02;
	.byte4 = .LN2502;
	.byte =
		0x05,0x2E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2503;
	.byte =
		0x05,0x09,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2504;
	.byte =
		0x05,0x03,0x03,0x5C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2505;
	.byte =
		0x05,0x20,0x01,0x00,0x05,0x02;
	.byte4 = .LN2506;
	.byte =
		0x05,0x03,0x01,0x00,0x05,0x02;
	.byte4 = .LN2507;
	.byte =
		0x05,0x04,0x30,0x00,0x05,0x02;
	.byte4 = .LN2508;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2509;
	.byte =
		0x05,0x01,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2510;
	.byte =
		0x05,0x04,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2511;
	.byte =
		0x05,0x07,0x0F,0x00,0x05,0x02;
	.byte4 = .LN2512;
	.byte =
		0x05,0x04,0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN2513;
	.byte =
		0x05,0x07,0x0E,0x00,0x05,0x02;
	.byte4 = .LN2514;
	.byte =
		0x05,0x04,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2515;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2516;
	.byte =
		0x05,0x07,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2517;
	.byte =
		0x05,0x04,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2518;
	.byte =
		0x05,0x07,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2519;
	.byte =
		0x05,0x04,0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN2520;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2521;
	.byte =
		0x05,0x07,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2522;
	.byte =
		0x05,0x04,0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN2523;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2524;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2525;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2526;
	.byte =
		0x05,0x07,0x10,0x00,0x05,0x02;
	.byte4 = .LN2527;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2528;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2529;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2530;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2531;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2532;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2533;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2534;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2535;
	.byte =
		0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2536;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2537;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2538;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2539;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2540;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2541;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2542;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2543;
	.byte =
		0x05,0x01,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2544;
	.byte =
		0x05,0x05,0x0E,0x00,0x05,0x02;
	.byte4 = .LN2545;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2546;
	.byte =
		0x05,0x05,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2547;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2548;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2549;
	.byte =
		0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2550;
	.byte =
		0x05,0x02,0x11,0x00,0x05,0x02;
	.byte4 = .LN2551;
	.byte =
		0x05,0x05,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2552;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2553;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2554;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2555;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2556;
	.byte =
		0x05,0x05,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2557;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2558;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2559;
	.byte =
		0x05,0x1B,0x01,0x00,0x05,0x02;
	.byte4 = .LN2560;
	.byte =
		0x05,0x29,0x01,0x00,0x05,0x02;
	.byte4 = .LN2561;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2562;
	.byte =
		0x05,0x1B,0x01,0x00,0x05,0x02;
	.byte4 = .LN2563;
	.byte =
		0x05,0x29,0x01,0x00,0x05,0x02;
	.byte4 = .LN2564;
	.byte =
		0x05,0x05,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2565;
	.byte =
		0x05,0x02,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2566;
	.byte =
		0x05,0x05,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2567;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2568;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2569;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2570;
	.byte =
		0x05,0x1B,0x01,0x00,0x05,0x02;
	.byte4 = .LN2571;
	.byte =
		0x05,0x2B,0x01,0x00,0x05,0x02;
	.byte4 = .LN2572;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2573;
	.byte =
		0x05,0x1B,0x01,0x00,0x05,0x02;
	.byte4 = .LN2574;
	.byte =
		0x05,0x2B,0x01,0x00,0x05,0x02;
	.byte4 = .LN2575;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2576;
	.byte =
		0x05,0x01,0x03,0x5F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2577;
	.byte =
		0x05,0x1D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2578;
	.byte =
		0x05,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN2579;
	.byte =
		0x05,0x04,0x30,0x00,0x05,0x02;
	.byte4 = .LN2580;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2581;
	.byte =
		0x05,0x01,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2582;
	.byte =
		0x05,0x07,0x13,0x00,0x05,0x02;
	.byte4 = .LN2583;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2584;
	.byte =
		0x05,0x04,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2585;
	.byte =
		0x05,0x07,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2586;
	.byte =
		0x05,0x04,0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN2587;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2588;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2589;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2590;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2591;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2592;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2593;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2594;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2595;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2596;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2597;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2598;
	.byte =
		0x05,0x07,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2599;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2600;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2601;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2602;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2603;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2604;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2605;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2606;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2607;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2608;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2609;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2610;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2611;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2612;
	.byte =
		0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2613;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2614;
	.byte =
		0x05,0x01,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2615;
	.byte =
		0x05,0x03,0x0E,0x00,0x05,0x02;
	.byte4 = .LN2616;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2617;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2618;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2619;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2620;
	.byte =
		0x10,0x00,0x05,0x02;
	.byte4 = .LN2621;
	.byte =
		0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2622;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2623;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2624;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2625;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2626;
	.byte =
		0x05,0x03,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2627;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2628;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2629;
	.byte =
		0x05,0x19,0x01,0x00,0x05,0x02;
	.byte4 = .LN2630;
	.byte =
		0x05,0x27,0x01,0x00,0x05,0x02;
	.byte4 = .LN2631;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2632;
	.byte =
		0x05,0x19,0x01,0x00,0x05,0x02;
	.byte4 = .LN2633;
	.byte =
		0x05,0x27,0x01,0x00,0x05,0x02;
	.byte4 = .LN2634;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2635;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2636;
	.byte =
		0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2637;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2638;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2639;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2640;
	.byte =
		0x05,0x19,0x01,0x00,0x05,0x02;
	.byte4 = .LN2641;
	.byte =
		0x05,0x29,0x01,0x00,0x05,0x02;
	.byte4 = .LN2642;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2643;
	.byte =
		0x05,0x19,0x01,0x00,0x05,0x02;
	.byte4 = .LN2644;
	.byte =
		0x05,0x29,0x01,0x00,0x05,0x02;
	.byte4 = .LN2645;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2646;
	.byte =
		0x05,0x1D,0x03,0x62,0x01,0x00,0x05,0x02;
	.byte4 = .LN2647;
	.byte =
		0x05,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN2648;
	.byte =
		0x05,0x04,0x2D,0x00,0x05,0x02;
	.byte4 = .LN2649;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2650;
	.byte =
		0x05,0x01,0x12,0x00,0x05,0x02;
	.byte4 = .LN2651;
	.byte =
		0x05,0x02,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2652;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2653;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2654;
	.byte =
		0x05,0x02,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2655;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2656;
	.byte =
		0x05,0x18,0x01,0x00,0x05,0x02;
	.byte4 = .LN2657;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2658;
	.byte =
		0x05,0x18,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2659;
	.byte =
		0x05,0x01,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2660;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2661;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2662;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2663;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2664;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2665;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2666;
	.byte =
		0x05,0x04,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2667;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2668;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2669;
	.byte =
		0x05,0x0A,0x03,0xBE,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2670;
	.byte =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2671;
	.byte =
		0x05,0x0A,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2672;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2673;
	.byte =
		0x05,0x0D,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2674;
	.byte =
		0x05,0x0A,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2675;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2676;
	.byte =
		0x05,0x0D,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2677;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2678;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2679;
	.byte =
		0x05,0x23,0x01,0x00,0x05,0x02;
	.byte4 = .LN2680;
	.byte =
		0x05,0x31,0x01,0x00,0x05,0x02;
	.byte4 = .LN2681;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2682;
	.byte =
		0x05,0x23,0x01,0x00,0x05,0x02;
	.byte4 = .LN2683;
	.byte =
		0x05,0x31,0x01,0x00,0x05,0x02;
	.byte4 = .LN2684;
	.byte =
		0x05,0x06,0x03,0x9F,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2685;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2686;
	.byte =
		0x05,0x07,0x0F,0x00,0x05,0x02;
	.byte4 = .LN2687;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2688;
	.byte =
		0x05,0x06,0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN2689;
	.byte =
		0x05,0x07,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2690;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2691;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2692;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2693;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2694;
	.byte =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2695;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2696;
	.byte =
		0x03,0x73,0x01,0x00,0x05,0x02;
	.byte4 = .LN2697;
	.byte =
		0x05,0x07,0x19,0x00,0x05,0x02;
	.byte4 = .LN2698;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2699;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2700;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2701;
	.byte =
		0x05,0x1D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2702;
	.byte =
		0x05,0x2B,0x01,0x00,0x05,0x02;
	.byte4 = .LN2703;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2704;
	.byte =
		0x05,0x1D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2705;
	.byte =
		0x05,0x2B,0x01,0x00,0x05,0x02;
	.byte4 = .LN2706;
	.byte =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2707;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN2708;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2709;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2710;
	.byte =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN2711;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2712;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2713;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2714;
	.byte =
		0x05,0x05,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2715;
	.byte =
		0x05,0x07,0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN2716;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2717;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2718;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2719;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2720;
	.byte =
		0x05,0x05,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2721;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2722;
	.byte =
		0x05,0x07,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2723;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2724;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2725;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2726;
	.byte =
		0x05,0x1D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2727;
	.byte =
		0x05,0x2B,0x01,0x00,0x05,0x02;
	.byte4 = .LN2728;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2729;
	.byte =
		0x05,0x1D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2730;
	.byte =
		0x05,0x2B,0x01,0x00,0x05,0x02;
	.byte4 = .LN2731;
	.byte =
		0x05,0x05,0x03,0x9C,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2732;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2733;
	.byte =
		0x05,0x05,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2734;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2735;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2736;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2737;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN._Packet_TNC1.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_MU_TEST;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xC0,0x34,0x01,0x00,0x05,0x02;
	.byte4 = .LN2738;
	.byte =
		0x05,0x03,0x27,0x00,0x05,0x02;
	.byte4 = .LN2739;
	.byte =
		0x05,0x01,0x03,0x62,0x01,0x00,0x05,0x02;
	.byte4 = .LN2740;
	.byte =
		0x05,0x02,0x1E,0x00,0x05,0x02;
	.byte4 = .LN2741;
	.byte =
		0x05,0x03,0x12,0x00,0x05,0x02;
	.byte4 = .LN2742;
	.byte =
		0x05,0x02,0x03,0x77,0x01,0x00,0x05,0x02;
	.byte4 = .LN2743;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2744;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2745;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2746;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2747;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2748;
	.byte =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2749;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2750;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2751;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2752;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2753;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2754;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2755;
	.byte =
		0x15,0x00,0x05,0x02;
	.byte4 = .LN2756;
	.byte =
		0x03,0x77,0x01,0x00,0x05,0x02;
	.byte4 = .LN2757;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2758;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2759;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2760;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2761;
	.byte =
		0x03,0x77,0x01,0x00,0x05,0x02;
	.byte4 = .LN2762;
	.byte =
		0x12,0x00,0x05,0x02;
	.byte4 = .LN2763;
	.byte =
		0x03,0x77,0x01,0x00,0x05,0x02;
	.byte4 = .LN2764;
	.byte =
		0x12,0x00,0x05,0x02;
	.byte4 = .LN2765;
	.byte =
		0x03,0x77,0x01,0x00,0x05,0x02;
	.byte4 = .LN2766;
	.byte =
		0x12,0x00,0x05,0x02;
	.byte4 = .LN2767;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2768;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2769;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2770;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2771;
	.byte =
		0x05,0x0E,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2772;
	.byte =
		0x05,0x02,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2773;
	.byte =
		0x05,0x03,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2774;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2775;
	.byte =
		0x05,0x03,0x11,0x00,0x05,0x02;
	.byte4 = .LN2776;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2777;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2778;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2779;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2780;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2781;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2782;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2783;
	.byte =
		0x12,0x00,0x05,0x02;
	.byte4 = .LN2784;
	.byte =
		0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN2785;
	.byte =
		0x11,0x00,0x05,0x02;
	.byte4 = .LN2786;
	.byte =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN2787;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2788;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2789;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2790;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2791;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2792;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2793;
	.byte =
		0x10,0x00,0x05,0x02;
	.byte4 = .LN2794;
	.byte =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN2795;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2796;
	.byte =
		0x12,0x00,0x05,0x02;
	.byte4 = .LN2797;
	.byte =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN2798;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2799;
	.byte =
		0x05,0x01,0x11,0x00,0x05,0x02;
	.byte4 = .LN2800;
	.byte =
		0x05,0x03,0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN2801;
	.byte =
		0x05,0x01,0x0F,0x00,0x05,0x02;
	.byte4 = .LN2802;
	.byte =
		0x05,0x03,0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN2803;
	.byte =
		0x05,0x01,0x0E,0x00,0x05,0x02;
	.byte4 = .LN2804;
	.byte =
		0x05,0x0D,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2805;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2806;
	.byte =
		0x05,0x0A,0x01,0x00,0x05,0x02;
	.byte4 = .LN2807;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2808;
	.byte =
		0x05,0x0A,0x01,0x00,0x05,0x02;
	.byte4 = .LN2809;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2810;
	.byte =
		0x05,0x0A,0x01,0x00,0x05,0x02;
	.byte4 = .LN2811;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2812;
	.byte =
		0x05,0x0A,0x01,0x00,0x05,0x02;
	.byte4 = .LN2813;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2814;
	.byte =
		0x05,0x0A,0x01,0x00,0x05,0x02;
	.byte4 = .LN2815;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2816;
	.byte =
		0x05,0x0A,0x01,0x00,0x05,0x02;
	.byte4 = .LN2817;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2818;
	.byte =
		0x05,0x0A,0x01,0x00,0x05,0x02;
	.byte4 = .LN2819;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2820;
	.byte =
		0x05,0x0A,0x01,0x00,0x05,0x02;
	.byte4 = .LN2821;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2822;
	.byte =
		0x05,0x0A,0x01,0x00,0x05,0x02;
	.byte4 = .LN2823;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2824;
	.byte =
		0x05,0x03,0x14,0x00,0x05,0x02;
	.byte4 = .LN2825;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2826;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2827;
	.byte =
		0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN2828;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN2829;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2830;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2831;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2832;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2833;
	.byte =
		0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN2834;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2835;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2836;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2837;
	.byte =
		0x05,0x02,0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN2838;
	.byte =
		0x05,0x01,0x2C,0x00,0x05,0x02;
	.byte4 = .LN2839;
	.byte =
		0x05,0x03,0x03,0x60,0x01,0x00,0x05,0x02;
	.byte4 = .LN2840;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN2841;
	.byte =
		0x05,0x02,0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN2842;
	.byte =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2843;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2844;
	.byte =
		0x05,0x01,0x27,0x00,0x05,0x02;
	.byte4 = .LN2845;
	.byte =
		0x05,0x03,0x35,0x00,0x05,0x02;
	.byte4 = .LN2846;
	.byte =
		0x25,0x00,0x05,0x02;
	.byte4 = .LN2847;
	.byte =
		0x03,0x5F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2848;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2849;
	.byte =
		0x23,0x00,0x05,0x02;
	.byte4 = .LN2850;
	.byte =
		0x05,0x02,0x03,0x48,0x01,0x00,0x05,0x02;
	.byte4 = .LN2851;
	.byte =
		0x05,0x03,0x26,0x00,0x05,0x02;
	.byte4 = .LN2852;
	.byte =
		0x25,0x00,0x05,0x02;
	.byte4 = .LN2853;
	.byte =
		0x05,0x02,0x03,0x41,0x01,0x00,0x05,0x02;
	.byte4 = .LN2854;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN2855;
	.byte =
		0x03,0x77,0x01,0x00,0x05,0x02;
	.byte4 = .LN2856;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2857;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2858;
	.byte =
		0x05,0x03,0x2B,0x00,0x05,0x02;
	.byte4 = .LN2859;
	.byte =
		0x25,0x00,0x05,0x02;
	.byte4 = .LN2860;
	.byte =
		0x05,0x02,0x03,0x43,0x01,0x00,0x05,0x02;
	.byte4 = .LN2861;
	.byte =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN2862;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2863;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2864;
	.byte =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN2865;
	.byte =
		0x05,0x03,0x1A,0x00,0x05,0x02;
	.byte4 = .LN2866;
	.byte =
		0x05,0x02,0x03,0x75,0x01,0x00,0x05,0x02;
	.byte4 = .LN2867;
	.byte =
		0x05,0x03,0x14,0x00,0x05,0x02;
	.byte4 = .LN2868;
	.byte =
		0x05,0x02,0x03,0x75,0x01,0x00,0x05,0x02;
	.byte4 = .LN2869;
	.byte =
		0x05,0x03,0x15,0x00,0x05,0x02;
	.byte4 = .LN2870;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2871;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2872;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2873;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2874;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2875;
	.byte =
		0x05,0x02,0x03,0x72,0x01,0x00,0x05,0x02;
	.byte4 = .LN2876;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN2877;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN2878;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN2879;
	.byte =
		0x05,0x03,0x13,0x00,0x05,0x02;
	.byte4 = .LN2880;
	.byte =
		0x05,0x02,0x03,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN2881;
	.byte =
		0x05,0x03,0x13,0x00,0x05,0x02;
	.byte4 = .LN2882;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2883;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2884;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2885;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2886;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN2887;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2888;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN2889;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2890;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2891;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2892;
	.byte =
		0x1A,0x00,0x05,0x02;
	.byte4 = .LN2893;
	.byte =
		0x03,0x6F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2894;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2895;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2896;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2897;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2898;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2899;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2900;
	.byte =
		0x24,0x00,0x05,0x02;
	.byte4 = .LN2901;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2902;
	.byte =
		0x03,0x59,0x01,0x00,0x05,0x02;
	.byte4 = .LN2903;
	.byte =
		0x1F,0x00,0x05,0x02;
	.byte4 = .LN2904;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN2905;
	.byte =
		0x03,0x70,0x01,0x00,0x05,0x02;
	.byte4 = .LN2906;
	.byte =
		0x1E,0x00,0x05,0x02;
	.byte4 = .LN2907;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN2908;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN2909;
	.byte =
		0x03,0x6B,0x01,0x00,0x05,0x02;
	.byte4 = .LN2910;
	.byte =
		0x1E,0x00,0x05,0x02;
	.byte4 = .LN2911;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN2912;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN2913;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN2914;
	.byte =
		0x25,0x00,0x05,0x02;
	.byte4 = .LN2915;
	.byte =
		0x03,0x69,0x01,0x00,0x05,0x02;
	.byte4 = .LN2916;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2917;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2918;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2919;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN2920;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN2921;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN2922;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN2923;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN2924;
	.byte =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN2925;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN2926;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2927;
	.byte =
		0x05,0x01,0x20,0x00,0x05,0x02;
	.byte4 = .LN._MU_TEST.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_TNC_ERROR;
	.byte =
		0x04,0x01,0x05,0x02,0x03,0xE7,0x1E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2928;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2929;
	.byte =
		0x05,0x06,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2930;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2931;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2932;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2933;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2934;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2935;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2936;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2937;
	.byte =
		0x05,0x04,0x0C,0x00,0x05,0x02;
	.byte4 = .LN2938;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2939;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2940;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2941;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2942;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2943;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2944;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2945;
	.byte =
		0x05,0x05,0x0F,0x00,0x05,0x02;
	.byte4 = .LN2946;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2947;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2948;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2949;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2950;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2951;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2952;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2953;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2954;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2955;
	.byte =
		0x05,0x06,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2956;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2957;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2958;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN2959;
	.byte =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2960;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN2961;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN2962;
	.byte =
		0x05,0x0A,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2963;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2964;
	.byte =
		0x05,0x11,0x01,0x00,0x05,0x02;
	.byte4 = .LN2965;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2966;
	.byte =
		0x05,0x17,0x01,0x00,0x05,0x02;
	.byte4 = .LN2967;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2968;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN2969;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._TNC_ERROR.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_Avariya_test;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xA8,0x1F,0x01,0x00,0x05,0x02;
	.byte4 = .LN2970;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2971;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2972;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2973;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2974;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN2975;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2976;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2977;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2978;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN2979;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2980;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2981;
	.byte =
		0x05,0x0D,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2982;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2983;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._Avariya_test.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_buf_txt;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xC3,0x36,0x01,0x00,0x05,0x02;
	.byte4 = .LN2984;
	.byte =
		0x05,0x0A,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2985;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2986;
	.byte =
		0x05,0x0C,0x0B,0x00,0x05,0x02;
	.byte4 = .LN2987;
	.byte =
		0x05,0x0B,0x0A,0x00,0x05,0x02;
	.byte4 = .LN2988;
	.byte =
		0x05,0x03,0x01,0x00,0x05,0x02;
	.byte4 = .LN2989;
	.byte =
		0x05,0x0B,0x01,0x00,0x05,0x02;
	.byte4 = .LN2990;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN2991;
	.byte =
		0x05,0x0A,0x0F,0x00,0x05,0x02;
	.byte4 = .LN2992;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._buf_txt.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_INF_UART_SRV2;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0x9A,0x37,0x01,0x00,0x05,0x02;
	.byte4 = .LN2993;
	.byte =
		0x05,0x03,0x14,0x00,0x05,0x02;
	.byte4 = .LN2994;
	.byte =
		0x05,0x05,0x0D,0x00,0x05,0x02;
	.byte4 = .LN2995;
	.byte =
		0x05,0x03,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN2996;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN2997;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN2998;
	.byte =
		0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN2999;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN3000;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3001;
	.byte =
		0x05,0x16,0x01,0x00,0x05,0x02;
	.byte4 = .LN3002;
	.byte =
		0x05,0x01,0x03,0x67,0x01,0x00,0x05,0x02;
	.byte4 = .LN3003;
	.byte =
		0x05,0x0A,0x23,0x00,0x05,0x02;
	.byte4 = .LN3004;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3005;
	.byte =
		0x05,0x0B,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3006;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3007;
	.byte =
		0x05,0x01,0x03,0x63,0x01,0x00,0x05,0x02;
	.byte4 = .LN3008;
	.byte =
		0x05,0x0A,0x27,0x00,0x05,0x02;
	.byte4 = .LN3009;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3010;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3011;
	.byte =
		0x05,0x16,0x03,0x77,0x01,0x00,0x05,0x02;
	.byte4 = .LN._INF_UART_SRV2.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_test_inf;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xFD,0x39,0x01,0x00,0x05,0x02;
	.byte4 = .LN3012;
	.byte =
		0x05,0x0B,0x0D,0x00,0x05,0x02;
	.byte4 = .LN3013;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3014;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN3015;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3016;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN3017;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3018;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN3019;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3020;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN3021;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3022;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN3023;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3024;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN3025;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3026;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN3027;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3028;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN3029;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3030;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN3031;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3032;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN3033;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3034;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN3035;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3036;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN3037;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3038;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN3039;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3040;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN3041;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3042;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN3043;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3044;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN3045;
	.byte =
		0x05,0x0B,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3046;
	.byte =
		0x05,0x01,0x20,0x00,0x05,0x02;
	.byte4 = .LN._test_inf.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_INIT_START_PACHKA;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xAE,0x3A,0x01,0x00,0x05,0x02;
	.byte4 = .LN3047;
	.byte =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.byte4 = .LN3048;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN3049;
	.byte =
		0x05,0x04,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3050;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3051;
	.byte =
		0x05,0x03,0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN3052;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3053;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3054;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3055;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3056;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3057;
	.byte =
		0x05,0x06,0x0D,0x00,0x05,0x02;
	.byte4 = .LN3058;
	.byte =
		0x05,0x04,0x5D,0x00,0x05,0x02;
	.byte4 = .LN3059;
	.byte =
		0x05,0x06,0x03,0xAD,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3060;
	.byte =
		0x05,0x04,0x5C,0x00,0x05,0x02;
	.byte4 = .LN3061;
	.byte =
		0x05,0x05,0x03,0xAF,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3062;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3063;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3064;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3065;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3066;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3067;
	.byte =
		0x05,0x04,0x0E,0x00,0x05,0x02;
	.byte4 = .LN3068;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3069;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3070;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3071;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3072;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3073;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3074;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3075;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3076;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3077;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3078;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3079;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN3080;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN3081;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3082;
	.byte =
		0x05,0x05,0x11,0x00,0x05,0x02;
	.byte4 = .LN3083;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3084;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3085;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3086;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3087;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3088;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3089;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3090;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3091;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3092;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3093;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3094;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3095;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3096;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3097;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3098;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3099;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3100;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3101;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3102;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3103;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3104;
	.byte =
		0x05,0x06,0x0D,0x00,0x05,0x02;
	.byte4 = .LN3105;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3106;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3107;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3108;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3109;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN3110;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3111;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN3112;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3113;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3114;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN3115;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3116;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3117;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3118;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3119;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3120;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3121;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3122;
	.byte =
		0x05,0x0D,0x1E,0x00,0x05,0x02;
	.byte4 = .LN3123;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3124;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3125;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3126;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3127;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3128;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3129;
	.byte =
		0x03,0x6C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3130;
	.byte =
		0x05,0x06,0x0E,0x00,0x05,0x02;
	.byte4 = .LN3131;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3132;
	.byte =
		0x05,0x02,0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN3133;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3134;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3135;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3136;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3137;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3138;
	.byte =
		0x05,0x06,0x0E,0x00,0x05,0x02;
	.byte4 = .LN3139;
	.byte =
		0x05,0x11,0x01,0x00,0x05,0x02;
	.byte4 = .LN3140;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3141;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3142;
	.byte =
		0x05,0x10,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3143;
	.byte =
		0x05,0x04,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3144;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3145;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3146;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3147;
	.byte =
		0x05,0x10,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3148;
	.byte =
		0x05,0x14,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3149;
	.byte =
		0x05,0x03,0x01,0x00,0x05,0x02;
	.byte4 = .LN3150;
	.byte =
		0x05,0x14,0x01,0x00,0x05,0x02;
	.byte4 = .LN._INIT_START_PACHKA.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_Test_pachka;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xAB,0x2F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3151;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3152;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3153;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3154;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3155;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3156;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3157;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3158;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3159;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3160;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3161;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3162;
	.byte =
		0x05,0x1B,0x01,0x00,0x05,0x02;
	.byte4 = .LN3163;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3164;
	.byte =
		0x05,0x1B,0x01,0x00,0x05,0x02;
	.byte4 = .LN3165;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3166;
	.byte =
		0x05,0x1B,0x01,0x00,0x05,0x02;
	.byte4 = .LN3167;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3168;
	.byte =
		0x05,0x1B,0x01,0x00,0x05,0x02;
	.byte4 = .LN3169;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3170;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN3171;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3172;
	.byte =
		0x05,0x05,0x0E,0x00,0x05,0x02;
	.byte4 = .LN3173;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3174;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3175;
	.byte =
		0x05,0x1B,0x01,0x00,0x05,0x02;
	.byte4 = .LN3176;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3177;
	.byte =
		0x05,0x1B,0x01,0x00,0x05,0x02;
	.byte4 = .LN3178;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3179;
	.byte =
		0x05,0x1B,0x01,0x00,0x05,0x02;
	.byte4 = .LN3180;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3181;
	.byte =
		0x05,0x1B,0x01,0x00,0x05,0x02;
	.byte4 = .LN3182;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3183;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3184;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3185;
	.byte =
		0x05,0x08,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3186;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3187;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3188;
	.byte =
		0x05,0x1D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3189;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3190;
	.byte =
		0x05,0x1D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3191;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3192;
	.byte =
		0x05,0x1D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3193;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3194;
	.byte =
		0x05,0x1D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3195;
	.byte =
		0x05,0x08,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3196;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN3197;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3198;
	.byte =
		0x05,0x06,0x0E,0x00,0x05,0x02;
	.byte4 = .LN3199;
	.byte =
		0x05,0x08,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3200;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3201;
	.byte =
		0x05,0x1E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3202;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3203;
	.byte =
		0x05,0x1E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3204;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3205;
	.byte =
		0x05,0x1E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3206;
	.byte =
		0x05,0x08,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3207;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3208;
	.byte =
		0x05,0x05,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3209;
	.byte =
		0x05,0x08,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3210;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3211;
	.byte =
		0x05,0x06,0x0F,0x00,0x05,0x02;
	.byte4 = .LN3212;
	.byte =
		0x05,0x08,0x0D,0x00,0x05,0x02;
	.byte4 = .LN3213;
	.byte =
		0x05,0x2F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3214;
	.byte =
		0x05,0x1E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3215;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3216;
	.byte =
		0x05,0x2F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3217;
	.byte =
		0x05,0x1E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3218;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3219;
	.byte =
		0x05,0x2F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3220;
	.byte =
		0x05,0x1E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3221;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3222;
	.byte =
		0x05,0x2F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3223;
	.byte =
		0x05,0x1E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3224;
	.byte =
		0x05,0x08,0x11,0x00,0x05,0x02;
	.byte4 = .LN3225;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3226;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3227;
	.byte =
		0x05,0x09,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3228;
	.byte =
		0x05,0x08,0x0E,0x00,0x05,0x02;
	.byte4 = .LN3229;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3230;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3231;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3232;
	.byte =
		0x05,0x1E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3233;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3234;
	.byte =
		0x05,0x1E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3235;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3236;
	.byte =
		0x05,0x1E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3237;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3238;
	.byte =
		0x05,0x1E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3239;
	.byte =
		0x05,0x08,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3240;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN3241;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3242;
	.byte =
		0x05,0x0C,0x0E,0x00,0x05,0x02;
	.byte4 = .LN3243;
	.byte =
		0x05,0x17,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3244;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._Test_pachka.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_K615_work;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0x8F,0x14,0x01,0x00,0x05,0x02;
	.byte4 = .LN3245;
	.byte =
		0x05,0x16,0x19,0x00,0x05,0x02;
	.byte4 = .LN3246;
	.byte =
		0x05,0x04,0x01,0x00,0x05,0x02;
	.byte4 = .LN3247;
	.byte =
		0x05,0x0A,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3248;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3249;
	.byte =
		0x05,0x07,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3250;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3251;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3252;
	.byte =
		0x05,0x07,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3253;
	.byte =
		0x05,0x0D,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3254;
	.byte =
		0x05,0x05,0x0E,0x00,0x05,0x02;
	.byte4 = .LN3255;
	.byte =
		0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3256;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN3257;
	.byte =
		0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3258;
	.byte =
		0x10,0x00,0x05,0x02;
	.byte4 = .LN3259;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3260;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN3261;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN3262;
	.byte =
		0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3263;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN3264;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN3265;
	.byte =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN3266;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN3267;
	.byte =
		0x05,0x14,0x0D,0x00,0x05,0x02;
	.byte4 = .LN3268;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3269;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3270;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3271;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3272;
	.byte =
		0x05,0x07,0x0E,0x00,0x05,0x02;
	.byte4 = .LN3273;
	.byte =
		0x11,0x00,0x05,0x02;
	.byte4 = .LN3274;
	.byte =
		0x05,0x06,0x11,0x00,0x05,0x02;
	.byte4 = .LN3275;
	.byte =
		0x05,0x09,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3276;
	.byte =
		0x05,0x06,0x1D,0x00,0x05,0x02;
	.byte4 = .LN3277;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3278;
	.byte =
		0x05,0x08,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3279;
	.byte =
		0x05,0x11,0x0E,0x00,0x05,0x02;
	.byte4 = .LN3280;
	.byte =
		0x05,0x08,0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN3281;
	.byte =
		0x05,0x11,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3282;
	.byte =
		0x05,0x08,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3283;
	.byte =
		0x05,0x11,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3284;
	.byte =
		0x05,0x08,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3285;
	.byte =
		0x05,0x11,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3286;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3287;
	.byte =
		0x05,0x10,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3288;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3289;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3290;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3291;
	.byte =
		0x05,0x10,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3292;
	.byte =
		0x05,0x07,0x14,0x00,0x05,0x02;
	.byte4 = .LN3293;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3294;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3295;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN3296;
	.byte =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN3297;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3298;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3299;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3300;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3301;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3302;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3303;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3304;
	.byte =
		0x05,0x17,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3305;
	.byte =
		0x05,0x22,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3306;
	.byte =
		0x05,0x17,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3307;
	.byte =
		0x05,0x10,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3308;
	.byte =
		0x05,0x1B,0x01,0x00,0x05,0x02;
	.byte4 = .LN3309;
	.byte =
		0x05,0x12,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3310;
	.byte =
		0x05,0x1A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3311;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3312;
	.byte =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3313;
	.byte =
		0x05,0x05,0x17,0x00,0x05,0x02;
	.byte4 = .LN3314;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN3315;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN3316;
	.byte =
		0x05,0x03,0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN3317;
	.byte =
		0x05,0x05,0x11,0x00,0x05,0x02;
	.byte4 = .LN3318;
	.byte =
		0x05,0x31,0x01,0x00,0x05,0x02;
	.byte4 = .LN3319;
	.byte =
		0x05,0x59,0x01,0x00,0x05,0x02;
	.byte4 = .LN3320;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3321;
	.byte =
		0x05,0x31,0x01,0x00,0x05,0x02;
	.byte4 = .LN3322;
	.byte =
		0x05,0x59,0x01,0x00,0x05,0x02;
	.byte4 = .LN3323;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3324;
	.byte =
		0x05,0x32,0x01,0x00,0x05,0x02;
	.byte4 = .LN3325;
	.byte =
		0x05,0x5A,0x01,0x00,0x05,0x02;
	.byte4 = .LN3326;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3327;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN3328;
	.byte =
		0x05,0x32,0x01,0x00,0x05,0x02;
	.byte4 = .LN3329;
	.byte =
		0x05,0x5A,0x01,0x00,0x05,0x02;
	.byte4 = .LN3330;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3331;
	.byte =
		0x05,0x32,0x01,0x00,0x05,0x02;
	.byte4 = .LN3332;
	.byte =
		0x05,0x5A,0x01,0x00,0x05,0x02;
	.byte4 = .LN3333;
	.byte =
		0x05,0x03,0x1E,0x00,0x05,0x02;
	.byte4 = .LN3334;
	.byte =
		0x05,0x02,0x03,0x6E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3335;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3336;
	.byte =
		0x05,0x03,0x1E,0x00,0x05,0x02;
	.byte4 = .LN3337;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3338;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3339;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3340;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3341;
	.byte =
		0x05,0x02,0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN3342;
	.byte =
		0x03,0x72,0x01,0x00,0x05,0x02;
	.byte4 = .LN3343;
	.byte =
		0x05,0x03,0x19,0x00,0x05,0x02;
	.byte4 = .LN3344;
	.byte =
		0x05,0x02,0x03,0x70,0x01,0x00,0x05,0x02;
	.byte4 = .LN3345;
	.byte =
		0x05,0x03,0x19,0x00,0x05,0x02;
	.byte4 = .LN3346;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3347;
	.byte =
		0x05,0x02,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3348;
	.byte =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.byte4 = .LN3349;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3350;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3351;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3352;
	.byte =
		0x05,0x07,0x0F,0x00,0x05,0x02;
	.byte4 = .LN3353;
	.byte =
		0x05,0x25,0x01,0x00,0x05,0x02;
	.byte4 = .LN3354;
	.byte =
		0x05,0x03,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3355;
	.byte =
		0x05,0x04,0x0E,0x00,0x05,0x02;
	.byte4 = .LN3356;
	.byte =
		0x05,0x16,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3357;
	.byte =
		0x05,0x04,0x01,0x00,0x05,0x02;
	.byte4 = .LN3358;
	.byte =
		0x12,0x00,0x05,0x02;
	.byte4 = .LN3359;
	.byte =
		0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN3360;
	.byte =
		0x11,0x00,0x05,0x02;
	.byte4 = .LN3361;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3362;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3363;
	.byte =
		0x05,0x15,0x03,0x8F,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3364;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3365;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3366;
	.byte =
		0x05,0x15,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3367;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3368;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3369;
	.byte =
		0x05,0x15,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3370;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3371;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3372;
	.byte =
		0x05,0x15,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3373;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3374;
	.byte =
		0x05,0x2C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3375;
	.byte =
		0x05,0x15,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3376;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3377;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3378;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3379;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3380;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3381;
	.byte =
		0x05,0x0E,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3382;
	.byte =
		0x05,0x05,0x03,0x6D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3383;
	.byte =
		0x05,0x23,0x01,0x00,0x05,0x02;
	.byte4 = .LN3384;
	.byte =
		0x05,0x16,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3385;
	.byte =
		0x05,0x11,0x03,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN3386;
	.byte =
		0x05,0x2F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3387;
	.byte =
		0x05,0x14,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._K615_work.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_TNO_START_PACHKA;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xAD,0x3B,0x01,0x00,0x05,0x02;
	.byte4 = .LN3388;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3389;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3390;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN3391;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3392;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3393;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3394;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3395;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3396;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3397;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3398;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3399;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3400;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3401;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN3402;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3403;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3404;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3405;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3406;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3407;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3408;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3409;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3410;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3411;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN3412;
	.byte =
		0x05,0x05,0x0D,0x00,0x05,0x02;
	.byte4 = .LN3413;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3414;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3415;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3416;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3417;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3418;
	.byte =
		0x05,0x03,0x11,0x00,0x05,0x02;
	.byte4 = .LN3419;
	.byte =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN3420;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3421;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3422;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3423;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3424;
	.byte =
		0x05,0x09,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3425;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3426;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3427;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3428;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3429;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3430;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3431;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3432;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3433;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3434;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3435;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3436;
	.byte =
		0x05,0x06,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3437;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3438;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3439;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3440;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3441;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3442;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3443;
	.byte =
		0x05,0x04,0x11,0x00,0x05,0x02;
	.byte4 = .LN3444;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN3445;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3446;
	.byte =
		0x05,0x03,0x03,0x77,0x01,0x00,0x05,0x02;
	.byte4 = .LN3447;
	.byte =
		0x05,0x05,0x0D,0x00,0x05,0x02;
	.byte4 = .LN3448;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3449;
	.byte =
		0x05,0x04,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3450;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3451;
	.byte =
		0x05,0x09,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3452;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3453;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3454;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3455;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3456;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3457;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3458;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3459;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN3460;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3461;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN3462;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3463;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3464;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN._TNO_START_PACHKA.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_PPI_sync;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0x99,0x3C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3465;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3466;
	.byte =
		0x05,0x1C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3467;
	.byte =
		0x05,0x2D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3468;
	.byte =
		0x05,0x42,0x01,0x00,0x05,0x02;
	.byte4 = .LN3469;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._PPI_sync.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_PPI_sz1;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xA0,0x3C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3470;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3471;
	.byte =
		0x05,0x26,0x01,0x00,0x05,0x02;
	.byte4 = .LN3472;
	.byte =
		0x05,0x35,0x01,0x00,0x05,0x02;
	.byte4 = .LN3473;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._PPI_sz1.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_PPI_sz2;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xA7,0x3C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3474;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3475;
	.byte =
		0x05,0x26,0x01,0x00,0x05,0x02;
	.byte4 = .LN3476;
	.byte =
		0x05,0x35,0x01,0x00,0x05,0x02;
	.byte4 = .LN3477;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._PPI_sz2.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_Control_bloka;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xBD,0x3C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3478;
	.byte =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3479;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._Control_bloka.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_Event_K615;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xAE,0x3C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3480;
	.byte =
		0x05,0x02,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3481;
	.byte =
		0x05,0x07,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3482;
	.byte =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3483;
	.byte =
		0x05,0x14,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3484;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._Event_K615.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_RESTART_SYNC;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xE6,0x3C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3485;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3486;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3487;
	.byte =
		0x05,0x0B,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3488;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3489;
	.byte =
		0x05,0x15,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3490;
	.byte =
		0x05,0x0A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3491;
	.byte =
		0x05,0x0E,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3492;
	.byte =
		0x05,0x03,0x01,0x00,0x05,0x02;
	.byte4 = .LN3493;
	.byte =
		0x05,0x0E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3494;
	.byte =
		0x05,0x14,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3495;
	.byte =
		0x05,0x03,0x01,0x00,0x05,0x02;
	.byte4 = .LN3496;
	.byte =
		0x05,0x14,0x01,0x00,0x05,0x02;
	.byte4 = .LN3497;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3498;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._RESTART_SYNC.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_TNO_SYNC;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xF3,0x3C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3499;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3500;
	.byte =
		0x05,0x1C,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3501;
	.byte =
		0x05,0x03,0x01,0x00,0x05,0x02;
	.byte4 = .LN3502;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3503;
	.byte =
		0x05,0x14,0x01,0x00,0x05,0x02;
	.byte4 = .LN3504;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3505;
	.byte =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3506;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3507;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3508;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3509;
	.byte =
		0x05,0x14,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3510;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3511;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3512;
	.byte =
		0x05,0x0A,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3513;
	.byte =
		0x05,0x0E,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3514;
	.byte =
		0x05,0x03,0x01,0x00,0x05,0x02;
	.byte4 = .LN3515;
	.byte =
		0x05,0x0E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3516;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3517;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3518;
	.byte =
		0x05,0x14,0x01,0x00,0x05,0x02;
	.byte4 = .LN3519;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3520;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN3521;
	.byte =
		0x2C,0x00,0x05,0x02;
	.byte4 = .LN3522;
	.byte =
		0x03,0x5C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3523;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3524;
	.byte =
		0x23,0x00,0x05,0x02;
	.byte4 = .LN3525;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3526;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3527;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN3528;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3529;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN3530;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3531;
	.byte =
		0x03,0x64,0x01,0x00,0x05,0x02;
	.byte4 = .LN3532;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3533;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3534;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3535;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3536;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3537;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3538;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3539;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3540;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3541;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3542;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3543;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3544;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3545;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3546;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3547;
	.byte =
		0x15,0x00,0x05,0x02;
	.byte4 = .LN3548;
	.byte =
		0x05,0x2D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3549;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3550;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3551;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3552;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3553;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3554;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._TNO_SYNC.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_Packet_FORM;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0x8E,0x3E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3555;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3556;
	.byte =
		0x05,0x0E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3557;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3558;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3559;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3560;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3561;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._Packet_FORM.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_Synhron_section;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xCD,0x3D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3562;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3563;
	.byte =
		0x2B,0x00,0x05,0x02;
	.byte4 = .LN3564;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3565;
	.byte =
		0x05,0x02,0x03,0x5F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3566;
	.byte =
		0x05,0x09,0x12,0x00,0x05,0x02;
	.byte4 = .LN3567;
	.byte =
		0x05,0x07,0x0F,0x00,0x05,0x02;
	.byte4 = .LN3568;
	.byte =
		0x05,0x13,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3569;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3570;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3571;
	.byte =
		0x05,0x02,0x0D,0x00,0x05,0x02;
	.byte4 = .LN3572;
	.byte =
		0x05,0x2E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3573;
	.byte =
		0x05,0x31,0x01,0x00,0x05,0x02;
	.byte4 = .LN3574;
	.byte =
		0x05,0x10,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3575;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3576;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3577;
	.byte =
		0x05,0x20,0x03,0x6F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3578;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN3579;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3580;
	.byte =
		0x05,0x2C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3581;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN3582;
	.byte =
		0x05,0x2C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3583;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3584;
	.byte =
		0x05,0x05,0x03,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN3585;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3586;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._Synhron_section.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_Event_Synhron;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xA6,0x2F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3587;
	.byte =
		0x05,0x19,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3588;
	.byte =
		0x05,0x03,0x01,0x00,0x05,0x02;
	.byte4 = .LN3589;
	.byte =
		0x05,0x31,0x01,0x00,0x05,0x02;
	.byte4 = .LN3590;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._Event_Synhron.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_BUF_SEARCH;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xD5,0x33,0x01,0x00,0x05,0x02;
	.byte4 = .LN3591;
	.byte =
		0x05,0x02,0x13,0x00,0x05,0x02;
	.byte4 = .LN3592;
	.byte =
		0x05,0x01,0x03,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN3593;
	.byte =
		0x05,0x02,0x13,0x00,0x05,0x02;
	.byte4 = .LN3594;
	.byte =
		0x05,0x12,0x0D,0x00,0x05,0x02;
	.byte4 = .LN3595;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3596;
	.byte =
		0x05,0x19,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3597;
	.byte =
		0x05,0x03,0x01,0x00,0x05,0x02;
	.byte4 = .LN3598;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN3599;
	.byte =
		0x05,0x02,0x18,0x00,0x05,0x02;
	.byte4 = .LN3600;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3601;
	.byte =
		0x05,0x02,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3602;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._BUF_SEARCH.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_KUK_IO;
	.byte =
		0x04,0x01,0x05,0x02,0x03,0x86,0x26,0x01,0x00,0x05,0x02;
	.byte4 = .LN3603;
	.byte =
		0x12,0x00,0x05,0x02;
	.byte4 = .LN3604;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3605;
	.byte =
		0x05,0x02,0x03,0x75,0x01,0x00,0x05,0x02;
	.byte4 = .LN3606;
	.byte =
		0x12,0x00,0x05,0x02;
	.byte4 = .LN3607;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3608;
	.byte =
		0x05,0x02,0x03,0x75,0x01,0x00,0x05,0x02;
	.byte4 = .LN3609;
	.byte =
		0x05,0x05,0x16,0x00,0x05,0x02;
	.byte4 = .LN3610;
	.byte =
		0x05,0x11,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3611;
	.byte =
		0x05,0x05,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3612;
	.byte =
		0x05,0x11,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3613;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN3614;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN3615;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3616;
	.byte =
		0x05,0x03,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3617;
	.byte =
		0x05,0x0B,0x14,0x00,0x05,0x02;
	.byte4 = .LN3618;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3619;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3620;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN3621;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3622;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3623;
	.byte =
		0x05,0x03,0x03,0x77,0x01,0x00,0x05,0x02;
	.byte4 = .LN3624;
	.byte =
		0x05,0x05,0x17,0x00,0x05,0x02;
	.byte4 = .LN3625;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3626;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3627;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3628;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3629;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3630;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3631;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3632;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3633;
	.byte =
		0x05,0x02,0x11,0x00,0x05,0x02;
	.byte4 = .LN3634;
	.byte =
		0x05,0x48,0x01,0x00,0x05,0x02;
	.byte4 = .LN3635;
	.byte =
		0x05,0x02,0x24,0x00,0x05,0x02;
	.byte4 = .LN3636;
	.byte =
		0x05,0x09,0x1E,0x00,0x05,0x02;
	.byte4 = .LN3637;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3638;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3639;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3640;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3641;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3642;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3643;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3644;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3645;
	.byte =
		0x05,0x05,0x1D,0x00,0x05,0x02;
	.byte4 = .LN3646;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3647;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3648;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3649;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3650;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3651;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3652;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3653;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3654;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3655;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN3656;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN3657;
	.byte =
		0x05,0x13,0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN3658;
	.byte =
		0x05,0x03,0x01,0x00,0x05,0x02;
	.byte4 = .LN3659;
	.byte =
		0x11,0x00,0x05,0x02;
	.byte4 = .LN3660;
	.byte =
		0x05,0x0E,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3661;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3662;
	.byte =
		0x05,0x0E,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3663;
	.byte =
		0x05,0x05,0x0D,0x00,0x05,0x02;
	.byte4 = .LN3664;
	.byte =
		0x05,0x03,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3665;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3666;
	.byte =
		0x05,0x21,0x01,0x00,0x05,0x02;
	.byte4 = .LN3667;
	.byte =
		0x05,0x3B,0x01,0x00,0x05,0x02;
	.byte4 = .LN3668;
	.byte =
		0x05,0x02,0x13,0x00,0x05,0x02;
	.byte4 = .LN3669;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3670;
	.byte =
		0x05,0x05,0x03,0x77,0x01,0x00,0x05,0x02;
	.byte4 = .LN3671;
	.byte =
		0x05,0x21,0x01,0x00,0x05,0x02;
	.byte4 = .LN3672;
	.byte =
		0x05,0x03,0x03,0x48,0x01,0x00,0x05,0x02;
	.byte4 = .LN3673;
	.byte =
		0x05,0x05,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3674;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3675;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3676;
	.byte =
		0x05,0x05,0x0D,0x00,0x05,0x02;
	.byte4 = .LN3677;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3678;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3679;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3680;
	.byte =
		0x05,0x03,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3681;
	.byte =
		0x11,0x00,0x05,0x02;
	.byte4 = .LN3682;
	.byte =
		0x05,0x0E,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._KUK_IO.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_INF_ANALIZ;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xE3,0x36,0x01,0x00,0x05,0x02;
	.byte4 = .LN3683;
	.byte =
		0x05,0x03,0x11,0x00,0x05,0x02;
	.byte4 = .LN3684;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3685;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3686;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3687;
	.byte =
		0x05,0x01,0x03,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN3688;
	.byte =
		0x05,0x05,0x15,0x00,0x05,0x02;
	.byte4 = .LN3689;
	.byte =
		0x05,0x03,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3690;
	.byte =
		0x16,0x00,0x05,0x02;
	.byte4 = .LN3691;
	.byte =
		0x05,0x05,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3692;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3693;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3694;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN3695;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3696;
	.byte =
		0x05,0x05,0x0D,0x00,0x05,0x02;
	.byte4 = .LN3697;
	.byte =
		0x05,0x06,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3698;
	.byte =
		0x05,0x04,0x0E,0x00,0x05,0x02;
	.byte4 = .LN3699;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3700;
	.byte =
		0x05,0x17,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3701;
	.byte =
		0x05,0x01,0x16,0x00,0x05,0x02;
	.byte4 = .LN3702;
	.byte =
		0x05,0x1E,0x03,0x68,0x01,0x00,0x05,0x02;
	.byte4 = .LN3703;
	.byte =
		0x05,0x24,0x01,0x00,0x05,0x02;
	.byte4 = .LN3704;
	.byte =
		0x05,0x05,0x1E,0x00,0x05,0x02;
	.byte4 = .LN3705;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN._INF_ANALIZ.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_buff_SPORT;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xF6,0x20,0x01,0x00,0x05,0x02;
	.byte4 = .LN3706;
	.byte =
		0x05,0x04,0x12,0x00,0x05,0x02;
	.byte4 = .LN3707;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3708;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3709;
	.byte =
		0x05,0x03,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3710;
	.byte =
		0x05,0x05,0x16,0x00,0x05,0x02;
	.byte4 = .LN3711;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3712;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3713;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3714;
	.byte =
		0x1B,0x00,0x05,0x02;
	.byte4 = .LN3715;
	.byte =
		0x03,0x70,0x01,0x00,0x05,0x02;
	.byte4 = .LN3716;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN3717;
	.byte =
		0x05,0x0E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3718;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3719;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN3720;
	.byte =
		0x17,0x00,0x05,0x02;
	.byte4 = .LN3721;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN3722;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3723;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3724;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN3725;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN3726;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN3727;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN3728;
	.byte =
		0x05,0x1B,0x03,0x6E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3729;
	.byte =
		0x05,0x03,0x01,0x00,0x05,0x02;
	.byte4 = .LN3730;
	.byte =
		0x05,0x01,0x20,0x00,0x05,0x02;
	.byte4 = .LN3731;
	.byte =
		0x05,0x05,0x03,0x6F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3732;
	.byte =
		0x05,0x10,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3733;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3734;
	.byte =
		0x05,0x0D,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._buff_SPORT.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_Ethernet_MU;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xC3,0x3C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3735;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3736;
	.byte =
		0x05,0x0B,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3737;
	.byte =
		0x05,0x02,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3738;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3739;
	.byte =
		0x05,0x23,0x01,0x00,0x05,0x02;
	.byte4 = .LN3740;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3741;
	.byte =
		0x05,0x27,0x01,0x00,0x05,0x02;
	.byte4 = .LN3742;
	.byte =
		0x05,0x11,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3743;
	.byte =
		0x05,0x05,0x0D,0x00,0x05,0x02;
	.byte4 = .LN3744;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3745;
	.byte =
		0x05,0x05,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3746;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3747;
	.byte =
		0x05,0x23,0x01,0x00,0x05,0x02;
	.byte4 = .LN3748;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3749;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._Ethernet_MU.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_Ethernet_OBMEN;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xDA,0x3C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3750;
	.byte =
		0x05,0x04,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3751;
	.byte =
		0x05,0x2B,0x01,0x00,0x05,0x02;
	.byte4 = .LN3752;
	.byte =
		0x05,0x10,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3753;
	.byte =
		0x05,0x01,0x0C,0x00,0x05,0x02;
	.byte4 = .LN._Ethernet_OBMEN.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_packet_SORT;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xF7,0x33,0x01,0x00,0x05,0x02;
	.byte4 = .LN3754;
	.byte =
		0x05,0x02,0x13,0x00,0x05,0x02;
	.byte4 = .LN3755;
	.byte =
		0x05,0x01,0x03,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN3756;
	.byte =
		0x05,0x02,0x13,0x00,0x05,0x02;
	.byte4 = .LN3757;
	.byte =
		0x05,0x12,0x0D,0x00,0x05,0x02;
	.byte4 = .LN3758;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3759;
	.byte =
		0x05,0x19,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3760;
	.byte =
		0x05,0x03,0x01,0x00,0x05,0x02;
	.byte4 = .LN3761;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN3762;
	.byte =
		0x14,0x00,0x05,0x02;
	.byte4 = .LN3763;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3764;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3765;
	.byte =
		0x05,0x0E,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3766;
	.byte =
		0x05,0x0B,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3767;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3768;
	.byte =
		0x05,0x02,0x15,0x00,0x05,0x02;
	.byte4 = .LN3769;
	.byte =
		0x05,0x0D,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3770;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3771;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3772;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3773;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3774;
	.byte =
		0x05,0x0A,0x01,0x00,0x05,0x02;
	.byte4 = .LN3775;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3776;
	.byte =
		0x05,0x0A,0x01,0x00,0x05,0x02;
	.byte4 = .LN3777;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3778;
	.byte =
		0x05,0x0A,0x01,0x00,0x05,0x02;
	.byte4 = .LN3779;
	.byte =
		0x05,0x05,0x10,0x00,0x05,0x02;
	.byte4 = .LN3780;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3781;
	.byte =
		0x05,0x04,0x13,0x00,0x05,0x02;
	.byte4 = .LN3782;
	.byte =
		0x05,0x02,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3783;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3784;
	.byte =
		0x03,0x60,0x01,0x00,0x05,0x02;
	.byte4 = .LN3785;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3786;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3787;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3788;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3789;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN._packet_SORT.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_VCU_sinh_form;
	.byte =
		0x04,0x01,0x05,0x02,0x03,0xC0,0x33,0x01,0x00,0x05,0x02;
	.byte4 = .LN3790;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3791;
	.byte =
		0x05,0x02,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3792;
	.byte =
		0x05,0x03,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3793;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3794;
	.byte =
		0x05,0x03,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3795;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3796;
	.byte =
		0x05,0x04,0x13,0x00,0x05,0x02;
	.byte4 = .LN3797;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3798;
	.byte =
		0x05,0x06,0x03,0x77,0x01,0x00,0x05,0x02;
	.byte4 = .LN3799;
	.byte =
		0x05,0x1A,0x01,0x00,0x05,0x02;
	.byte4 = .LN3800;
	.byte =
		0x05,0x06,0x01,0x00,0x05,0x02;
	.byte4 = .LN3801;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3802;
	.byte =
		0x05,0x1A,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3803;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3804;
	.byte =
		0x05,0x0A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3805;
	.byte =
		0x05,0x30,0x01,0x00,0x05,0x02;
	.byte4 = .LN3806;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3807;
	.byte =
		0x05,0x1D,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3808;
	.byte =
		0x05,0x29,0x01,0x00,0x05,0x02;
	.byte4 = .LN._VCU_sinh_form.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_func_TNO;
	.byte =
		0x04,0x01,0x05,0x02,0x03,0x8E,0x1D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3809;
	.byte =
		0x05,0x15,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3810;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3811;
	.byte =
		0x05,0x04,0x0E,0x00,0x05,0x02;
	.byte4 = .LN3812;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3813;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3814;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3815;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3816;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3817;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3818;
	.byte =
		0x10,0x00,0x05,0x02;
	.byte4 = .LN3819;
	.byte =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN3820;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3821;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3822;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3823;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3824;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3825;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3826;
	.byte =
		0x05,0x25,0x01,0x00,0x05,0x02;
	.byte4 = .LN3827;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3828;
	.byte =
		0x05,0x0F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3829;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3830;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3831;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3832;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3833;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3834;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3835;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3836;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3837;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3838;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3839;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3840;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3841;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3842;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3843;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3844;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3845;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3846;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3847;
	.byte =
		0x05,0x07,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3848;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3849;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3850;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3851;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3852;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3853;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3854;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3855;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3856;
	.byte =
		0x05,0x02,0x0E,0x00,0x05,0x02;
	.byte4 = .LN3857;
	.byte =
		0x05,0x2A,0x03,0x53,0x01,0x00,0x05,0x02;
	.byte4 = .LN._func_TNO.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_Packet_FINDER;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0x83,0x3E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3858;
	.byte =
		0x05,0x08,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3859;
	.byte =
		0x05,0x02,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3860;
	.byte =
		0x05,0x08,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3861;
	.byte =
		0x05,0x02,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3862;
	.byte =
		0x05,0x08,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3863;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3864;
	.byte =
		0x05,0x1B,0x01,0x00,0x05,0x02;
	.byte4 = .LN3865;
	.byte =
		0x05,0x3E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3866;
	.byte =
		0x05,0x01,0x0C,0x00,0x05,0x02;
	.byte4 = .LN._Packet_FINDER.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_TEST_INTERVAL_DISP;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0x9A,0x3E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3867;
	.byte =
		0x14,0x00,0x05,0x02;
	.byte4 = .LN._TEST_INTERVAL_DISP.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_RZV_proir;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xA8,0x3E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3868;
	.byte =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.byte4 = .LN3869;
	.byte =
		0x05,0x01,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3870;
	.byte =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.byte4 = .LN3871;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3872;
	.byte =
		0x05,0x06,0x10,0x00,0x05,0x02;
	.byte4 = .LN3873;
	.byte =
		0x05,0x03,0x12,0x00,0x05,0x02;
	.byte4 = .LN3874;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3875;
	.byte =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3876;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3877;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3878;
	.byte =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3879;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3880;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3881;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3882;
	.byte =
		0x05,0x02,0x0E,0x00,0x05,0x02;
	.byte4 = .LN3883;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3884;
	.byte =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3885;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3886;
	.byte =
		0x05,0x10,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3887;
	.byte =
		0x05,0x01,0x0D,0x00,0x05,0x02;
	.byte4 = .LN3888;
	.byte =
		0x05,0x03,0x03,0x5C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3889;
	.byte =
		0x05,0x23,0x01,0x00,0x05,0x02;
	.byte4 = .LN3890;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3891;
	.byte =
		0x05,0x23,0x01,0x00,0x05,0x02;
	.byte4 = .LN3892;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3893;
	.byte =
		0x05,0x0E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3894;
	.byte =
		0x05,0x05,0x03,0x77,0x01,0x00,0x05,0x02;
	.byte4 = .LN3895;
	.byte =
		0x05,0x25,0x01,0x00,0x05,0x02;
	.byte4 = .LN3896;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3897;
	.byte =
		0x05,0x25,0x01,0x00,0x05,0x02;
	.byte4 = .LN3898;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3899;
	.byte =
		0x05,0x0E,0x01,0x00,0x05,0x02;
	.byte4 = .LN._RZV_proir.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_LED_ERROR;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xDF,0x3E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3900;
	.byte =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.byte4 = .LN3901;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3902;
	.byte =
		0x23,0x00,0x05,0x02;
	.byte4 = .LN3903;
	.byte =
		0x05,0x11,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3904;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN3905;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3906;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3907;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3908;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3909;
	.byte =
		0x05,0x1A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3910;
	.byte =
		0x05,0x13,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3911;
	.byte =
		0x05,0x1A,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3912;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3913;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3914;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3915;
	.byte =
		0x05,0x11,0x0D,0x00,0x05,0x02;
	.byte4 = .LN3916;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3917;
	.byte =
		0x05,0x11,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3918;
	.byte =
		0x05,0x12,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3919;
	.byte =
		0x05,0x11,0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3920;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3921;
	.byte =
		0x05,0x04,0x10,0x00,0x05,0x02;
	.byte4 = .LN3922;
	.byte =
		0x05,0x0F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3923;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3924;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3925;
	.byte =
		0x05,0x04,0x0F,0x00,0x05,0x02;
	.byte4 = .LN3926;
	.byte =
		0x05,0x23,0x01,0x00,0x05,0x02;
	.byte4 = .LN3927;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3928;
	.byte =
		0x05,0x23,0x01,0x00,0x05,0x02;
	.byte4 = .LN3929;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3930;
	.byte =
		0x05,0x23,0x01,0x00,0x05,0x02;
	.byte4 = .LN3931;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3932;
	.byte =
		0x05,0x2C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3933;
	.byte =
		0x05,0x4C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3934;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3935;
	.byte =
		0x05,0x0A,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3936;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN3937;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3938;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3939;
	.byte =
		0x05,0x12,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3940;
	.byte =
		0x05,0x0A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3941;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3942;
	.byte =
		0x05,0x12,0x0F,0x00,0x05,0x02;
	.byte4 = .LN3943;
	.byte =
		0x05,0x09,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3944;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3945;
	.byte =
		0x05,0x12,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3946;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3947;
	.byte =
		0x05,0x19,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3948;
	.byte =
		0x05,0x12,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3949;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3950;
	.byte =
		0x05,0x0E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3951;
	.byte =
		0x05,0x09,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3952;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3953;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3954;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3955;
	.byte =
		0x05,0x05,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3956;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3957;
	.byte =
		0x05,0x01,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3958;
	.byte =
		0x05,0x14,0x03,0x9E,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3959;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN3960;
	.byte =
		0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN3961;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3962;
	.byte =
		0x05,0x08,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3963;
	.byte =
		0x05,0x14,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3964;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN3965;
	.byte =
		0x05,0x08,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3966;
	.byte =
		0x05,0x14,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3967;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3968;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3969;
	.byte =
		0x05,0x08,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3970;
	.byte =
		0x05,0x14,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3971;
	.byte =
		0x05,0x11,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3972;
	.byte =
		0x05,0x16,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3973;
	.byte =
		0x05,0x14,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3974;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3975;
	.byte =
		0x05,0x1D,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3976;
	.byte =
		0x05,0x14,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3977;
	.byte =
		0x05,0x1D,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3978;
	.byte =
		0x05,0x14,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3979;
	.byte =
		0x05,0x18,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3980;
	.byte =
		0x05,0x1D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._LED_ERROR.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_block_ON;
	.byte =
		0x04,0x01,0x05,0x02,0x03,0xDF,0x3F,0x01,0x00,0x05,0x02;
	.byte4 = .LN3981;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN3982;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3983;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3984;
	.byte =
		0x05,0x0E,0x0B,0x00,0x05,0x02;
	.byte4 = .LN3985;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3986;
	.byte =
		0x05,0x15,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3987;
	.byte =
		0x05,0x06,0x0E,0x00,0x05,0x02;
	.byte4 = .LN3988;
	.byte =
		0x05,0x15,0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN3989;
	.byte =
		0x05,0x06,0x0E,0x00,0x05,0x02;
	.byte4 = .LN3990;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3991;
	.byte =
		0x12,0x00,0x05,0x02;
	.byte4 = .LN3992;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3993;
	.byte =
		0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN3994;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3995;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN3996;
	.byte =
		0x10,0x00,0x05,0x02;
	.byte4 = .LN3997;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN3998;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN3999;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4000;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4001;
	.byte =
		0x05,0x16,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4002;
	.byte =
		0x05,0x21,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4003;
	.byte =
		0x05,0x16,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4004;
	.byte =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4005;
	.byte =
		0x05,0x1A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4006;
	.byte =
		0x05,0x11,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4007;
	.byte =
		0x05,0x19,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4008;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4009;
	.byte =
		0x05,0x0E,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4010;
	.byte =
		0x05,0x02,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4011;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN._block_ON.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_block_OFF_upr;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0x85,0xC0,0x00,0x01,0x00,0x05,0x02;
	.byte4 = .LN4012;
	.byte =
		0x05,0x02,0x3C,0x00,0x05,0x02;
	.byte4 = .LN4013;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4014;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4015;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4016;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN4017;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4018;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4019;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4020;
	.byte =
		0x05,0x04,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4021;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4022;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4023;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4024;
	.byte =
		0x05,0x0C,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4025;
	.byte =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4026;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4027;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4028;
	.byte =
		0x05,0x07,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4029;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4030;
	.byte =
		0x05,0x02,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4031;
	.byte =
		0x05,0x05,0x27,0x00,0x05,0x02;
	.byte4 = .LN4032;
	.byte =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4033;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4034;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4035;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4036;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN4037;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN4038;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN4039;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN4040;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4041;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4042;
	.byte =
		0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN4043;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4044;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4045;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4046;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN4047;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN4048;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4049;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN4050;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4051;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN4052;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN4053;
	.byte =
		0x05,0x01,0x10,0x00,0x05,0x02;
	.byte4 = .LN4054;
	.byte =
		0x05,0x11,0x03,0x57,0x01,0x00,0x05,0x02;
	.byte4 = .LN4055;
	.byte =
		0x05,0x07,0x13,0x00,0x05,0x02;
	.byte4 = .LN4056;
	.byte =
		0x05,0x0F,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4057;
	.byte =
		0x05,0x16,0x10,0x00,0x05,0x02;
	.byte4 = .LN4058;
	.byte =
		0x05,0x0E,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4059;
	.byte =
		0x05,0x16,0x03,0x77,0x01,0x00,0x05,0x02;
	.byte4 = .LN4060;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4061;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4062;
	.byte =
		0x05,0x07,0x03,0x63,0x01,0x00,0x05,0x02;
	.byte4 = .LN4063;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN._block_OFF_upr.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_block_upr;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xFC,0xC0,0x00,0x01,0x00,0x05,0x02;
	.byte4 = .LN4064;
	.byte =
		0x05,0x03,0x24,0x00,0x05,0x02;
	.byte4 = .LN4065;
	.byte =
		0x05,0x1C,0x01,0x00,0x05,0x02;
	.byte4 = .LN4066;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4067;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4068;
	.byte =
		0x05,0x29,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4069;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4070;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4071;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4072;
	.byte =
		0x05,0x0E,0x0E,0x00,0x05,0x02;
	.byte4 = .LN4073;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4074;
	.byte =
		0x05,0x34,0x01,0x00,0x05,0x02;
	.byte4 = .LN4075;
	.byte =
		0x05,0x4E,0x01,0x00,0x05,0x02;
	.byte4 = .LN4076;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4077;
	.byte =
		0x05,0x1A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4078;
	.byte =
		0x05,0x31,0x01,0x00,0x05,0x02;
	.byte4 = .LN4079;
	.byte =
		0x05,0x1A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4080;
	.byte =
		0x05,0x31,0x01,0x00,0x05,0x02;
	.byte4 = .LN4081;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4082;
	.byte =
		0x05,0x1A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4083;
	.byte =
		0x05,0x31,0x01,0x00,0x05,0x02;
	.byte4 = .LN4084;
	.byte =
		0x05,0x1A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4085;
	.byte =
		0x05,0x31,0x01,0x00,0x05,0x02;
	.byte4 = .LN4086;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4087;
	.byte =
		0x05,0x1A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4088;
	.byte =
		0x05,0x31,0x01,0x00,0x05,0x02;
	.byte4 = .LN4089;
	.byte =
		0x05,0x1A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4090;
	.byte =
		0x05,0x31,0x01,0x00,0x05,0x02;
	.byte4 = .LN4091;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4092;
	.byte =
		0x05,0x1A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4093;
	.byte =
		0x05,0x31,0x01,0x00,0x05,0x02;
	.byte4 = .LN4094;
	.byte =
		0x05,0x1A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4095;
	.byte =
		0x05,0x31,0x01,0x00,0x05,0x02;
	.byte4 = .LN4096;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4097;
	.byte =
		0x05,0x01,0x0F,0x00,0x05,0x02;
	.byte4 = .LN4098;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4099;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4100;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4101;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4102;
	.byte =
		0x05,0x02,0x14,0x00,0x05,0x02;
	.byte4 = .LN4103;
	.byte =
		0x05,0x20,0x01,0x00,0x05,0x02;
	.byte4 = .LN4104;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4105;
	.byte =
		0x05,0x20,0x01,0x00,0x05,0x02;
	.byte4 = .LN4106;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4107;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4108;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4109;
	.byte =
		0x05,0x20,0x01,0x00,0x05,0x02;
	.byte4 = .LN4110;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4111;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4112;
	.byte =
		0x05,0x05,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4113;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN4114;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4115;
	.byte =
		0x05,0x02,0x11,0x00,0x05,0x02;
	.byte4 = .LN4116;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4117;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4118;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4119;
	.byte =
		0x05,0x05,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4120;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4121;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4122;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4123;
	.byte =
		0x05,0x2D,0x01,0x00,0x05,0x02;
	.byte4 = .LN4124;
	.byte =
		0x05,0x02,0x13,0x00,0x05,0x02;
	.byte4 = .LN4125;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4126;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4127;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4128;
	.byte =
		0x05,0x02,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4129;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4130;
	.byte =
		0x05,0x06,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4131;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4132;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4133;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4134;
	.byte =
		0x05,0x47,0x01,0x00,0x05,0x02;
	.byte4 = .LN4135;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4136;
	.byte =
		0x05,0x2E,0x01,0x00,0x05,0x02;
	.byte4 = .LN4137;
	.byte =
		0x05,0x04,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4138;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4139;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4140;
	.byte =
		0x05,0x04,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4141;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4142;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4143;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4144;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4145;
	.byte =
		0x05,0x02,0x0F,0x00,0x05,0x02;
	.byte4 = .LN4146;
	.byte =
		0x05,0x07,0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4147;
	.byte =
		0x05,0x02,0x0F,0x00,0x05,0x02;
	.byte4 = .LN4148;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4149;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4150;
	.byte =
		0x05,0x0C,0x0E,0x00,0x05,0x02;
	.byte4 = .LN4151;
	.byte =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4152;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4153;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4154;
	.byte =
		0x05,0x07,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4155;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4156;
	.byte =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4157;
	.byte =
		0x05,0x1D,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4158;
	.byte =
		0x05,0x11,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4159;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4160;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4161;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4162;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN4163;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4164;
	.byte =
		0x05,0x12,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4165;
	.byte =
		0x05,0x11,0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN4166;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4167;
	.byte =
		0x05,0x0E,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4168;
	.byte =
		0x05,0x02,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4169;
	.byte =
		0x05,0x05,0x28,0x00,0x05,0x02;
	.byte4 = .LN4170;
	.byte =
		0x05,0x07,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4171;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN4172;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4173;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN4174;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4175;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4176;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4177;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN4178;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4179;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN4180;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN4181;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4182;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4183;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4184;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN4185;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4186;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN4187;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN4188;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN4189;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4190;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN4191;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN4192;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4193;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4194;
	.byte =
		0x05,0x01,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4195;
	.byte =
		0x05,0x11,0x03,0x53,0x01,0x00,0x05,0x02;
	.byte4 = .LN4196;
	.byte =
		0x05,0x07,0x13,0x00,0x05,0x02;
	.byte4 = .LN4197;
	.byte =
		0x05,0x0F,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4198;
	.byte =
		0x05,0x16,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4199;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN4200;
	.byte =
		0x05,0x0E,0x0F,0x00,0x05,0x02;
	.byte4 = .LN4201;
	.byte =
		0x05,0x07,0x03,0x4E,0x01,0x00,0x05,0x02;
	.byte4 = .LN4202;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4203;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4204;
	.byte =
		0x05,0x07,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4205;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4206;
	.byte =
		0x05,0x23,0x01,0x00,0x05,0x02;
	.byte4 = .LN4207;
	.byte =
		0x05,0x0E,0x03,0x4E,0x01,0x00,0x05,0x02;
	.byte4 = .LN4208;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4209;
	.byte =
		0x05,0x2D,0x01,0x00,0x05,0x02;
	.byte4 = .LN4210;
	.byte =
		0x05,0x47,0x03,0x75,0x01,0x00,0x05,0x02;
	.byte4 = .LN4211;
	.byte =
		0x05,0x65,0x01,0x00,0x05,0x02;
	.byte4 = .LN4212;
	.byte =
		0x05,0x47,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4213;
	.byte =
		0x05,0x65,0x01,0x00,0x05,0x02;
	.byte4 = .LN4214;
	.byte =
		0x05,0x47,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4215;
	.byte =
		0x05,0x65,0x01,0x00,0x05,0x02;
	.byte4 = .LN4216;
	.byte =
		0x05,0x49,0x03,0x69,0x01,0x00,0x05,0x02;
	.byte4 = .LN4217;
	.byte =
		0x05,0x60,0x01,0x00,0x05,0x02;
	.byte4 = .LN4218;
	.byte =
		0x05,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN4219;
	.byte =
		0x05,0x60,0x01,0x00,0x05,0x02;
	.byte4 = .LN4220;
	.byte =
		0x05,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN4221;
	.byte =
		0x05,0x49,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4222;
	.byte =
		0x05,0x60,0x01,0x00,0x05,0x02;
	.byte4 = .LN4223;
	.byte =
		0x05,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN4224;
	.byte =
		0x05,0x60,0x01,0x00,0x05,0x02;
	.byte4 = .LN4225;
	.byte =
		0x05,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN4226;
	.byte =
		0x05,0x49,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4227;
	.byte =
		0x05,0x60,0x01,0x00,0x05,0x02;
	.byte4 = .LN4228;
	.byte =
		0x05,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN4229;
	.byte =
		0x05,0x60,0x01,0x00,0x05,0x02;
	.byte4 = .LN4230;
	.byte =
		0x05,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN4231;
	.byte =
		0x05,0x49,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4232;
	.byte =
		0x05,0x60,0x01,0x00,0x05,0x02;
	.byte4 = .LN4233;
	.byte =
		0x05,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN4234;
	.byte =
		0x05,0x60,0x01,0x00,0x05,0x02;
	.byte4 = .LN4235;
	.byte =
		0x05,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN._block_upr.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_SYNC_obmen;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xCB,0xC2,0x00,0x01,0x00,0x05,0x02;
	.byte4 = .LN4236;
	.byte =
		0x05,0x02,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4237;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4238;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4239;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4240;
	.byte =
		0x05,0x23,0x01,0x00,0x05,0x02;
	.byte4 = .LN4241;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4242;
	.byte =
		0x05,0x20,0x01,0x00,0x05,0x02;
	.byte4 = .LN4243;
	.byte =
		0x05,0x23,0x01,0x00,0x05,0x02;
	.byte4 = .LN4244;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4245;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4246;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN4247;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4248;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4249;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4250;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4251;
	.byte =
		0x05,0x1F,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4252;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4253;
	.byte =
		0x05,0x02,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4254;
	.byte =
		0x05,0x10,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4255;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4256;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4257;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4258;
	.byte =
		0x05,0x02,0x10,0x00,0x05,0x02;
	.byte4 = .LN4259;
	.byte =
		0x05,0x5F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4260;
	.byte =
		0x05,0x62,0x01,0x00,0x05,0x02;
	.byte4 = .LN4261;
	.byte =
		0x05,0x0E,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4262;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._SYNC_obmen.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_WORK_REGIM;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xA7,0xC3,0x00,0x01,0x00,0x05,0x02;
	.byte4 = .LN4263;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4264;
	.byte =
		0x05,0x13,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4265;
	.byte =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4266;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4267;
	.byte =
		0x05,0x0C,0x01,0x00,0x05,0x02;
	.byte4 = .LN4268;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4269;
	.byte =
		0x05,0x12,0x01,0x00,0x05,0x02;
	.byte4 = .LN4270;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4271;
	.byte =
		0x05,0x25,0x01,0x00,0x05,0x02;
	.byte4 = .LN4272;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4273;
	.byte =
		0x05,0x04,0x25,0x00,0x05,0x02;
	.byte4 = .LN4274;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4275;
	.byte =
		0x05,0x2C,0x01,0x00,0x05,0x02;
	.byte4 = .LN4276;
	.byte =
		0x05,0x3B,0x01,0x00,0x05,0x02;
	.byte4 = .LN4277;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4278;
	.byte =
		0x05,0x27,0x01,0x00,0x05,0x02;
	.byte4 = .LN4279;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4280;
	.byte =
		0x05,0x38,0x01,0x00,0x05,0x02;
	.byte4 = .LN4281;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4282;
	.byte =
		0x05,0x04,0x1F,0x00,0x05,0x02;
	.byte4 = .LN4283;
	.byte =
		0x05,0x50,0x01,0x00,0x05,0x02;
	.byte4 = .LN4284;
	.byte =
		0x05,0x53,0x01,0x00,0x05,0x02;
	.byte4 = .LN4285;
	.byte =
		0x05,0x04,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4286;
	.byte =
		0x05,0x43,0x01,0x00,0x05,0x02;
	.byte4 = .LN4287;
	.byte =
		0x05,0x47,0x01,0x00,0x05,0x02;
	.byte4 = .LN4288;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4289;
	.byte =
		0x05,0x22,0x01,0x00,0x05,0x02;
	.byte4 = .LN4290;
	.byte =
		0x05,0x2B,0x01,0x00,0x05,0x02;
	.byte4 = .LN4291;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4292;
	.byte =
		0x05,0x06,0x03,0x67,0x01,0x00,0x05,0x02;
	.byte4 = .LN4293;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN4294;
	.byte =
		0x05,0x05,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4295;
	.byte =
		0x05,0x2C,0x01,0x00,0x05,0x02;
	.byte4 = .LN4296;
	.byte =
		0x05,0x4B,0x01,0x00,0x05,0x02;
	.byte4 = .LN4297;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4298;
	.byte =
		0x05,0x1C,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4299;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4300;
	.byte =
		0x05,0x11,0x03,0x4D,0x01,0x00,0x05,0x02;
	.byte4 = .LN4301;
	.byte =
		0x05,0x14,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4302;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4303;
	.byte =
		0x05,0x0E,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4304;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4305;
	.byte =
		0x05,0x05,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN4306;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4307;
	.byte =
		0x05,0x05,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN4308;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4309;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4310;
	.byte =
		0x05,0x07,0x0E,0x00,0x05,0x02;
	.byte4 = .LN4311;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4312;
	.byte =
		0x05,0x0D,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4313;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4314;
	.byte =
		0x05,0x22,0x01,0x00,0x05,0x02;
	.byte4 = .LN4315;
	.byte =
		0x05,0x25,0x01,0x00,0x05,0x02;
	.byte4 = .LN4316;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._WORK_REGIM.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_FAZA;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xFA,0xC3,0x00,0x01,0x00,0x05,0x02;
	.byte4 = .LN4317;
	.byte =
		0x05,0x0A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4318;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4319;
	.byte =
		0x05,0x21,0x01,0x00,0x05,0x02;
	.byte4 = .LN4320;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4321;
	.byte =
		0x05,0x21,0x01,0x00,0x05,0x02;
	.byte4 = .LN4322;
	.byte =
		0x05,0x0A,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4323;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._FAZA.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_IO;
	.byte =
		0x04,0x01,0x05,0x02,0x03,0xBF,0x16,0x01,0x00,0x05,0x02;
	.byte4 = .LN4324;
	.byte =
		0x05,0x03,0x11,0x00,0x05,0x02;
	.byte4 = .LN4325;
	.byte =
		0x05,0x02,0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN4326;
	.byte =
		0x05,0x03,0x12,0x00,0x05,0x02;
	.byte4 = .LN4327;
	.byte =
		0x05,0x1A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4328;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4329;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN4330;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN4331;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN4332;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4333;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN4334;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4335;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN4336;
	.byte =
		0x10,0x00,0x05,0x02;
	.byte4 = .LN4337;
	.byte =
		0x03,0x75,0x01,0x00,0x05,0x02;
	.byte4 = .LN4338;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4339;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4340;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4341;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN4342;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4343;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4344;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4345;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4346;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN4347;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4348;
	.byte =
		0x03,0x76,0x01,0x00,0x05,0x02;
	.byte4 = .LN4349;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4350;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN4351;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4352;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN4353;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN4354;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN4355;
	.byte =
		0x17,0x00,0x05,0x02;
	.byte4 = .LN4356;
	.byte =
		0x05,0x55,0x26,0x00,0x05,0x02;
	.byte4 = .LN4357;
	.byte =
		0x05,0x02,0x03,0x52,0x01,0x00,0x05,0x02;
	.byte4 = .LN4358;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4359;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4360;
	.byte =
		0x05,0x03,0x0E,0x00,0x05,0x02;
	.byte4 = .LN4361;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN4362;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4363;
	.byte =
		0x16,0x00,0x05,0x02;
	.byte4 = .LN4364;
	.byte =
		0x03,0x74,0x01,0x00,0x05,0x02;
	.byte4 = .LN4365;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4366;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4367;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4368;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4369;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4370;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4371;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4372;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4373;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4374;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4375;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4376;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4377;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4378;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN4379;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN4380;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN4381;
	.byte =
		0x05,0x02,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4382;
	.byte =
		0x05,0x03,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN4383;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4384;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4385;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4386;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4387;
	.byte =
		0x05,0x03,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN4388;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4389;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4390;
	.byte =
		0x05,0x42,0x01,0x00,0x05,0x02;
	.byte4 = .LN4391;
	.byte =
		0x05,0x50,0x01,0x00,0x05,0x02;
	.byte4 = .LN4392;
	.byte =
		0x05,0x5D,0x01,0x00,0x05,0x02;
	.byte4 = .LN4393;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4394;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4395;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4396;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4397;
	.byte =
		0x05,0x45,0x01,0x00,0x05,0x02;
	.byte4 = .LN4398;
	.byte =
		0x05,0x52,0x01,0x00,0x05,0x02;
	.byte4 = .LN4399;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4400;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4401;
	.byte =
		0x05,0x41,0x01,0x00,0x05,0x02;
	.byte4 = .LN4402;
	.byte =
		0x05,0x50,0x01,0x00,0x05,0x02;
	.byte4 = .LN4403;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4404;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4405;
	.byte =
		0x05,0x31,0x01,0x00,0x05,0x02;
	.byte4 = .LN4406;
	.byte =
		0x05,0x40,0x01,0x00,0x05,0x02;
	.byte4 = .LN4407;
	.byte =
		0x05,0x31,0x01,0x00,0x05,0x02;
	.byte4 = .LN4408;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4409;
	.byte =
		0x05,0x1E,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4410;
	.byte =
		0x05,0x34,0x01,0x00,0x05,0x02;
	.byte4 = .LN4411;
	.byte =
		0x05,0x1E,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4412;
	.byte =
		0x05,0x4A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4413;
	.byte =
		0x05,0x1E,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4414;
	.byte =
		0x05,0x4A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4415;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4416;
	.byte =
		0x05,0x1E,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4417;
	.byte =
		0x05,0x27,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4418;
	.byte =
		0x05,0x40,0x01,0x00,0x05,0x02;
	.byte4 = .LN4419;
	.byte =
		0x05,0x03,0x12,0x00,0x05,0x02;
	.byte4 = .LN4420;
	.byte =
		0x05,0x2A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4421;
	.byte =
		0x05,0x4C,0x01,0x00,0x05,0x02;
	.byte4 = .LN4422;
	.byte =
		0x05,0x2A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4423;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4424;
	.byte =
		0x05,0x39,0x01,0x00,0x05,0x02;
	.byte4 = .LN4425;
	.byte =
		0x05,0x4F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4426;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4427;
	.byte =
		0x05,0x1A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4428;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4429;
	.byte =
		0x05,0x1A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4430;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4431;
	.byte =
		0x03,0x43,0x01,0x00,0x05,0x02;
	.byte4 = .LN4432;
	.byte =
		0x05,0x01,0x4B,0x00,0x05,0x02;
	.byte4 = .LN4433;
	.byte =
		0x05,0x07,0x0F,0x00,0x05,0x02;
	.byte4 = .LN4434;
	.byte =
		0x05,0x04,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN4435;
	.byte =
		0x05,0x07,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4436;
	.byte =
		0x05,0x04,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN4437;
	.byte =
		0x05,0x07,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4438;
	.byte =
		0x05,0x04,0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN4439;
	.byte =
		0x05,0x07,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4440;
	.byte =
		0x05,0x1D,0x01,0x00,0x05,0x02;
	.byte4 = .LN4441;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4442;
	.byte =
		0x05,0x1D,0x01,0x00,0x05,0x02;
	.byte4 = .LN4443;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4444;
	.byte =
		0x05,0x2D,0x03,0xA5,0x05,0x01,0x00,0x05,0x02;
	.byte4 = .LN4445;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN4446;
	.byte =
		0x05,0x2D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4447;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN4448;
	.byte =
		0x05,0x2D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4449;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN4450;
	.byte =
		0x05,0x09,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4451;
	.byte =
		0x05,0x07,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN4452;
	.byte =
		0x05,0x04,0x0E,0x00,0x05,0x02;
	.byte4 = .LN4453;
	.byte =
		0x05,0x07,0x1B,0x00,0x05,0x02;
	.byte4 = .LN4454;
	.byte =
		0x05,0x04,0x03,0x6E,0x01,0x00,0x05,0x02;
	.byte4 = .LN4455;
	.byte =
		0x05,0x07,0x1C,0x00,0x05,0x02;
	.byte4 = .LN4456;
	.byte =
		0x03,0x6E,0x01,0x00,0x05,0x02;
	.byte4 = .LN4457;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4458;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4459;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4460;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4461;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4462;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4463;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4464;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4465;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4466;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4467;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4468;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4469;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4470;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4471;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4472;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4473;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4474;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4475;
	.byte =
		0x05,0x05,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4476;
	.byte =
		0x05,0x0B,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4477;
	.byte =
		0x05,0x10,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4478;
	.byte =
		0x05,0x11,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4479;
	.byte =
		0x05,0x0B,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4480;
	.byte =
		0x05,0x13,0x01,0x00,0x05,0x02;
	.byte4 = .LN4481;
	.byte =
		0x05,0x0B,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4482;
	.byte =
		0x05,0x0C,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4483;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4484;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4485;
	.byte =
		0x05,0x02,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4486;
	.byte =
		0x05,0x10,0x03,0xAB,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4487;
	.byte =
		0x05,0x06,0x01,0x00,0x05,0x02;
	.byte4 = .LN4488;
	.byte =
		0x05,0x10,0x31,0x00,0x05,0x02;
	.byte4 = .LN4489;
	.byte =
		0x05,0x06,0x01,0x00,0x05,0x02;
	.byte4 = .LN4490;
	.byte =
		0x05,0x0F,0x10,0x00,0x05,0x02;
	.byte4 = .LN4491;
	.byte =
		0x05,0x05,0x01,0x00,0x05,0x02;
	.byte4 = .LN4492;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xAE,0x6A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4493;
	.byte =
		0x04,0x01,0x05,0x08,0x03,0xD4,0x15,0x01,0x00,0x05,0x02;
	.byte4 = .LN4494;
	.byte =
		0x05,0x1C,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4495;
	.byte =
		0x05,0x0F,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4496;
	.byte =
		0x05,0x05,0x01,0x00,0x05,0x02;
	.byte4 = .LN4497;
	.byte =
		0x05,0x17,0x2F,0x00,0x05,0x02;
	.byte4 = .LN4498;
	.byte =
		0x05,0x0D,0x01,0x00,0x05,0x02;
	.byte4 = .LN4499;
	.byte =
		0x05,0x19,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4500;
	.byte =
		0x05,0x18,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4501;
	.byte =
		0x05,0x15,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4502;
	.byte =
		0x05,0x10,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4503;
	.byte =
		0x05,0x11,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4504;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN4505;
	.byte =
		0x05,0x19,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4506;
	.byte =
		0x05,0x18,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4507;
	.byte =
		0x05,0x19,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4508;
	.byte =
		0x05,0x0F,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4509;
	.byte =
		0x05,0x05,0x01,0x00,0x05,0x02;
	.byte4 = .LN4510;
	.byte =
		0x05,0x19,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4511;
	.byte =
		0x05,0x18,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4512;
	.byte =
		0x05,0x16,0x33,0x00,0x05,0x02;
	.byte4 = .LN4513;
	.byte =
		0x05,0x0C,0x01,0x00,0x05,0x02;
	.byte4 = .LN4514;
	.byte =
		0x05,0x15,0x39,0x00,0x05,0x02;
	.byte4 = .LN4515;
	.byte =
		0x05,0x0B,0x01,0x00,0x05,0x02;
	.byte4 = .LN4516;
	.byte =
		0x05,0x17,0x5A,0x00,0x05,0x02;
	.byte4 = .LN4517;
	.byte =
		0x05,0x0D,0x01,0x00,0x05,0x02;
	.byte4 = .LN4518;
	.byte =
		0x05,0x0F,0x10,0x00,0x05,0x02;
	.byte4 = .LN4519;
	.byte =
		0x05,0x05,0x01,0x00,0x05,0x02;
	.byte4 = .LN4520;
	.byte =
		0x05,0x2A,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4521;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4522;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4523;
	.byte =
		0x05,0x18,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4524;
	.byte =
		0x05,0x0E,0x01,0x00,0x05,0x02;
	.byte4 = .LN4525;
	.byte =
		0x05,0x17,0x10,0x00,0x05,0x02;
	.byte4 = .LN4526;
	.byte =
		0x05,0x0D,0x01,0x00,0x05,0x02;
	.byte4 = .LN4527;
	.byte =
		0x05,0x20,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4528;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4529;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xAA,0x68,0x01,0x00,0x05,0x02;
	.byte4 = .LN4530;
	.byte =
		0x04,0x01,0x05,0x20,0x03,0xD5,0x17,0x01,0x00,0x05,0x02;
	.byte4 = .LN4531;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4532;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xAA,0x68,0x01,0x00,0x05,0x02;
	.byte4 = .LN4533;
	.byte =
		0x04,0x01,0x05,0x21,0x03,0xD9,0x17,0x01,0x00,0x05,0x02;
	.byte4 = .LN4534;
	.byte =
		0x05,0x2A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4535;
	.byte =
		0x05,0x2F,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4536;
	.byte =
		0x05,0x17,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4537;
	.byte =
		0x05,0x0D,0x01,0x00,0x05,0x02;
	.byte4 = .LN4538;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xA2,0x68,0x01,0x00,0x05,0x02;
	.byte4 = .LN4539;
	.byte =
		0x04,0x01,0x05,0x21,0x03,0xE0,0x17,0x01,0x00,0x05,0x02;
	.byte4 = .LN4540;
	.byte =
		0x05,0x27,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4541;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4542;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4543;
	.byte =
		0x05,0x21,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4544;
	.byte =
		0x05,0x09,0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4545;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4546;
	.byte =
		0x05,0x1A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4547;
	.byte =
		0x05,0x37,0x01,0x00,0x05,0x02;
	.byte4 = .LN4548;
	.byte =
		0x05,0x18,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4549;
	.byte =
		0x05,0x0E,0x01,0x00,0x05,0x02;
	.byte4 = .LN4550;
	.byte =
		0x05,0x38,0x01,0x00,0x05,0x02;
	.byte4 = .LN4551;
	.byte =
		0x05,0x56,0x01,0x00,0x05,0x02;
	.byte4 = .LN4552;
	.byte =
		0x05,0x0F,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4553;
	.byte =
		0x05,0x05,0x01,0x00,0x05,0x02;
	.byte4 = .LN4554;
	.byte =
		0x05,0x2F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4555;
	.byte =
		0x05,0x48,0x01,0x00,0x05,0x02;
	.byte4 = .LN4556;
	.byte =
		0x05,0x18,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4557;
	.byte =
		0x05,0x0E,0x01,0x00,0x05,0x02;
	.byte4 = .LN4558;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0x96,0x68,0x01,0x00,0x05,0x02;
	.byte4 = .LN4559;
	.byte =
		0x04,0x01,0x05,0x32,0x03,0xEB,0x17,0x01,0x00,0x05,0x02;
	.byte4 = .LN4560;
	.byte =
		0x05,0x38,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4561;
	.byte =
		0x05,0x32,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4562;
	.byte =
		0x05,0x0F,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4563;
	.byte =
		0x05,0x05,0x01,0x00,0x05,0x02;
	.byte4 = .LN4564;
	.byte =
		0x05,0x31,0x01,0x00,0x05,0x02;
	.byte4 = .LN4565;
	.byte =
		0x05,0x53,0x01,0x00,0x05,0x02;
	.byte4 = .LN4566;
	.byte =
		0x05,0x15,0x0E,0x00,0x05,0x02;
	.byte4 = .LN4567;
	.byte =
		0x05,0x0B,0x01,0x00,0x05,0x02;
	.byte4 = .LN4568;
	.byte =
		0x05,0x2A,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4569;
	.byte =
		0x05,0x21,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4570;
	.byte =
		0x05,0x25,0x01,0x00,0x05,0x02;
	.byte4 = .LN4571;
	.byte =
		0x05,0x29,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4572;
	.byte =
		0x05,0x2A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4573;
	.byte =
		0x05,0x15,0x12,0x00,0x05,0x02;
	.byte4 = .LN4574;
	.byte =
		0x05,0x0B,0x01,0x00,0x05,0x02;
	.byte4 = .LN4575;
	.byte =
		0x05,0x35,0x01,0x00,0x05,0x02;
	.byte4 = .LN4576;
	.byte =
		0x05,0x52,0x01,0x00,0x05,0x02;
	.byte4 = .LN4577;
	.byte =
		0x05,0x13,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4578;
	.byte =
		0x05,0x09,0x01,0x00,0x05,0x02;
	.byte4 = .LN4579;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xFB,0x67,0x01,0x00,0x05,0x02;
	.byte4 = .LN4580;
	.byte =
		0x04,0x01,0x05,0x21,0x03,0x87,0x18,0x01,0x00,0x05,0x02;
	.byte4 = .LN4581;
	.byte =
		0x05,0x27,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4582;
	.byte =
		0x05,0x21,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4583;
	.byte =
		0x05,0x17,0x0E,0x00,0x05,0x02;
	.byte4 = .LN4584;
	.byte =
		0x05,0x0D,0x01,0x00,0x05,0x02;
	.byte4 = .LN4585;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xF2,0x67,0x01,0x00,0x05,0x02;
	.byte4 = .LN4586;
	.byte =
		0x04,0x01,0x05,0x21,0x03,0x90,0x18,0x01,0x00,0x05,0x02;
	.byte4 = .LN4587;
	.byte =
		0x05,0x27,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4588;
	.byte =
		0x05,0x0E,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4589;
	.byte =
		0x05,0x04,0x01,0x00,0x05,0x02;
	.byte4 = .LN4590;
	.byte =
		0x05,0x09,0x0F,0x00,0x05,0x02;
	.byte4 = .LN4591;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4592;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4593;
	.byte =
		0x05,0x27,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4594;
	.byte =
		0x05,0x0E,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4595;
	.byte =
		0x05,0x04,0x01,0x00,0x05,0x02;
	.byte4 = .LN4596;
	.byte =
		0x05,0x09,0x0F,0x00,0x05,0x02;
	.byte4 = .LN4597;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4598;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4599;
	.byte =
		0x05,0x27,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4600;
	.byte =
		0x05,0x0E,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4601;
	.byte =
		0x05,0x04,0x01,0x00,0x05,0x02;
	.byte4 = .LN4602;
	.byte =
		0x05,0x09,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4603;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4604;
	.byte =
		0x05,0x27,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4605;
	.byte =
		0x05,0x0E,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4606;
	.byte =
		0x05,0x04,0x01,0x00,0x05,0x02;
	.byte4 = .LN4607;
	.byte =
		0x05,0x09,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4608;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4609;
	.byte =
		0x05,0x27,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4610;
	.byte =
		0x05,0x0E,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4611;
	.byte =
		0x05,0x04,0x01,0x00,0x05,0x02;
	.byte4 = .LN4612;
	.byte =
		0x05,0x09,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4613;
	.byte =
		0x05,0x27,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4614;
	.byte =
		0x05,0x0E,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4615;
	.byte =
		0x05,0x04,0x01,0x00,0x05,0x02;
	.byte4 = .LN4616;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xC0,0x67,0x01,0x00,0x05,0x02;
	.byte4 = .LN4617;
	.byte =
		0x04,0x01,0x05,0x09,0x03,0xC3,0x18,0x01,0x00,0x05,0x02;
	.byte4 = .LN4618;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xBD,0x67,0x01,0x00,0x05,0x02;
	.byte4 = .LN4619;
	.byte =
		0x04,0x01,0x05,0x12,0x03,0xC4,0x18,0x01,0x00,0x05,0x02;
	.byte4 = .LN4620;
	.byte =
		0x05,0x18,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4621;
	.byte =
		0x05,0x0E,0x01,0x00,0x05,0x02;
	.byte4 = .LN4622;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xB8,0x67,0x01,0x00,0x05,0x02;
	.byte4 = .LN4623;
	.byte =
		0x04,0x01,0x05,0x21,0x03,0xCA,0x18,0x01,0x00,0x05,0x02;
	.byte4 = .LN4624;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xB6,0x67,0x01,0x00,0x05,0x02;
	.byte4 = .LN4625;
	.byte =
		0x04,0x01,0x05,0x21,0x03,0xCA,0x18,0x01,0x00,0x05,0x02;
	.byte4 = .LN4626;
	.byte =
		0x05,0x27,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4627;
	.byte =
		0x05,0x19,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4628;
	.byte =
		0x05,0x0F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4629;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xB1,0x67,0x01,0x00,0x05,0x02;
	.byte4 = .LN4630;
	.byte =
		0x04,0x01,0x05,0x21,0x03,0xD1,0x18,0x01,0x00,0x05,0x02;
	.byte4 = .LN4631;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xAF,0x67,0x01,0x00,0x05,0x02;
	.byte4 = .LN4632;
	.byte =
		0x04,0x01,0x05,0x21,0x03,0xD1,0x18,0x01,0x00,0x05,0x02;
	.byte4 = .LN4633;
	.byte =
		0x05,0x27,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4634;
	.byte =
		0x05,0x10,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4635;
	.byte =
		0x05,0x06,0x01,0x00,0x05,0x02;
	.byte4 = .LN4636;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xAA,0x67,0x01,0x00,0x05,0x02;
	.byte4 = .LN4637;
	.byte =
		0x04,0x01,0x05,0x21,0x03,0xD8,0x18,0x01,0x00,0x05,0x02;
	.byte4 = .LN4638;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xA8,0x67,0x01,0x00,0x05,0x02;
	.byte4 = .LN4639;
	.byte =
		0x04,0x01,0x05,0x27,0x03,0xD9,0x18,0x01,0x00,0x05,0x02;
	.byte4 = .LN4640;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4641;
	.byte =
		0x05,0x19,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4642;
	.byte =
		0x05,0x0F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4643;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xA3,0x67,0x01,0x00,0x05,0x02;
	.byte4 = .LN4644;
	.byte =
		0x04,0x01,0x05,0x21,0x03,0xDF,0x18,0x01,0x00,0x05,0x02;
	.byte4 = .LN4645;
	.byte =
		0x05,0x27,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4646;
	.byte =
		0x05,0x19,0x0E,0x00,0x05,0x02;
	.byte4 = .LN4647;
	.byte =
		0x05,0x0F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4648;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0x9B,0x67,0x01,0x00,0x05,0x02;
	.byte4 = .LN4649;
	.byte =
		0x04,0x01,0x05,0x0C,0x03,0xE8,0x18,0x01,0x00,0x05,0x02;
	.byte4 = .LN4650;
	.byte =
		0x05,0x2A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4651;
	.byte =
		0x05,0x29,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4652;
	.byte =
		0x05,0x2A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4653;
	.byte =
		0x05,0x19,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4654;
	.byte =
		0x05,0x0F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4655;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0x91,0x67,0x01,0x00,0x05,0x02;
	.byte4 = .LN4656;
	.byte =
		0x04,0x01,0x05,0x09,0x03,0xF2,0x18,0x01,0x00,0x05,0x02;
	.byte4 = .LN4657;
	.byte =
		0x05,0x27,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4658;
	.byte =
		0x05,0x10,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4659;
	.byte =
		0x05,0x06,0x01,0x00,0x05,0x02;
	.byte4 = .LN4660;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0x8A,0x67,0x01,0x00,0x05,0x02;
	.byte4 = .LN4661;
	.byte =
		0x04,0x01,0x05,0x09,0x03,0xF9,0x18,0x01,0x00,0x05,0x02;
	.byte4 = .LN4662;
	.byte =
		0x05,0x27,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4663;
	.byte =
		0x05,0x19,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4664;
	.byte =
		0x05,0x0F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4665;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0x82,0x67,0x01,0x00,0x05,0x02;
	.byte4 = .LN4666;
	.byte =
		0x04,0x01,0x05,0x21,0x03,0x80,0x19,0x01,0x00,0x05,0x02;
	.byte4 = .LN4667;
	.byte =
		0x05,0x27,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4668;
	.byte =
		0x05,0x10,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4669;
	.byte =
		0x05,0x06,0x01,0x00,0x05,0x02;
	.byte4 = .LN4670;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xFB,0x66,0x01,0x00,0x05,0x02;
	.byte4 = .LN4671;
	.byte =
		0x04,0x01,0x05,0x21,0x03,0x87,0x19,0x01,0x00,0x05,0x02;
	.byte4 = .LN4672;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xF9,0x66,0x01,0x00,0x05,0x02;
	.byte4 = .LN4673;
	.byte =
		0x04,0x01,0x05,0x27,0x03,0x88,0x19,0x01,0x00,0x05,0x02;
	.byte4 = .LN4674;
	.byte =
		0x05,0x0E,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4675;
	.byte =
		0x05,0x04,0x01,0x00,0x05,0x02;
	.byte4 = .LN4676;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xF4,0x66,0x01,0x00,0x05,0x02;
	.byte4 = .LN4677;
	.byte =
		0x04,0x01,0x05,0x21,0x03,0x8E,0x19,0x01,0x00,0x05,0x02;
	.byte4 = .LN4678;
	.byte =
		0x05,0x09,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4679;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xF1,0x66,0x01,0x00,0x05,0x02;
	.byte4 = .LN4680;
	.byte =
		0x04,0x01,0x05,0x27,0x03,0x90,0x19,0x01,0x00,0x05,0x02;
	.byte4 = .LN4681;
	.byte =
		0x05,0x17,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4682;
	.byte =
		0x05,0x0D,0x01,0x00,0x05,0x02;
	.byte4 = .LN4683;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xED,0x66,0x01,0x00,0x05,0x02;
	.byte4 = .LN4684;
	.byte =
		0x04,0x01,0x05,0x21,0x03,0x95,0x19,0x01,0x00,0x05,0x02;
	.byte4 = .LN4685;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xEB,0x66,0x01,0x00,0x05,0x02;
	.byte4 = .LN4686;
	.byte =
		0x04,0x01,0x05,0x27,0x03,0x96,0x19,0x01,0x00,0x05,0x02;
	.byte4 = .LN4687;
	.byte =
		0x05,0x19,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4688;
	.byte =
		0x05,0x0F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4689;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xE7,0x66,0x01,0x00,0x05,0x02;
	.byte4 = .LN4690;
	.byte =
		0x04,0x01,0x05,0x21,0x03,0xA4,0x19,0x01,0x00,0x05,0x02;
	.byte4 = .LN4691;
	.byte =
		0x05,0x2A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4692;
	.byte =
		0x05,0x29,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4693;
	.byte =
		0x05,0x2A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4694;
	.byte =
		0x05,0x17,0x1E,0x00,0x05,0x02;
	.byte4 = .LN4695;
	.byte =
		0x05,0x0D,0x01,0x00,0x05,0x02;
	.byte4 = .LN4696;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xC4,0x66,0x01,0x00,0x05,0x02;
	.byte4 = .LN4697;
	.byte =
		0x04,0x01,0x05,0x21,0x03,0xBE,0x19,0x01,0x00,0x05,0x02;
	.byte4 = .LN4698;
	.byte =
		0x05,0x0A,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4699;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4700;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4701;
	.byte =
		0x05,0x0E,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4702;
	.byte =
		0x05,0x0A,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN4703;
	.byte =
		0x05,0x2A,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4704;
	.byte =
		0x05,0x29,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4705;
	.byte =
		0x05,0x2A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4706;
	.byte =
		0x05,0x21,0x0E,0x00,0x05,0x02;
	.byte4 = .LN4707;
	.byte =
		0x05,0x17,0x01,0x00,0x05,0x02;
	.byte4 = .LN4708;
	.byte =
		0x05,0x12,0x15,0x00,0x05,0x02;
	.byte4 = .LN4709;
	.byte =
		0x05,0x08,0x01,0x00,0x05,0x02;
	.byte4 = .LN4710;
	.byte =
		0x05,0x43,0x01,0x00,0x05,0x02;
	.byte4 = .LN4711;
	.byte =
		0x05,0x5F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4712;
	.byte =
		0x05,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN4713;
	.byte =
		0x05,0x8F,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN4714;
	.byte =
		0x05,0x21,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4715;
	.byte =
		0x05,0x17,0x01,0x00,0x05,0x02;
	.byte4 = .LN4716;
	.byte =
		0x05,0x22,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4717;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4718;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4719;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4720;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4721;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4722;
	.byte =
		0x05,0x14,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4723;
	.byte =
		0x05,0x0A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4724;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0x9C,0x66,0x01,0x00,0x05,0x02;
	.byte4 = .LN4725;
	.byte =
		0x04,0x01,0x05,0x21,0x03,0xE6,0x19,0x01,0x00,0x05,0x02;
	.byte4 = .LN4726;
	.byte =
		0x05,0x27,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4727;
	.byte =
		0x05,0x0F,0x0E,0x00,0x05,0x02;
	.byte4 = .LN4728;
	.byte =
		0x05,0x05,0x01,0x00,0x05,0x02;
	.byte4 = .LN4729;
	.byte =
		0x05,0x1C,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4730;
	.byte =
		0x05,0x22,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4731;
	.byte =
		0x05,0x11,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4732;
	.byte =
		0x05,0x07,0x01,0x00,0x05,0x02;
	.byte4 = .LN4733;
	.byte =
		0x05,0x1C,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4734;
	.byte =
		0x05,0x28,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4735;
	.byte =
		0x05,0x1F,0x4F,0x00,0x05,0x02;
	.byte4 = .LN4736;
	.byte =
		0x05,0x15,0x01,0x00,0x05,0x02;
	.byte4 = .LN4737;
	.byte =
		0x05,0x21,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4738;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xC3,0x65,0x01,0x00,0x05,0x02;
	.byte4 = .LN4739;
	.byte =
		0x04,0x01,0x05,0x19,0x03,0xBE,0x1A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4740;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4741;
	.byte =
		0x05,0x33,0x01,0x00,0x05,0x02;
	.byte4 = .LN4742;
	.byte =
		0x05,0x19,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4743;
	.byte =
		0x05,0x33,0x01,0x00,0x05,0x02;
	.byte4 = .LN4744;
	.byte =
		0x05,0x34,0x03,0x8D,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4745;
	.byte =
		0x05,0x33,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4746;
	.byte =
		0x05,0x34,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4747;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xB0,0x66,0x01,0x00,0x05,0x02;
	.byte4 = .LN4748;
	.byte =
		0x04,0x01,0x05,0x2B,0x03,0xD1,0x19,0x01,0x00,0x05,0x02;
	.byte4 = .LN4749;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xAF,0x66,0x01,0x00,0x05,0x02;
	.byte4 = .LN4750;
	.byte =
		0x04,0x01,0x05,0x21,0x03,0xCE,0x17,0x01,0x00,0x05,0x02;
	.byte4 = .LN4751;
	.byte =
		0x05,0x2A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4752;
	.byte =
		0x05,0x21,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4753;
	.byte =
		0x05,0x2A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4754;
	.byte =
		0x05,0x21,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4755;
	.byte =
		0x05,0x27,0x01,0x00,0x05,0x02;
	.byte4 = .LN4756;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xAF,0x68,0x01,0x00,0x05,0x02;
	.byte4 = .LN4757;
	.byte =
		0x04,0x01,0x05,0x21,0x03,0xC1,0x17,0x01,0x00,0x05,0x02;
	.byte4 = .LN4758;
	.byte =
		0x05,0x2A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4759;
	.byte =
		0x05,0x21,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4760;
	.byte =
		0x05,0x2A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4761;
	.byte =
		0x05,0x21,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4762;
	.byte =
		0x05,0x27,0x01,0x00,0x05,0x02;
	.byte4 = .LN4763;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xBC,0x68,0x01,0x00,0x05,0x02;
	.byte4 = .LN4764;
	.byte =
		0x04,0x01,0x05,0x21,0x03,0xF0,0x16,0x01,0x00,0x05,0x02;
	.byte4 = .LN4765;
	.byte =
		0x05,0x2A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4766;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4767;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4768;
	.byte =
		0x05,0x21,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4769;
	.byte =
		0x05,0x29,0x01,0x00,0x05,0x02;
	.byte4 = .LN4770;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0x8B,0x69,0x01,0x00,0x05,0x02;
	.byte4 = .LN4771;
	.byte =
		0x04,0x01,0x05,0x21,0x03,0xC0,0x16,0x01,0x00,0x05,0x02;
	.byte4 = .LN4772;
	.byte =
		0x05,0x2A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4773;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4774;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4775;
	.byte =
		0x05,0x21,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4776;
	.byte =
		0x05,0x43,0x01,0x00,0x05,0x02;
	.byte4 = .LN4777;
	.byte =
		0x05,0x21,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4778;
	.byte =
		0x05,0x43,0x01,0x00,0x05,0x02;
	.byte4 = .LN4779;
	.byte =
		0x05,0x21,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4780;
	.byte =
		0x05,0x43,0x01,0x00,0x05,0x02;
	.byte4 = .LN4781;
	.byte =
		0x05,0x21,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4782;
	.byte =
		0x16,0x00,0x05,0x02;
	.byte4 = .LN4783;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xAA,0x69,0x01,0x00,0x05,0x02;
	.byte4 = .LN4784;
	.byte =
		0x04,0x01,0x05,0x05,0x03,0xDC,0x15,0x01,0x00,0x05,0x02;
	.byte4 = .LN4785;
	.byte =
		0x04,0x07,0x05,0x15,0x03,0xA4,0x6A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4786;
	.byte =
		0x04,0x01,0x05,0x05,0x03,0xDD,0x15,0x01,0x00,0x05,0x02;
	.byte4 = .LN4787;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4788;
	.byte =
		0x05,0x0B,0x01,0x00,0x05,0x02;
	.byte4 = .LN4789;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4790;
	.byte =
		0x05,0x0B,0x01,0x00,0x05,0x02;
	.byte4 = .LN4791;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4792;
	.byte =
		0x05,0x1F,0x03,0x45,0x01,0x00,0x05,0x02;
	.byte4 = .LN4793;
	.byte =
		0x05,0x0B,0x18,0x00,0x05,0x02;
	.byte4 = .LN4794;
	.byte =
		0x05,0x1F,0x03,0x71,0x01,0x00,0x05,0x02;
	.byte4 = .LN4795;
	.byte =
		0x05,0x0B,0x10,0x00,0x05,0x02;
	.byte4 = .LN4796;
	.byte =
		0x11,0x00,0x05,0x02;
	.byte4 = .LN4797;
	.byte =
		0x05,0x1F,0x03,0x71,0x01,0x00,0x05,0x02;
	.byte4 = .LN4798;
	.byte =
		0x05,0x0B,0x10,0x00,0x05,0x02;
	.byte4 = .LN4799;
	.byte =
		0x05,0x1F,0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN4800;
	.byte =
		0x05,0x0C,0x16,0x00,0x05,0x02;
	.byte4 = .LN4801;
	.byte =
		0x05,0x1F,0x03,0x73,0x01,0x00,0x05,0x02;
	.byte4 = .LN4802;
	.byte =
		0x05,0x0C,0x16,0x00,0x05,0x02;
	.byte4 = .LN4803;
	.byte =
		0x05,0x1F,0x03,0x73,0x01,0x00,0x05,0x02;
	.byte4 = .LN4804;
	.byte =
		0x05,0x0C,0x16,0x00,0x05,0x02;
	.byte4 = .LN4805;
	.byte =
		0x05,0x0B,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4806;
	.byte =
		0x05,0x0C,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4807;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4808;
	.byte =
		0x05,0x2A,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4809;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN4810;
	.byte =
		0x03,0x7D,0x01,0x00,0x05,0x02;
	.byte4 = .LN4811;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4812;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4813;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4814;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4815;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4816;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4817;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4818;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4819;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4820;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4821;
	.byte =
		0x05,0x17,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4822;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4823;
	.byte =
		0x05,0x23,0x01,0x00,0x05,0x02;
	.byte4 = .LN4824;
	.byte =
		0x05,0x15,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4825;
	.byte =
		0x05,0x2E,0x03,0xBD,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4826;
	.byte =
		0x05,0x55,0x01,0x00,0x05,0x02;
	.byte4 = .LN4827;
	.byte =
		0x05,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4828;
	.byte =
		0x05,0x8C,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN4829;
	.byte =
		0x05,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4830;
	.byte =
		0x05,0x2E,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4831;
	.byte =
		0x05,0x55,0x01,0x00,0x05,0x02;
	.byte4 = .LN4832;
	.byte =
		0x05,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN._IO.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_start_init;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0x84,0xC4,0x00,0x01,0x00,0x05,0x02;
	.byte4 = .LN4833;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN4834;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4835;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4836;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4837;
	.byte =
		0x05,0x04,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4838;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4839;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4840;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4841;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4842;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4843;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4844;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4845;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4846;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4847;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4848;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4849;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN4850;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4851;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN4852;
	.byte =
		0x03,0x7B,0x01,0x00,0x05,0x02;
	.byte4 = .LN4853;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN4854;
	.byte =
		0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN4855;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN4856;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4857;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4858;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4859;
	.byte =
		0x03,0x79,0x01,0x00,0x05,0x02;
	.byte4 = .LN4860;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4861;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4862;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4863;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4864;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4865;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN4866;
	.byte =
		0x0C,0x00,0x05,0x02;
	.byte4 = .LN4867;
	.byte =
		0x03,0x75,0x01,0x00,0x05,0x02;
	.byte4 = .LN4868;
	.byte =
		0x18,0x00,0x05,0x02;
	.byte4 = .LN4869;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4870;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4871;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4872;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4873;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4874;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4875;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4876;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4877;
	.byte =
		0x05,0x0E,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4878;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4879;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4880;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4881;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4882;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4883;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4884;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4885;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4886;
	.byte =
		0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN4887;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4888;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4889;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN4890;
	.byte =
		0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN4891;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4892;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4893;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4894;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4895;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN4896;
	.byte =
		0x03,0x7C,0x01,0x00,0x05,0x02;
	.byte4 = .LN4897;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4898;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4899;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4900;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4901;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN4902;
	.byte =
		0x12,0x00,0x05,0x02;
	.byte4 = .LN4903;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4904;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4905;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4906;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4907;
	.byte =
		0x03,0x72,0x01,0x00,0x05,0x02;
	.byte4 = .LN4908;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4909;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4910;
	.byte =
		0x0F,0x00,0x05,0x02;
	.byte4 = .LN4911;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4912;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4913;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN4914;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4915;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4916;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4917;
	.byte =
		0x03,0x71,0x01,0x00,0x05,0x02;
	.byte4 = .LN4918;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4919;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4920;
	.byte =
		0x17,0x00,0x05,0x02;
	.byte4 = .LN4921;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4922;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4923;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4924;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4925;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4926;
	.byte =
		0x05,0x0B,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4927;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4928;
	.byte =
		0x05,0x13,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4929;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4930;
	.byte =
		0x05,0x16,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4931;
	.byte =
		0x05,0x0B,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4932;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4933;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4934;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4935;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4936;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4937;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4938;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4939;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4940;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._start_init.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_main;
	.byte =
		0x04,0x01,0x05,0x02,0x03,0xF7,0xC4,0x00,0x01,0x00,0x05,0x02;
	.byte4 = .LN4941;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4942;
	.byte =
		0x05,0x0C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4943;
	.byte =
		0x05,0x0F,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4944;
	.byte =
		0x05,0x10,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4945;
	.byte =
		0x05,0x0B,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4946;
	.byte =
		0x05,0x0D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4947;
	.byte =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4948;
	.byte =
		0x05,0x11,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4949;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4950;
	.byte =
		0x05,0x14,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4951;
	.byte =
		0x05,0x0D,0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4952;
	.byte =
		0x05,0x04,0x19,0x00,0x05,0x02;
	.byte4 = .LN4953;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4954;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4955;
	.byte =
		0x05,0x03,0x03,0x7A,0x01,0x00,0x05,0x02;
	.byte4 = .LN4956;
	.byte =
		0x05,0x04,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4957;
	.byte =
		0x0E,0x00,0x05,0x02;
	.byte4 = .LN4958;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN4959;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4960;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4961;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4962;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4963;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN4964;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN4965;
	.byte =
		0x05,0x0C,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4966;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4967;
	.byte =
		0x05,0x05,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4968;
	.byte =
		0x05,0x08,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4969;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN4970;
	.byte =
		0x05,0x1D,0x01,0x00,0x05,0x02;
	.byte4 = .LN4971;
	.byte =
		0x05,0x25,0x01,0x00,0x05,0x02;
	.byte4 = .LN4972;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN4973;
	.byte =
		0x03,0x78,0x01,0x00,0x05,0x02;
	.byte4 = .LN4974;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4975;
	.byte =
		0x01,0x00,0x05,0x02;
	.byte4 = .LN4976;
	.byte =
		0x05,0x10,0x15,0x00,0x05,0x02;
	.byte4 = .LN4977;
	.byte =
		0x05,0x0B,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4978;
	.byte =
		0x05,0x02,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4979;
	.byte =
		0x05,0x0B,0x12,0x00,0x05,0x02;
	.byte4 = .LN4980;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4981;
	.byte =
		0x05,0x10,0x0D,0x00,0x05,0x02;
	.byte4 = .LN4982;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4983;
	.byte =
		0x05,0x23,0x01,0x00,0x05,0x02;
	.byte4 = .LN4984;
	.byte =
		0x05,0x0E,0x0C,0x00,0x05,0x02;
	.byte4 = .LN4985;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN._main.end;
	.byte =
		0x00,0x01,0x01;
.epcline.end:

	.section .debug_pubnames SHT_DEBUGINFO;

	.align 1;
.epcpubnames:
	.type .epcpubnames,STT_OBJECT;
	.byte =
		0x66,0x32,0x00,0x00,0x02,0x00;
	.byte4 = .epcdebug;
	.inc/binary ".\Release\main.sbn", 8081, 12896;
.epcpubnames.end:

	.section .debug_aranges SHT_DEBUGINFO;

	.align 1;
.epcaranges:
	.type .epcaranges,STT_OBJECT;
	.byte =
		0x6C,0x04,0x00,0x00,0x02,0x00;
	.byte4 = .epcdebug;
	.byte =
		0x04,0x00,0x00,0x00,0x00,0x00;
	.byte4 = .LN_IND_DFK;
	.byte4 = .LN._IND_DFK.end-.LN_IND_DFK;
	.byte4 = .LN_UDP_TIMEOUT_TST;
	.byte4 = .LN._UDP_TIMEOUT_TST.end-.LN_UDP_TIMEOUT_TST;
	.byte4 = .LN_Event_Synhron_func;
	.byte4 = .LN._Event_Synhron_func.end-.LN_Event_Synhron_func;
	.byte4 = .LN_INF_K607;
	.byte4 = .LN._INF_K607.end-.LN_INF_K607;
	.byte4 = .LN_Info_back_Ethernet;
	.byte4 = .LN._Info_back_Ethernet.end-.LN_Info_back_Ethernet;
	.byte4 = .LN_CEV_rcv;
	.byte4 = .LN._CEV_rcv.end-.LN_CEV_rcv;
	.byte4 = .LN_TNC_rcv;
	.byte4 = .LN._TNC_rcv.end-.LN_TNC_rcv;
	.byte4 = .LN_TIME_coder;
	.byte4 = .LN._TIME_coder.end-.LN_TIME_coder;
	.byte4 = .LN_Wait_PPI;
	.byte4 = .LN._Wait_PPI.end-.LN_Wait_PPI;
	.byte4 = .LN_Str_print;
	.byte4 = .LN._Str_print.end-.LN_Str_print;
	.byte4 = .LN_packet_UPR;
	.byte4 = .LN._packet_UPR.end-.LN_packet_UPR;
	.byte4 = .LN_DEV_comp_tst;
	.byte4 = .LN._DEV_comp_tst.end-.LN_DEV_comp_tst;
	.byte4 = .LN_F_comp_tst;
	.byte4 = .LN._F_comp_tst.end-.LN_F_comp_tst;
	.byte4 = .LN_Time_SEV_INF;
	.byte4 = .LN._Time_SEV_INF.end-.LN_Time_SEV_INF;
	.byte4 = .LN_ZUTransf;
	.byte4 = .LN._ZUTransf.end-.LN_ZUTransf;
	.byte4 = .LN_ZTransf;
	.byte4 = .LN._ZTransf.end-.LN_ZTransf;
	.byte4 = .LN_leng;
	.byte4 = .LN._leng.end-.LN_leng;
	.byte4 = .LN_zputs;
	.byte4 = .LN._zputs.end-.LN_zputs;
	.byte4 = .LN_getchar0;
	.byte4 = .LN._getchar0.end-.LN_getchar0;
	.byte4 = .LN_txchar2;
	.byte4 = .LN._txchar2.end-.LN_txchar2;
	.byte4 = .LN_txchar0;
	.byte4 = .LN._txchar0.end-.LN_txchar0;
	.byte4 = .LN_func_event_RZV;
	.byte4 = .LN._func_event_RZV.end-.LN_func_event_RZV;
	.byte4 = .LN_func_event_k615;
	.byte4 = .LN._func_event_k615.end-.LN_func_event_k615;
	.byte4 = .LN_SDRAM_work;
	.byte4 = .LN._SDRAM_work.end-.LN_SDRAM_work;
	.byte4 = .LN_Time_real;
	.byte4 = .LN._Time_real.end-.LN_Time_real;
	.byte4 = .LN_Timer_INT2;
	.byte4 = .LN._Timer_INT2.end-.LN_Timer_INT2;
	.byte4 = .LN_tst_SPI_BUF;
	.byte4 = .LN._tst_SPI_BUF.end-.LN_tst_SPI_BUF;
	.byte4 = .LN_MENU;
	.byte4 = .LN._MENU.end-.LN_MENU;
	.byte4 = .LN_FT_control;
	.byte4 = .LN._FT_control.end-.LN_FT_control;
	.byte4 = .LN_BUF_clear;
	.byte4 = .LN._BUF_clear.end-.LN_BUF_clear;
	.byte4 = .LN_spi_cs;
	.byte4 = .LN._spi_cs.end-.LN_spi_cs;
	.byte4 = .LN_spi_cs_SPI;
	.byte4 = .LN._spi_cs_SPI.end-.LN_spi_cs_SPI;
	.byte4 = .LN_SPIRxReady;
	.byte4 = .LN._SPIRxReady.end-.LN_SPIRxReady;
	.byte4 = .LN_SPITxFull;
	.byte4 = .LN._SPITxFull.end-.LN_SPITxFull;
	.byte4 = .LN_SPITxInProgress;
	.byte4 = .LN._SPITxInProgress.end-.LN_SPITxInProgress;
	.byte4 = .LN_ssync;
	.byte4 = .LN._ssync.end-.LN_ssync;
	.byte4 = .LN_SPIPut;
	.byte4 = .LN._SPIPut.end-.LN_SPIPut;
	.byte4 = .LN_SPIGet;
	.byte4 = .LN._SPIGet.end-.LN_SPIGet;
	.byte4 = .LN_SPI;
	.byte4 = .LN._SPI.end-.LN_SPI;
	.byte4 = .LN_spi_transf;
	.byte4 = .LN._spi_transf.end-.LN_spi_transf;
	.byte4 = .LN_SPORT0_enable;
	.byte4 = .LN._SPORT0_enable.end-.LN_SPORT0_enable;
	.byte4 = .LN_SPORT0_disable;
	.byte4 = .LN._SPORT0_disable.end-.LN_SPORT0_disable;
	.byte4 = .LN_SPORT1_enable;
	.byte4 = .LN._SPORT1_enable.end-.LN_SPORT1_enable;
	.byte4 = .LN_SPORT1_disable;
	.byte4 = .LN._SPORT1_disable.end-.LN_SPORT1_disable;
	.byte4 = .LN_SPORT0_write_read;
	.byte4 = .LN._SPORT0_write_read.end-.LN_SPORT0_write_read;
	.byte4 = .LN_SPORT1_write;
	.byte4 = .LN._SPORT1_write.end-.LN_SPORT1_write;
	.byte4 = .LN_put_char1;
	.byte4 = .LN._put_char1.end-.LN_put_char1;
	.byte4 = .LN_Zput_str1;
	.byte4 = .LN._Zput_str1.end-.LN_Zput_str1;
	.byte4 = .LN_read_str1;
	.byte4 = .LN._read_str1.end-.LN_read_str1;
	.byte4 = .LN_reverse;
	.byte4 = .LN._reverse.end-.LN_reverse;
	.byte4 = .LN_itoa;
	.byte4 = .LN._itoa.end-.LN_itoa;
	.byte4 = .LN_u_itoa;
	.byte4 = .LN._u_itoa.end-.LN_u_itoa;
	.byte4 = .LN_Event_SPORT_RUN;
	.byte4 = .LN._Event_SPORT_RUN.end-.LN_Event_SPORT_RUN;
	.byte4 = .LN_Time_control;
	.byte4 = .LN._Time_control.end-.LN_Time_control;
	.byte4 = .LN_UART_control;
	.byte4 = .LN._UART_control.end-.LN_UART_control;
	.byte4 = .LN_IO;
	.byte4 = .LN._IO.end-.LN_IO;
	.byte4 = .LN_UDP_test;
	.byte4 = .LN._UDP_test.end-.LN_UDP_test;
	.byte4 = .LN_sendT;
	.byte4 = .LN._sendT.end-.LN_sendT;
	.byte4 = .LN_UART_DMA_TX;
	.byte4 = .LN._UART_DMA_TX.end-.LN_UART_DMA_TX;
	.byte4 = .LN_UART_DMA_TX2;
	.byte4 = .LN._UART_DMA_TX2.end-.LN_UART_DMA_TX2;
	.byte4 = .LN_Transf2;
	.byte4 = .LN._Transf2.end-.LN_Transf2;
	.byte4 = .LN_control_B610;
	.byte4 = .LN._control_B610.end-.LN_control_B610;
	.byte4 = .LN_COMMAND_ON;
	.byte4 = .LN._COMMAND_ON.end-.LN_COMMAND_ON;
	.byte4 = .LN_OFF_section;
	.byte4 = .LN._OFF_section.end-.LN_OFF_section;
	.byte4 = .LN_Transf;
	.byte4 = .LN._Transf.end-.LN_Transf;
	.byte4 = .LN_put_str1;
	.byte4 = .LN._put_str1.end-.LN_put_str1;
	.byte4 = .LN_u_out;
	.byte4 = .LN._u_out.end-.LN_u_out;
	.byte4 = .LN_SDRAM_test;
	.byte4 = .LN._SDRAM_test.end-.LN_SDRAM_test;
	.byte4 = .LN_x_out;
	.byte4 = .LN._x_out.end-.LN_x_out;
	.byte4 = .LN_xn_out;
	.byte4 = .LN._xn_out.end-.LN_xn_out;
	.byte4 = .LN_d_out;
	.byte4 = .LN._d_out.end-.LN_d_out;
	.byte4 = .LN_func_STATUS_B610;
	.byte4 = .LN._func_STATUS_B610.end-.LN_func_STATUS_B610;
	.byte4 = .LN_GBR_zad;
	.byte4 = .LN._GBR_zad.end-.LN_GBR_zad;
	.byte4 = .LN_BR_zad;
	.byte4 = .LN._BR_zad.end-.LN_BR_zad;
	.byte4 = .LN_SIG_FT_IN;
	.byte4 = .LN._SIG_FT_IN.end-.LN_SIG_FT_IN;
	.byte4 = .LN_control_TNC_TNO;
	.byte4 = .LN._control_TNC_TNO.end-.LN_control_TNC_TNO;
	.byte4 = .LN_pachka_monitor;
	.byte4 = .LN._pachka_monitor.end-.LN_pachka_monitor;
	.byte4 = .LN_help;
	.byte4 = .LN._help.end-.LN_help;
	.byte4 = .LN_tabl_view;
	.byte4 = .LN._tabl_view.end-.LN_tabl_view;
	.byte4 = .LN_init_K611;
	.byte4 = .LN._init_K611.end-.LN_init_K611;
	.byte4 = .LN_control_K611;
	.byte4 = .LN._control_K611.end-.LN_control_K611;
	.byte4 = .LN_init_K612;
	.byte4 = .LN._init_K612.end-.LN_init_K612;
	.byte4 = .LN_control_K612;
	.byte4 = .LN._control_K612.end-.LN_control_K612;
	.byte4 = .LN_init_K613;
	.byte4 = .LN._init_K613.end-.LN_init_K613;
	.byte4 = .LN_control_K613;
	.byte4 = .LN._control_K613.end-.LN_control_K613;
	.byte4 = .LN_control_K615;
	.byte4 = .LN._control_K615.end-.LN_control_K615;
	.byte4 = .LN_K615_out;
	.byte4 = .LN._K615_out.end-.LN_K615_out;
	.byte4 = .LN_K615_test_indi;
	.byte4 = .LN._K615_test_indi.end-.LN_K615_test_indi;
	.byte4 = .LN_tst_out;
	.byte4 = .LN._tst_out.end-.LN_tst_out;
	.byte4 = .LN_UDP_TCP_setup;
	.byte4 = .LN._UDP_TCP_setup.end-.LN_UDP_TCP_setup;
	.byte4 = .LN_n_out;
	.byte4 = .LN._n_out.end-.LN_n_out;
	.byte4 = .LN_packet_TRSL;
	.byte4 = .LN._packet_TRSL.end-.LN_packet_TRSL;
	.byte4 = .LN_SPORT_COM;
	.byte4 = .LN._SPORT_COM.end-.LN_SPORT_COM;
	.byte4 = .LN_ERROR_IMP;
	.byte4 = .LN._ERROR_IMP.end-.LN_ERROR_IMP;
	.byte4 = .LN_Control_Impuls;
	.byte4 = .LN._Control_Impuls.end-.LN_Control_Impuls;
	.byte4 = .LN_PPI_massiv;
	.byte4 = .LN._PPI_massiv.end-.LN_PPI_massiv;
	.byte4 = .LN_massiv_time_setka;
	.byte4 = .LN._massiv_time_setka.end-.LN_massiv_time_setka;
	.byte4 = .LN_Packet_TNC1;
	.byte4 = .LN._Packet_TNC1.end-.LN_Packet_TNC1;
	.byte4 = .LN_MU_TEST;
	.byte4 = .LN._MU_TEST.end-.LN_MU_TEST;
	.byte4 = .LN_TNC_ERROR;
	.byte4 = .LN._TNC_ERROR.end-.LN_TNC_ERROR;
	.byte4 = .LN_Avariya_test;
	.byte4 = .LN._Avariya_test.end-.LN_Avariya_test;
	.byte4 = .LN_buf_txt;
	.byte4 = .LN._buf_txt.end-.LN_buf_txt;
	.byte4 = .LN_INF_UART_SRV2;
	.byte4 = .LN._INF_UART_SRV2.end-.LN_INF_UART_SRV2;
	.byte4 = .LN_test_inf;
	.byte4 = .LN._test_inf.end-.LN_test_inf;
	.byte4 = .LN_INIT_START_PACHKA;
	.byte4 = .LN._INIT_START_PACHKA.end-.LN_INIT_START_PACHKA;
	.byte4 = .LN_Test_pachka;
	.byte4 = .LN._Test_pachka.end-.LN_Test_pachka;
	.byte4 = .LN_K615_work;
	.byte4 = .LN._K615_work.end-.LN_K615_work;
	.byte4 = .LN_TNO_START_PACHKA;
	.byte4 = .LN._TNO_START_PACHKA.end-.LN_TNO_START_PACHKA;
	.byte4 = .LN_PPI_sync;
	.byte4 = .LN._PPI_sync.end-.LN_PPI_sync;
	.byte4 = .LN_PPI_sz1;
	.byte4 = .LN._PPI_sz1.end-.LN_PPI_sz1;
	.byte4 = .LN_PPI_sz2;
	.byte4 = .LN._PPI_sz2.end-.LN_PPI_sz2;
	.byte4 = .LN_Control_bloka;
	.byte4 = .LN._Control_bloka.end-.LN_Control_bloka;
	.byte4 = .LN_Event_K615;
	.byte4 = .LN._Event_K615.end-.LN_Event_K615;
	.byte4 = .LN_RESTART_SYNC;
	.byte4 = .LN._RESTART_SYNC.end-.LN_RESTART_SYNC;
	.byte4 = .LN_TNO_SYNC;
	.byte4 = .LN._TNO_SYNC.end-.LN_TNO_SYNC;
	.byte4 = .LN_Packet_FORM;
	.byte4 = .LN._Packet_FORM.end-.LN_Packet_FORM;
	.byte4 = .LN_Synhron_section;
	.byte4 = .LN._Synhron_section.end-.LN_Synhron_section;
	.byte4 = .LN_Event_Synhron;
	.byte4 = .LN._Event_Synhron.end-.LN_Event_Synhron;
	.byte4 = .LN_BUF_SEARCH;
	.byte4 = .LN._BUF_SEARCH.end-.LN_BUF_SEARCH;
	.byte4 = .LN_KUK_IO;
	.byte4 = .LN._KUK_IO.end-.LN_KUK_IO;
	.byte4 = .LN_INF_ANALIZ;
	.byte4 = .LN._INF_ANALIZ.end-.LN_INF_ANALIZ;
	.byte4 = .LN_buff_SPORT;
	.byte4 = .LN._buff_SPORT.end-.LN_buff_SPORT;
	.byte4 = .LN_Ethernet_MU;
	.byte4 = .LN._Ethernet_MU.end-.LN_Ethernet_MU;
	.byte4 = .LN_Ethernet_OBMEN;
	.byte4 = .LN._Ethernet_OBMEN.end-.LN_Ethernet_OBMEN;
	.byte4 = .LN_packet_SORT;
	.byte4 = .LN._packet_SORT.end-.LN_packet_SORT;
	.byte4 = .LN_VCU_sinh_form;
	.byte4 = .LN._VCU_sinh_form.end-.LN_VCU_sinh_form;
	.byte4 = .LN_func_TNO;
	.byte4 = .LN._func_TNO.end-.LN_func_TNO;
	.byte4 = .LN_Packet_FINDER;
	.byte4 = .LN._Packet_FINDER.end-.LN_Packet_FINDER;
	.byte4 = .LN_TEST_INTERVAL_DISP;
	.byte4 = .LN._TEST_INTERVAL_DISP.end-.LN_TEST_INTERVAL_DISP;
	.byte4 = .LN_RZV_proir;
	.byte4 = .LN._RZV_proir.end-.LN_RZV_proir;
	.byte4 = .LN_LED_ERROR;
	.byte4 = .LN._LED_ERROR.end-.LN_LED_ERROR;
	.byte4 = .LN_block_ON;
	.byte4 = .LN._block_ON.end-.LN_block_ON;
	.byte4 = .LN_block_OFF_upr;
	.byte4 = .LN._block_OFF_upr.end-.LN_block_OFF_upr;
	.byte4 = .LN_block_upr;
	.byte4 = .LN._block_upr.end-.LN_block_upr;
	.byte4 = .LN_SYNC_obmen;
	.byte4 = .LN._SYNC_obmen.end-.LN_SYNC_obmen;
	.byte4 = .LN_WORK_REGIM;
	.byte4 = .LN._WORK_REGIM.end-.LN_WORK_REGIM;
	.byte4 = .LN_FAZA;
	.byte4 = .LN._FAZA.end-.LN_FAZA;
	.byte4 = .LN_start_init;
	.byte4 = .LN._start_init.end-.LN_start_init;
	.byte4 = .LN_main;
	.byte4 = .LN._main.end-.LN_main;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00;
.epcaranges.end:

	.section/ZERO_INIT/DOUBLE64 bsz;

	.align 4;
	.global _tx_buffer0;
	.type _tx_buffer0,STT_OBJECT;
	.byte _tx_buffer0[4096];
._tx_buffer0.end:
	.align 4;
	.global _tx_buffer2;
	.type _tx_buffer2,STT_OBJECT;
	.byte _tx_buffer2[64];
._tx_buffer2.end:
	.align 2;
	.global _tx_wr_index0;
	.type _tx_wr_index0,STT_OBJECT;
	.byte _tx_wr_index0[2];
._tx_wr_index0.end:
	.align 2;
	.global _tx_counter0;
	.type _tx_counter0,STT_OBJECT;
	.byte _tx_counter0[2];
._tx_counter0.end:
	.align 1;
	.global _tx_buffer_overflow0;
	.type _tx_buffer_overflow0,STT_OBJECT;
	.byte _tx_buffer_overflow0[1];
._tx_buffer_overflow0.end:
	.align 2;
	.global _tx_rd_index0;
	.type _tx_rd_index0,STT_OBJECT;
	.byte _tx_rd_index0[2];
._tx_rd_index0.end:
	.align 2;
	.global _tx_wr_index2;
	.type _tx_wr_index2,STT_OBJECT;
	.byte _tx_wr_index2[2];
._tx_wr_index2.end:
	.align 2;
	.global _tx_counter2;
	.type _tx_counter2,STT_OBJECT;
	.byte _tx_counter2[2];
._tx_counter2.end:
	.align 1;
	.global _tx_buffer_overflow2;
	.type _tx_buffer_overflow2,STT_OBJECT;
	.byte _tx_buffer_overflow2[1];
._tx_buffer_overflow2.end:
	.align 2;
	.global _tx_rd_index2;
	.type _tx_rd_index2,STT_OBJECT;
	.byte _tx_rd_index2[2];
._tx_rd_index2.end:
	.align 2;
	.global _TCP_tx_wr_index;
	.type _TCP_tx_wr_index,STT_OBJECT;
	.byte _TCP_tx_wr_index[2];
._TCP_tx_wr_index.end:
	.align 2;
	.global _TCP_tx_counter;
	.type _TCP_tx_counter,STT_OBJECT;
	.byte _TCP_tx_counter[2];
._TCP_tx_counter.end:
	.align 1;
	.global _TCP_tx_buffer_overflow;
	.type _TCP_tx_buffer_overflow,STT_OBJECT;
	.byte _TCP_tx_buffer_overflow[1];
._TCP_tx_buffer_overflow.end:
	.align 2;
	.global _TCP_tx_rd_index;
	.type _TCP_tx_rd_index,STT_OBJECT;
	.byte _TCP_tx_rd_index[2];
._TCP_tx_rd_index.end:
	.align 4;
	.global _tx_buffer1;
	.type _tx_buffer1,STT_OBJECT;
	.byte _tx_buffer1[64];
._tx_buffer1.end:

	.section/DOUBLE64 data1;

	.align 4;
_tx_wr_index1:
	.global _tx_wr_index1;
	.type _tx_wr_index1,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._tx_wr_index1.end:
	.align 4;
_tx_rd_index1:
	.global _tx_rd_index1;
	.type _tx_rd_index1,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._tx_rd_index1.end:
	.align 4;
_tx_counter1:
	.global _tx_counter1;
	.type _tx_counter1,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._tx_counter1.end:

	.section/ZERO_INIT/DOUBLE64 bsz;

	.align 4;
	.global _srt;
	.type _srt,STT_OBJECT;
	.byte _srt[201];
._srt.end:
	.align 4;
	.global _strng;
	.type _strng,STT_OBJECT;
	.byte _strng[32];
._strng.end:
	.align 4;
	.global _InOut;
	.type _InOut,STT_OBJECT;
	.byte _InOut[201];
._InOut.end:
	.align 4;
	.global _Word;
	.type _Word,STT_OBJECT;
	.byte _Word[33];
._Word.end:
	.align 4;
	.global _DATA_Word;
	.type _DATA_Word,STT_OBJECT;
	.byte _DATA_Word[201];
._DATA_Word.end:
	.align 4;
	.global _DATA_Word2;
	.type _DATA_Word2,STT_OBJECT;
	.byte _DATA_Word2[201];
._DATA_Word2.end:
	.align 4;
	.global _TIME_WORK_CONTROL;
	.type _TIME_WORK_CONTROL,STT_OBJECT;
	.byte _TIME_WORK_CONTROL[4];
._TIME_WORK_CONTROL.end:
	.align 4;
	.global _packet;
	.type _packet,STT_OBJECT;
	.byte _packet[144];
._packet.end:
	.align 4;
	.global _ZX_BUF;
	.type _ZX_BUF,STT_OBJECT;
	.byte _ZX_BUF[170];
._ZX_BUF.end:

	.section/DOUBLE64 data1;

	.align 4;
_sch_avariya:
	.global _sch_avariya;
	.type _sch_avariya,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._sch_avariya.end:

	.section/ZERO_INIT/DOUBLE64 bsz;

	.align 4;
	.global _CRC_m;
	.type _CRC_m,STT_OBJECT;
	.byte _CRC_m[18];
._CRC_m.end:

	.section/DOUBLE64 data1;

	.align 1;
_K615_crc_sch:
	.global _K615_crc_sch;
	.type _K615_crc_sch,STT_OBJECT;
	.byte =
		0x00;
._K615_crc_sch.end:
	.align 1;
_K615_crc_sch2:
	.global _K615_crc_sch2;
	.type _K615_crc_sch2,STT_OBJECT;
	.byte =
		0x00;
._K615_crc_sch2.end:
	.align 1;
_flag_event_sinhron:
	.global _flag_event_sinhron;
	.type _flag_event_sinhron,STT_OBJECT;
	.byte =
		0x00;
._flag_event_sinhron.end:
	.align 1;
_flag_pachka_TXT:
	.global _flag_pachka_TXT;
	.type _flag_pachka_TXT,STT_OBJECT;
	.byte =
		0x00;
._flag_pachka_TXT.end:
	.align 4;
_sch_pachek_test:
	.global _sch_pachek_test;
	.type _sch_pachek_test,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._sch_pachek_test.end:
	.align 4;
_sch_event_sinhron:
	.global _sch_event_sinhron;
	.type _sch_event_sinhron,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._sch_event_sinhron.end:

	.section/ZERO_INIT/DOUBLE64 bsz;

	.align 1;
	.global _flag_K615_event;
	.type _flag_K615_event,STT_OBJECT;
	.byte _flag_K615_event[1];
._flag_K615_event.end:

	.section/DOUBLE64 data1;

	.align 1;
_flag_Ethernet_packet_rcv:
	.global _flag_Ethernet_packet_rcv;
	.type _flag_Ethernet_packet_rcv,STT_OBJECT;
	.byte =
		0x00;
._flag_Ethernet_packet_rcv.end:
	.align 4;
_sch_UDP_pakets:
	.global _sch_UDP_pakets;
	.type _sch_UDP_pakets,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._sch_UDP_pakets.end:
	.align 1;
_flag_event_K615_run:
	.global _flag_event_K615_run;
	.type _flag_event_K615_run,STT_OBJECT;
	.byte =
		0x00;
._flag_event_K615_run.end:
	.align 4;
_TNC_number_run:
	.global _TNC_number_run;
	.type _TNC_number_run,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._TNC_number_run.end:
	.align 4;
_timer_TNC1:
	.global _timer_TNC1;
	.type _timer_TNC1,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._timer_TNC1.end:
	.align 4;
_timer_TNC2:
	.global _timer_TNC2;
	.type _timer_TNC2,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._timer_TNC2.end:
	.align 4;
_Interval_TNC:
	.global _Interval_TNC;
	.type _Interval_TNC,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._Interval_TNC.end:
	.align 4;
_timer_TOBM:
	.global _timer_TOBM;
	.type _timer_TOBM,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._timer_TOBM.end:
	.align 1;
_FLAG_PACHKA_DELAY:
	.global _FLAG_PACHKA_DELAY;
	.type _FLAG_PACHKA_DELAY,STT_OBJECT;
	.byte =
		0xFF;
._FLAG_PACHKA_DELAY.end:
	.align 1;
_flag_first_TNO:
	.global _flag_first_TNO;
	.type _flag_first_TNO,STT_OBJECT;
	.byte =
		0x00;
._flag_first_TNO.end:
	.align 1;
_FLAG_SYNC_PF8:
	.global _FLAG_SYNC_PF8;
	.type _FLAG_SYNC_PF8,STT_OBJECT;
	.byte =
		0x00;
._FLAG_SYNC_PF8.end:
	.align 1;
_FLAG_SYNC_PF11:
	.global _FLAG_SYNC_PF11;
	.type _FLAG_SYNC_PF11,STT_OBJECT;
	.byte =
		0x00;
._FLAG_SYNC_PF11.end:
	.align 4;
_TIME1_PPI_START:
	.global _TIME1_PPI_START;
	.type _TIME1_PPI_START,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._TIME1_PPI_START.end:
	.align 4;
_TIME2_PPI_START:
	.global _TIME2_PPI_START;
	.type _TIME2_PPI_START,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._TIME2_PPI_START.end:
	.align 4;
_TIME3_PPI_START:
	.global _TIME3_PPI_START;
	.type _TIME3_PPI_START,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._TIME3_PPI_START.end:
	.align 4;
_TIME_PPI_END:
	.global _TIME_PPI_END;
	.type _TIME_PPI_END,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._TIME_PPI_END.end:
	.align 4;
_TIME_PACKET_FORM:
	.global _TIME_PACKET_FORM;
	.type _TIME_PACKET_FORM,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._TIME_PACKET_FORM.end:
	.align 1;
_FLAG_PPI_OK:
	.global _FLAG_PPI_OK;
	.type _FLAG_PPI_OK,STT_OBJECT;
	.byte =
		0x01;
._FLAG_PPI_OK.end:
	.align 1;
_flag_PPI_sinc_D2:
	.global _flag_PPI_sinc_D2;
	.type _flag_PPI_sinc_D2,STT_OBJECT;
	.byte =
		0x00;
._flag_PPI_sinc_D2.end:
	.align 1;
_flag_PPI_sz1_D2:
	.global _flag_PPI_sz1_D2;
	.type _flag_PPI_sz1_D2,STT_OBJECT;
	.byte =
		0x00;
._flag_PPI_sz1_D2.end:
	.align 1;
_flag_PPI_sz2_D2:
	.global _flag_PPI_sz2_D2;
	.type _flag_PPI_sz2_D2,STT_OBJECT;
	.byte =
		0x00;
._flag_PPI_sz2_D2.end:
	.align 4;
_TIME_PPI_OK:
	.global _TIME_PPI_OK;
	.type _TIME_PPI_OK,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._TIME_PPI_OK.end:
	.align 4;
_TIME_PPI_RUN:
	.global _TIME_PPI_RUN;
	.type _TIME_PPI_RUN,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._TIME_PPI_RUN.end:
	.align 4;
_DELTA_TIME_PPI:
	.global _DELTA_TIME_PPI;
	.type _DELTA_TIME_PPI,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._DELTA_TIME_PPI.end:
	.align 4;
_Alfa:
	.global _Alfa;
	.type _Alfa,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._Alfa.end:
	.align 4;
_Beta:
	.global _Beta;
	.type _Beta,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._Beta.end:
	.align 1;
_flag_END_sync_packet:
	.global _flag_END_sync_packet;
	.type _flag_END_sync_packet,STT_OBJECT;
	.byte =
		0x00;
._flag_END_sync_packet.end:
	.align 1;
_FLAG_PACKET_SEND:
	.global _FLAG_PACKET_SEND;
	.type _FLAG_PACKET_SEND,STT_OBJECT;
	.byte =
		0x00;
._FLAG_PACKET_SEND.end:
	.align 1;
_Event_word:
	.global _Event_word;
	.type _Event_word,STT_OBJECT;
	.byte =
		0x00;
._Event_word.end:
	.align 4;
_tick_PPI_wait:
	.global _tick_PPI_wait;
	.type _tick_PPI_wait,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._tick_PPI_wait.end:

	.section/ZERO_INIT/DOUBLE64 bsz;

	.align 4;
	.global _DSP_in1;
	.type _DSP_in1,STT_OBJECT;
	.byte _DSP_in1[64];
._DSP_in1.end:
	.align 4;
	.global _Inf_A2;
	.type _Inf_A2,STT_OBJECT;
	.byte _Inf_A2[16];
._Inf_A2.end:

	.section/DOUBLE64 data1;

	.align 1;
_Flag_K611:
	.global _Flag_K611;
	.type _Flag_K611,STT_OBJECT;
	.byte =
		0x00;
._Flag_K611.end:
	.align 1;
_Flag_init_K611:
	.global _Flag_init_K611;
	.type _Flag_init_K611,STT_OBJECT;
	.byte =
		0x00;
._Flag_init_K611.end:
	.align 1;
_Flag_control_K611:
	.global _Flag_control_K611;
	.type _Flag_control_K611,STT_OBJECT;
	.byte =
		0x00;
._Flag_control_K611.end:
	.align 1;
_Flag_control_sig_K611:
	.global _Flag_control_sig_K611;
	.type _Flag_control_sig_K611,STT_OBJECT;
	.byte =
		0x00;
._Flag_control_sig_K611.end:
	.align 1;
_Flag_control_end_K611:
	.global _Flag_control_end_K611;
	.type _Flag_control_end_K611,STT_OBJECT;
	.byte =
		0x00;
._Flag_control_end_K611.end:
	.align 1;
_Flag_zahvat_sig_K611:
	.global _Flag_zahvat_sig_K611;
	.type _Flag_zahvat_sig_K611,STT_OBJECT;
	.byte =
		0x00;
._Flag_zahvat_sig_K611.end:
	.align 1;
_Flag_zahvat_end_K611:
	.global _Flag_zahvat_end_K611;
	.type _Flag_zahvat_end_K611,STT_OBJECT;
	.byte =
		0x00;
._Flag_zahvat_end_K611.end:
	.align 1;
_Qwant_K611:
	.global _Qwant_K611;
	.type _Qwant_K611,STT_OBJECT;
	.byte =
		0x00;
._Qwant_K611.end:
	.align 1;
_Flag_zahvat_OK_K611:
	.global _Flag_zahvat_OK_K611;
	.type _Flag_zahvat_OK_K611,STT_OBJECT;
	.byte =
		0x00;
._Flag_zahvat_OK_K611.end:
	.align 1;
_Flag_signal_OK_K611:
	.global _Flag_signal_OK_K611;
	.type _Flag_signal_OK_K611,STT_OBJECT;
	.byte =
		0x00;
._Flag_signal_OK_K611.end:
	.align 1;
_Flag_K612:
	.global _Flag_K612;
	.type _Flag_K612,STT_OBJECT;
	.byte =
		0x00;
._Flag_K612.end:
	.align 1;
_Flag_init_K612:
	.global _Flag_init_K612;
	.type _Flag_init_K612,STT_OBJECT;
	.byte =
		0x00;
._Flag_init_K612.end:
	.align 1;
_Flag_control_K612:
	.global _Flag_control_K612;
	.type _Flag_control_K612,STT_OBJECT;
	.byte =
		0x00;
._Flag_control_K612.end:
	.align 1;
_Flag_K613:
	.global _Flag_K613;
	.type _Flag_K613,STT_OBJECT;
	.byte =
		0x00;
._Flag_K613.end:
	.align 1;
_Flag_init_K613:
	.global _Flag_init_K613;
	.type _Flag_init_K613,STT_OBJECT;
	.byte =
		0x00;
._Flag_init_K613.end:
	.align 1;
_Flag_control_K613:
	.global _Flag_control_K613;
	.type _Flag_control_K613,STT_OBJECT;
	.byte =
		0x00;
._Flag_control_K613.end:
	.align 1;
_Flag_K615:
	.global _Flag_K615;
	.type _Flag_K615,STT_OBJECT;
	.byte =
		0x00;
._Flag_K615.end:
	.align 1;
_Flag_init_K615:
	.global _Flag_init_K615;
	.type _Flag_init_K615,STT_OBJECT;
	.byte =
		0x00;
._Flag_init_K615.end:
	.align 1;
_Flag_control_K615:
	.global _Flag_control_K615;
	.type _Flag_control_K615,STT_OBJECT;
	.byte =
		0x00;
._Flag_control_K615.end:
	.align 1;
_Qwant_K615:
	.global _Qwant_K615;
	.type _Qwant_K615,STT_OBJECT;
	.byte =
		0x00;
._Qwant_K615.end:
	.align 1;
_Flag_K614:
	.global _Flag_K614;
	.type _Flag_K614,STT_OBJECT;
	.byte =
		0x00;
._Flag_K614.end:
	.align 1;
_Flag_init_K614:
	.global _Flag_init_K614;
	.type _Flag_init_K614,STT_OBJECT;
	.byte =
		0x00;
._Flag_init_K614.end:
	.align 1;
_Flag_control_K614:
	.global _Flag_control_K614;
	.type _Flag_control_K614,STT_OBJECT;
	.byte =
		0x00;
._Flag_control_K614.end:
	.align 1;
_Qwant_K614:
	.global _Qwant_K614;
	.type _Qwant_K614,STT_OBJECT;
	.byte =
		0x00;
._Qwant_K614.end:
	.align 1;
_flag_event_K614:
	.global _flag_event_K614;
	.type _flag_event_K614,STT_OBJECT;
	.byte =
		0x00;
._flag_event_K614.end:
	.align 1;
_PROCESS:
	.global _PROCESS;
	.type _PROCESS,STT_OBJECT;
	.byte =
		0x00;
._PROCESS.end:
	.align 1;
_sys_life_k612:
	.global _sys_life_k612;
	.type _sys_life_k612,STT_OBJECT;
	.byte =
		0x00;
._sys_life_k612.end:
	.align 1;
_sys_life_k613:
	.global _sys_life_k613;
	.type _sys_life_k613,STT_OBJECT;
	.byte =
		0x00;
._sys_life_k613.end:
	.align 4;
_AVARIYA_flag:
	.global _AVARIYA_flag;
	.type _AVARIYA_flag,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._AVARIYA_flag.end:
	.align 4;
_TIME_BR:
	.global _TIME_BR;
	.type _TIME_BR,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._TIME_BR.end:
	.align 1;
_flag_PPI_sz1:
	.global _flag_PPI_sz1;
	.type _flag_PPI_sz1,STT_OBJECT;
	.byte =
		0x00;
._flag_PPI_sz1.end:
	.align 1;
_flag_PPI_sz2:
	.global _flag_PPI_sz2;
	.type _flag_PPI_sz2,STT_OBJECT;
	.byte =
		0x00;
._flag_PPI_sz2.end:
	.align 1;
_flag_PPI_sinc:
	.global _flag_PPI_sinc;
	.type _flag_PPI_sinc,STT_OBJECT;
	.byte =
		0x00;
._flag_PPI_sinc.end:
	.align 1;
_flag_Packet_form:
	.global _flag_Packet_form;
	.type _flag_Packet_form,STT_OBJECT;
	.byte =
		0x00;
._flag_Packet_form.end:
	.align 4;
_time_TNO:
	.global _time_TNO;
	.type _time_TNO,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._time_TNO.end:
	.align 4;
_time_TNC:
	.global _time_TNC;
	.type _time_TNC,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._time_TNC.end:
	.align 4;
_time_TNO_min:
	.global _time_TNO_min;
	.type _time_TNO_min,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._time_TNO_min.end:
	.align 4;
_time_TNC_min:
	.global _time_TNC_min;
	.type _time_TNC_min,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._time_TNC_min.end:
	.align 4;
_time_TNO_max:
	.global _time_TNO_max;
	.type _time_TNO_max,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._time_TNO_max.end:
	.align 4;
_time_TNC_max:
	.global _time_TNC_max;
	.type _time_TNC_max,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._time_TNC_max.end:
	.align 1;
_flag_1HZ_sync:
	.global _flag_1HZ_sync;
	.type _flag_1HZ_sync,STT_OBJECT;
	.byte =
		0x00;
._flag_1HZ_sync.end:
	.align 4;
_TIMER_FINDER:
	.global _TIMER_FINDER;
	.type _TIMER_FINDER,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._TIMER_FINDER.end:
	.align 1;
_RS485:
	.global _RS485;
	.type _RS485,STT_OBJECT;
	.byte =
		0x00;
._RS485.end:

	.section/ZERO_INIT/DOUBLE64 bsz;

	.align 4;
	.global _Struk0;
	.type _Struk0,STT_OBJECT;
	.byte _Struk0[2280];
._Struk0.end:
	.align 4;
	.global _StrukREZ;
	.type _StrukREZ,STT_OBJECT;
	.byte _StrukREZ[2280];
._StrukREZ.end:
	.align 4;
	.global _Mem1;
	.type _Mem1,STT_OBJECT;
	.byte _Mem1[168];
._Mem1.end:
	.align 2;
	.global _Mem_sys;
	.type _Mem_sys,STT_OBJECT;
	.byte _Mem_sys[18];
._Mem_sys.end:
	.align 4;
	.global _Pkt;
	.type _Pkt,STT_OBJECT;
	.byte _Pkt[14400];
._Pkt.end:
	.align 4;
	.global _Pkt_0;
	.type _Pkt_0,STT_OBJECT;
	.byte _Pkt_0[120];
._Pkt_0.end:

	.section/DOUBLE64 data1;

	.align 4;
_index_wr_old:
	.global _index_wr_old;
	.type _index_wr_old,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._index_wr_old.end:
	.align 4;
_index_wr:
	.global _index_wr;
	.type _index_wr,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._index_wr.end:
	.align 4;
_index_rd:
	.global _index_rd;
	.type _index_rd,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._index_rd.end:
	.align 1;
_flag_dsp_ok:
	.global _flag_dsp_ok;
	.type _flag_dsp_ok,STT_OBJECT;
	.byte =
		0x01;
._flag_dsp_ok.end:

	.section/ZERO_INIT/DOUBLE64 bsz;

	.align 4;
	.global _a;
	.type _a,STT_OBJECT;
	.byte _a[620];
._a.end:
	.align 4;
	.global _z;
	.type _z,STT_OBJECT;
	.byte _z[150];
._z.end:
	.align 4;
	.global _buf_DMA_uart;
	.type _buf_DMA_uart,STT_OBJECT;
	.byte _buf_DMA_uart[4106];
._buf_DMA_uart.end:

	.section/DOUBLE64 constdata;

	.align 4;
.SWITCH.1:
	.type .SWITCH.1,STT_OBJECT;
	.byte4 = .P218L2;
	.byte4 = .P218L3;
	.byte4 = .P218L4;
	.byte4 = .P218L5;
	.byte4 = .P218L6;
	.byte4 = .P218L7;
	.byte4 = .P218L8;
.SWITCH.1.end:
	.align 4;
.s0WORKS.9:
	.type .s0WORKS.9,STT_OBJECT;
	.byte =
		0x7E,0x30,0x20,0x57,0x4F,0x52,0x4B,0x5F,0x53,0x54,0x41,0x52,
		0x54,0x3B,0x0D,0x0A,0x00;
.s0WORKS.9.end:
	.align 4;
.s0B610.10:
	.type .s0B610.10,STT_OBJECT;
	.byte =
		0x7E,0x30,0x20,0xC2,0xDB,0xCA,0xCB,0x5F,0x42,0x36,0x31,0x30,
		0x3B,0x0D,0x0A,0x00;
.s0B610.10.end:
	.align 4;
.s610.14:
	.type .s610.14,STT_OBJECT;
	.byte =
		0xEA,0xE0,0xEA,0xE0,0xFF,0x2D,0xF2,0xEE,0x20,0xE0,0xE2,0xE0,
		0xF0,0xE8,0xFF,0x20,0xE1,0xEB,0xEE,0xEA,0xE0,0x20,0xC1,0x36,
		0x31,0x30,0x21,0x21,0x21,0x0D,0x0A,0x00;
.s610.14.end:
	.align 4;
.s.15:
	.type .s.15,STT_OBJECT;
	.byte =
		0xC7,0xE0,0xE4,0xE0,0xED,0x20,0xF0,0xE5,0xE6,0xE8,0xEC,0x20,
		0xC3,0xC1,0xD0,0x0D,0x00;
.s.15.end:
	.align 4;
.s.16:
	.type .s.16,STT_OBJECT;
	.byte =
		0xC7,0xE0,0xE4,0xE0,0xED,0x20,0xF0,0xE5,0xE6,0xE8,0xEC,0x20,
		0xC1,0xD0,0x0D,0x00;
.s.16.end:
	.align 4;
.sAVARIY.19:
	.type .sAVARIY.19,STT_OBJECT;
	.byte =
		0x41,0x56,0x41,0x52,0x49,0x59,0x41,0x5F,0x50,0x49,0x54,0x5F,
		0x31,0x5F,0x46,0x54,0x3A,0x00;
.sAVARIY.19.end:
	.align 4;
.sAVARIY.20:
	.type .sAVARIY.20,STT_OBJECT;
	.byte =
		0x41,0x56,0x41,0x52,0x49,0x59,0x41,0x5F,0x50,0x49,0x54,0x5F,
		0x32,0x5F,0x46,0x54,0x3A,0x00;
.sAVARIY.20.end:
	.align 4;
.sAVARIY.25:
	.type .sAVARIY.25,STT_OBJECT;
	.byte =
		0x41,0x56,0x41,0x52,0x49,0x59,0x41,0x5F,0x4B,0x41,0x4E,0x5F,
		0x31,0x5F,0x46,0x54,0x3A,0x00;
.sAVARIY.25.end:
	.align 4;
.sAVARIY.26:
	.type .sAVARIY.26,STT_OBJECT;
	.byte =
		0x41,0x56,0x41,0x52,0x49,0x59,0x41,0x5F,0x4B,0x41,0x4E,0x5F,
		0x32,0x5F,0x46,0x54,0x3A,0x00;
.sAVARIY.26.end:
	.align 4;
.sAVARIY.27:
	.type .sAVARIY.27,STT_OBJECT;
	.byte =
		0x41,0x56,0x41,0x52,0x49,0x59,0x41,0x5F,0x4B,0x41,0x4E,0x5F,
		0x33,0x5F,0x46,0x54,0x3A,0x00;
.sAVARIY.27.end:
	.align 4;
.sAVARIY.28:
	.type .sAVARIY.28,STT_OBJECT;
	.byte =
		0x41,0x56,0x41,0x52,0x49,0x59,0x41,0x5F,0x4B,0x41,0x4E,0x5F,
		0x34,0x5F,0x46,0x54,0x3A,0x00;
.sAVARIY.28.end:
	.align 4;
.sNORMAT.29:
	.type .sNORMAT.29,STT_OBJECT;
	.byte =
		0x4E,0x4F,0x52,0x4D,0x41,0x5F,0x54,0x45,0x4D,0x50,0x5F,0x31,
		0x55,0x30,0x37,0x46,0x49,0x3A,0x00;
.sNORMAT.29.end:
	.align 4;
.sNormaa.32:
	.type .sNormaa.32,STT_OBJECT;
	.byte =
		0x4E,0x6F,0x72,0x6D,0x61,0x5F,0x61,0x6D,0x70,0x6C,0x69,0x66,
		0x65,0x72,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x3A,
		0x00;
.sNormaa.32.end:
	.align 4;
.sNormap.33:
	.type .sNormap.33,STT_OBJECT;
	.byte =
		0x4E,0x6F,0x72,0x6D,0x61,0x5F,0x70,0x69,0x74,0x61,0x6E,0x69,
		0x79,0x61,0x46,0x54,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x3A,
		0x00;
.sNormap.33.end:
	.align 4;
.sNomerr.34:
	.type .sNomerr.34,STT_OBJECT;
	.byte =
		0x4E,0x6F,0x6D,0x65,0x72,0x5F,0x72,0x65,0x7A,0x65,0x72,0x5F,
		0x61,0x6D,0x70,0x6C,0x69,0x66,0x65,0x72,0x5F,0x46,0x54,0x3A,
		0x00;
.sNomerr.34.end:
	.align 4;
.sMemsys.35:
	.type .sMemsys.35,STT_OBJECT;
	.byte =
		0x4D,0x65,0x6D,0x5F,0x73,0x79,0x73,0x2E,0x63,0x6F,0x64,0x65,
		0x5F,0x30,0x32,0x68,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x3A,
		0x00;
.sMemsys.35.end:
	.align 4;
.sMemsys.36:
	.type .sMemsys.36,STT_OBJECT;
	.byte =
		0x4D,0x65,0x6D,0x5F,0x73,0x79,0x73,0x2E,0x63,0x6F,0x64,0x65,
		0x5F,0x30,0x33,0x68,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x3A,
		0x00;
.sMemsys.36.end:
	.align 4;
.sMAXUDP.54:
	.type .sMAXUDP.54,STT_OBJECT;
	.byte =
		0x4D,0x41,0x58,0x20,0x55,0x44,0x50,0x20,0x70,0x61,0x63,0x6B,
		0x65,0x74,0x3A,0x00;
.sMAXUDP.54.end:
	.align 4;
.sERRORT.58:
	.type .sERRORT.58,STT_OBJECT;
	.byte =
		0x21,0x21,0x21,0x45,0x52,0x52,0x4F,0x52,0x5F,0x54,0x4E,0x5F,
		0x46,0x4C,0x41,0x47,0x3A,0x00;
.sERRORT.58.end:
	.align 4;
.sWARNIN.59:
	.type .sWARNIN.59,STT_OBJECT;
	.byte =
		0xC4,0xCB,0xC8,0xCD,0xCD,0xC0,0xDF,0x20,0xCC,0xCE,0xC4,0xD3,
		0xCB,0xDF,0xD6,0xC8,0xDF,0x21,0x21,0x21,0x20,0x57,0x41,0x52,
		0x4E,0x49,0x4E,0x47,0x21,0x21,0x21,0x0D,0x0A,0x00;
.sWARNIN.59.end:
	.align 4;
.s.61:
	.type .s.61,STT_OBJECT;
	.byte =
		0x21,0x21,0x21,0xEF,0xF0,0xE5,0xE2,0xFB,0xF8,0xE5,0xED,0xE8,
		0xE5,0x20,0xCC,0xC0,0xD5,0x20,0xF7,0xE8,0xF1,0xEB,0xE0,0x20,
		0xE8,0xEC,0xEF,0xF3,0xEB,0xFC,0xF1,0xEE,0xE2,0x3A,0x00;
.s.61.end:
	.align 4;
.sERRORC.62:
	.type .sERRORC.62,STT_OBJECT;
	.byte =
		0x21,0x21,0x21,0x45,0x52,0x52,0x4F,0x52,0x5F,0x43,0x52,0x43,
		0x5F,0x63,0x6F,0x6E,0x74,0x72,0x6F,0x6C,0x5F,0x77,0x6F,0x72,
		0x64,0x3A,0x00;
.sERRORC.62.end:
	.align 4;
.s601.63:
	.type .s601.63,STT_OBJECT;
	.byte =
		0xE0,0xE2,0xE0,0xF0,0xE8,0xFF,0x20,0xCA,0x36,0x30,0x31,0x21,
		0x20,0x2D,0x20,0xF3,0xF1,0xE8,0xEB,0xE8,0xF2,0xE5,0xEB,0xFC,
		0x20,0xE8,0xE7,0xEB,0xF3,0xF7,0xE5,0xED,0xE8,0xFF,0x20,0x0D,
		0x0A,0x00;
.s601.63.end:
	.align 4;
.s602.64:
	.type .s602.64,STT_OBJECT;
	.byte =
		0xE0,0xE2,0xE0,0xF0,0xE8,0xFF,0x20,0xCA,0x36,0x30,0x32,0x21,
		0x20,0x2D,0x20,0xF3,0xF1,0xE8,0xEB,0xE8,0xF2,0xE5,0xEB,0xFC,
		0x20,0xE3,0xE5,0xF2,0xE5,0xF0,0xEE,0xE4,0xE8,0xED,0xE0,0x0D,
		0x0A,0x00;
.s602.64.end:
	.align 4;
.s603F16.65:
	.type .s603F16.65,STT_OBJECT;
	.byte =
		0xE0,0xE2,0xE0,0xF0,0xE8,0xFF,0x20,0xCA,0x36,0x30,0x33,0x21,
		0x20,0x2D,0x20,0xF3,0xF1,0xE8,0xEB,0xE8,0xF2,0xE5,0xEB,0xFF,
		0x20,0xF1,0xE8,0xE3,0xED,0xE0,0xEB,0xE0,0x20,0x46,0x31,0x36,
		0x30,0x20,0xCC,0xE3,0xF6,0x0D,0x0A,0x00;
.s603F16.65.end:
	.align 4;
.s604F64.66:
	.type .s604F64.66,STT_OBJECT;
	.byte =
		0xE0,0xE2,0xE0,0xF0,0xE8,0xFF,0x20,0xCA,0x36,0x30,0x34,0x21,
		0x20,0x2D,0x20,0xF3,0xF1,0xE8,0xEB,0xE8,0xF2,0xE5,0xEB,0xFF,
		0x20,0xF1,0xE8,0xE3,0xED,0xE0,0xEB,0xE0,0x20,0x46,0x36,0x34,
		0x20,0x20,0xCC,0xE3,0xF6,0x0D,0x0A,0x00;
.s604F64.66.end:
	.align 4;
.s605.67:
	.type .s605.67,STT_OBJECT;
	.byte =
		0xE0,0xE2,0xE0,0xF0,0xE8,0xFF,0x20,0xCA,0x36,0x30,0x35,0x21,
		0x20,0x2D,0x20,0xF3,0xF1,0xE8,0xEB,0xE5,0xED,0xE8,0xFF,0x20,
		0xE8,0xEC,0xEF,0xF3,0xEB,0xFC,0xF1,0xED,0xFB,0xF5,0x20,0xF1,
		0xE8,0xE3,0xED,0xE0,0xEB,0xEE,0xE2,0x0D,0x0A,0x00;
.s605.67.end:
	.align 4;
.s607.68:
	.type .s607.68,STT_OBJECT;
	.byte =
		0xE0,0xE2,0xE0,0xF0,0xE8,0xFF,0x20,0xCA,0x36,0x30,0x37,0x21,
		0x20,0x2D,0x20,0xEF,0xF0,0xEE,0xE1,0xEB,0xE5,0xEC,0xFB,0x20,
		0xF1,0x20,0xF2,0xE5,0xEF,0xEB,0xEE,0xEC,0x0D,0x0A,0x00;
.s607.68.end:
	.align 4;
.s608.69:
	.type .s608.69,STT_OBJECT;
	.byte =
		0xE0,0xE2,0xE0,0xF0,0xE8,0xFF,0x20,0xCA,0x36,0x30,0x38,0x21,
		0x20,0x2D,0x20,0xEA,0xE0,0xF1,0xF1,0xE5,0xF2,0xE0,0x20,0xEF,
		0xF0,0xE8,0xE2,0xFF,0xE7,0xEA,0xE8,0x20,0xFD,0xF2,0xE0,0xEB,
		0xEE,0xED,0xE0,0x0D,0x0A,0x00;
.s608.69.end:
	.align 4;
.s612.70:
	.type .s612.70,STT_OBJECT;
	.byte =
		0xE0,0xE2,0xE0,0xF0,0xE8,0xFF,0x20,0xCA,0x36,0x31,0x32,0x21,
		0x20,0x2D,0x20,0xEA,0xE0,0xF1,0xF1,0xE5,0xF2,0xE0,0x20,0xF1,
		0xE8,0xED,0xF2,0xE5,0xE7,0xE0,0x20,0xE8,0xE7,0xEB,0xF3,0xF7,
		0xE5,0xED,0xE8,0xFF,0x0D,0x0A,0x00;
.s612.70.end:
	.align 4;
.s613.71:
	.type .s613.71,STT_OBJECT;
	.byte =
		0xE0,0xE2,0xE0,0xF0,0xE8,0xFF,0x20,0xCA,0x36,0x31,0x33,0x21,
		0x20,0x2D,0x20,0xEA,0xE0,0xF1,0xF1,0xE5,0xF2,0xE0,0x20,0xF1,
		0xE8,0xED,0xF2,0xE5,0xE7,0xE0,0x20,0xE3,0xE5,0xF2,0xE5,0xF0,
		0xEE,0xE4,0xE8,0xED,0xE0,0x0D,0x0A,0x00;
.s613.71.end:
	.align 4;
.s611.72:
	.type .s611.72,STT_OBJECT;
	.byte =
		0xE0,0xE2,0xE0,0xF0,0xE8,0xFF,0x20,0xCA,0x36,0x31,0x31,0x21,
		0x20,0x2D,0x20,0xEA,0xE0,0xF1,0xF1,0xE5,0xF2,0xE0,0x20,0xD4,
		0xCE,0xD7,0x0D,0x0A,0x00;
.s611.72.end:
	.align 4;
.s.73:
	.type .s.73,STT_OBJECT;
	.byte =
		0xE0,0xE2,0xE0,0xF0,0xE8,0xFF,0x20,0xEA,0xE0,0xF1,0xF1,0xE5,
		0xF2,0xE0,0x20,0xD4,0xCE,0xD7,0x21,0x0D,0x0A,0x00;
.s.73.end:
	.align 4;
.s.96:
	.type .s.96,STT_OBJECT;
	.byte =
		0xF0,0xE5,0xE6,0xE8,0xEC,0x20,0xCB,0xD7,0xCC,0x20,0xEE,0xF1,
		0xED,0xEE,0xE2,0xED,0xEE,0xE3,0xEE,0x20,0xF1,0xE8,0xE3,0xED,
		0xE0,0xEB,0xE0,0x0D,0x0A,0x00;
.s.96.end:
	.align 4;
.s.98:
	.type .s.98,STT_OBJECT;
	.byte =
		0xE4,0xEE,0xEF,0xEE,0xEB,0xED,0xE8,0xF2,0xE5,0xEB,0xFC,0xED,
		0xFB,0xE9,0x20,0xE8,0xED,0xF2,0xE5,0xF0,0xE2,0xE0,0xEB,0x0D,
		0x0A,0x00;
.s.98.end:
	.align 4;
.s.100:
	.type .s.100,STT_OBJECT;
	.byte =
		0xEA,0xEE,0xE3,0xE5,0xF0,0xE5,0xED,0xF2,0xED,0xE0,0xFF,0x20,
		0xEF,0xE0,0xF7,0xEA,0xE0,0x20,0xF1,0xE8,0xE3,0xED,0xE0,0xEB,
		0xEE,0xE2,0x0D,0x0A,0x00;
.s.100.end:
	.align 4;
.s.101:
	.type .s.101,STT_OBJECT;
	.byte =
		0xED,0xE5,0x20,0xEA,0xEE,0xE3,0xE5,0xF0,0xE5,0xED,0xF2,0xED,
		0xE0,0xFF,0x20,0xEF,0xE0,0xF7,0xEA,0xE0,0x20,0xF1,0xE8,0xE3,
		0xED,0xE0,0xEB,0xEE,0xE2,0x0D,0x0A,0x00;
.s.101.end:
	.align 4;
.s.102:
	.type .s.102,STT_OBJECT;
	.byte =
		0xF0,0xE5,0xE6,0xE8,0xEC,0x20,0xCB,0xD7,0xCC,0x20,0xE2,0x20,
		0xF1,0xE8,0xE3,0xED,0xE0,0xEB,0xE5,0x20,0x27,0xEF,0xEE,0xEC,
		0xE5,0xF5,0xE8,0x27,0x0D,0x0A,0x00;
.s.102.end:
	.align 4;
.sF.103:
	.type .sF.103,STT_OBJECT;
	.byte =
		0xEE,0xE1,0xF0,0xE0,0xF2,0xED,0xE0,0xFF,0x20,0xEF,0xE8,0xEB,
		0xE0,0x20,0x46,0xE8,0x0D,0x0A,0x00;
.sF.103.end:
	.align 4;
.sF.104:
	.type .sF.104,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xFF,0xEC,0xE0,0xFF,0x20,0xEF,0xE8,0xEB,0xE0,0x20,
		0x46,0xE8,0x0D,0x0A,0x00;
.sF.104.end:
	.align 4;
.sF.105:
	.type .sF.105,STT_OBJECT;
	.byte =
		0xEE,0xE1,0xF0,0xE0,0xF2,0xED,0xE0,0xFF,0x20,0xEF,0xE8,0xEB,
		0xE0,0x20,0x46,0xE3,0x0D,0x0A,0x00;
.sF.105.end:
	.align 4;
.sF.106:
	.type .sF.106,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xFF,0xEC,0xE0,0xFF,0x20,0xEF,0xE8,0xEB,0xE0,0x20,
		0x46,0xE3,0x0D,0x0A,0x00;
.sF.106.end:
	.align 4;
.s2.107:
	.type .s2.107,STT_OBJECT;
	.byte =
		0x7E,0x7E,0x7E,0x7E,0x7E,0x7E,0x7E,0x7E,0x7E,0x7E,0x7E,0x7E,
		0xC8,0xEC,0xEF,0xF3,0xEB,0xFC,0xF1,0x20,0xB9,0x32,0x7E,0x7E,
		0x7E,0x7E,0x7E,0x7E,0x7E,0x7E,0x7E,0x7E,0x0D,0x0A,0x00;
.s2.107.end:
	.align 4;
.s3.113:
	.type .s3.113,STT_OBJECT;
	.byte =
		0x7E,0x7E,0x7E,0x7E,0x7E,0x7E,0x7E,0x7E,0x7E,0x7E,0x7E,0x7E,
		0xC8,0xEC,0xEF,0xF3,0xEB,0xFC,0xF1,0x20,0xB9,0x33,0x7E,0x7E,
		0x7E,0x7E,0x7E,0x7E,0x7E,0x7E,0x7E,0x7E,0x0D,0x0A,0x00;
.s3.113.end:
	.align 4;
.s.115:
	.type .s.115,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0xC7,0xE0,0xE4,0xE0,0xED,0xEE,0x20,0xC2,
		0xDB,0xCA,0xCB,0x3A,0x00;
.s.115.end:
	.align 4;
.s.116:
	.type .s.116,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0xC7,0xE0,0xE4,0xE0,0xED,0xEE,0x20,0xC3,
		0xC1,0xD0,0x3A,0x00;
.s.116.end:
	.align 4;
.s.117:
	.type .s.117,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0xC7,0xE0,0xE4,0xE0,0xED,0xEE,0x20,0x20,
		0xC1,0xD0,0x3A,0x00;
.s.117.end:
	.align 4;
.s.118:
	.type .s.118,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0xC7,0xE0,0xE4,0xE0,0xED,0xEE,0x20,0xD6,
		0xD3,0x2F,0xCC,0xD3,0x3A,0x00;
.s.118.end:
	.align 4;
.s610.119:
	.type .s610.119,STT_OBJECT;
	.byte =
		0xCA,0xEE,0xE4,0x20,0xF1,0xEE,0xF1,0xF2,0xEE,0xFF,0xED,0xE8,
		0xFF,0x20,0xC1,0x36,0x31,0x30,0x3A,0x00;
.s610.119.end:
	.align 4;
.sMem1Za.120:
	.type .sMem1Za.120,STT_OBJECT;
	.byte =
		0x4D,0x65,0x6D,0x31,0x2E,0x5A,0x61,0x70,0x72,0x65,0x74,0x5F,
		0x52,0x45,0x5A,0x45,0x52,0x56,0x20,0x3A,0x00;
.sMem1Za.120.end:
	.align 4;
.sMem1Za.121:
	.type .sMem1Za.121,STT_OBJECT;
	.byte =
		0x4D,0x65,0x6D,0x31,0x2E,0x5A,0x61,0x64,0x61,0x6E,0x6F,0x5F,
		0x6F,0x66,0x66,0x20,0x20,0x20,0x20,0x3A,0x00;
.sMem1Za.121.end:
	.align 4;
.sMem1Za.122:
	.type .sMem1Za.122,STT_OBJECT;
	.byte =
		0x4D,0x65,0x6D,0x31,0x2E,0x5A,0x61,0x64,0x61,0x6E,0x6F,0x5F,
		0x42,0x52,0x20,0x20,0x20,0x20,0x20,0x3A,0x00;
.sMem1Za.122.end:
	.align 4;
.sMem1Za.123:
	.type .sMem1Za.123,STT_OBJECT;
	.byte =
		0x4D,0x65,0x6D,0x31,0x2E,0x5A,0x61,0x64,0x61,0x6E,0x6F,0x5F,
		0x47,0x42,0x52,0x20,0x20,0x20,0x20,0x3A,0x00;
.sMem1Za.123.end:
	.align 4;
.sMem1Za.124:
	.type .sMem1Za.124,STT_OBJECT;
	.byte =
		0x4D,0x65,0x6D,0x31,0x2E,0x5A,0x61,0x64,0x61,0x6E,0x6F,0x5F,
		0x43,0x55,0x5F,0x4D,0x55,0x20,0x20,0x3A,0x00;
.sMem1Za.124.end:
	.align 4;
.sFLAGSY.125:
	.type .sFLAGSY.125,STT_OBJECT;
	.byte =
		0x46,0x4C,0x41,0x47,0x5F,0x53,0x59,0x4E,0x43,0x5F,0x53,0x45,
		0x56,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x3A,0x00;
.sFLAGSY.125.end:
	.align 4;
.sflagRX.126:
	.type .sflagRX.126,STT_OBJECT;
	.byte =
		0x66,0x6C,0x61,0x67,0x5F,0x52,0x58,0x5F,0x55,0x44,0x50,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x3A,0x00;
.sflagRX.126.end:
	.align 4;
.sFLAGUD.127:
	.type .sFLAGUD.127,STT_OBJECT;
	.byte =
		0x46,0x4C,0x41,0x47,0x5F,0x55,0x44,0x50,0x5F,0x45,0x56,0x45,
		0x4E,0x54,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x3A,0x00;
.sFLAGUD.127.end:
	.align 4;
.sFLAGUD.128:
	.type .sFLAGUD.128,STT_OBJECT;
	.byte =
		0x46,0x4C,0x41,0x47,0x5F,0x55,0x44,0x50,0x5F,0x49,0x4E,0x53,
		0x54,0x41,0x4C,0x4C,0x20,0x20,0x20,0x20,0x20,0x3A,0x00;
.sFLAGUD.128.end:
	.align 4;
.sFLAGEX.129:
	.type .sFLAGEX.129,STT_OBJECT;
	.byte =
		0x46,0x4C,0x41,0x47,0x5F,0x45,0x58,0x54,0x52,0x41,0x5F,0x50,
		0x41,0x43,0x4B,0x45,0x54,0x20,0x20,0x20,0x20,0x3A,0x00;
.sFLAGEX.129.end:
	.align 4;
.sflagsy.130:
	.type .sflagsy.130,STT_OBJECT;
	.byte =
		0x66,0x6C,0x61,0x67,0x5F,0x73,0x79,0x6E,0x63,0x5F,0x45,0x54,
		0x48,0x45,0x52,0x4E,0x45,0x54,0x20,0x20,0x20,0x3A,0x00;
.sflagsy.130.end:
	.align 4;
.sFLAGSC.131:
	.type .sFLAGSC.131,STT_OBJECT;
	.byte =
		0x46,0x4C,0x41,0x47,0x5F,0x53,0x43,0x48,0x5F,0x4E,0x45,0x57,
		0x5F,0x42,0x55,0x46,0x20,0x20,0x20,0x20,0x20,0x3A,0x00;
.sFLAGSC.131.end:
	.align 4;
.s.132:
	.type .s.132,STT_OBJECT;
	.byte =
		0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,
		0x2A,0x0D,0x0A,0x00;
.s.132.end:
	.align 4;
.sUDP.133:
	.type .sUDP.133,STT_OBJECT;
	.byte =
		0xF1,0xF7,0xB8,0xF2,0xF7,0xE8,0xEA,0x20,0x55,0x44,0x50,0x20,
		0xF2,0xE0,0xE9,0xEC,0xE0,0xF3,0xF2,0xE0,0x3A,0x00;
.sUDP.133.end:
	.align 4;
.sMemK61.134:
	.type .sMemK61.134,STT_OBJECT;
	.byte =
		0x4D,0x65,0x6D,0x5F,0x4B,0x36,0x31,0x35,0x2E,0x4E,0x49,0x4C,
		0x53,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x3A,0x00;
.sMemK61.134.end:
	.align 4;
.sMemK61.135:
	.type .sMemK61.135,STT_OBJECT;
	.byte =
		0x4D,0x65,0x6D,0x5F,0x4B,0x36,0x31,0x35,0x2E,0x56,0x43,0x55,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x3A,0x00;
.sMemK61.135.end:
	.align 4;
.sMemK61.136:
	.type .sMemK61.136,STT_OBJECT;
	.byte =
		0x4D,0x65,0x6D,0x5F,0x4B,0x36,0x31,0x35,0x2E,0x4D,0x55,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x3A,0x00;
.sMemK61.136.end:
	.align 4;
.sMemK61.137:
	.type .sMemK61.137,STT_OBJECT;
	.byte =
		0x4D,0x65,0x6D,0x5F,0x4B,0x36,0x31,0x35,0x2E,0x47,0x42,0x52,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x3A,0x00;
.sMemK61.137.end:
	.align 4;
.sMemK61.138:
	.type .sMemK61.138,STT_OBJECT;
	.byte =
		0x4D,0x65,0x6D,0x5F,0x4B,0x36,0x31,0x35,0x2E,0x42,0x52,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x3A,0x00;
.sMemK61.138.end:
	.align 4;
.sflagFA.140:
	.type .sflagFA.140,STT_OBJECT;
	.byte =
		0x66,0x6C,0x61,0x67,0x5F,0x46,0x41,0x49,0x4C,0x5F,0x50,0x50,
		0x49,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x3A,0x00;
.sflagFA.140.end:
	.align 4;
.sschERR.141:
	.type .sschERR.141,STT_OBJECT;
	.byte =
		0x73,0x63,0x68,0x5F,0x45,0x52,0x52,0x4F,0x52,0x5F,0x43,0x52,
		0x43,0x5F,0x63,0x6F,0x6E,0x74,0x72,0x6F,0x6C,0x5F,0x77,0x6F,
		0x72,0x64,0x20,0x20,0x20,0x20,0x3A,0x00;
.sschERR.141.end:
	.align 4;
.s.142:
	.type .s.142,STT_OBJECT;
	.byte =
		0xCE,0xF8,0xE8,0xE1,0xEA,0xE0,0x20,0xE4,0xEB,0xE8,0xF2,0xE5,
		0xEB,0xFC,0xED,0xEE,0xF1,0xF2,0xE8,0x20,0xE8,0xED,0xF2,0xE5,
		0xF0,0xE2,0xE0,0xEB,0xEE,0xE2,0x3A,0x00;
.s.142.end:
	.align 4;
.s.143:
	.type .s.143,STT_OBJECT;
	.byte =
		0xE2,0xF0,0xE5,0xEC,0xFF,0x20,0xE1,0xE5,0xE7,0xFA,0xE0,0xE2,
		0xE0,0xF0,0xE8,0xE9,0xED,0xEE,0xE9,0x20,0xF0,0xE0,0xE1,0xEE,
		0xF2,0xFB,0x3A,0x00;
.s.143.end:
	.align 4;
.s.146:
	.type .s.146,STT_OBJECT;
	.byte =
		0xF7,0xE8,0xF1,0xEB,0xEE,0x20,0xD2,0xCD,0xD6,0x20,0xE2,0x20,
		0xEE,0xE1,0xE7,0xEE,0xF0,0xE5,0x3A,0x00;
.s.146.end:
	.align 4;
.stimede.147:
	.type .stimede.147,STT_OBJECT;
	.byte =
		0x74,0x69,0x6D,0x65,0x5F,0x64,0x65,0x6C,0x74,0x61,0x5F,0x4B,
		0x55,0x4B,0x3A,0x00;
.stimede.147.end:
	.align 4;
.stimede.148:
	.type .stimede.148,STT_OBJECT;
	.byte =
		0x74,0x69,0x6D,0x65,0x5F,0x64,0x65,0x6C,0x74,0x61,0x5F,0x50,
		0x41,0x43,0x4B,0x45,0x54,0x5F,0x54,0x4E,0x43,0x3A,0x00;
.stimede.148.end:
	.align 4;
.stimede.149:
	.type .stimede.149,STT_OBJECT;
	.byte =
		0x74,0x69,0x6D,0x65,0x5F,0x64,0x65,0x6C,0x74,0x61,0x5F,0x70,
		0x61,0x63,0x6B,0x65,0x74,0x5F,0x54,0x52,0x53,0x4C,0x3A,0x00;
.stimede.149.end:
	.align 4;
.stimede.150:
	.type .stimede.150,STT_OBJECT;
	.byte =
		0x74,0x69,0x6D,0x65,0x5F,0x64,0x65,0x6C,0x74,0x61,0x5F,0x56,
		0x43,0x55,0x5F,0x73,0x69,0x6E,0x68,0x5F,0x66,0x6F,0x72,0x6D,
		0x3A,0x00;
.stimede.150.end:
	.align 4;
.stimede.151:
	.type .stimede.151,STT_OBJECT;
	.byte =
		0x74,0x69,0x6D,0x65,0x5F,0x64,0x65,0x6C,0x74,0x61,0x5F,0x55,
		0x44,0x50,0x3A,0x00;
.stimede.151.end:
	.align 4;
.s.152:
	.type .s.152,STT_OBJECT;
	.byte =
		0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,
		0x2D,0x2D,0x2D,0x0D,0x0A,0x00;
.s.152.end:
	.align 4;
.s144.153:
	.type .s144.153,STT_OBJECT;
	.byte =
		0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0xC7,0xE5,0xF0,0xEA,
		0xE0,0xEB,0xEE,0x20,0xEF,0xE0,0xEA,0xE5,0xF2,0xE0,0x20,0x31,
		0x34,0x34,0x20,0xE1,0xE0,0xE9,0xF2,0xE0,0x2D,0x2D,0x2D,0x2D,
		0x2D,0x2D,0x2D,0x2D,0x0D,0x0A,0x00;
.s144.153.end:
	.align 4;
.s6contr.162:
	.type .s6contr.162,STT_OBJECT;
	.byte =
		0x7E,0x36,0x20,0x63,0x6F,0x6E,0x74,0x72,0x6F,0x6C,0x5F,0x4B,
		0x36,0x31,0x31,0x3B,0x00;
.s6contr.162.end:
	.align 4;
.sLCHMIt.172:
	.type .sLCHMIt.172,STT_OBJECT;
	.byte =
		0x4C,0x43,0x48,0x4D,0x5F,0x49,0x5F,0x74,0x79,0x70,0x65,0x20,
		0x3D,0x30,0x0D,0x0A,0x00;
.sLCHMIt.172.end:
	.align 4;
.sLCHMIt.173:
	.type .sLCHMIt.173,STT_OBJECT;
	.byte =
		0x4C,0x43,0x48,0x4D,0x5F,0x49,0x5F,0x74,0x79,0x70,0x65,0x32,
		0x3D,0x30,0x0D,0x0A,0x00;
.sLCHMIt.173.end:
	.align 4;
.sLCHMIt.174:
	.type .sLCHMIt.174,STT_OBJECT;
	.byte =
		0x4C,0x43,0x48,0x4D,0x5F,0x49,0x5F,0x74,0x79,0x70,0x65,0x33,
		0x3D,0x30,0x0D,0x0A,0x00;
.sLCHMIt.174.end:
	.align 4;
.sTimebe.178:
	.type .sTimebe.178,STT_OBJECT;
	.byte =
		0x54,0x69,0x6D,0x65,0x5F,0x62,0x65,0x66,0x6F,0x72,0x65,0x5F,
		0x54,0x4F,0x42,0x4D,0x5F,0x32,0x3A,0x00;
.sTimebe.178.end:
	.align 4;
.sTIMEPA.179:
	.type .sTIMEPA.179,STT_OBJECT;
	.byte =
		0x54,0x49,0x4D,0x45,0x5F,0x50,0x41,0x43,0x4B,0x45,0x54,0x5F,
		0x46,0x4F,0x52,0x4D,0x20,0x20,0x3A,0x00;
.sTIMEPA.179.end:
	.align 4;
.sflagEN.182:
	.type .sflagEN.182,STT_OBJECT;
	.byte =
		0x66,0x6C,0x61,0x67,0x5F,0x45,0x4E,0x44,0x5F,0x73,0x79,0x6E,
		0x63,0x5F,0x70,0x61,0x63,0x6B,0x65,0x74,0x3A,0x00;
.sflagEN.182.end:
	.align 4;
.sflagPa.186:
	.type .sflagPa.186,STT_OBJECT;
	.byte =
		0x66,0x6C,0x61,0x67,0x5F,0x50,0x61,0x63,0x6B,0x65,0x74,0x5F,
		0x66,0x6F,0x72,0x6D,0x3A,0x00;
.sflagPa.186.end:
	.align 4;
.sERRORs.187:
	.type .sERRORs.187,STT_OBJECT;
	.byte =
		0x45,0x52,0x52,0x4F,0x52,0x5F,0x73,0x74,0x61,0x74,0x75,0x73,
		0x5F,0x44,0x4D,0x41,0x3A,0x00;
.sERRORs.187.end:
	.align 4;
.sschERR.191:
	.type .sschERR.191,STT_OBJECT;
	.byte =
		0x73,0x63,0x68,0x5F,0x45,0x52,0x52,0x4F,0x52,0x5F,0x43,0x52,
		0x43,0x5F,0x63,0x6F,0x6E,0x74,0x72,0x6F,0x6C,0x5F,0x77,0x6F,
		0x72,0x64,0x3A,0x00;
.sschERR.191.end:
	.align 4;
.s.193:
	.type .s.193,STT_OBJECT;
	.byte =
		0x0D,0x0A,0x21,0x21,0x21,0x20,0xCE,0xF8,0xE8,0xE1,0xEA,0xE0,
		0x20,0xF0,0xE0,0xE1,0xEE,0xF7,0xE8,0xF5,0x20,0xE8,0xED,0xF2,
		0xE5,0xF0,0xE2,0xE0,0xEB,0xEE,0xE2,0x3A,0x00;
.s.193.end:
	.align 4;
.sF0FGTS.194:
	.type .sF0FGTS.194,STT_OBJECT;
	.byte =
		0x46,0x30,0x5F,0x46,0x47,0x5F,0x54,0x53,0x54,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x3A,0x00;
.sF0FGTS.194.end:
	.align 4;
.sF0FSTS.195:
	.type .sF0FSTS.195,STT_OBJECT;
	.byte =
		0x46,0x30,0x5F,0x46,0x53,0x5F,0x54,0x53,0x54,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x3A,0x00;
.sF0FSTS.195.end:
	.align 4;
.sLCHMos.196:
	.type .sLCHMos.196,STT_OBJECT;
	.byte =
		0x4C,0x43,0x48,0x4D,0x5F,0x6F,0x73,0x6E,0x76,0x20,0x20,0x20,
		0x20,0x20,0x20,0x20,0x20,0x20,0x3A,0x00;
.sLCHMos.196.end:
	.align 4;
.sMem1Ko.197:
	.type .sMem1Ko.197,STT_OBJECT;
	.byte =
		0x4D,0x65,0x6D,0x31,0x2E,0x4B,0x6F,0x64,0x5F,0x44,0x63,0x68,
		0x6B,0x20,0x20,0x20,0x20,0x20,0x3A,0x00;
.sMem1Ko.197.end:
	.align 4;
.sMem1Ko.198:
	.type .sMem1Ko.198,STT_OBJECT;
	.byte =
		0x4D,0x65,0x6D,0x31,0x2E,0x4B,0x6F,0x64,0x5F,0x44,0x63,0x68,
		0x70,0x20,0x20,0x20,0x20,0x20,0x3A,0x00;
.sMem1Ko.198.end:
	.align 4;
.sMem1Ko.199:
	.type .sMem1Ko.199,STT_OBJECT;
	.byte =
		0x4D,0x65,0x6D,0x31,0x2E,0x4B,0x6F,0x64,0x5F,0x44,0x63,0x68,
		0x69,0x20,0x20,0x20,0x20,0x20,0x3A,0x00;
.sMem1Ko.199.end:
	.align 4;
.sMem1Ko.200:
	.type .sMem1Ko.200,STT_OBJECT;
	.byte =
		0x4D,0x65,0x6D,0x31,0x2E,0x4B,0x6F,0x64,0x5F,0x44,0x63,0x68,
		0x67,0x20,0x20,0x20,0x20,0x20,0x3A,0x00;
.sMem1Ko.200.end:
	.align 4;
.sMem1Ko.201:
	.type .sMem1Ko.201,STT_OBJECT;
	.byte =
		0x4D,0x65,0x6D,0x31,0x2E,0x4B,0x6F,0x64,0x5F,0x44,0x64,0x65,
		0x6C,0x74,0x61,0x5F,0x66,0x69,0x3A,0x00;
.sMem1Ko.201.end:
	.align 4;
.sMem1Ko.202:
	.type .sMem1Ko.202,STT_OBJECT;
	.byte =
		0x4D,0x65,0x6D,0x31,0x2E,0x4B,0x6F,0x64,0x5F,0x44,0x64,0x65,
		0x6C,0x74,0x61,0x5F,0x66,0x70,0x3A,0x00;
.sMem1Ko.202.end:
	.align 4;
.sLoKWEB.213:
	.type .sLoKWEB.213,STT_OBJECT;
	.byte =
		0x4C,0x6F,0x4B,0x5F,0x57,0x45,0x42,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x3A,0x00;
.sLoKWEB.213.end:
	.align 4;
.sVikl.214:
	.type .sVikl.214,STT_OBJECT;
	.byte =
		0x56,0x69,0x6B,0x6C,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x3A,0x00;
.sVikl.214.end:
	.align 4;
.sGBR.215:
	.type .sGBR.215,STT_OBJECT;
	.byte =
		0x47,0x42,0x52,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x3A,0x00;
.sGBR.215.end:
	.align 4;
.sBR.216:
	.type .sBR.216,STT_OBJECT;
	.byte =
		0x42,0x52,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x3A,0x00;
.sBR.216.end:
	.align 4;
.sCUMU.217:
	.type .sCUMU.217,STT_OBJECT;
	.byte =
		0x43,0x55,0x5F,0x4D,0x55,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x3A,0x00;
.sCUMU.217.end:
	.align 4;
.sTnorma.218:
	.type .sTnorma.218,STT_OBJECT;
	.byte =
		0x54,0x5F,0x6E,0x6F,0x72,0x6D,0x61,0x20,0x20,0x20,0x20,0x20,
		0x20,0x20,0x3A,0x00;
.sTnorma.218.end:
	.align 4;
.sPredav.219:
	.type .sPredav.219,STT_OBJECT;
	.byte =
		0x50,0x72,0x65,0x64,0x5F,0x61,0x76,0x61,0x72,0x69,0x79,0x61,
		0x20,0x20,0x3A,0x00;
.sPredav.219.end:
	.align 4;
.sTEMPB6.220:
	.type .sTEMPB6.220,STT_OBJECT;
	.byte =
		0x54,0x45,0x4D,0x50,0x5F,0x42,0x36,0x31,0x30,0x20,0x20,0x20,
		0x20,0x20,0x3A,0x00;
.sTEMPB6.220.end:
	.align 4;
.sTEMPB6.221:
	.type .sTEMPB6.221,STT_OBJECT;
	.byte =
		0x54,0x45,0x4D,0x50,0x5F,0x42,0x36,0x36,0x30,0x20,0x20,0x20,
		0x20,0x20,0x3A,0x00;
.sTEMPB6.221.end:
	.align 4;
.s.227:
	.type .s.227,STT_OBJECT;
	.byte =
		0xC7,0xE0,0xE4,0xE0,0xED,0x20,0xF0,0xE5,0xE6,0xE8,0xEC,0x20,
		0xF2,0xE5,0xF1,0xF2,0xE0,0x0D,0x0A,0x00;
.s.227.end:
	.align 4;
.s.229:
	.type .s.229,STT_OBJECT;
	.byte =
		0xC7,0xE0,0xE4,0xE0,0xED,0x20,0xF0,0xE5,0xE6,0xE8,0xEC,0x20,
		0x20,0x2D,0x20,0xC2,0xDB,0xCA,0xCB,0xDE,0xD7,0xC5,0xCD,0xC8,
		0xC5,0x21,0x21,0x21,0x0D,0x0A,0x00;
.s.229.end:
	.align 4;
.s.230:
	.type .s.230,STT_OBJECT;
	.byte =
		0xC7,0xE0,0xE4,0xE0,0xED,0x20,0xF0,0xE5,0xE6,0xE8,0xEC,0x20,
		0xC2,0xD6,0xD3,0x0D,0x00;
.s.230.end:
	.align 4;
.s.231:
	.type .s.231,STT_OBJECT;
	.byte =
		0xC7,0xE0,0xE4,0xE0,0xED,0x20,0xF0,0xE5,0xE6,0xE8,0xEC,0x20,
		0xCC,0xD3,0x0D,0x00;
.s.231.end:
	.align 4;
.s.236:
	.type .s.236,STT_OBJECT;
	.byte =
		0x0D,0x20,0xEF,0xEE,0xEF,0xFB,0xF2,0xEA,0xE0,0x20,0xF1,0xE8,
		0xED,0xF5,0xF0,0xEE,0xED,0xE8,0xE7,0xE0,0xF6,0xE8,0xE8,0x20,
		0xF1,0x20,0xC2,0xD6,0xD3,0x3A,0x00;
.s.236.end:
	.align 4;
.s.238:
	.type .s.238,STT_OBJECT;
	.byte =
		0xD1,0xE8,0xF5,0xF0,0xEE,0xED,0xE8,0xE7,0xE0,0xF6,0xE8,0xFF,
		0x20,0xEF,0xE0,0xEA,0xE5,0xF2,0xEE,0xE2,0x20,0xC2,0xD6,0xD3,
		0x0D,0x00;
.s.238.end:
	.align 4;
.s4.243:
	.type .s4.243,STT_OBJECT;
	.byte =
		0x0D,0x0A,0x20,0xEF,0xF0,0xE8,0xEE,0xF0,0xE8,0xF2,0xE5,0xF2,
		0x20,0x34,0x21,0x21,0x21,0x0D,0x0A,0x00;
.s4.243.end:
	.align 4;
.s5.244:
	.type .s5.244,STT_OBJECT;
	.byte =
		0x0D,0x0A,0x20,0xEF,0xF0,0xE8,0xEE,0xF0,0xE8,0xF2,0xE5,0xF2,
		0x20,0x35,0x21,0x21,0x21,0x0D,0x0A,0x00;
.s5.244.end:
	.align 4;
.sMASTER.245:
	.type .sMASTER.245,STT_OBJECT;
	.byte =
		0x4D,0x41,0x53,0x54,0x45,0x52,0x5F,0x43,0x4F,0x44,0x45,0x3D,
		0x30,0x78,0x66,0x66,0x20,0x2D,0x20,0xEF,0xF0,0xE8,0xEE,0xF0,
		0xE8,0xF2,0xE5,0xF2,0x20,0x34,0x21,0x21,0x21,0x0D,0x0A,0x00;
.sMASTER.245.end:
	.align 4;
.s.249:
	.type .s.249,STT_OBJECT;
	.byte =
		0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,
		0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,
		0x2D,0x2D,0x2D,0x2D,0x0D,0x0A,0x00;
.s.249.end:
	.align 4;
.s.250:
	.type .s.250,STT_OBJECT;
	.byte =
		0xCF,0xF0,0xE8,0xED,0xFF,0xF2,0xEE,0x20,0x2D,0x20,0xEF,0xE5,
		0xF0,0xE5,0xF5,0xEE,0xE4,0x20,0xE2,0x20,0xC1,0xD0,0x21,0x21,
		0x21,0x0D,0x0A,0x00;
.s.250.end:
	.align 4;
.s64.251:
	.type .s64.251,STT_OBJECT;
	.byte =
		0xCD,0xC5,0xD2,0x20,0xD1,0xC8,0xC3,0xCD,0xC0,0xCB,0xC0,0x20,
		0x36,0x34,0x20,0xCC,0xC3,0xD6,0x21,0x21,0x21,0x0D,0x0A,0x00;
.s64.251.end:
	.align 4;
.s.252:
	.type .s.252,STT_OBJECT;
	.byte =
		0xF7,0xB8,0x2D,0xF2,0xEE,0x20,0xED,0xE5,0x20,0xF2,0xEE,0x21,
		0x21,0x21,0x0D,0x0A,0x00;
.s.252.end:
	.align 4;
.s.254:
	.type .s.254,STT_OBJECT;
	.byte =
		0xEF,0xEE,0xEF,0xFB,0xF2,0xEA,0xE0,0x20,0xC2,0xEA,0xEB,0xFE,
		0xF7,0xE5,0xED,0xE8,0xFF,0x20,0xF1,0xE5,0xEA,0xF6,0xE8,0xE8,
		0x21,0x0D,0x0A,0x00;
.s.254.end:
	.align 4;
.s0ERROR.263:
	.type .s0ERROR.263,STT_OBJECT;
	.byte =
		0x7E,0x30,0x20,0x45,0x52,0x52,0x4F,0x52,0x5F,0x4E,0x49,0x4C,
		0x53,0x3A,0x31,0x3B,0x0D,0x0A,0x00;
.s0ERROR.263.end:
	.align 4;
.s0ERROR.264:
	.type .s0ERROR.264,STT_OBJECT;
	.byte =
		0x7E,0x30,0x20,0x45,0x52,0x52,0x4F,0x52,0x5F,0x4E,0x49,0x4C,
		0x53,0x3A,0x30,0x3B,0x0D,0x0A,0x00;
.s0ERROR.264.end:
	.align 4;
.snewEve.275:
	.type .snewEve.275,STT_OBJECT;
	.byte =
		0x6E,0x65,0x77,0x20,0x45,0x76,0x65,0x6E,0x74,0x20,0x52,0x5A,
		0x56,0x21,0x0D,0x0A,0x00;
.snewEve.275.end:
	.align 4;
.sREZERV.276:
	.type .sREZERV.276,STT_OBJECT;
	.byte =
		0xE0,0xE2,0xE0,0xF0,0xE8,0xFF,0x20,0x52,0x45,0x5A,0x45,0x52,
		0x56,0x5F,0x4D,0x21,0x0D,0x0A,0x00;
.sREZERV.276.end:
	.align 4;
.s.277:
	.type .s.277,STT_OBJECT;
	.byte =
		0xC2,0xFB,0xEA,0xEB,0xFE,0xF7,0xE5,0xED,0xE8,0xE5,0x20,0xF1,
		0xE5,0xEA,0xF6,0xE8,0xE8,0x21,0x0D,0x0A,0x00;
.s.277.end:
	.align 4;
.s.278:
	.type .s.278,STT_OBJECT;
	.byte =
		0x0D,0x0A,0xC7,0xE0,0xE4,0xE0,0xED,0xEE,0x20,0xED,0xEE,0xE2,
		0xEE,0xE5,0x20,0xF1,0xEE,0xF1,0xF2,0xEE,0xFF,0xED,0xE8,0xE5,
		0x21,0x0D,0x0A,0x00;
.s.278.end:
	.align 4;
.sFFAIL.280:
	.type .sFFAIL.280,STT_OBJECT;
	.byte =
		0xF4,0xE0,0xE7,0xE0,0x20,0x46,0xE8,0x3A,0x46,0x41,0x49,0x4C,
		0x21,0x0D,0x0A,0x00;
.sFFAIL.280.end:
	.align 4;
.sFFAIL.282:
	.type .sFFAIL.282,STT_OBJECT;
	.byte =
		0xF4,0xE0,0xE7,0xE0,0x20,0x46,0xE3,0x3A,0x46,0x41,0x49,0x4C,
		0x21,0x0D,0x0A,0x00;
.sFFAIL.282.end:
	.align 4;
.ssdramw.287:
	.type .ssdramw.287,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0x73,0x64,0x72,0x61,0x6D,
		0x5F,0x77,0x72,0x3A,0x00;
.ssdramw.287.end:
	.align 4;
.sIDreze.295:
	.type .sIDreze.295,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0x49,0x44,0x5F,0x72,0x65,
		0x7A,0x65,0x72,0x76,0x3A,0x00;
.sIDreze.295.end:
	.align 4;
.sUDPcon.299:
	.type .sUDPcon.299,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0x55,0x44,0x50,0x5F,0x63,
		0x6F,0x6E,0x74,0x72,0x6F,0x6C,0x0D,0x0A,0x00;
.sUDPcon.299.end:
	.align 4;
.sextraU.302:
	.type .sextraU.302,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0x65,0x78,0x74,0x72,0x61,
		0x5F,0x55,0x44,0x50,0x0D,0x0A,0x00;
.sextraU.302.end:
	.align 4;
.sListUD.304:
	.type .sListUD.304,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0x4C,0x69,0x73,0x74,0x5F,
		0x55,0x44,0x50,0x0D,0x0A,0x00;
.sListUD.304.end:
	.align 4;
.sPachka.306:
	.type .sPachka.306,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0x50,0x61,0x63,0x68,0x6B,
		0x61,0x5F,0x63,0x6F,0x6E,0x74,0x72,0x6F,0x6C,0x0D,0x0A,0x00;
.sPachka.306.end:
	.align 4;
.sContro.308:
	.type .sContro.308,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0x43,0x6F,0x6E,0x74,0x72,
		0x6F,0x6C,0x5F,0x54,0x4E,0x43,0x3A,0x00;
.sContro.308.end:
	.align 4;
.s.310:
	.type .s.310,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0xD0,0xE0,0xE1,0xEE,0xF7,
		0xE8,0xE9,0x5F,0xF0,0xE5,0xE6,0xE8,0xEC,0x0D,0x0A,0x00;
.s.310.end:
	.align 4;
.sFTsig.316:
	.type .sFTsig.316,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0x46,0x54,0x5F,0x73,0x69,
		0x67,0x0D,0x0A,0x00;
.sFTsig.316.end:
	.align 4;
.s.318:
	.type .s.318,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0xCA,0xEE,0xE4,0x5F,0xCA,
		0xCD,0xD6,0x3A,0x00;
.s.318.end:
	.align 4;
.s.321:
	.type .s.321,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0xD2,0xE5,0xF1,0xF2,0x20,
		0x20,0x20,0xF0,0xE5,0xE6,0xE8,0xEC,0x0D,0x0A,0x00;
.s.321.end:
	.align 4;
.sDopINT.323:
	.type .sDopINT.323,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0x44,0x6F,0x70,0x5F,0x49,
		0x4E,0x54,0x52,0x3A,0x00;
.sDopINT.323.end:
	.align 4;
.sDobzor.325:
	.type .sDobzor.325,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0x44,0x5F,0x6F,0x62,0x7A,
		0x6F,0x72,0x3A,0x00;
.sDobzor.325.end:
	.align 4;
.s.327:
	.type .s.327,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0xE7,0xE0,0xE4,0xE0,0xED,
		0xEE,0x20,0xC2,0xD6,0xD3,0x3A,0x00;
.s.327.end:
	.align 4;
.s.329:
	.type .s.329,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0xE7,0xE0,0xE4,0xE0,0xED,
		0xEE,0x20,0xCC,0xD3,0x3A,0x00;
.s.329.end:
	.align 4;
.s.331:
	.type .s.331,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0xE7,0xE0,0xE4,0xE0,0xED,
		0xEE,0x20,0xC1,0xD0,0x3A,0x00;
.s.331.end:
	.align 4;
.s.333:
	.type .s.333,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0xE7,0xE0,0xE4,0xE0,0xED,
		0xEE,0x20,0xC3,0xC1,0xD0,0x3A,0x00;
.s.333.end:
	.align 4;
.s.335:
	.type .s.335,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0xE7,0xE0,0xE4,0xE0,0xED,
		0xEE,0x20,0xC2,0xDB,0xCA,0xCB,0x3A,0x00;
.s.335.end:
	.align 4;
.s.337:
	.type .s.337,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0xE7,0xE0,0xE4,0xE0,0xED,
		0xEE,0x20,0xC1,0xCB,0xCE,0xCA,0x5F,0xD3,0xCF,0xD0,0x3A,0x00;
.s.337.end:
	.align 4;
.sFS.339:
	.type .sFS.339,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0xD3,0xF1,0xF2,0xE0,0xED,
		0xEE,0xE2,0xE8,0xF2,0xFC,0x5F,0x46,0x53,0x3A,0x00;
.sFS.339.end:
	.align 4;
.sFG.341:
	.type .sFG.341,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0xD3,0xF1,0xF2,0xE0,0xED,
		0xEE,0xE2,0xE8,0xF2,0xFC,0x5F,0x46,0x47,0x3A,0x00;
.sFG.341.end:
	.align 4;
.s.345:
	.type .s.345,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0xD3,0xF1,0xF2,0xE0,0xED,
		0xEE,0xE2,0xE8,0xF2,0xFC,0x5F,0xE4,0xE5,0xE2,0xE8,0xE0,0xF6,
		0xE8,0xFE,0x5F,0xCB,0xD7,0xCC,0x3A,0x00;
.s.345.end:
	.align 4;
.sT.347:
	.type .sT.347,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0xC4,0xEB,0xE8,0xF2,0xE5,
		0xEB,0xFC,0xED,0xEE,0xF1,0xF2,0xFC,0x5F,0xE8,0xEC,0xEF,0xF3,
		0xEB,0xFC,0xF1,0xE0,0x5F,0x54,0xE8,0xEC,0xEF,0x3A,0x00;
.sT.347.end:
	.align 4;
.sDelayT.349:
	.type .sDelayT.349,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0x44,0x65,0x6C,0x61,0x79,
		0x5F,0x54,0x4E,0x50,0x3A,0x00;
.sDelayT.349.end:
	.align 4;
.sDelayT.351:
	.type .sDelayT.351,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0x44,0x65,0x6C,0x61,0x79,
		0x5F,0x54,0x4E,0x49,0x3A,0x00;
.sDelayT.351.end:
	.align 4;
.s.353:
	.type .s.353,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0xD7,0xE8,0xF1,0xEB,0xEE,
		0x5F,0xE8,0xEC,0xEF,0xF3,0xEB,0xFC,0xF1,0xEE,0xE2,0x5F,0xE2,
		0x5F,0xEF,0xE0,0xF7,0xEA,0xE5,0x3A,0x00;
.s.353.end:
	.align 4;
.s.355:
	.type .s.355,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0xD7,0xE8,0xF1,0xEB,0xEE,
		0x5F,0xF2,0xE5,0xEC,0xEF,0xEE,0xE2,0x5F,0xE2,0x5F,0xEF,0xE0,
		0xF7,0xEA,0xE5,0x3A,0x00;
.s.355.end:
	.align 4;
.sSYNCPI.359:
	.type .sSYNCPI.359,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0x53,0x59,0x4E,0x43,0x5F,
		0x50,0x49,0x4C,0x41,0x3A,0x00;
.sSYNCPI.359.end:
	.align 4;
.sTSTout.361:
	.type .sTSTout.361,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0x54,0x53,0x54,0x5F,0x6F,
		0x75,0x74,0x3A,0x00;
.sTSTout.361.end:
	.align 4;
.sZapret.365:
	.type .sZapret.365,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0x5A,0x61,0x70,0x72,0x65,
		0x74,0x5F,0x52,0x45,0x5A,0x45,0x52,0x56,0x00;
.sZapret.365.end:
	.align 4;
.s.370:
	.type .s.370,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0xED,0xEE,0xEC,0xE5,0xF0,
		0x20,0xD2,0xCD,0xD6,0x3A,0x00;
.s.370.end:
	.align 4;
.sPOWERO.372:
	.type .sPOWERO.372,STT_OBJECT;
	.byte =
		0x0D,0x0A,0x20,0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0x50,0x4F,
		0x57,0x45,0x52,0x5F,0x4F,0x46,0x46,0x20,0x20,0x0D,0x0A,0x00;
.sPOWERO.372.end:
	.align 4;
.sPOWERO.374:
	.type .sPOWERO.374,STT_OBJECT;
	.byte =
		0x0D,0x0A,0x20,0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0x50,0x4F,
		0x57,0x45,0x52,0x5F,0x4F,0x4E,0x20,0x20,0x0D,0x0A,0x00;
.sPOWERO.374.end:
	.align 4;
.s610.376:
	.type .s610.376,STT_OBJECT;
	.byte =
		0xEF,0xF0,0xE8,0xED,0xFF,0xEB,0x20,0xF1,0xEE,0xF1,0xF2,0xEE,
		0xFF,0xED,0xE8,0xE5,0x20,0xC1,0x36,0x31,0x30,0x3A,0x00;
.s610.376.end:

	.section/DOUBLE64 data1;


	.extern _rx_wr_index0;
	.type _rx_wr_index0,STT_OBJECT;
	.extern _rx_rd_index0;
	.type _rx_rd_index0,STT_OBJECT;
	.extern _rx_counter0;
	.type _rx_counter0,STT_OBJECT;
	.extern _rx_buffer0;
	.type _rx_buffer0,STT_OBJECT;
	.extern _rx_wr_index1;
	.type _rx_wr_index1,STT_OBJECT;
	.extern _rx_rd_index1;
	.type _rx_rd_index1,STT_OBJECT;
	.extern _rx_counter1;
	.type _rx_counter1,STT_OBJECT;
	.extern _rx_buffer1;
	.type _rx_buffer1,STT_OBJECT;
	.extern _rx_buffer_overflow0;
	.type _rx_buffer_overflow0,STT_OBJECT;
	.extern _time_sekund;
	.type _time_sekund,STT_OBJECT;
	.extern _lsr_razmer;
	.type _lsr_razmer,STT_OBJECT;
	.extern _RX_BUF;
	.type _RX_BUF,STT_OBJECT;
	.extern _TX_BUF;
	.type _TX_BUF,STT_OBJECT;
	.extern _ERROR_status_DMA;
	.type _ERROR_status_DMA,STT_OBJECT;
	.extern _sch_tx_packet;
	.type _sch_tx_packet,STT_OBJECT;
	.extern _time_uart;
	.type _time_uart,STT_OBJECT;
	.extern _FLAG_UDP_EVENT;
	.type _FLAG_UDP_EVENT,STT_OBJECT;
	.extern _FLAG_UDP_INSTALL;
	.type _FLAG_UDP_INSTALL,STT_OBJECT;
	.extern _tick_process;
	.type _tick_process,STT_OBJECT;
	.extern _tick_process_K615;
	.type _tick_process_K615,STT_OBJECT;
	.extern _flag_RX_UDP;
	.type _flag_RX_UDP,STT_OBJECT;
	.extern _NUMBER_BLOK;
	.type _NUMBER_BLOK,STT_OBJECT;
