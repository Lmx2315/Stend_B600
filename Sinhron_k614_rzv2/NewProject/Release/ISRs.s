	.file "..\BFcom\ISRs.c";
//  Compilation time: Tue Nov 06 15:34:46 2018
//  Compiler options: -c -file-attr ProjectName=NewProject -O -Ov0 -g -always-inline -save-temps -path-output .\Release -ED -no-auto-attrs -structs-do-not-overlap -const-strings -no-multiline -D__PROCESSOR_SPEED__=400000000 -double-size-64 -decls-strong -warn-protos -flags-compiler --diag_warning,call_not_inlined -si-revision 0.6 -proc ADSP-BF533 -o .\Release\ISRs.doj -MM
//  Architecture: ADSP-BF533
//  Silicon revision: 0.6
//  Anomalies summary:
//   Never on: w_05000046
//   Disabled: w_05000048, w_05000054, w_05000071, w_05000103, w_05000104, w_05000120, w_05000127, w_05000157, w_05000164, w_05000165, w_05000195, w_05000198, w_05000202, w_05000209, w_05000227, w_05000244, w_05000246, w_05000248, w_05000257, w_05000262, w_05000264, w_05000283, w_F3_F_021, w_F3_F_008_F3_F_013, w_05000312, w_05000371, w_05000428, w_05000412, w_05000010
//   Enabled: w_05000189, w_05000245, w_05000426, w_05000443, w_05000477
//   Always on: w_05000074, w_05000122, w_05000311

	.section/DOUBLE64 program;

.epctext:
	.align 2;
_PPI_ERROR_ISR:
.LN_PPI_ERROR_ISR:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 16 
//  Scratch registers used: {R0,P1}
//  Call preserved registers used: {FP,SP,RETS}
//-------------------------------------------------------------------
// line "..\BFcom\ISRs.c":167
	LINK 0;
	[--SP] = R0;
	[--SP] = P1;
.LN0:
// line 170
	P1 = 4100 /* -4190204 */;
	P1.H = -64 /* -4190204 */;
	R0 = W[P1] (X);
	P1.L = _FLAG_ERROR_PPI;
	P1.H = _FLAG_ERROR_PPI;
	W[P1] = R0.L;
.LN1:
// line 171
	P1 = [SP++];
	R0 = [SP++];
	UNLINK;
	RTI;
.LN._PPI_ERROR_ISR.end:
._PPI_ERROR_ISR.end:
	.global _PPI_ERROR_ISR;
	.type _PPI_ERROR_ISR,STT_FUNC;

	.align 2;
_Timer0_ISR:
.LN_Timer0_ISR:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0,P1,ASTAT0-ASTAT1,CC,AQ}
//  Call preserved registers used: {FP,SP,RETS}
//Inlined in _Timer0_ISR:
//  ..\BFcom\ISRs.c:122:10'_ssync
//  ..\BFcom\ISRs.c:120:10'_ssync
//-------------------------------------------------------------------
// line "..\BFcom\ISRs.c":119
	LINK 0;
	[--SP] = ASTAT;
	[--SP] = R0;
	[--SP] = P1;
.LN2:
// line 120
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN3:
// line 121
	R0 = 1;
	P1 = 1608 /* -4192696 */;
	P1.H = -64 /* -4192696 */;
	W[P1] = R0.L;
.LN4:
// line 122
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
	P1.L = _tick_process;
	P1.H = _tick_process;
.LN5:
// line 125
	R0 = [P1];
	R0 += 1;
	[P1] = R0;
	P1.L = _tick_wait;
	P1.H = _tick_wait;
.LN6:
// line 126
	R0 = [P1];
	R0 += 1;
	[P1] = R0;
	P1.L = _TIMER_UDP_LS_DOWN;
	P1.H = _TIMER_UDP_LS_DOWN;
.LN7:
// line 127
	R0 = [P1];
	R0 += 1;
	[P1] = R0;
	P1.L = _tick_process_OK;
	P1.H = _tick_process_OK;
.LN8:
// line 128
	R0 = [P1];
	R0 += 1;
	[P1] = R0;
	P1.L = _time_uart;
	P1.H = _time_uart;
.LN9:
// line 132
	R0 = [P1];
	R0 += 1;
	[P1] = R0;
	P1.L = _tick_PPI_wait;
	P1.H = _tick_PPI_wait;
.LN10:
// line 133
	R0 = [P1];
	R0 += 1;
	[P1] = R0;
	P1.L = _tick_wait_LED_ERROR;
	P1.H = _tick_wait_LED_ERROR;
.LN11:
// line 134
	R0 = [P1];
	R0 += 1;
	[P1] = R0;
	P1.L = _TIMER_AVARIYA;
	P1.H = _TIMER_AVARIYA;
.LN12:
// line 135
	R0 = [P1];
	R0 += 1;
	[P1] = R0;
	P1.L = _DELAY_RZV;
	P1.H = _DELAY_RZV;
.LN13:
// line 136
	R0 = [P1];
	R0 += 1;
	[P1] = R0;
	P1.L = _TIME_BR;
	P1.H = _TIME_BR;
.LN14:
// line 137
	R0 = [P1];
	R0 += 1;
	[P1] = R0;
	P1.L = _FLAG_TIMER_UART_K614;
	P1.H = _FLAG_TIMER_UART_K614;
.LN15:
// line 141
	R0 = [P1];
	R0 += 1;
	[P1] = R0;
	P1.L = _TIMER_RS485_OBMEN;
	P1.H = _TIMER_RS485_OBMEN;
.LN16:
// line 140
	R0 = [P1];
	R0 += 1;
	[P1] = R0;
	P1.L = _TIMER_GBR_OK;
	P1.H = _TIMER_GBR_OK;
.LN17:
// line 139
	R0 = [P1];
	R0 += 1;
	[P1] = R0;
	P1.L = _TIMER_REZERV;
	P1.H = _TIMER_REZERV;
.LN18:
// line 138
	R0 = [P1];
	R0 += 1;
	[P1] = R0;
	P1.L = _TIME_WORK_CONTROL;
	P1.H = _TIME_WORK_CONTROL;
.LN19:
// line 142
	R0 = [P1];
	R0 += 1;
	[P1] = R0;
	P1.L = _TIMER_FINDER;
	P1.H = _TIMER_FINDER;
.LN20:
// line 143
	R0 = [P1];
	R0 += 1;
	[P1] = R0;
.LN21:
// line 144
	P1 = [SP++];
	R0 = [SP++];
	ASTAT = [SP++];
	UNLINK;
	RTI;
.LN._Timer0_ISR.end:
._Timer0_ISR.end:
	.global _Timer0_ISR;
	.type _Timer0_ISR,STT_FUNC;

	.align 2;
_DMA0_PPI_ISR:
.LN_DMA0_PPI_ISR:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0,P1,ASTAT0-ASTAT1,CC,AQ}
//  Call preserved registers used: {FP,SP,RETS}
//Inlined in _DMA0_PPI_ISR:
//  ..\BFcom\ISRs.c:160:10'_ssync
//  ..\BFcom\ISRs.c:158:10'_ssync
//  ..\BFcom\ISRs.c:155:10'_ssync
//  ..\BFcom\ISRs.c:153:9'_ssync
//-------------------------------------------------------------------
// line "..\BFcom\ISRs.c":147
	LINK 0;
	[--SP] = ASTAT;
	[--SP] = R0;
	[--SP] = P1;
.LN22:
// line 151
	R0 = 1;
	P1 = 3112 /* -4191192 */;
	P1.H = -64 /* -4191192 */;
	W[P1] = R0.L;
.LN23:
// line 153
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
	P1.L = _flag_dsp_ok;
	P1.H = _flag_dsp_ok;
.LN24:
// line 154
	B[P1] = R0;
.LN25:
// line 155
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN26:
// line 156
	P1 = 1792 /* -4192512 */;
	P1.H = -64 /* -4192512 */;
	R0 = W[P1] (X);
	BITCLR(R0, 11);
	W[P1] = R0.L;
.LN27:
// line 157
	R0 = W[P1] (X);
	BITCLR(R0, 8);
	W[P1] = R0.L;
.LN28:
// line 158
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN29:
// line 160
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN30:
// line 162
	P1 = 1572 /* -4192732 */;
	P1.H = -64 /* -4192732 */;
	R0 = [P1];
	P1.L = _TIME_PPI_END;
	P1.H = _TIME_PPI_END;
	[P1] = R0;
.LN31:
// line 164
	P1 = [SP++];
	R0 = [SP++];
	ASTAT = [SP++];
	UNLINK;
	RTI;
.LN._DMA0_PPI_ISR.end:
._DMA0_PPI_ISR.end:
	.global _DMA0_PPI_ISR;
	.type _DMA0_PPI_ISR,STT_FUNC;

	.align 2;
_SPI_DMA_ISR:
.LN_SPI_DMA_ISR:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 16 
//  Scratch registers used: {R0,P1}
//  Call preserved registers used: {FP,SP,RETS}
//Inlined in _SPI_DMA_ISR:
//  ..\BFcom\ISRs.c:180:10'_ssync
//-------------------------------------------------------------------
// line "..\BFcom\ISRs.c":175
	LINK 0;
	[--SP] = R0;
	[--SP] = P1;
.LN32:
// line 179
	R0 = 1;
	P1 = 3432 /* -4190872 */;
	P1.H = -64 /* -4190872 */;
	W[P1] = R0.L;
.LN33:
// line 180
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN34:
// line 182
	P1 = [SP++];
	R0 = [SP++];
	UNLINK;
	RTI;
.LN._SPI_DMA_ISR.end:
._SPI_DMA_ISR.end:
	.global _SPI_DMA_ISR;
	.type _SPI_DMA_ISR,STT_FUNC;

	.align 2;
_FlagA_ISR:
.LN_FlagA_ISR:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 16 
//  Scratch registers used: {R0,P1}
//  Call preserved registers used: {FP,SP,RETS}
//Inlined in _FlagA_ISR:
//  ..\BFcom\ISRs.c:206:8'_ssync
//  ..\BFcom\ISRs.c:203:28'_ssync
//-------------------------------------------------------------------
// line "..\BFcom\ISRs.c":199
	LINK 0;
	[--SP] = R0;
	[--SP] = P1;
.LN35:
// line 202
	R0 = 1;
	P1 = 1796 /* -4192508 */;
	P1.H = -64 /* -4192508 */;
	W[P1] = R0.L;
.LN36:
// line 203
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
	P1.L = _flag_1HZ_sync;
	P1.H = _flag_1HZ_sync;
.LN37:
// line 204
	B[P1] = R0;
.LN38:
// line 206
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN39:
// line 208
	P1 = [SP++];
	R0 = [SP++];
	UNLINK;
	RTI;
.LN._FlagA_ISR.end:
._FlagA_ISR.end:
	.global _FlagA_ISR;
	.type _FlagA_ISR,STT_FUNC;

	.align 2;
_FlagB_ISR:
.LN_FlagB_ISR:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0,P1,ASTAT0-ASTAT1,CC,AQ}
//  Call preserved registers used: {FP,SP,RETS}
//Inlined in _FlagB_ISR:
//  ..\BFcom\ISRs.c:233:7'_ssync
//  ..\BFcom\ISRs.c:229:8'_ssync
//-------------------------------------------------------------------
// line "..\BFcom\ISRs.c":224
	LINK 0;
	[--SP] = ASTAT;
	[--SP] = R0;
	[--SP] = P1;
.LN40:
// line 227
	R0 = 16;
	P1 = 1796 /* -4192508 */;
	P1.H = -64 /* -4192508 */;
	W[P1] = R0.L;
.LN41:
// line 229
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
	P1.L = _flag_event_sinhron;
	P1.H = _flag_event_sinhron;
.LN42:
// line 231
	R0 = 1;
	B[P1] = R0;
	P1.L = _sch_event_sinhron;
	P1.H = _sch_event_sinhron;
.LN43:
// line 232
	R0 = [P1];
	R0 += 1;
	[P1] = R0;
.LN44:
// line 233
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN45:
// line 235
	P1 = [SP++];
	R0 = [SP++];
	ASTAT = [SP++];
	UNLINK;
	RTI;
.LN._FlagB_ISR.end:
._FlagB_ISR.end:
	.global _FlagB_ISR;
	.type _FlagB_ISR,STT_FUNC;

	.align 2;
_UART_DMA_ISR:
.LN_UART_DMA_ISR:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 20 
//  Scratch registers used: {R0,P1,ASTAT0-ASTAT1,CC,AQ}
//  Call preserved registers used: {FP,SP,RETS}
//Inlined in _UART_DMA_ISR:
//  ..\BFcom\ISRs.c:258:6'_ssync
//  ..\BFcom\ISRs.c:251:10'_ssync
//  ..\BFcom\ISRs.c:247:9'_ssync
//  ..\BFcom\ISRs.c:243:14'_ssync
//-------------------------------------------------------------------
// line "..\BFcom\ISRs.c":239
	LINK 0;
	[--SP] = ASTAT;
	[--SP] = R0;
	[--SP] = P1;
.LN46:
// line 241
	R0 = 1;
	P1 = 3560 /* -4190744 */;
	P1.H = -64 /* -4190744 */;
	W[P1] = R0.L;
.LN47:
// line 243
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN48:
// line 245
	P1 = 1028 /* -4193276 */;
	P1.H = -64 /* -4193276 */;
	R0 = W[P1] (X);
	BITCLR(R0, 1);
	W[P1] = R0.L;
.LN49:
// line 247
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN50:
// line 249
	P1 = 3528 /* -4190776 */;
	P1.H = -64 /* -4190776 */;
	R0 = W[P1] (X);
	BITCLR(R0, 0);
	W[P1] = R0.L;
.LN51:
// line 251
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN52:
// line 253
	R0 = 0;
	P1.L = _flag_pachka_TXT;
	P1.H = _flag_pachka_TXT;
	B[P1] = R0;
	P1.L = _FLAG_UART_K607;
	P1.H = _FLAG_UART_K607;
.LN53:
// line 255
	B[P1] = R0;
.LN54:
// line 257
	P1 = 1792 /* -4192512 */;
	P1.H = -64 /* -4192512 */;
	R0 = W[P1] (X);
	BITCLR(R0, 10);
	W[P1] = R0.L;
.LN55:
// line 258
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN56:
// line 260
	P1 = [SP++];
	R0 = [SP++];
	ASTAT = [SP++];
	UNLINK;
	RTI;
.LN._UART_DMA_ISR.end:
._UART_DMA_ISR.end:
	.global _UART_DMA_ISR;
	.type _UART_DMA_ISR,STT_FUNC;

	.align 2;
_SPORT1_TX_ISR:
.LN_SPORT1_TX_ISR:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 44 
//  Scratch registers used: {R0-R3,P0-P2,ASTAT0-ASTAT1,CC,AQ}
//  Call preserved registers used: {P5,FP,SP,RETS}
//Inlined in _SPORT1_TX_ISR:
//  ..\BFcom\ISRs.c:286:6'_ssync
//  ..\BFcom\ISRs.c:284:7'_ssync
//  ..\BFcom\ISRs.c:271:6'_ssync
//-------------------------------------------------------------------
// line "..\BFcom\ISRs.c":264
	LINK 0;
	[--SP] = ASTAT;
	[--SP] = R0;
	[--SP] = R1;
	[--SP] = R2;
	[--SP] = R3;
	[--SP] = P0;
	[--SP] = P1;
	[--SP] = P2;
	[--SP] = (P5:5);
.LN57:
// line 268
	R0 = 1;
	P1 = 3368 /* -4190936 */;
	P1.H = -64 /* -4190936 */;
	W[P1] = R0.L;
	P1.L = _FLAG_SPORT1_TX;
	P1.H = _FLAG_SPORT1_TX;
.LN58:
// line 270
	B[P1] = R0;
.LN59:
// line 271
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
	P1.L = _tx_counter1;
	P1.H = _tx_counter1;
.LN60:
// line 272
	R0 = [P1];
	CC = R0 == 0;
	if !CC jump .P82L1 ;

.P82L2:
.LN61:
// line 291
	NOP;                                    // Inserted 2 instrs to fix anomaly w_05000245_with_boundaries. 
	NOP;
	P1 = 268 /* -4194036 */;
	P1.H = -64 /* -4194036 */;
	R0 = [P1];
	BITCLR(R0, 12);
	[P1] = R0;

.P82L3:
.LN62:
// line 295
	(P5:5) = [SP++];
	P2 = [SP++];
	P1 = [SP++];
	P0 = [SP++];
	R3 = [SP++];
	R2 = [SP++];
	R1 = [SP++];
	R0 = [SP++];
	ASTAT = [SP++];
	UNLINK;
	RTI;

.P82L1:
.LN63:
// line 274
	R0 = [P1];
	R0 += -1;
	[P1] = R0;
	P0.L = _tx_rd_index1;
	P0.H = _tx_rd_index1;
	R2 = 1025;
	R0 = -1;
.LN64:
// line 285
	P2 = 2320 /* -4191984 */;
	P2.H = -64 /* -4191984 */;
.LN65:
// line 276
	P1 = [P0];
	P5.L = _tx_buffer1;
	P5.H = _tx_buffer1;
.LN66:
// line 278
	R3 = 8;
.LN67:
// line 276
	P5 = P5 + P1;
	R1 = B[P5] (Z);
.LN68:
// line 278
	CC = R1 == R3;
	R1 <<= 2;
	R1 = R1 | R2;
	IF !CC R0 = R1;
.LN69:
// line 276
	P1 += 1;
	[P0] = P1;
.LN70:
// line 284
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN71:
// line 285
	W[P2] = R0.L;
.LN72:
// line 286
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN73:
// line 287
	R0 = [P0];
	BITTGL(R0, 6);
	CC = R0 == 0;
	if !CC jump .P82L3 ;

.P82L7:
.LN74:
	[P0] = R0;
	jump.s .P82L3;
.LN._SPORT1_TX_ISR.end:
._SPORT1_TX_ISR.end:
	.global _SPORT1_TX_ISR;
	.type _SPORT1_TX_ISR,STT_FUNC;

	.align 2;
_SPORT1_RX_ISR:
.LN_SPORT1_RX_ISR:
//-------------------------------------------------------------------
//  Procedure statistics:
//  Frame size            = 36 
//  Scratch registers used: {R0-R2,P0-P2,ASTAT0-ASTAT1,CC,AQ}
//  Call preserved registers used: {FP,SP,RETS}
//Inlined in _SPORT1_RX_ISR:
//  ..\BFcom\ISRs.c:312:6'_ssync
//  ..\BFcom\ISRs.c:310:6'_ssync
//  ..\BFcom\ISRs.c:308:7'_ssync
//-------------------------------------------------------------------
// line "..\BFcom\ISRs.c":303
	LINK 0;
	[--SP] = ASTAT;
	[--SP] = R0;
	[--SP] = R1;
	[--SP] = R2;
	[--SP] = P0;
	[--SP] = P1;
	[--SP] = P2;
.LN75:
// line 307
	R1 = 1;
	P1 = 3304 /* -4191000 */;
	P1.H = -64 /* -4191000 */;
	W[P1] = R1.L;
.LN76:
// line 308
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
	P1.L = _FLAG_SPORT1_RX;
	P1.H = _FLAG_SPORT1_RX;
.LN77:
// line 309
	R0 = B[P1] (X);
	R0 += 1;
	B[P1] = R0;
.LN78:
// line 310
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
.LN79:
// line 311
	P1 = 2328 /* -4191976 */;
	P1.H = -64 /* -4191976 */;
	R0 = W[P1] (X);
.LN80:
// line 312
	.MESSAGE/SUPPRESS 5515 FOR 1 LINES;
	SSYNC;
	P1.L = _rx_wr_index1;
	P1.H = _rx_wr_index1;
.LN81:
// line 314
	P0 = [P1];
	P2.L = _rx_buffer1;
	P2.H = _rx_buffer1;
.LN82:
// line 315
	R2 = 650;
	// -- stall --
.LN83:
// line 314
	P0 = P2 + P0;
	B[P0] = R0;
.LN84:
// line 315
	R0 = [P1];
	R0 += 1;
	CC = R0 == R2;
	[P1] = R0;
	if !CC jump .P83L3 ;

.P83L1:
.LN85:
	R0 = 0;
	[P1] = R0;

.P83L3:
	P1.L = _rx_counter1;
	P1.H = _rx_counter1;
.LN86:
// line 316
	R0 = [P1];
	R0 += 1;
	CC = R0 == R2;
	[P1] = R0;
	if !CC jump .P83L6 ;

.P83L4:
.LN87:
// line 318
	R0 = 0;
	[P1] = R0;
	P1.L = _rx_buffer_overflow1;
	P1.H = _rx_buffer_overflow1;
.LN88:
// line 319
	B[P1] = R1;

.P83L6:
.LN89:
// line 323
	P2 = [SP++];
	P1 = [SP++];
	P0 = [SP++];
	R2 = [SP++];
	R1 = [SP++];
	R0 = [SP++];
	ASTAT = [SP++];
	UNLINK;
	RTI;
.LN._SPORT1_RX_ISR.end:
._SPORT1_RX_ISR.end:
	.global _SPORT1_RX_ISR;
	.type _SPORT1_RX_ISR,STT_FUNC;

	.file_attr ProjectName="NewProject";
.epctext.end:

	.section/DOUBLE64 data1;

	.align 1;
.epcdata:
	.type .epcdata,STT_OBJECT;
	.byte _ERROR_status_DMA[1];
	.global _ERROR_status_DMA;
	.type _ERROR_status_DMA,STT_OBJECT;
.epcdata.end:

	.section .debug_abbrev SHT_DEBUGINFO;

	.align 1;
.epcabbrev:
	.type .epcabbrev,STT_OBJECT;
	.inc/binary ".\Release\ISRs.sbn", 0, 212;
.epcabbrev.end:

	.section .debug_info SHT_DEBUGINFO;

	.align 1;
.epcdebug:
	.type .epcdebug,STT_OBJECT;
	.byte =
		0x0F,0x0E,0x00,0x00,0x02,0x00;
	.byte4 = .epcabbrev;
	.byte =
		0x04,0x01,0x2E,0x2E,0x5C,0x42,0x46,0x63,0x6F,0x6D,0x5C,0x49,
		0x53,0x52,0x73,0x2E,0x63,0x00,0x01;
	.byte4 = .epcline;
	.inc/binary ".\Release\ISRs.sbn", 212, 1796;
	.byte4 = .LN_PPI_ERROR_ISR;
	.byte4 = .LN._PPI_ERROR_ISR.end;
	.byte =
		0x01,0x01,0x00,0x0E,0x00,0x00,0x00,0x00;
	.byte4 = .LN0;
	.byte4 = .LN._PPI_ERROR_ISR.end;
	.byte =
		0x00,0x00,0x0D,0x6A,0x07,0x00,0x00,0x54,0x69,0x6D,0x65,0x72,
		0x30,0x5F,0x49,0x53,0x52,0x00,0x01;
	.byte4 = .LN_Timer0_ISR;
	.byte4 = .LN._Timer0_ISR.end;
	.byte =
		0x01,0x01,0x00,0x0E,0x00,0x00,0x00,0x00;
	.byte4 = .LN2;
	.byte4 = .LN._Timer0_ISR.end;
	.byte =
		0x00,0x00,0x0D,0x97,0x07,0x00,0x00,0x44,0x4D,0x41,0x30,0x5F,
		0x50,0x50,0x49,0x5F,0x49,0x53,0x52,0x00,0x01;
	.byte4 = .LN_DMA0_PPI_ISR;
	.byte4 = .LN._DMA0_PPI_ISR.end;
	.byte =
		0x01,0x01,0x00,0x0E,0x00,0x00,0x00,0x00;
	.byte4 = .LN22;
	.byte4 = .LN._DMA0_PPI_ISR.end;
	.byte =
		0x00,0x00,0x0D,0xC3,0x07,0x00,0x00,0x53,0x50,0x49,0x5F,0x44,
		0x4D,0x41,0x5F,0x49,0x53,0x52,0x00,0x01;
	.byte4 = .LN_SPI_DMA_ISR;
	.byte4 = .LN._SPI_DMA_ISR.end;
	.byte =
		0x01,0x01,0x00,0x0E,0x00,0x00,0x00,0x00;
	.byte4 = .LN32;
	.byte4 = .LN._SPI_DMA_ISR.end;
	.byte =
		0x00,0x00,0x0D,0xED,0x07,0x00,0x00,0x46,0x6C,0x61,0x67,0x41,
		0x5F,0x49,0x53,0x52,0x00,0x01;
	.byte4 = .LN_FlagA_ISR;
	.byte4 = .LN._FlagA_ISR.end;
	.byte =
		0x01,0x01,0x00,0x0E,0x00,0x00,0x00,0x00;
	.byte4 = .LN35;
	.byte4 = .LN._FlagA_ISR.end;
	.byte =
		0x00,0x00,0x0D,0x17,0x08,0x00,0x00,0x46,0x6C,0x61,0x67,0x42,
		0x5F,0x49,0x53,0x52,0x00,0x01;
	.byte4 = .LN_FlagB_ISR;
	.byte4 = .LN._FlagB_ISR.end;
	.byte =
		0x01,0x01,0x00,0x0E,0x00,0x00,0x00,0x00;
	.byte4 = .LN40;
	.byte4 = .LN._FlagB_ISR.end;
	.byte =
		0x00,0x00,0x0D,0x44,0x08,0x00,0x00,0x55,0x41,0x52,0x54,0x5F,
		0x44,0x4D,0x41,0x5F,0x49,0x53,0x52,0x00,0x01;
	.byte4 = .LN_UART_DMA_ISR;
	.byte4 = .LN._UART_DMA_ISR.end;
	.byte =
		0x01,0x01,0x00,0x0E,0x00,0x00,0x00,0x00;
	.byte4 = .LN46;
	.byte4 = .LN._UART_DMA_ISR.end;
	.byte =
		0x00,0x00,0x0D,0x72,0x08,0x00,0x00,0x53,0x50,0x4F,0x52,0x54,
		0x31,0x5F,0x54,0x58,0x5F,0x49,0x53,0x52,0x00,0x01;
	.byte4 = .LN_SPORT1_TX_ISR;
	.byte4 = .LN._SPORT1_TX_ISR.end;
	.byte =
		0x01,0x01,0x00,0x0E,0x00,0x00,0x00,0x00;
	.byte4 = .LN57;
	.byte4 = .LN._SPORT1_TX_ISR.end;
	.byte =
		0x00,0x00,0x0D,0xA0,0x08,0x00,0x00,0x53,0x50,0x4F,0x52,0x54,
		0x31,0x5F,0x52,0x58,0x5F,0x49,0x53,0x52,0x00,0x01;
	.byte4 = .LN_SPORT1_RX_ISR;
	.byte4 = .LN._SPORT1_RX_ISR.end;
	.byte =
		0x01,0x01,0x00,0x0E,0x00,0x00,0x00,0x00;
	.byte4 = .LN75;
	.byte4 = .LN._SPORT1_RX_ISR.end;
	.byte =
		0x00,0x00,0x0F,0x66,0x6C,0x61,0x67,0x5F,0x64,0x73,0x70,0x5F,
		0x6F,0x6B,0x00,0x01,0xF0,0x0D,0x00,0x00,0x05,0x03;
	.byte4 = _flag_dsp_ok;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x0F,0x74,0x69,0x6D,0x65,0x5F,0x73,
		0x65,0x6B,0x75,0x6E,0x64,0x00,0x01,0xF5,0x0D,0x00,0x00,0x05,
		0x03;
	.byte4 = _time_sekund;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x0F,0x74,0x69,0x6D,0x65,0x5F,0x75,
		0x61,0x72,0x74,0x00,0x01,0xF5,0x0D,0x00,0x00,0x05,0x03;
	.byte4 = _time_uart;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x0F,0x74,0x69,0x63,0x6B,0x5F,0x75,
		0x73,0x00,0x01,0x08,0x0E,0x00,0x00,0x05,0x03;
	.byte4 = _tick_us;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x0F,0x74,0x69,0x63,0x6B,0x5F,0x70,
		0x72,0x6F,0x63,0x65,0x73,0x73,0x00,0x01,0x0D,0x0E,0x00,0x00,
		0x05,0x03;
	.byte4 = _tick_process;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x0F,0x74,0x69,0x63,0x6B,0x5F,0x70,
		0x72,0x6F,0x63,0x65,0x73,0x73,0x5F,0x4B,0x36,0x31,0x31,0x00,
		0x01,0x0D,0x0E,0x00,0x00,0x05,0x03;
	.byte4 = _tick_process_K611;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x0F,0x74,0x69,0x63,0x6B,0x5F,0x70,
		0x72,0x6F,0x63,0x65,0x73,0x73,0x5F,0x4B,0x36,0x31,0x35,0x00,
		0x01,0x0D,0x0E,0x00,0x00,0x05,0x03;
	.byte4 = _tick_process_K615;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x0F,0x74,0x69,0x63,0x6B,0x5F,0x70,
		0x72,0x6F,0x63,0x65,0x73,0x73,0x5F,0x4B,0x36,0x31,0x32,0x00,
		0x01,0x0D,0x0E,0x00,0x00,0x05,0x03;
	.byte4 = _tick_process_K612;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x0F,0x74,0x69,0x63,0x6B,0x5F,0x70,
		0x72,0x6F,0x63,0x65,0x73,0x73,0x5F,0x4B,0x36,0x31,0x33,0x00,
		0x01,0x0D,0x0E,0x00,0x00,0x05,0x03;
	.byte4 = _tick_process_K613;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x0F,0x74,0x69,0x63,0x6B,0x5F,0x70,
		0x72,0x6F,0x63,0x65,0x73,0x73,0x5F,0x4F,0x4B,0x00,0x01,0x0D,
		0x0E,0x00,0x00,0x05,0x03;
	.byte4 = _tick_process_OK;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x0F,0x74,0x69,0x63,0x6B,0x5F,0x54,
		0x43,0x50,0x00,0x01,0x0D,0x0E,0x00,0x00,0x05,0x03;
	.byte4 = _tick_TCP;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x0F,0x74,0x69,0x63,0x6B,0x5F,0x55,
		0x44,0x50,0x00,0x01,0x0D,0x0E,0x00,0x00,0x05,0x03;
	.byte4 = _tick_UDP;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x0F,0x74,0x69,0x63,0x6B,0x5F,0x77,
		0x61,0x69,0x74,0x00,0x01,0xF5,0x0D,0x00,0x00,0x05,0x03;
	.byte4 = _tick_wait;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x0F,0x74,0x69,0x63,0x6B,0x5F,0x50,
		0x50,0x49,0x5F,0x77,0x61,0x69,0x74,0x00,0x01,0x0D,0x0E,0x00,
		0x00,0x05,0x03;
	.byte4 = _tick_PPI_wait;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x0F,0x74,0x69,0x63,0x6B,0x5F,0x77,
		0x61,0x69,0x74,0x5F,0x4C,0x45,0x44,0x5F,0x45,0x52,0x52,0x4F,
		0x52,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _tick_wait_LED_ERROR;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x0F,0x54,0x49,0x4D,0x45,0x5F,0x42,
		0x52,0x00,0x01,0x0D,0x0E,0x00,0x00,0x05,0x03;
	.byte4 = _TIME_BR;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x0F,0x66,0x6C,0x61,0x67,0x5F,0x65,
		0x76,0x65,0x6E,0x74,0x5F,0x73,0x69,0x6E,0x68,0x72,0x6F,0x6E,
		0x00,0x01,0x08,0x0E,0x00,0x00,0x05,0x03;
	.byte4 = _flag_event_sinhron;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x0F,0x73,0x63,0x68,0x5F,0x65,0x76,
		0x65,0x6E,0x74,0x5F,0x73,0x69,0x6E,0x68,0x72,0x6F,0x6E,0x00,
		0x01,0xF5,0x0D,0x00,0x00,0x05,0x03;
	.byte4 = _sch_event_sinhron;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x0F,0x66,0x6C,0x61,0x67,0x5F,0x70,
		0x61,0x63,0x68,0x6B,0x61,0x5F,0x54,0x58,0x54,0x00,0x01,0xF0,
		0x0D,0x00,0x00,0x05,0x03;
	.byte4 = _flag_pachka_TXT;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x0F,0x66,0x6C,0x61,0x67,0x5F,0x31,
		0x48,0x5A,0x5F,0x73,0x79,0x6E,0x63,0x00,0x01,0xF0,0x0D,0x00,
		0x00,0x05,0x03;
	.byte4 = _flag_1HZ_sync;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x0F,0x45,0x52,0x52,0x4F,0x52,0x5F,
		0x73,0x74,0x61,0x74,0x75,0x73,0x5F,0x44,0x4D,0x41,0x00,0x01,
		0x97,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _ERROR_status_DMA;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x0F,0x46,0x4C,0x41,0x47,0x5F,0x55,
		0x41,0x52,0x54,0x5F,0x4B,0x36,0x30,0x37,0x00,0x01,0x97,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_UART_K607;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x0F,0x54,0x49,0x4D,0x45,0x52,0x5F,
		0x55,0x44,0x50,0x5F,0x4C,0x53,0x5F,0x44,0x4F,0x57,0x4E,0x00,
		0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TIMER_UDP_LS_DOWN;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x0F,0x54,0x49,0x4D,0x45,0x52,0x5F,
		0x41,0x56,0x41,0x52,0x49,0x59,0x41,0x00,0x01,0xE8,0x01,0x00,
		0x00,0x05,0x03;
	.byte4 = _TIMER_AVARIYA;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x0F,0x46,0x4C,0x41,0x47,0x5F,0x53,
		0x50,0x4F,0x52,0x54,0x31,0x5F,0x54,0x58,0x00,0x01,0x80,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_SPORT1_TX;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x0F,0x46,0x4C,0x41,0x47,0x5F,0x53,
		0x50,0x4F,0x52,0x54,0x31,0x5F,0x52,0x58,0x00,0x01,0x80,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_SPORT1_RX;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x0F,0x44,0x45,0x4C,0x41,0x59,0x5F,
		0x52,0x5A,0x56,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _DELAY_RZV;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x0F,0x54,0x49,0x4D,0x45,0x5F,0x50,
		0x50,0x49,0x5F,0x45,0x4E,0x44,0x00,0x01,0xF5,0x0D,0x00,0x00,
		0x05,0x03;
	.byte4 = _TIME_PPI_END;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x0F,0x54,0x49,0x4D,0x45,0x52,0x5F,
		0x52,0x45,0x5A,0x45,0x52,0x56,0x00,0x01,0xE8,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _TIMER_REZERV;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x0F,0x54,0x49,0x4D,0x45,0x52,0x5F,
		0x47,0x42,0x52,0x5F,0x4F,0x4B,0x00,0x01,0xE8,0x01,0x00,0x00,
		0x05,0x03;
	.byte4 = _TIMER_GBR_OK;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x0F,0x46,0x4C,0x41,0x47,0x5F,0x54,
		0x49,0x4D,0x45,0x52,0x5F,0x55,0x41,0x52,0x54,0x5F,0x4B,0x36,
		0x31,0x34,0x00,0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_TIMER_UART_K614;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x0F,0x54,0x49,0x4D,0x45,0x52,0x5F,
		0x52,0x53,0x34,0x38,0x35,0x5F,0x4F,0x42,0x4D,0x45,0x4E,0x00,
		0x01,0xE8,0x01,0x00,0x00,0x05,0x03;
	.byte4 = _TIMER_RS485_OBMEN;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x0F,0x54,0x49,0x4D,0x45,0x5F,0x57,
		0x4F,0x52,0x4B,0x5F,0x43,0x4F,0x4E,0x54,0x52,0x4F,0x4C,0x00,
		0x01,0xF5,0x0D,0x00,0x00,0x05,0x03;
	.byte4 = _TIME_WORK_CONTROL;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x0F,0x54,0x49,0x4D,0x45,0x52,0x5F,
		0x46,0x49,0x4E,0x44,0x45,0x52,0x00,0x01,0xF5,0x0D,0x00,0x00,
		0x05,0x03;
	.byte4 = _TIMER_FINDER;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x0F,0x46,0x4C,0x41,0x47,0x5F,0x45,
		0x52,0x52,0x4F,0x52,0x5F,0x50,0x50,0x49,0x00,0x01,0xC1,0x01,
		0x00,0x00,0x05,0x03;
	.byte4 = _FLAG_ERROR_PPI;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x0F,0x74,0x78,0x5F,0x62,0x75,0x66,
		0x66,0x65,0x72,0x31,0x00,0x01,0xFA,0x0D,0x00,0x00,0x05,0x03;
	.byte4 = _tx_buffer1;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x0F,0x74,0x78,0x5F,0x72,0x64,0x5F,
		0x69,0x6E,0x64,0x65,0x78,0x31,0x00,0x01,0xF5,0x0D,0x00,0x00,
		0x05,0x03;
	.byte4 = _tx_rd_index1;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x0F,0x74,0x78,0x5F,0x63,0x6F,0x75,
		0x6E,0x74,0x65,0x72,0x31,0x00,0x01,0xF5,0x0D,0x00,0x00,0x05,
		0x03;
	.byte4 = _tx_counter1;
	.byte =
		0x00,0x00,0x00,0x00,0x01,0x0F,0x72,0x78,0x5F,0x77,0x72,0x5F,
		0x69,0x6E,0x64,0x65,0x78,0x31,0x00,0x01,0xF5,0x0D,0x00,0x00,
		0x05,0x03;
	.byte4 = _rx_wr_index1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x0F,0x72,0x78,0x5F,0x72,0x64,0x5F,
		0x69,0x6E,0x64,0x65,0x78,0x31,0x00,0x01,0xF5,0x0D,0x00,0x00,
		0x05,0x03;
	.byte4 = _rx_rd_index1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x0F,0x72,0x78,0x5F,0x63,0x6F,0x75,
		0x6E,0x74,0x65,0x72,0x31,0x00,0x01,0xF5,0x0D,0x00,0x00,0x05,
		0x03;
	.byte4 = _rx_counter1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x0F,0x72,0x78,0x5F,0x62,0x75,0x66,
		0x66,0x65,0x72,0x5F,0x6F,0x76,0x65,0x72,0x66,0x6C,0x6F,0x77,
		0x31,0x00,0x01,0xF0,0x0D,0x00,0x00,0x05,0x03;
	.byte4 = _rx_buffer_overflow1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x0F,0x72,0x78,0x5F,0x62,0x75,0x66,
		0x66,0x65,0x72,0x31,0x00,0x01,0xE0,0x0D,0x00,0x00,0x05,0x03;
	.byte4 = _rx_buffer1;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x10,0xF0,0x0D,0x00,0x00,0x80,0x01,
		0x00,0x00,0x11,0x8A,0x05,0x00,0x89,0x05,0x00,0x0C,0x97,0x01,
		0x00,0x00,0x0C,0xE8,0x01,0x00,0x00,0x10,0x08,0x0E,0x00,0x00,
		0xF0,0x0D,0x00,0x00,0x11,0x40,0x00,0x3F,0x00,0x0C,0x80,0x01,
		0x00,0x00,0x0C,0xD3,0x01,0x00,0x00,0x00;
.epcdebug.end:

	.section .debug_line SHT_DEBUGINFO;

	.align 1;
.epcline:
	.type .epcline,STT_OBJECT;
	.inc/binary ".\Release\ISRs.sbn", 2008, 570;
	.byte4 = .LN_PPI_ERROR_ISR;
	.byte =
		0x04,0x01,0x05,0x01,0xAF,0x00,0x05,0x02;
	.byte4 = .LN0;
	.byte =
		0x05,0x02,0x0C,0x00,0x05,0x02;
	.byte4 = .LN1;
	.byte =
		0x05,0x01,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._PPI_ERROR_ISR.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_Timer0_ISR;
	.byte =
		0x04,0x01,0x05,0x01,0x7F,0x00,0x05,0x02;
	.byte4 = .LN2;
	.byte =
		0x05,0x0A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN3;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN4;
	.byte =
		0x05,0x0A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN5;
	.byte =
		0x05,0x03,0x0C,0x00,0x05,0x02;
	.byte4 = .LN6;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN7;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN8;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN9;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN10;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN11;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN12;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN13;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN14;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN15;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN16;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN17;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN18;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN19;
	.byte =
		0x0D,0x00,0x05,0x02;
	.byte4 = .LN20;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN21;
	.byte =
		0x05,0x02,0x0A,0x00,0x05,0x02;
	.byte4 = .LN._Timer0_ISR.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_DMA0_PPI_ISR;
	.byte =
		0x04,0x01,0x05,0x01,0x9B,0x00,0x05,0x02;
	.byte4 = .LN22;
	.byte =
		0x05,0x02,0x0D,0x00,0x05,0x02;
	.byte4 = .LN23;
	.byte =
		0x05,0x09,0x0B,0x00,0x05,0x02;
	.byte4 = .LN24;
	.byte =
		0x05,0x05,0x0A,0x00,0x05,0x02;
	.byte4 = .LN25;
	.byte =
		0x05,0x0A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN26;
	.byte =
		0x05,0x1D,0x0A,0x00,0x05,0x02;
	.byte4 = .LN27;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN28;
	.byte =
		0x05,0x0A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN29;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN30;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN31;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._DMA0_PPI_ISR.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_SPI_DMA_ISR;
	.byte =
		0x04,0x01,0x05,0x01,0xB7,0x00,0x05,0x02;
	.byte4 = .LN32;
	.byte =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.byte4 = .LN33;
	.byte =
		0x05,0x0A,0x0A,0x00,0x05,0x02;
	.byte4 = .LN34;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._SPI_DMA_ISR.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_FlagA_ISR;
	.byte =
		0x04,0x01,0x05,0x01,0xCF,0x00,0x05,0x02;
	.byte4 = .LN35;
	.byte =
		0x05,0x0C,0x0C,0x00,0x05,0x02;
	.byte4 = .LN36;
	.byte =
		0x05,0x1C,0x0A,0x00,0x05,0x02;
	.byte4 = .LN37;
	.byte =
		0x05,0x0F,0x0A,0x00,0x05,0x02;
	.byte4 = .LN38;
	.byte =
		0x05,0x08,0x0B,0x00,0x05,0x02;
	.byte4 = .LN39;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._FlagA_ISR.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_FlagB_ISR;
	.byte =
		0x04,0x01,0x05,0x01,0xE8,0x00,0x05,0x02;
	.byte4 = .LN40;
	.byte =
		0x05,0x02,0x0C,0x00,0x05,0x02;
	.byte4 = .LN41;
	.byte =
		0x05,0x08,0x0B,0x00,0x05,0x02;
	.byte4 = .LN42;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN43;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN44;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN45;
	.byte =
		0x05,0x01,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._FlagB_ISR.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_UART_DMA_ISR;
	.byte =
		0x04,0x01,0x05,0x03,0xF7,0x00,0x05,0x02;
	.byte4 = .LN46;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN47;
	.byte =
		0x05,0x0E,0x0B,0x00,0x05,0x02;
	.byte4 = .LN48;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN49;
	.byte =
		0x05,0x09,0x0B,0x00,0x05,0x02;
	.byte4 = .LN50;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN51;
	.byte =
		0x05,0x0A,0x0B,0x00,0x05,0x02;
	.byte4 = .LN52;
	.byte =
		0x05,0x02,0x0B,0x00,0x05,0x02;
	.byte4 = .LN53;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN54;
	.byte =
		0x05,0x05,0x0B,0x00,0x05,0x02;
	.byte4 = .LN55;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN56;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN._UART_DMA_ISR.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_SPORT1_TX_ISR;
	.byte =
		0x04,0x01,0x05,0x03,0x03,0x87,0x02,0x01,0x00,0x05,0x02;
	.byte4 = .LN57;
	.byte =
		0x05,0x05,0x0D,0x00,0x05,0x02;
	.byte4 = .LN58;
	.byte =
		0x05,0x06,0x0B,0x00,0x05,0x02;
	.byte4 = .LN59;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN60;
	.byte =
		0x05,0x04,0x0A,0x00,0x05,0x02;
	.byte4 = .LN61;
	.byte =
		0x05,0x0B,0x1C,0x00,0x05,0x02;
	.byte4 = .LN62;
	.byte =
		0x05,0x03,0x0D,0x00,0x05,0x02;
	.byte4 = .LN63;
	.byte =
		0x05,0x08,0x03,0x6B,0x01,0x00,0x05,0x02;
	.byte4 = .LN64;
	.byte =
		0x05,0x06,0x14,0x00,0x05,0x02;
	.byte4 = .LN65;
	.byte =
		0x05,0x07,0x03,0x77,0x01,0x00,0x05,0x02;
	.byte4 = .LN66;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN67;
	.byte =
		0x05,0x07,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN68;
	.byte =
		0x05,0x04,0x0B,0x00,0x05,0x02;
	.byte4 = .LN69;
	.byte =
		0x05,0x07,0x03,0x7E,0x01,0x00,0x05,0x02;
	.byte4 = .LN70;
	.byte =
		0x11,0x00,0x05,0x02;
	.byte4 = .LN71;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN72;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN73;
	.byte =
		0x05,0x08,0x0A,0x00,0x05,0x02;
	.byte4 = .LN74;
	.byte =
		0x05,0x2D,0x01,0x00,0x05,0x02;
	.byte4 = .LN._SPORT1_TX_ISR.end;
	.byte =
		0x00,0x01,0x01,0x00,0x05,0x02;
	.byte4 = .LN_SPORT1_RX_ISR;
	.byte =
		0x04,0x01,0x05,0x01,0x03,0xAE,0x02,0x01,0x00,0x05,0x02;
	.byte4 = .LN75;
	.byte =
		0x05,0x05,0x0D,0x00,0x05,0x02;
	.byte4 = .LN76;
	.byte =
		0x05,0x07,0x0A,0x00,0x05,0x02;
	.byte4 = .LN77;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN78;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN79;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN80;
	.byte =
		0x05,0x06,0x0A,0x00,0x05,0x02;
	.byte4 = .LN81;
	.byte =
		0x05,0x03,0x0B,0x00,0x05,0x02;
	.byte4 = .LN82;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN83;
	.byte =
		0x03,0x7F,0x01,0x00,0x05,0x02;
	.byte4 = .LN84;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN85;
	.byte =
		0x05,0x2A,0x01,0x00,0x05,0x02;
	.byte4 = .LN86;
	.byte =
		0x05,0x03,0x0A,0x00,0x05,0x02;
	.byte4 = .LN87;
	.byte =
		0x0B,0x00,0x05,0x02;
	.byte4 = .LN88;
	.byte =
		0x0A,0x00,0x05,0x02;
	.byte4 = .LN89;
	.byte =
		0x05,0x01,0x0D,0x00,0x05,0x02;
	.byte4 = .LN._SPORT1_RX_ISR.end;
	.byte =
		0x00,0x01,0x01;
.epcline.end:

	.section .debug_pubnames SHT_DEBUGINFO;

	.align 1;
.epcpubnames:
	.type .epcpubnames,STT_OBJECT;
	.byte =
		0xDE,0x01,0x00,0x00,0x02,0x00;
	.byte4 = .epcdebug;
	.inc/binary ".\Release\ISRs.sbn", 2578, 472;
.epcpubnames.end:

	.section .debug_aranges SHT_DEBUGINFO;

	.align 1;
.epcaranges:
	.type .epcaranges,STT_OBJECT;
	.byte =
		0x5C,0x00,0x00,0x00,0x02,0x00;
	.byte4 = .epcdebug;
	.byte =
		0x04,0x00,0x00,0x00,0x00,0x00;
	.byte4 = .LN_PPI_ERROR_ISR;
	.byte4 = .LN._PPI_ERROR_ISR.end-.LN_PPI_ERROR_ISR;
	.byte4 = .LN_Timer0_ISR;
	.byte4 = .LN._Timer0_ISR.end-.LN_Timer0_ISR;
	.byte4 = .LN_DMA0_PPI_ISR;
	.byte4 = .LN._DMA0_PPI_ISR.end-.LN_DMA0_PPI_ISR;
	.byte4 = .LN_SPI_DMA_ISR;
	.byte4 = .LN._SPI_DMA_ISR.end-.LN_SPI_DMA_ISR;
	.byte4 = .LN_FlagA_ISR;
	.byte4 = .LN._FlagA_ISR.end-.LN_FlagA_ISR;
	.byte4 = .LN_FlagB_ISR;
	.byte4 = .LN._FlagB_ISR.end-.LN_FlagB_ISR;
	.byte4 = .LN_UART_DMA_ISR;
	.byte4 = .LN._UART_DMA_ISR.end-.LN_UART_DMA_ISR;
	.byte4 = .LN_SPORT1_TX_ISR;
	.byte4 = .LN._SPORT1_TX_ISR.end-.LN_SPORT1_TX_ISR;
	.byte4 = .LN_SPORT1_RX_ISR;
	.byte4 = .LN._SPORT1_RX_ISR.end-.LN_SPORT1_RX_ISR;
	.byte =
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00;
.epcaranges.end:

	.section/DOUBLE64 data1;

	.align 4;
_time_sekund:
	.global _time_sekund;
	.type _time_sekund,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._time_sekund.end:
	.align 4;
_time_uart:
	.global _time_uart;
	.type _time_uart,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._time_uart.end:
	.align 1;
_tick_us:
	.global _tick_us;
	.type _tick_us,STT_OBJECT;
	.byte =
		0x00;
._tick_us.end:
	.align 4;
_tick_process:
	.global _tick_process;
	.type _tick_process,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._tick_process.end:
	.align 4;
_tick_process_K611:
	.global _tick_process_K611;
	.type _tick_process_K611,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._tick_process_K611.end:
	.align 4;
_tick_process_K615:
	.global _tick_process_K615;
	.type _tick_process_K615,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._tick_process_K615.end:
	.align 4;
_tick_process_K612:
	.global _tick_process_K612;
	.type _tick_process_K612,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._tick_process_K612.end:
	.align 4;
_tick_process_K613:
	.global _tick_process_K613;
	.type _tick_process_K613,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._tick_process_K613.end:
	.align 4;
_tick_process_OK:
	.global _tick_process_OK;
	.type _tick_process_OK,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._tick_process_OK.end:
	.align 4;
_tick_TCP:
	.global _tick_TCP;
	.type _tick_TCP,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._tick_TCP.end:
	.align 4;
_tick_UDP:
	.global _tick_UDP;
	.type _tick_UDP,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._tick_UDP.end:
	.align 4;
_tick_wait:
	.global _tick_wait;
	.type _tick_wait,STT_OBJECT;
	.byte =
		0x00,0x00,0x00,0x00;
._tick_wait.end:

	.section/ZERO_INIT/DOUBLE64 bsz;

	.align 4;
	.global _rx_wr_index1;
	.type _rx_wr_index1,STT_OBJECT;
	.byte _rx_wr_index1[4];
._rx_wr_index1.end:
	.align 4;
	.global _rx_rd_index1;
	.type _rx_rd_index1,STT_OBJECT;
	.byte _rx_rd_index1[4];
._rx_rd_index1.end:
	.align 4;
	.global _rx_counter1;
	.type _rx_counter1,STT_OBJECT;
	.byte _rx_counter1[4];
._rx_counter1.end:
	.align 1;
	.global _rx_buffer_overflow1;
	.type _rx_buffer_overflow1,STT_OBJECT;
	.byte _rx_buffer_overflow1[1];
._rx_buffer_overflow1.end:
	.align 4;
	.global _rx_buffer1;
	.type _rx_buffer1,STT_OBJECT;
	.byte _rx_buffer1[650];
._rx_buffer1.end:

	.section/DOUBLE64 data1;


	.extern _flag_dsp_ok;
	.type _flag_dsp_ok,STT_OBJECT;
	.extern _tick_PPI_wait;
	.type _tick_PPI_wait,STT_OBJECT;
	.extern _tick_wait_LED_ERROR;
	.type _tick_wait_LED_ERROR,STT_OBJECT;
	.extern _TIME_BR;
	.type _TIME_BR,STT_OBJECT;
	.extern _flag_event_sinhron;
	.type _flag_event_sinhron,STT_OBJECT;
	.extern _sch_event_sinhron;
	.type _sch_event_sinhron,STT_OBJECT;
	.extern _flag_pachka_TXT;
	.type _flag_pachka_TXT,STT_OBJECT;
	.extern _flag_1HZ_sync;
	.type _flag_1HZ_sync,STT_OBJECT;
	.extern _FLAG_UART_K607;
	.type _FLAG_UART_K607,STT_OBJECT;
	.extern _TIMER_UDP_LS_DOWN;
	.type _TIMER_UDP_LS_DOWN,STT_OBJECT;
	.extern _TIMER_AVARIYA;
	.type _TIMER_AVARIYA,STT_OBJECT;
	.extern _FLAG_SPORT1_TX;
	.type _FLAG_SPORT1_TX,STT_OBJECT;
	.extern _FLAG_SPORT1_RX;
	.type _FLAG_SPORT1_RX,STT_OBJECT;
	.extern _DELAY_RZV;
	.type _DELAY_RZV,STT_OBJECT;
	.extern _TIME_PPI_END;
	.type _TIME_PPI_END,STT_OBJECT;
	.extern _TIMER_REZERV;
	.type _TIMER_REZERV,STT_OBJECT;
	.extern _TIMER_GBR_OK;
	.type _TIMER_GBR_OK,STT_OBJECT;
	.extern _FLAG_TIMER_UART_K614;
	.type _FLAG_TIMER_UART_K614,STT_OBJECT;
	.extern _TIMER_RS485_OBMEN;
	.type _TIMER_RS485_OBMEN,STT_OBJECT;
	.extern _TIME_WORK_CONTROL;
	.type _TIME_WORK_CONTROL,STT_OBJECT;
	.extern _TIMER_FINDER;
	.type _TIMER_FINDER,STT_OBJECT;
	.extern _FLAG_ERROR_PPI;
	.type _FLAG_ERROR_PPI,STT_OBJECT;
	.extern _tx_buffer1;
	.type _tx_buffer1,STT_OBJECT;
	.extern _tx_rd_index1;
	.type _tx_rd_index1,STT_OBJECT;
	.extern _tx_counter1;
	.type _tx_counter1,STT_OBJECT;
